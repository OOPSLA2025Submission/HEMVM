<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="2854" onload="init(evt)" viewBox="0 0 1200 2854" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="2854" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="2837.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="2837.00"> </text><svg id="frames" x="10" width="1180" total_samples="34802"><g><title>&lt;aptos_crypto::hash::TransactionAccumulatorHasher as aptos_crypto::hash::CryptoHasher&gt;::finish (26 samples, 0.07%)</title><rect x="0.0230%" y="2469" width="0.0747%" height="15" fill="rgb(227,0,7)" fg:x="8" fg:w="26"/><text x="0.2730%" y="2479.50"></text></g><g><title>aptos_crypto::hash::DefaultHasher::finish (26 samples, 0.07%)</title><rect x="0.0230%" y="2453" width="0.0747%" height="15" fill="rgb(217,0,24)" fg:x="8" fg:w="26"/><text x="0.2730%" y="2463.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (26 samples, 0.07%)</title><rect x="0.0230%" y="2437" width="0.0747%" height="15" fill="rgb(221,193,54)" fg:x="8" fg:w="26"/><text x="0.2730%" y="2447.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (26 samples, 0.07%)</title><rect x="0.0230%" y="2421" width="0.0747%" height="15" fill="rgb(248,212,6)" fg:x="8" fg:w="26"/><text x="0.2730%" y="2431.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (26 samples, 0.07%)</title><rect x="0.0230%" y="2405" width="0.0747%" height="15" fill="rgb(208,68,35)" fg:x="8" fg:w="26"/><text x="0.2730%" y="2415.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (26 samples, 0.07%)</title><rect x="0.0230%" y="2389" width="0.0747%" height="15" fill="rgb(232,128,0)" fg:x="8" fg:w="26"/><text x="0.2730%" y="2399.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (26 samples, 0.07%)</title><rect x="0.0230%" y="2373" width="0.0747%" height="15" fill="rgb(207,160,47)" fg:x="8" fg:w="26"/><text x="0.2730%" y="2383.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (26 samples, 0.07%)</title><rect x="0.0230%" y="2357" width="0.0747%" height="15" fill="rgb(228,23,34)" fg:x="8" fg:w="26"/><text x="0.2730%" y="2367.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (26 samples, 0.07%)</title><rect x="0.0230%" y="2341" width="0.0747%" height="15" fill="rgb(218,30,26)" fg:x="8" fg:w="26"/><text x="0.2730%" y="2351.50"></text></g><g><title>aptos_accumulator::MerkleAccumulator&lt;R,H&gt;::append (30 samples, 0.09%)</title><rect x="0.0144%" y="2533" width="0.0862%" height="15" fill="rgb(220,122,19)" fg:x="5" fg:w="30"/><text x="0.2644%" y="2543.50"></text></g><g><title>aptos_accumulator::MerkleAccumulatorView&lt;R,H&gt;::append (30 samples, 0.09%)</title><rect x="0.0144%" y="2517" width="0.0862%" height="15" fill="rgb(250,228,42)" fg:x="5" fg:w="30"/><text x="0.2644%" y="2527.50"></text></g><g><title>aptos_accumulator::MerkleAccumulatorView&lt;R,H&gt;::hash_internal_node (27 samples, 0.08%)</title><rect x="0.0230%" y="2501" width="0.0776%" height="15" fill="rgb(240,193,28)" fg:x="8" fg:w="27"/><text x="0.2730%" y="2511.50"></text></g><g><title>&lt;aptos_types::proof::MerkleTreeInternalNode&lt;H&gt; as aptos_crypto::hash::CryptoHash&gt;::hash (27 samples, 0.08%)</title><rect x="0.0230%" y="2485" width="0.0776%" height="15" fill="rgb(216,20,37)" fg:x="8" fg:w="27"/><text x="0.2730%" y="2495.50"></text></g><g><title>&lt;aptos_types::transaction::TransactionInfoHasher as aptos_crypto::hash::CryptoHasher&gt;::finish (30 samples, 0.09%)</title><rect x="0.1006%" y="2341" width="0.0862%" height="15" fill="rgb(206,188,39)" fg:x="35" fg:w="30"/><text x="0.3506%" y="2351.50"></text></g><g><title>aptos_crypto::hash::DefaultHasher::finish (30 samples, 0.09%)</title><rect x="0.1006%" y="2325" width="0.0862%" height="15" fill="rgb(217,207,13)" fg:x="35" fg:w="30"/><text x="0.3506%" y="2335.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (30 samples, 0.09%)</title><rect x="0.1006%" y="2309" width="0.0862%" height="15" fill="rgb(231,73,38)" fg:x="35" fg:w="30"/><text x="0.3506%" y="2319.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (29 samples, 0.08%)</title><rect x="0.1034%" y="2293" width="0.0833%" height="15" fill="rgb(225,20,46)" fg:x="36" fg:w="29"/><text x="0.3534%" y="2303.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (29 samples, 0.08%)</title><rect x="0.1034%" y="2277" width="0.0833%" height="15" fill="rgb(210,31,41)" fg:x="36" fg:w="29"/><text x="0.3534%" y="2287.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (29 samples, 0.08%)</title><rect x="0.1034%" y="2261" width="0.0833%" height="15" fill="rgb(221,200,47)" fg:x="36" fg:w="29"/><text x="0.3534%" y="2271.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (29 samples, 0.08%)</title><rect x="0.1034%" y="2245" width="0.0833%" height="15" fill="rgb(226,26,5)" fg:x="36" fg:w="29"/><text x="0.3534%" y="2255.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (29 samples, 0.08%)</title><rect x="0.1034%" y="2229" width="0.0833%" height="15" fill="rgb(249,33,26)" fg:x="36" fg:w="29"/><text x="0.3534%" y="2239.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (29 samples, 0.08%)</title><rect x="0.1034%" y="2213" width="0.0833%" height="15" fill="rgb(235,183,28)" fg:x="36" fg:w="29"/><text x="0.3534%" y="2223.50"></text></g><g><title>aptos_crypto::hash::DefaultHasher::update (11 samples, 0.03%)</title><rect x="0.2040%" y="2069" width="0.0316%" height="15" fill="rgb(221,5,38)" fg:x="71" fg:w="11"/><text x="0.4540%" y="2079.50"></text></g><g><title>tiny_keccak::Buffer::xorin (5 samples, 0.01%)</title><rect x="0.2500%" y="2053" width="0.0144%" height="15" fill="rgb(247,18,42)" fg:x="87" fg:w="5"/><text x="0.5000%" y="2063.50"></text></g><g><title>tiny_keccak::Buffer::execute (5 samples, 0.01%)</title><rect x="0.2500%" y="2037" width="0.0144%" height="15" fill="rgb(241,131,45)" fg:x="87" fg:w="5"/><text x="0.5000%" y="2047.50"></text></g><g><title>tiny_keccak::Buffer::xorin::{{closure}} (4 samples, 0.01%)</title><rect x="0.2529%" y="2021" width="0.0115%" height="15" fill="rgb(249,31,29)" fg:x="88" fg:w="4"/><text x="0.5029%" y="2031.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (4 samples, 0.01%)</title><rect x="0.2529%" y="2005" width="0.0115%" height="15" fill="rgb(225,111,53)" fg:x="88" fg:w="4"/><text x="0.5029%" y="2015.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (4 samples, 0.01%)</title><rect x="0.2529%" y="1989" width="0.0115%" height="15" fill="rgb(238,160,17)" fg:x="88" fg:w="4"/><text x="0.5029%" y="1999.50"></text></g><g><title>&lt;aptos_crypto::hash::HashValue as serde::ser::Serialize&gt;::serialize (53 samples, 0.15%)</title><rect x="0.1868%" y="2245" width="0.1523%" height="15" fill="rgb(214,148,48)" fg:x="65" fg:w="53"/><text x="0.4368%" y="2255.50"></text></g><g><title>&lt;aptos_crypto::hash::HashValue as serde::ser::Serialize&gt;::serialize::_::&lt;impl serde::ser::Serialize for &lt;aptos_crypto::hash::HashValue as serde::ser::Serialize&gt;::serialize::Value&gt;::serialize (53 samples, 0.15%)</title><rect x="0.1868%" y="2229" width="0.1523%" height="15" fill="rgb(232,36,49)" fg:x="65" fg:w="53"/><text x="0.4368%" y="2239.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (53 samples, 0.15%)</title><rect x="0.1868%" y="2213" width="0.1523%" height="15" fill="rgb(209,103,24)" fg:x="65" fg:w="53"/><text x="0.4368%" y="2223.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (53 samples, 0.15%)</title><rect x="0.1868%" y="2197" width="0.1523%" height="15" fill="rgb(229,88,8)" fg:x="65" fg:w="53"/><text x="0.4368%" y="2207.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (53 samples, 0.15%)</title><rect x="0.1868%" y="2181" width="0.1523%" height="15" fill="rgb(213,181,19)" fg:x="65" fg:w="53"/><text x="0.4368%" y="2191.50"></text></g><g><title> 32]&gt;::serialize (53 samples, 0.15%)</title><rect x="0.1868%" y="2165" width="0.1523%" height="15" fill="rgb(254,191,54)" fg:x="65" fg:w="53"/><text x="0.4368%" y="2175.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (53 samples, 0.15%)</title><rect x="0.1868%" y="2149" width="0.1523%" height="15" fill="rgb(241,83,37)" fg:x="65" fg:w="53"/><text x="0.4368%" y="2159.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (53 samples, 0.15%)</title><rect x="0.1868%" y="2133" width="0.1523%" height="15" fill="rgb(233,36,39)" fg:x="65" fg:w="53"/><text x="0.4368%" y="2143.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (53 samples, 0.15%)</title><rect x="0.1868%" y="2117" width="0.1523%" height="15" fill="rgb(226,3,54)" fg:x="65" fg:w="53"/><text x="0.4368%" y="2127.50"></text></g><g><title>std::io::Write::write_all (53 samples, 0.15%)</title><rect x="0.1868%" y="2101" width="0.1523%" height="15" fill="rgb(245,192,40)" fg:x="65" fg:w="53"/><text x="0.4368%" y="2111.50"></text></g><g><title>&lt;aptos_types::transaction::TransactionInfoV0Hasher as std::io::Write&gt;::write (53 samples, 0.15%)</title><rect x="0.1868%" y="2085" width="0.1523%" height="15" fill="rgb(238,167,29)" fg:x="65" fg:w="53"/><text x="0.4368%" y="2095.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (36 samples, 0.10%)</title><rect x="0.2356%" y="2069" width="0.1034%" height="15" fill="rgb(232,182,51)" fg:x="82" fg:w="36"/><text x="0.4856%" y="2079.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (26 samples, 0.07%)</title><rect x="0.2644%" y="2053" width="0.0747%" height="15" fill="rgb(231,60,39)" fg:x="92" fg:w="26"/><text x="0.5144%" y="2063.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (26 samples, 0.07%)</title><rect x="0.2644%" y="2037" width="0.0747%" height="15" fill="rgb(208,69,12)" fg:x="92" fg:w="26"/><text x="0.5144%" y="2047.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (26 samples, 0.07%)</title><rect x="0.2644%" y="2021" width="0.0747%" height="15" fill="rgb(235,93,37)" fg:x="92" fg:w="26"/><text x="0.5144%" y="2031.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (15 samples, 0.04%)</title><rect x="0.2960%" y="2005" width="0.0431%" height="15" fill="rgb(213,116,39)" fg:x="103" fg:w="15"/><text x="0.5460%" y="2015.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (86 samples, 0.25%)</title><rect x="0.1006%" y="2533" width="0.2471%" height="15" fill="rgb(222,207,29)" fg:x="35" fg:w="86"/><text x="0.3506%" y="2543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (86 samples, 0.25%)</title><rect x="0.1006%" y="2517" width="0.2471%" height="15" fill="rgb(206,96,30)" fg:x="35" fg:w="86"/><text x="0.3506%" y="2527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (86 samples, 0.25%)</title><rect x="0.1006%" y="2501" width="0.2471%" height="15" fill="rgb(218,138,4)" fg:x="35" fg:w="86"/><text x="0.3506%" y="2511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (86 samples, 0.25%)</title><rect x="0.1006%" y="2485" width="0.2471%" height="15" fill="rgb(250,191,14)" fg:x="35" fg:w="86"/><text x="0.3506%" y="2495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (86 samples, 0.25%)</title><rect x="0.1006%" y="2469" width="0.2471%" height="15" fill="rgb(239,60,40)" fg:x="35" fg:w="86"/><text x="0.3506%" y="2479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (86 samples, 0.25%)</title><rect x="0.1006%" y="2453" width="0.2471%" height="15" fill="rgb(206,27,48)" fg:x="35" fg:w="86"/><text x="0.3506%" y="2463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (86 samples, 0.25%)</title><rect x="0.1006%" y="2437" width="0.2471%" height="15" fill="rgb(225,35,8)" fg:x="35" fg:w="86"/><text x="0.3506%" y="2447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (86 samples, 0.25%)</title><rect x="0.1006%" y="2421" width="0.2471%" height="15" fill="rgb(250,213,24)" fg:x="35" fg:w="86"/><text x="0.3506%" y="2431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (86 samples, 0.25%)</title><rect x="0.1006%" y="2405" width="0.2471%" height="15" fill="rgb(247,123,22)" fg:x="35" fg:w="86"/><text x="0.3506%" y="2415.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (86 samples, 0.25%)</title><rect x="0.1006%" y="2389" width="0.2471%" height="15" fill="rgb(231,138,38)" fg:x="35" fg:w="86"/><text x="0.3506%" y="2399.50"></text></g><g><title>core::ops::function::FnMut::call_mut (86 samples, 0.25%)</title><rect x="0.1006%" y="2373" width="0.2471%" height="15" fill="rgb(231,145,46)" fg:x="35" fg:w="86"/><text x="0.3506%" y="2383.50"></text></g><g><title>&lt;aptos_types::transaction::TransactionInfo as aptos_crypto::hash::CryptoHash&gt;::hash (86 samples, 0.25%)</title><rect x="0.1006%" y="2357" width="0.2471%" height="15" fill="rgb(251,118,11)" fg:x="35" fg:w="86"/><text x="0.3506%" y="2367.50"></text></g><g><title>bcs::ser::serialize_into (56 samples, 0.16%)</title><rect x="0.1868%" y="2341" width="0.1609%" height="15" fill="rgb(217,147,25)" fg:x="65" fg:w="56"/><text x="0.4368%" y="2351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (56 samples, 0.16%)</title><rect x="0.1868%" y="2325" width="0.1609%" height="15" fill="rgb(247,81,37)" fg:x="65" fg:w="56"/><text x="0.4368%" y="2335.50"></text></g><g><title>aptos_types::transaction::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::TransactionInfo&gt;::serialize (56 samples, 0.16%)</title><rect x="0.1868%" y="2309" width="0.1609%" height="15" fill="rgb(209,12,38)" fg:x="65" fg:w="56"/><text x="0.4368%" y="2319.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (56 samples, 0.16%)</title><rect x="0.1868%" y="2293" width="0.1609%" height="15" fill="rgb(227,1,9)" fg:x="65" fg:w="56"/><text x="0.4368%" y="2303.50"></text></g><g><title>aptos_types::transaction::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::TransactionInfoV0&gt;::serialize (56 samples, 0.16%)</title><rect x="0.1868%" y="2277" width="0.1609%" height="15" fill="rgb(248,47,43)" fg:x="65" fg:w="56"/><text x="0.4368%" y="2287.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (56 samples, 0.16%)</title><rect x="0.1868%" y="2261" width="0.1609%" height="15" fill="rgb(221,10,30)" fg:x="65" fg:w="56"/><text x="0.4368%" y="2271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (8 samples, 0.02%)</title><rect x="0.3477%" y="2453" width="0.0230%" height="15" fill="rgb(210,229,1)" fg:x="121" fg:w="8"/><text x="0.5977%" y="2463.50"></text></g><g><title>core::ptr::write (7 samples, 0.02%)</title><rect x="0.3506%" y="2437" width="0.0201%" height="15" fill="rgb(222,148,37)" fg:x="122" fg:w="7"/><text x="0.6006%" y="2447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (4 samples, 0.01%)</title><rect x="0.3822%" y="2101" width="0.0115%" height="15" fill="rgb(234,67,33)" fg:x="133" fg:w="4"/><text x="0.6322%" y="2111.50"></text></g><g><title>iralloct (6 samples, 0.02%)</title><rect x="0.3965%" y="1989" width="0.0172%" height="15" fill="rgb(247,98,35)" fg:x="138" fg:w="6"/><text x="0.6465%" y="1999.50"></text></g><g><title>_rjem_je_arena_ralloc (6 samples, 0.02%)</title><rect x="0.3965%" y="1973" width="0.0172%" height="15" fill="rgb(247,138,52)" fg:x="138" fg:w="6"/><text x="0.6465%" y="1983.50"></text></g><g><title>alloc::raw_vec::finish_grow (7 samples, 0.02%)</title><rect x="0.3965%" y="2069" width="0.0201%" height="15" fill="rgb(213,79,30)" fg:x="138" fg:w="7"/><text x="0.6465%" y="2079.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (7 samples, 0.02%)</title><rect x="0.3965%" y="2053" width="0.0201%" height="15" fill="rgb(246,177,23)" fg:x="138" fg:w="7"/><text x="0.6465%" y="2063.50"></text></g><g><title>alloc::alloc::Global::grow_impl (7 samples, 0.02%)</title><rect x="0.3965%" y="2037" width="0.0201%" height="15" fill="rgb(230,62,27)" fg:x="138" fg:w="7"/><text x="0.6465%" y="2047.50"></text></g><g><title>alloc::alloc::realloc (7 samples, 0.02%)</title><rect x="0.3965%" y="2021" width="0.0201%" height="15" fill="rgb(216,154,8)" fg:x="138" fg:w="7"/><text x="0.6465%" y="2031.50"></text></g><g><title>rallocx (7 samples, 0.02%)</title><rect x="0.3965%" y="2005" width="0.0201%" height="15" fill="rgb(244,35,45)" fg:x="138" fg:w="7"/><text x="0.6465%" y="2015.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (13 samples, 0.04%)</title><rect x="0.3822%" y="2133" width="0.0374%" height="15" fill="rgb(251,115,12)" fg:x="133" fg:w="13"/><text x="0.6322%" y="2143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (13 samples, 0.04%)</title><rect x="0.3822%" y="2117" width="0.0374%" height="15" fill="rgb(240,54,50)" fg:x="133" fg:w="13"/><text x="0.6322%" y="2127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (9 samples, 0.03%)</title><rect x="0.3937%" y="2101" width="0.0259%" height="15" fill="rgb(233,84,52)" fg:x="137" fg:w="9"/><text x="0.6437%" y="2111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (9 samples, 0.03%)</title><rect x="0.3937%" y="2085" width="0.0259%" height="15" fill="rgb(207,117,47)" fg:x="137" fg:w="9"/><text x="0.6437%" y="2095.50"></text></g><g><title>&lt;aptos_crypto::hash::HashValue as serde::ser::Serialize&gt;::serialize (16 samples, 0.05%)</title><rect x="0.3764%" y="2341" width="0.0460%" height="15" fill="rgb(249,43,39)" fg:x="131" fg:w="16"/><text x="0.6264%" y="2351.50"></text></g><g><title>&lt;aptos_crypto::hash::HashValue as serde::ser::Serialize&gt;::serialize::_::&lt;impl serde::ser::Serialize for &lt;aptos_crypto::hash::HashValue as serde::ser::Serialize&gt;::serialize::Value&gt;::serialize (16 samples, 0.05%)</title><rect x="0.3764%" y="2325" width="0.0460%" height="15" fill="rgb(209,38,44)" fg:x="131" fg:w="16"/><text x="0.6264%" y="2335.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (16 samples, 0.05%)</title><rect x="0.3764%" y="2309" width="0.0460%" height="15" fill="rgb(236,212,23)" fg:x="131" fg:w="16"/><text x="0.6264%" y="2319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (16 samples, 0.05%)</title><rect x="0.3764%" y="2293" width="0.0460%" height="15" fill="rgb(242,79,21)" fg:x="131" fg:w="16"/><text x="0.6264%" y="2303.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (16 samples, 0.05%)</title><rect x="0.3764%" y="2277" width="0.0460%" height="15" fill="rgb(211,96,35)" fg:x="131" fg:w="16"/><text x="0.6264%" y="2287.50"></text></g><g><title> 32]&gt;::serialize (16 samples, 0.05%)</title><rect x="0.3764%" y="2261" width="0.0460%" height="15" fill="rgb(253,215,40)" fg:x="131" fg:w="16"/><text x="0.6264%" y="2271.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (16 samples, 0.05%)</title><rect x="0.3764%" y="2245" width="0.0460%" height="15" fill="rgb(211,81,21)" fg:x="131" fg:w="16"/><text x="0.6264%" y="2255.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (16 samples, 0.05%)</title><rect x="0.3764%" y="2229" width="0.0460%" height="15" fill="rgb(208,190,38)" fg:x="131" fg:w="16"/><text x="0.6264%" y="2239.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (16 samples, 0.05%)</title><rect x="0.3764%" y="2213" width="0.0460%" height="15" fill="rgb(235,213,38)" fg:x="131" fg:w="16"/><text x="0.6264%" y="2223.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (16 samples, 0.05%)</title><rect x="0.3764%" y="2197" width="0.0460%" height="15" fill="rgb(237,122,38)" fg:x="131" fg:w="16"/><text x="0.6264%" y="2207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (16 samples, 0.05%)</title><rect x="0.3764%" y="2181" width="0.0460%" height="15" fill="rgb(244,218,35)" fg:x="131" fg:w="16"/><text x="0.6264%" y="2191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (16 samples, 0.05%)</title><rect x="0.3764%" y="2165" width="0.0460%" height="15" fill="rgb(240,68,47)" fg:x="131" fg:w="16"/><text x="0.6264%" y="2175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (16 samples, 0.05%)</title><rect x="0.3764%" y="2149" width="0.0460%" height="15" fill="rgb(210,16,53)" fg:x="131" fg:w="16"/><text x="0.6264%" y="2159.50"></text></g><g><title>aptos_types::transaction::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::TransactionInfoV0&gt;::serialize (18 samples, 0.05%)</title><rect x="0.3764%" y="2373" width="0.0517%" height="15" fill="rgb(235,124,12)" fg:x="131" fg:w="18"/><text x="0.6264%" y="2383.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (18 samples, 0.05%)</title><rect x="0.3764%" y="2357" width="0.0517%" height="15" fill="rgb(224,169,11)" fg:x="131" fg:w="18"/><text x="0.6264%" y="2367.50"></text></g><g><title>aptos_db::schema::transaction_info::&lt;impl aptos_schemadb::schema::ValueCodec&lt;aptos_db::schema::transaction_info::TransactionInfoSchema&gt; for aptos_types::transaction::TransactionInfo&gt;::encode_value (20 samples, 0.06%)</title><rect x="0.3764%" y="2453" width="0.0575%" height="15" fill="rgb(250,166,2)" fg:x="131" fg:w="20"/><text x="0.6264%" y="2463.50"></text></g><g><title>bcs::ser::to_bytes (20 samples, 0.06%)</title><rect x="0.3764%" y="2437" width="0.0575%" height="15" fill="rgb(242,216,29)" fg:x="131" fg:w="20"/><text x="0.6264%" y="2447.50"></text></g><g><title>bcs::ser::serialize_into (20 samples, 0.06%)</title><rect x="0.3764%" y="2421" width="0.0575%" height="15" fill="rgb(230,116,27)" fg:x="131" fg:w="20"/><text x="0.6264%" y="2431.50"></text></g><g><title>aptos_types::transaction::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::TransactionInfo&gt;::serialize (20 samples, 0.06%)</title><rect x="0.3764%" y="2405" width="0.0575%" height="15" fill="rgb(228,99,48)" fg:x="131" fg:w="20"/><text x="0.6264%" y="2415.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (20 samples, 0.06%)</title><rect x="0.3764%" y="2389" width="0.0575%" height="15" fill="rgb(253,11,6)" fg:x="131" fg:w="20"/><text x="0.6264%" y="2399.50"></text></g><g><title>core::ptr::drop_in_place&lt;prometheus::histogram::HistogramTimer&gt; (5 samples, 0.01%)</title><rect x="0.4339%" y="2453" width="0.0144%" height="15" fill="rgb(247,143,39)" fg:x="151" fg:w="5"/><text x="0.6839%" y="2463.50"></text></g><g><title>&lt;prometheus::histogram::HistogramTimer as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="0.4339%" y="2437" width="0.0144%" height="15" fill="rgb(236,97,10)" fg:x="151" fg:w="5"/><text x="0.6839%" y="2447.50"></text></g><g><title>prometheus::histogram::HistogramTimer::observe (5 samples, 0.01%)</title><rect x="0.4339%" y="2421" width="0.0144%" height="15" fill="rgb(233,208,19)" fg:x="151" fg:w="5"/><text x="0.6839%" y="2431.50"></text></g><g><title>prometheus::histogram::Instant::elapsed_sec (5 samples, 0.01%)</title><rect x="0.4339%" y="2405" width="0.0144%" height="15" fill="rgb(216,164,2)" fg:x="151" fg:w="5"/><text x="0.6839%" y="2415.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.01%)</title><rect x="0.4540%" y="2357" width="0.0115%" height="15" fill="rgb(220,129,5)" fg:x="158" fg:w="4"/><text x="0.7040%" y="2367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.01%)</title><rect x="0.4540%" y="2341" width="0.0115%" height="15" fill="rgb(242,17,10)" fg:x="158" fg:w="4"/><text x="0.7040%" y="2351.50"></text></g><g><title>prometheus::vec::MetricVec&lt;T&gt;::with_label_values (7 samples, 0.02%)</title><rect x="0.4483%" y="2453" width="0.0201%" height="15" fill="rgb(242,107,0)" fg:x="156" fg:w="7"/><text x="0.6983%" y="2463.50"></text></g><g><title>prometheus::vec::MetricVec&lt;T&gt;::get_metric_with_label_values (6 samples, 0.02%)</title><rect x="0.4511%" y="2437" width="0.0172%" height="15" fill="rgb(251,28,31)" fg:x="157" fg:w="6"/><text x="0.7011%" y="2447.50"></text></g><g><title>prometheus::vec::MetricVecCore&lt;T&gt;::get_metric_with_label_values (6 samples, 0.02%)</title><rect x="0.4511%" y="2421" width="0.0172%" height="15" fill="rgb(233,223,10)" fg:x="157" fg:w="6"/><text x="0.7011%" y="2431.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (5 samples, 0.01%)</title><rect x="0.4540%" y="2405" width="0.0144%" height="15" fill="rgb(215,21,27)" fg:x="158" fg:w="5"/><text x="0.7040%" y="2415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (5 samples, 0.01%)</title><rect x="0.4540%" y="2389" width="0.0144%" height="15" fill="rgb(232,23,21)" fg:x="158" fg:w="5"/><text x="0.7040%" y="2399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (5 samples, 0.01%)</title><rect x="0.4540%" y="2373" width="0.0144%" height="15" fill="rgb(244,5,23)" fg:x="158" fg:w="5"/><text x="0.7040%" y="2383.50"></text></g><g><title>hashbrown::map::make_hash (6 samples, 0.02%)</title><rect x="0.4741%" y="2421" width="0.0172%" height="15" fill="rgb(226,81,46)" fg:x="165" fg:w="6"/><text x="0.7241%" y="2431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (6 samples, 0.02%)</title><rect x="0.4741%" y="2405" width="0.0172%" height="15" fill="rgb(247,70,30)" fg:x="165" fg:w="6"/><text x="0.7241%" y="2415.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (4 samples, 0.01%)</title><rect x="0.4799%" y="2389" width="0.0115%" height="15" fill="rgb(212,68,19)" fg:x="167" fg:w="4"/><text x="0.7299%" y="2399.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (4 samples, 0.01%)</title><rect x="0.4799%" y="2373" width="0.0115%" height="15" fill="rgb(240,187,13)" fg:x="167" fg:w="4"/><text x="0.7299%" y="2383.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (4 samples, 0.01%)</title><rect x="0.4799%" y="2357" width="0.0115%" height="15" fill="rgb(223,113,26)" fg:x="167" fg:w="4"/><text x="0.7299%" y="2367.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (4 samples, 0.01%)</title><rect x="0.4799%" y="2341" width="0.0115%" height="15" fill="rgb(206,192,2)" fg:x="167" fg:w="4"/><text x="0.7299%" y="2351.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (4 samples, 0.01%)</title><rect x="0.4799%" y="2325" width="0.0115%" height="15" fill="rgb(241,108,4)" fg:x="167" fg:w="4"/><text x="0.7299%" y="2335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (4 samples, 0.01%)</title><rect x="0.4799%" y="2309" width="0.0115%" height="15" fill="rgb(247,173,49)" fg:x="167" fg:w="4"/><text x="0.7299%" y="2319.50"></text></g><g><title>aptos_db::ledger_store::LedgerStore::put_transaction_infos (168 samples, 0.48%)</title><rect x="0.0144%" y="2549" width="0.4827%" height="15" fill="rgb(224,114,35)" fg:x="5" fg:w="168"/><text x="0.2644%" y="2559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (52 samples, 0.15%)</title><rect x="0.3477%" y="2533" width="0.1494%" height="15" fill="rgb(245,159,27)" fg:x="121" fg:w="52"/><text x="0.5977%" y="2543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (52 samples, 0.15%)</title><rect x="0.3477%" y="2517" width="0.1494%" height="15" fill="rgb(245,172,44)" fg:x="121" fg:w="52"/><text x="0.5977%" y="2527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (52 samples, 0.15%)</title><rect x="0.3477%" y="2501" width="0.1494%" height="15" fill="rgb(236,23,11)" fg:x="121" fg:w="52"/><text x="0.5977%" y="2511.50"></text></g><g><title>aptos_db::ledger_store::LedgerStore::put_transaction_infos::{{closure}} (52 samples, 0.15%)</title><rect x="0.3477%" y="2485" width="0.1494%" height="15" fill="rgb(205,117,38)" fg:x="121" fg:w="52"/><text x="0.5977%" y="2495.50"></text></g><g><title>aptos_schemadb::SchemaBatch::put (52 samples, 0.15%)</title><rect x="0.3477%" y="2469" width="0.1494%" height="15" fill="rgb(237,72,25)" fg:x="121" fg:w="52"/><text x="0.5977%" y="2479.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (10 samples, 0.03%)</title><rect x="0.4684%" y="2453" width="0.0287%" height="15" fill="rgb(244,70,9)" fg:x="163" fg:w="10"/><text x="0.7184%" y="2463.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (10 samples, 0.03%)</title><rect x="0.4684%" y="2437" width="0.0287%" height="15" fill="rgb(217,125,39)" fg:x="163" fg:w="10"/><text x="0.7184%" y="2447.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::clone::Clone&gt;::clone (4 samples, 0.01%)</title><rect x="0.5172%" y="2501" width="0.0115%" height="15" fill="rgb(235,36,10)" fg:x="180" fg:w="4"/><text x="0.7672%" y="2511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.01%)</title><rect x="0.5172%" y="2485" width="0.0115%" height="15" fill="rgb(251,123,47)" fg:x="180" fg:w="4"/><text x="0.7672%" y="2495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.01%)</title><rect x="0.5172%" y="2469" width="0.0115%" height="15" fill="rgb(221,13,13)" fg:x="180" fg:w="4"/><text x="0.7672%" y="2479.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.01%)</title><rect x="0.5172%" y="2453" width="0.0115%" height="15" fill="rgb(238,131,9)" fg:x="180" fg:w="4"/><text x="0.7672%" y="2463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.01%)</title><rect x="0.5172%" y="2437" width="0.0115%" height="15" fill="rgb(211,50,8)" fg:x="180" fg:w="4"/><text x="0.7672%" y="2447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.01%)</title><rect x="0.5172%" y="2421" width="0.0115%" height="15" fill="rgb(245,182,24)" fg:x="180" fg:w="4"/><text x="0.7672%" y="2431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.01%)</title><rect x="0.5172%" y="2405" width="0.0115%" height="15" fill="rgb(242,14,37)" fg:x="180" fg:w="4"/><text x="0.7672%" y="2415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (4 samples, 0.01%)</title><rect x="0.5172%" y="2389" width="0.0115%" height="15" fill="rgb(246,228,12)" fg:x="180" fg:w="4"/><text x="0.7672%" y="2399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.01%)</title><rect x="0.5172%" y="2373" width="0.0115%" height="15" fill="rgb(213,55,15)" fg:x="180" fg:w="4"/><text x="0.7672%" y="2383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.01%)</title><rect x="0.5172%" y="2357" width="0.0115%" height="15" fill="rgb(209,9,3)" fg:x="180" fg:w="4"/><text x="0.7672%" y="2367.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.01%)</title><rect x="0.5172%" y="2341" width="0.0115%" height="15" fill="rgb(230,59,30)" fg:x="180" fg:w="4"/><text x="0.7672%" y="2351.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="0.5172%" y="2517" width="0.0144%" height="15" fill="rgb(209,121,21)" fg:x="180" fg:w="5"/><text x="0.7672%" y="2527.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.01%)</title><rect x="0.5316%" y="2517" width="0.0115%" height="15" fill="rgb(220,109,13)" fg:x="185" fg:w="4"/><text x="0.7816%" y="2527.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::StateValue as core::clone::Clone&gt;::clone (4 samples, 0.01%)</title><rect x="0.5316%" y="2501" width="0.0115%" height="15" fill="rgb(232,18,1)" fg:x="185" fg:w="4"/><text x="0.7816%" y="2511.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::StateValueInner as core::clone::Clone&gt;::clone (4 samples, 0.01%)</title><rect x="0.5316%" y="2485" width="0.0115%" height="15" fill="rgb(215,41,42)" fg:x="185" fg:w="4"/><text x="0.7816%" y="2495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.01%)</title><rect x="0.5316%" y="2469" width="0.0115%" height="15" fill="rgb(224,123,36)" fg:x="185" fg:w="4"/><text x="0.7816%" y="2479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.01%)</title><rect x="0.5316%" y="2453" width="0.0115%" height="15" fill="rgb(240,125,3)" fg:x="185" fg:w="4"/><text x="0.7816%" y="2463.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.01%)</title><rect x="0.5316%" y="2437" width="0.0115%" height="15" fill="rgb(205,98,50)" fg:x="185" fg:w="4"/><text x="0.7816%" y="2447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.01%)</title><rect x="0.5316%" y="2421" width="0.0115%" height="15" fill="rgb(205,185,37)" fg:x="185" fg:w="4"/><text x="0.7816%" y="2431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.01%)</title><rect x="0.5316%" y="2405" width="0.0115%" height="15" fill="rgb(238,207,15)" fg:x="185" fg:w="4"/><text x="0.7816%" y="2415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.01%)</title><rect x="0.5316%" y="2389" width="0.0115%" height="15" fill="rgb(213,199,42)" fg:x="185" fg:w="4"/><text x="0.7816%" y="2399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (4 samples, 0.01%)</title><rect x="0.5316%" y="2373" width="0.0115%" height="15" fill="rgb(235,201,11)" fg:x="185" fg:w="4"/><text x="0.7816%" y="2383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.01%)</title><rect x="0.5316%" y="2357" width="0.0115%" height="15" fill="rgb(207,46,11)" fg:x="185" fg:w="4"/><text x="0.7816%" y="2367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.01%)</title><rect x="0.5316%" y="2341" width="0.0115%" height="15" fill="rgb(241,35,35)" fg:x="185" fg:w="4"/><text x="0.7816%" y="2351.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.01%)</title><rect x="0.5316%" y="2325" width="0.0115%" height="15" fill="rgb(243,32,47)" fg:x="185" fg:w="4"/><text x="0.7816%" y="2335.50"></text></g><g><title>mallocx (4 samples, 0.01%)</title><rect x="0.5316%" y="2309" width="0.0115%" height="15" fill="rgb(247,202,23)" fg:x="185" fg:w="4"/><text x="0.7816%" y="2319.50"></text></g><g><title>imalloc (4 samples, 0.01%)</title><rect x="0.5316%" y="2293" width="0.0115%" height="15" fill="rgb(219,102,11)" fg:x="185" fg:w="4"/><text x="0.7816%" y="2303.50"></text></g><g><title>imalloc_body (4 samples, 0.01%)</title><rect x="0.5316%" y="2277" width="0.0115%" height="15" fill="rgb(243,110,44)" fg:x="185" fg:w="4"/><text x="0.7816%" y="2287.50"></text></g><g><title>&lt;aptos_db::schema::version_data::VersionData as aptos_schemadb::schema::ValueCodec&lt;aptos_db::schema::version_data::VersionDataSchema&gt;&gt;::encode_value (5 samples, 0.01%)</title><rect x="0.5459%" y="2501" width="0.0144%" height="15" fill="rgb(222,74,54)" fg:x="190" fg:w="5"/><text x="0.7959%" y="2511.50"></text></g><g><title>bcs::ser::to_bytes (5 samples, 0.01%)</title><rect x="0.5459%" y="2485" width="0.0144%" height="15" fill="rgb(216,99,12)" fg:x="190" fg:w="5"/><text x="0.7959%" y="2495.50"></text></g><g><title>bcs::ser::serialize_into (5 samples, 0.01%)</title><rect x="0.5459%" y="2469" width="0.0144%" height="15" fill="rgb(226,22,26)" fg:x="190" fg:w="5"/><text x="0.7959%" y="2479.50"></text></g><g><title>aptos_db::schema::version_data::_::&lt;impl serde::ser::Serialize for aptos_db::schema::version_data::VersionData&gt;::serialize (5 samples, 0.01%)</title><rect x="0.5459%" y="2453" width="0.0144%" height="15" fill="rgb(217,163,10)" fg:x="190" fg:w="5"/><text x="0.7959%" y="2463.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.01%)</title><rect x="0.5459%" y="2437" width="0.0144%" height="15" fill="rgb(213,25,53)" fg:x="190" fg:w="5"/><text x="0.7959%" y="2447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (8 samples, 0.02%)</title><rect x="0.5603%" y="2501" width="0.0230%" height="15" fill="rgb(252,105,26)" fg:x="195" fg:w="8"/><text x="0.8103%" y="2511.50"></text></g><g><title>core::ptr::write (5 samples, 0.01%)</title><rect x="0.5689%" y="2485" width="0.0144%" height="15" fill="rgb(220,39,43)" fg:x="198" fg:w="5"/><text x="0.8189%" y="2495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (5 samples, 0.01%)</title><rect x="0.5977%" y="2341" width="0.0144%" height="15" fill="rgb(229,68,48)" fg:x="208" fg:w="5"/><text x="0.8477%" y="2351.50"></text></g><g><title>alloc::alloc::Global::grow_impl (5 samples, 0.01%)</title><rect x="0.5977%" y="2325" width="0.0144%" height="15" fill="rgb(252,8,32)" fg:x="208" fg:w="5"/><text x="0.8477%" y="2335.50"></text></g><g><title>alloc::alloc::realloc (5 samples, 0.01%)</title><rect x="0.5977%" y="2309" width="0.0144%" height="15" fill="rgb(223,20,43)" fg:x="208" fg:w="5"/><text x="0.8477%" y="2319.50"></text></g><g><title>rallocx (4 samples, 0.01%)</title><rect x="0.6005%" y="2293" width="0.0115%" height="15" fill="rgb(229,81,49)" fg:x="209" fg:w="4"/><text x="0.8505%" y="2303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (7 samples, 0.02%)</title><rect x="0.5948%" y="2437" width="0.0201%" height="15" fill="rgb(236,28,36)" fg:x="207" fg:w="7"/><text x="0.8448%" y="2447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (7 samples, 0.02%)</title><rect x="0.5948%" y="2421" width="0.0201%" height="15" fill="rgb(249,185,26)" fg:x="207" fg:w="7"/><text x="0.8448%" y="2431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (7 samples, 0.02%)</title><rect x="0.5948%" y="2405" width="0.0201%" height="15" fill="rgb(249,174,33)" fg:x="207" fg:w="7"/><text x="0.8448%" y="2415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.02%)</title><rect x="0.5977%" y="2389" width="0.0172%" height="15" fill="rgb(233,201,37)" fg:x="208" fg:w="6"/><text x="0.8477%" y="2399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 0.02%)</title><rect x="0.5977%" y="2373" width="0.0172%" height="15" fill="rgb(221,78,26)" fg:x="208" fg:w="6"/><text x="0.8477%" y="2383.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.02%)</title><rect x="0.5977%" y="2357" width="0.0172%" height="15" fill="rgb(250,127,30)" fg:x="208" fg:w="6"/><text x="0.8477%" y="2367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (8 samples, 0.02%)</title><rect x="0.5948%" y="2469" width="0.0230%" height="15" fill="rgb(230,49,44)" fg:x="207" fg:w="8"/><text x="0.8448%" y="2479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,alloc::vec::into_iter::IntoIter&lt;T&gt;&gt;&gt;::spec_extend (8 samples, 0.02%)</title><rect x="0.5948%" y="2453" width="0.0230%" height="15" fill="rgb(229,67,23)" fg:x="207" fg:w="8"/><text x="0.8448%" y="2463.50"></text></g><g><title>bcs::ser::Serializer&lt;W&gt;::output_seq_len (11 samples, 0.03%)</title><rect x="0.6350%" y="2341" width="0.0316%" height="15" fill="rgb(249,83,47)" fg:x="221" fg:w="11"/><text x="0.8850%" y="2351.50"></text></g><g><title>bcs::ser::Serializer&lt;W&gt;::output_u32_as_uleb128 (11 samples, 0.03%)</title><rect x="0.6350%" y="2325" width="0.0316%" height="15" fill="rgb(215,43,3)" fg:x="221" fg:w="11"/><text x="0.8850%" y="2335.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (11 samples, 0.03%)</title><rect x="0.6350%" y="2309" width="0.0316%" height="15" fill="rgb(238,154,13)" fg:x="221" fg:w="11"/><text x="0.8850%" y="2319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (11 samples, 0.03%)</title><rect x="0.6350%" y="2293" width="0.0316%" height="15" fill="rgb(219,56,2)" fg:x="221" fg:w="11"/><text x="0.8850%" y="2303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (11 samples, 0.03%)</title><rect x="0.6350%" y="2277" width="0.0316%" height="15" fill="rgb(233,0,4)" fg:x="221" fg:w="11"/><text x="0.8850%" y="2287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (11 samples, 0.03%)</title><rect x="0.6350%" y="2261" width="0.0316%" height="15" fill="rgb(235,30,7)" fg:x="221" fg:w="11"/><text x="0.8850%" y="2271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (11 samples, 0.03%)</title><rect x="0.6350%" y="2245" width="0.0316%" height="15" fill="rgb(250,79,13)" fg:x="221" fg:w="11"/><text x="0.8850%" y="2255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (11 samples, 0.03%)</title><rect x="0.6350%" y="2229" width="0.0316%" height="15" fill="rgb(211,146,34)" fg:x="221" fg:w="11"/><text x="0.8850%" y="2239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (11 samples, 0.03%)</title><rect x="0.6350%" y="2213" width="0.0316%" height="15" fill="rgb(228,22,38)" fg:x="221" fg:w="11"/><text x="0.8850%" y="2223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (11 samples, 0.03%)</title><rect x="0.6350%" y="2197" width="0.0316%" height="15" fill="rgb(235,168,5)" fg:x="221" fg:w="11"/><text x="0.8850%" y="2207.50"></text></g><g><title>alloc::raw_vec::finish_grow (11 samples, 0.03%)</title><rect x="0.6350%" y="2181" width="0.0316%" height="15" fill="rgb(221,155,16)" fg:x="221" fg:w="11"/><text x="0.8850%" y="2191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (11 samples, 0.03%)</title><rect x="0.6350%" y="2165" width="0.0316%" height="15" fill="rgb(215,215,53)" fg:x="221" fg:w="11"/><text x="0.8850%" y="2175.50"></text></g><g><title>alloc::alloc::Global::grow_impl (11 samples, 0.03%)</title><rect x="0.6350%" y="2149" width="0.0316%" height="15" fill="rgb(223,4,10)" fg:x="221" fg:w="11"/><text x="0.8850%" y="2159.50"></text></g><g><title>alloc::alloc::realloc (11 samples, 0.03%)</title><rect x="0.6350%" y="2133" width="0.0316%" height="15" fill="rgb(234,103,6)" fg:x="221" fg:w="11"/><text x="0.8850%" y="2143.50"></text></g><g><title>rallocx (10 samples, 0.03%)</title><rect x="0.6379%" y="2117" width="0.0287%" height="15" fill="rgb(227,97,0)" fg:x="222" fg:w="10"/><text x="0.8879%" y="2127.50"></text></g><g><title>iralloct (7 samples, 0.02%)</title><rect x="0.6465%" y="2101" width="0.0201%" height="15" fill="rgb(234,150,53)" fg:x="225" fg:w="7"/><text x="0.8965%" y="2111.50"></text></g><g><title>_rjem_je_arena_ralloc (7 samples, 0.02%)</title><rect x="0.6465%" y="2085" width="0.0201%" height="15" fill="rgb(228,201,54)" fg:x="225" fg:w="7"/><text x="0.8965%" y="2095.50"></text></g><g><title>arena_ralloc_move_helper (4 samples, 0.01%)</title><rect x="0.6551%" y="2069" width="0.0115%" height="15" fill="rgb(222,22,37)" fg:x="228" fg:w="4"/><text x="0.9051%" y="2079.50"></text></g><g><title>ipalloct (4 samples, 0.01%)</title><rect x="0.6551%" y="2053" width="0.0115%" height="15" fill="rgb(237,53,32)" fg:x="228" fg:w="4"/><text x="0.9051%" y="2063.50"></text></g><g><title>ipallocztm (4 samples, 0.01%)</title><rect x="0.6551%" y="2037" width="0.0115%" height="15" fill="rgb(233,25,53)" fg:x="228" fg:w="4"/><text x="0.9051%" y="2047.50"></text></g><g><title>_rjem_je_arena_palloc (4 samples, 0.01%)</title><rect x="0.6551%" y="2021" width="0.0115%" height="15" fill="rgb(210,40,34)" fg:x="228" fg:w="4"/><text x="0.9051%" y="2031.50"></text></g><g><title>_rjem_je_arena_palloc (4 samples, 0.01%)</title><rect x="0.6551%" y="2005" width="0.0115%" height="15" fill="rgb(241,220,44)" fg:x="228" fg:w="4"/><text x="0.9051%" y="2015.50"></text></g><g><title>arena_malloc (4 samples, 0.01%)</title><rect x="0.6551%" y="1989" width="0.0115%" height="15" fill="rgb(235,28,35)" fg:x="228" fg:w="4"/><text x="0.9051%" y="1999.50"></text></g><g><title>tcache_alloc_small (4 samples, 0.01%)</title><rect x="0.6551%" y="1973" width="0.0115%" height="15" fill="rgb(210,56,17)" fg:x="228" fg:w="4"/><text x="0.9051%" y="1983.50"></text></g><g><title>&lt;aptos_types::access_path::_::&lt;impl serde::ser::Serialize for aptos_types::access_path::AccessPath&gt;::serialize::__SerializeWith as serde::ser::Serialize&gt;::serialize (15 samples, 0.04%)</title><rect x="0.6350%" y="2405" width="0.0431%" height="15" fill="rgb(224,130,29)" fg:x="221" fg:w="15"/><text x="0.8850%" y="2415.50"></text></g><g><title>serde_bytes::serialize (15 samples, 0.04%)</title><rect x="0.6350%" y="2389" width="0.0431%" height="15" fill="rgb(235,212,8)" fg:x="221" fg:w="15"/><text x="0.8850%" y="2399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as serde_bytes::ser::Serialize&gt;::serialize (15 samples, 0.04%)</title><rect x="0.6350%" y="2373" width="0.0431%" height="15" fill="rgb(223,33,50)" fg:x="221" fg:w="15"/><text x="0.8850%" y="2383.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_bytes (15 samples, 0.04%)</title><rect x="0.6350%" y="2357" width="0.0431%" height="15" fill="rgb(219,149,13)" fg:x="221" fg:w="15"/><text x="0.8850%" y="2367.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (4 samples, 0.01%)</title><rect x="0.6666%" y="2341" width="0.0115%" height="15" fill="rgb(250,156,29)" fg:x="232" fg:w="4"/><text x="0.9166%" y="2351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (4 samples, 0.01%)</title><rect x="0.6666%" y="2325" width="0.0115%" height="15" fill="rgb(216,193,19)" fg:x="232" fg:w="4"/><text x="0.9166%" y="2335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (4 samples, 0.01%)</title><rect x="0.6666%" y="2309" width="0.0115%" height="15" fill="rgb(216,135,14)" fg:x="232" fg:w="4"/><text x="0.9166%" y="2319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (4 samples, 0.01%)</title><rect x="0.6666%" y="2293" width="0.0115%" height="15" fill="rgb(241,47,5)" fg:x="232" fg:w="4"/><text x="0.9166%" y="2303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (4 samples, 0.01%)</title><rect x="0.6666%" y="2277" width="0.0115%" height="15" fill="rgb(233,42,35)" fg:x="232" fg:w="4"/><text x="0.9166%" y="2287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.01%)</title><rect x="0.6666%" y="2261" width="0.0115%" height="15" fill="rgb(231,13,6)" fg:x="232" fg:w="4"/><text x="0.9166%" y="2271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.01%)</title><rect x="0.6666%" y="2245" width="0.0115%" height="15" fill="rgb(207,181,40)" fg:x="232" fg:w="4"/><text x="0.9166%" y="2255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.01%)</title><rect x="0.6666%" y="2229" width="0.0115%" height="15" fill="rgb(254,173,49)" fg:x="232" fg:w="4"/><text x="0.9166%" y="2239.50"></text></g><g><title>iralloct (5 samples, 0.01%)</title><rect x="0.6954%" y="2085" width="0.0144%" height="15" fill="rgb(221,1,38)" fg:x="242" fg:w="5"/><text x="0.9454%" y="2095.50"></text></g><g><title>_rjem_je_arena_ralloc (5 samples, 0.01%)</title><rect x="0.6954%" y="2069" width="0.0144%" height="15" fill="rgb(206,124,46)" fg:x="242" fg:w="5"/><text x="0.9454%" y="2079.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (14 samples, 0.04%)</title><rect x="0.6839%" y="2149" width="0.0402%" height="15" fill="rgb(249,21,11)" fg:x="238" fg:w="14"/><text x="0.9339%" y="2159.50"></text></g><g><title>alloc::alloc::Global::grow_impl (14 samples, 0.04%)</title><rect x="0.6839%" y="2133" width="0.0402%" height="15" fill="rgb(222,201,40)" fg:x="238" fg:w="14"/><text x="0.9339%" y="2143.50"></text></g><g><title>alloc::alloc::realloc (14 samples, 0.04%)</title><rect x="0.6839%" y="2117" width="0.0402%" height="15" fill="rgb(235,61,29)" fg:x="238" fg:w="14"/><text x="0.9339%" y="2127.50"></text></g><g><title>rallocx (12 samples, 0.03%)</title><rect x="0.6896%" y="2101" width="0.0345%" height="15" fill="rgb(219,207,3)" fg:x="240" fg:w="12"/><text x="0.9396%" y="2111.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (17 samples, 0.05%)</title><rect x="0.6810%" y="2229" width="0.0488%" height="15" fill="rgb(222,56,46)" fg:x="237" fg:w="17"/><text x="0.9310%" y="2239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (17 samples, 0.05%)</title><rect x="0.6810%" y="2213" width="0.0488%" height="15" fill="rgb(239,76,54)" fg:x="237" fg:w="17"/><text x="0.9310%" y="2223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (17 samples, 0.05%)</title><rect x="0.6810%" y="2197" width="0.0488%" height="15" fill="rgb(231,124,27)" fg:x="237" fg:w="17"/><text x="0.9310%" y="2207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (17 samples, 0.05%)</title><rect x="0.6810%" y="2181" width="0.0488%" height="15" fill="rgb(249,195,6)" fg:x="237" fg:w="17"/><text x="0.9310%" y="2191.50"></text></g><g><title>alloc::raw_vec::finish_grow (16 samples, 0.05%)</title><rect x="0.6839%" y="2165" width="0.0460%" height="15" fill="rgb(237,174,47)" fg:x="238" fg:w="16"/><text x="0.9339%" y="2175.50"></text></g><g><title>aptos_types::state_store::state_key::StateKey::encode (50 samples, 0.14%)</title><rect x="0.5948%" y="2485" width="0.1437%" height="15" fill="rgb(206,201,31)" fg:x="207" fg:w="50"/><text x="0.8448%" y="2495.50"></text></g><g><title>bcs::ser::to_bytes (38 samples, 0.11%)</title><rect x="0.6293%" y="2469" width="0.1092%" height="15" fill="rgb(231,57,52)" fg:x="219" fg:w="38"/><text x="0.8793%" y="2479.50"></text></g><g><title>bcs::ser::serialize_into (36 samples, 0.10%)</title><rect x="0.6350%" y="2453" width="0.1034%" height="15" fill="rgb(248,177,22)" fg:x="221" fg:w="36"/><text x="0.8850%" y="2463.50"></text></g><g><title>aptos_types::access_path::_::&lt;impl serde::ser::Serialize for aptos_types::access_path::AccessPath&gt;::serialize (36 samples, 0.10%)</title><rect x="0.6350%" y="2437" width="0.1034%" height="15" fill="rgb(215,211,37)" fg:x="221" fg:w="36"/><text x="0.8850%" y="2447.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (36 samples, 0.10%)</title><rect x="0.6350%" y="2421" width="0.1034%" height="15" fill="rgb(241,128,51)" fg:x="221" fg:w="36"/><text x="0.8850%" y="2431.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (21 samples, 0.06%)</title><rect x="0.6781%" y="2405" width="0.0603%" height="15" fill="rgb(227,165,31)" fg:x="236" fg:w="21"/><text x="0.9281%" y="2415.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (21 samples, 0.06%)</title><rect x="0.6781%" y="2389" width="0.0603%" height="15" fill="rgb(228,167,24)" fg:x="236" fg:w="21"/><text x="0.9281%" y="2399.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (21 samples, 0.06%)</title><rect x="0.6781%" y="2373" width="0.0603%" height="15" fill="rgb(228,143,12)" fg:x="236" fg:w="21"/><text x="0.9281%" y="2383.50"></text></g><g><title> 32]&gt;::serialize (21 samples, 0.06%)</title><rect x="0.6781%" y="2357" width="0.0603%" height="15" fill="rgb(249,149,8)" fg:x="236" fg:w="21"/><text x="0.9281%" y="2367.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (21 samples, 0.06%)</title><rect x="0.6781%" y="2341" width="0.0603%" height="15" fill="rgb(243,35,44)" fg:x="236" fg:w="21"/><text x="0.9281%" y="2351.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (21 samples, 0.06%)</title><rect x="0.6781%" y="2325" width="0.0603%" height="15" fill="rgb(246,89,9)" fg:x="236" fg:w="21"/><text x="0.9281%" y="2335.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (21 samples, 0.06%)</title><rect x="0.6781%" y="2309" width="0.0603%" height="15" fill="rgb(233,213,13)" fg:x="236" fg:w="21"/><text x="0.9281%" y="2319.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (21 samples, 0.06%)</title><rect x="0.6781%" y="2293" width="0.0603%" height="15" fill="rgb(233,141,41)" fg:x="236" fg:w="21"/><text x="0.9281%" y="2303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (21 samples, 0.06%)</title><rect x="0.6781%" y="2277" width="0.0603%" height="15" fill="rgb(239,167,4)" fg:x="236" fg:w="21"/><text x="0.9281%" y="2287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (21 samples, 0.06%)</title><rect x="0.6781%" y="2261" width="0.0603%" height="15" fill="rgb(209,217,16)" fg:x="236" fg:w="21"/><text x="0.9281%" y="2271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (21 samples, 0.06%)</title><rect x="0.6781%" y="2245" width="0.0603%" height="15" fill="rgb(219,88,35)" fg:x="236" fg:w="21"/><text x="0.9281%" y="2255.50"></text></g><g><title>arena_ralloc_move_helper (4 samples, 0.01%)</title><rect x="0.7615%" y="2229" width="0.0115%" height="15" fill="rgb(220,193,23)" fg:x="265" fg:w="4"/><text x="1.0115%" y="2239.50"></text></g><g><title>ipalloct (4 samples, 0.01%)</title><rect x="0.7615%" y="2213" width="0.0115%" height="15" fill="rgb(230,90,52)" fg:x="265" fg:w="4"/><text x="1.0115%" y="2223.50"></text></g><g><title>ipallocztm (4 samples, 0.01%)</title><rect x="0.7615%" y="2197" width="0.0115%" height="15" fill="rgb(252,106,19)" fg:x="265" fg:w="4"/><text x="1.0115%" y="2207.50"></text></g><g><title>_rjem_je_arena_palloc (4 samples, 0.01%)</title><rect x="0.7615%" y="2181" width="0.0115%" height="15" fill="rgb(206,74,20)" fg:x="265" fg:w="4"/><text x="1.0115%" y="2191.50"></text></g><g><title>_rjem_je_arena_palloc (4 samples, 0.01%)</title><rect x="0.7615%" y="2165" width="0.0115%" height="15" fill="rgb(230,138,44)" fg:x="265" fg:w="4"/><text x="1.0115%" y="2175.50"></text></g><g><title>arena_malloc (4 samples, 0.01%)</title><rect x="0.7615%" y="2149" width="0.0115%" height="15" fill="rgb(235,182,43)" fg:x="265" fg:w="4"/><text x="1.0115%" y="2159.50"></text></g><g><title>tcache_alloc_small (4 samples, 0.01%)</title><rect x="0.7615%" y="2133" width="0.0115%" height="15" fill="rgb(242,16,51)" fg:x="265" fg:w="4"/><text x="1.0115%" y="2143.50"></text></g><g><title>iralloct (8 samples, 0.02%)</title><rect x="0.7557%" y="2261" width="0.0230%" height="15" fill="rgb(248,9,4)" fg:x="263" fg:w="8"/><text x="1.0057%" y="2271.50"></text></g><g><title>_rjem_je_arena_ralloc (8 samples, 0.02%)</title><rect x="0.7557%" y="2245" width="0.0230%" height="15" fill="rgb(210,31,22)" fg:x="263" fg:w="8"/><text x="1.0057%" y="2255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (12 samples, 0.03%)</title><rect x="0.7471%" y="2325" width="0.0345%" height="15" fill="rgb(239,54,39)" fg:x="260" fg:w="12"/><text x="0.9971%" y="2335.50"></text></g><g><title>alloc::alloc::Global::grow_impl (12 samples, 0.03%)</title><rect x="0.7471%" y="2309" width="0.0345%" height="15" fill="rgb(230,99,41)" fg:x="260" fg:w="12"/><text x="0.9971%" y="2319.50"></text></g><g><title>alloc::alloc::realloc (12 samples, 0.03%)</title><rect x="0.7471%" y="2293" width="0.0345%" height="15" fill="rgb(253,106,12)" fg:x="260" fg:w="12"/><text x="0.9971%" y="2303.50"></text></g><g><title>rallocx (10 samples, 0.03%)</title><rect x="0.7528%" y="2277" width="0.0287%" height="15" fill="rgb(213,46,41)" fg:x="262" fg:w="10"/><text x="1.0028%" y="2287.50"></text></g><g><title>byteorder::io::WriteBytesExt::write_u64 (21 samples, 0.06%)</title><rect x="0.7385%" y="2485" width="0.0603%" height="15" fill="rgb(215,133,35)" fg:x="257" fg:w="21"/><text x="0.9885%" y="2495.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (21 samples, 0.06%)</title><rect x="0.7385%" y="2469" width="0.0603%" height="15" fill="rgb(213,28,5)" fg:x="257" fg:w="21"/><text x="0.9885%" y="2479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (21 samples, 0.06%)</title><rect x="0.7385%" y="2453" width="0.0603%" height="15" fill="rgb(215,77,49)" fg:x="257" fg:w="21"/><text x="0.9885%" y="2463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (21 samples, 0.06%)</title><rect x="0.7385%" y="2437" width="0.0603%" height="15" fill="rgb(248,100,22)" fg:x="257" fg:w="21"/><text x="0.9885%" y="2447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (21 samples, 0.06%)</title><rect x="0.7385%" y="2421" width="0.0603%" height="15" fill="rgb(208,67,9)" fg:x="257" fg:w="21"/><text x="0.9885%" y="2431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (21 samples, 0.06%)</title><rect x="0.7385%" y="2405" width="0.0603%" height="15" fill="rgb(219,133,21)" fg:x="257" fg:w="21"/><text x="0.9885%" y="2415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (21 samples, 0.06%)</title><rect x="0.7385%" y="2389" width="0.0603%" height="15" fill="rgb(246,46,29)" fg:x="257" fg:w="21"/><text x="0.9885%" y="2399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (21 samples, 0.06%)</title><rect x="0.7385%" y="2373" width="0.0603%" height="15" fill="rgb(246,185,52)" fg:x="257" fg:w="21"/><text x="0.9885%" y="2383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (21 samples, 0.06%)</title><rect x="0.7385%" y="2357" width="0.0603%" height="15" fill="rgb(252,136,11)" fg:x="257" fg:w="21"/><text x="0.9885%" y="2367.50"></text></g><g><title>alloc::raw_vec::finish_grow (20 samples, 0.06%)</title><rect x="0.7413%" y="2341" width="0.0575%" height="15" fill="rgb(219,138,53)" fg:x="258" fg:w="20"/><text x="0.9913%" y="2351.50"></text></g><g><title>aptos_db::schema::stale_state_value_index::&lt;impl aptos_schemadb::schema::KeyCodec&lt;aptos_db::schema::stale_state_value_index::StaleStateValueIndexSchema&gt; for aptos_types::state_store::state_value::StaleStateValueIndex&gt;::encode_key (82 samples, 0.24%)</title><rect x="0.5833%" y="2501" width="0.2356%" height="15" fill="rgb(211,51,23)" fg:x="203" fg:w="82"/><text x="0.8333%" y="2511.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (6 samples, 0.02%)</title><rect x="0.8017%" y="2485" width="0.0172%" height="15" fill="rgb(247,221,28)" fg:x="279" fg:w="6"/><text x="1.0517%" y="2495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (6 samples, 0.02%)</title><rect x="0.8017%" y="2469" width="0.0172%" height="15" fill="rgb(251,222,45)" fg:x="279" fg:w="6"/><text x="1.0517%" y="2479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (6 samples, 0.02%)</title><rect x="0.8017%" y="2453" width="0.0172%" height="15" fill="rgb(217,162,53)" fg:x="279" fg:w="6"/><text x="1.0517%" y="2463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (6 samples, 0.02%)</title><rect x="0.8017%" y="2437" width="0.0172%" height="15" fill="rgb(229,93,14)" fg:x="279" fg:w="6"/><text x="1.0517%" y="2447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (6 samples, 0.02%)</title><rect x="0.8017%" y="2421" width="0.0172%" height="15" fill="rgb(209,67,49)" fg:x="279" fg:w="6"/><text x="1.0517%" y="2431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.02%)</title><rect x="0.8017%" y="2405" width="0.0172%" height="15" fill="rgb(213,87,29)" fg:x="279" fg:w="6"/><text x="1.0517%" y="2415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.02%)</title><rect x="0.8017%" y="2389" width="0.0172%" height="15" fill="rgb(205,151,52)" fg:x="279" fg:w="6"/><text x="1.0517%" y="2399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 0.02%)</title><rect x="0.8017%" y="2373" width="0.0172%" height="15" fill="rgb(253,215,39)" fg:x="279" fg:w="6"/><text x="1.0517%" y="2383.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.02%)</title><rect x="0.8017%" y="2357" width="0.0172%" height="15" fill="rgb(221,220,41)" fg:x="279" fg:w="6"/><text x="1.0517%" y="2367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (6 samples, 0.02%)</title><rect x="0.8017%" y="2341" width="0.0172%" height="15" fill="rgb(218,133,21)" fg:x="279" fg:w="6"/><text x="1.0517%" y="2351.50"></text></g><g><title>alloc::alloc::Global::grow_impl (6 samples, 0.02%)</title><rect x="0.8017%" y="2325" width="0.0172%" height="15" fill="rgb(221,193,43)" fg:x="279" fg:w="6"/><text x="1.0517%" y="2335.50"></text></g><g><title>alloc::alloc::realloc (6 samples, 0.02%)</title><rect x="0.8017%" y="2309" width="0.0172%" height="15" fill="rgb(240,128,52)" fg:x="279" fg:w="6"/><text x="1.0517%" y="2319.50"></text></g><g><title>rallocx (5 samples, 0.01%)</title><rect x="0.8046%" y="2293" width="0.0144%" height="15" fill="rgb(253,114,12)" fg:x="280" fg:w="5"/><text x="1.0546%" y="2303.50"></text></g><g><title>aptos_infallible::mutex::Mutex&lt;T&gt;::lock (4 samples, 0.01%)</title><rect x="0.8189%" y="2501" width="0.0115%" height="15" fill="rgb(215,223,47)" fg:x="285" fg:w="4"/><text x="1.0689%" y="2511.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (4 samples, 0.01%)</title><rect x="0.8189%" y="2485" width="0.0115%" height="15" fill="rgb(248,225,23)" fg:x="285" fg:w="4"/><text x="1.0689%" y="2495.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::lock (4 samples, 0.01%)</title><rect x="0.8189%" y="2469" width="0.0115%" height="15" fill="rgb(250,108,0)" fg:x="285" fg:w="4"/><text x="1.0689%" y="2479.50"></text></g><g><title>prometheus::histogram::Histogram::observe (5 samples, 0.01%)</title><rect x="0.8304%" y="2453" width="0.0144%" height="15" fill="rgb(228,208,7)" fg:x="289" fg:w="5"/><text x="1.0804%" y="2463.50"></text></g><g><title>prometheus::histogram::HistogramCore::observe (5 samples, 0.01%)</title><rect x="0.8304%" y="2437" width="0.0144%" height="15" fill="rgb(244,45,10)" fg:x="289" fg:w="5"/><text x="1.0804%" y="2447.50"></text></g><g><title>prometheus::histogram::ShardAndCount::inc (5 samples, 0.01%)</title><rect x="0.8304%" y="2421" width="0.0144%" height="15" fill="rgb(207,125,25)" fg:x="289" fg:w="5"/><text x="1.0804%" y="2431.50"></text></g><g><title>prometheus::histogram::ShardAndCount::inc_by (5 samples, 0.01%)</title><rect x="0.8304%" y="2405" width="0.0144%" height="15" fill="rgb(210,195,18)" fg:x="289" fg:w="5"/><text x="1.0804%" y="2415.50"></text></g><g><title>core::sync::atomic::AtomicU64::fetch_add (5 samples, 0.01%)</title><rect x="0.8304%" y="2389" width="0.0144%" height="15" fill="rgb(249,80,12)" fg:x="289" fg:w="5"/><text x="1.0804%" y="2399.50"></text></g><g><title>core::sync::atomic::atomic_add (5 samples, 0.01%)</title><rect x="0.8304%" y="2373" width="0.0144%" height="15" fill="rgb(221,65,9)" fg:x="289" fg:w="5"/><text x="1.0804%" y="2383.50"></text></g><g><title>&lt;prometheus::histogram::HistogramTimer as core::ops::drop::Drop&gt;::drop (9 samples, 0.03%)</title><rect x="0.8304%" y="2485" width="0.0259%" height="15" fill="rgb(235,49,36)" fg:x="289" fg:w="9"/><text x="1.0804%" y="2495.50"></text></g><g><title>prometheus::histogram::HistogramTimer::observe (9 samples, 0.03%)</title><rect x="0.8304%" y="2469" width="0.0259%" height="15" fill="rgb(225,32,20)" fg:x="289" fg:w="9"/><text x="1.0804%" y="2479.50"></text></g><g><title>prometheus::histogram::Instant::elapsed_sec (4 samples, 0.01%)</title><rect x="0.8448%" y="2453" width="0.0115%" height="15" fill="rgb(215,141,46)" fg:x="294" fg:w="4"/><text x="1.0948%" y="2463.50"></text></g><g><title>core::ptr::drop_in_place&lt;prometheus::histogram::HistogramTimer&gt; (10 samples, 0.03%)</title><rect x="0.8304%" y="2501" width="0.0287%" height="15" fill="rgb(250,160,47)" fg:x="289" fg:w="10"/><text x="1.0804%" y="2511.50"></text></g><g><title>prometheus::histogram::Histogram::start_timer (4 samples, 0.01%)</title><rect x="0.8591%" y="2501" width="0.0115%" height="15" fill="rgb(216,222,40)" fg:x="299" fg:w="4"/><text x="1.1091%" y="2511.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (4 samples, 0.01%)</title><rect x="0.8793%" y="2453" width="0.0115%" height="15" fill="rgb(234,217,39)" fg:x="306" fg:w="4"/><text x="1.1293%" y="2463.50"></text></g><g><title>&lt;prometheus::histogram::Histogram as core::clone::Clone&gt;::clone (4 samples, 0.01%)</title><rect x="0.8793%" y="2437" width="0.0115%" height="15" fill="rgb(207,178,40)" fg:x="306" fg:w="4"/><text x="1.1293%" y="2447.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.01%)</title><rect x="0.8793%" y="2421" width="0.0115%" height="15" fill="rgb(221,136,13)" fg:x="306" fg:w="4"/><text x="1.1293%" y="2431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (4 samples, 0.01%)</title><rect x="0.8793%" y="2405" width="0.0115%" height="15" fill="rgb(249,199,10)" fg:x="306" fg:w="4"/><text x="1.1293%" y="2415.50"></text></g><g><title>core::sync::atomic::atomic_add (4 samples, 0.01%)</title><rect x="0.8793%" y="2389" width="0.0115%" height="15" fill="rgb(249,222,13)" fg:x="306" fg:w="4"/><text x="1.1293%" y="2399.50"></text></g><g><title>hashbrown::map::make_hash (5 samples, 0.01%)</title><rect x="0.8908%" y="2405" width="0.0144%" height="15" fill="rgb(244,185,38)" fg:x="310" fg:w="5"/><text x="1.1408%" y="2415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5 samples, 0.01%)</title><rect x="0.8908%" y="2389" width="0.0144%" height="15" fill="rgb(236,202,9)" fg:x="310" fg:w="5"/><text x="1.1408%" y="2399.50"></text></g><g><title>prometheus::vec::MetricVec&lt;T&gt;::with_label_values (16 samples, 0.05%)</title><rect x="0.8706%" y="2501" width="0.0460%" height="15" fill="rgb(250,229,37)" fg:x="303" fg:w="16"/><text x="1.1206%" y="2511.50"></text></g><g><title>prometheus::vec::MetricVec&lt;T&gt;::get_metric_with_label_values (13 samples, 0.04%)</title><rect x="0.8793%" y="2485" width="0.0374%" height="15" fill="rgb(206,174,23)" fg:x="306" fg:w="13"/><text x="1.1293%" y="2495.50"></text></g><g><title>prometheus::vec::MetricVecCore&lt;T&gt;::get_metric_with_label_values (13 samples, 0.04%)</title><rect x="0.8793%" y="2469" width="0.0374%" height="15" fill="rgb(211,33,43)" fg:x="306" fg:w="13"/><text x="1.1293%" y="2479.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (9 samples, 0.03%)</title><rect x="0.8908%" y="2453" width="0.0259%" height="15" fill="rgb(245,58,50)" fg:x="310" fg:w="9"/><text x="1.1408%" y="2463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (9 samples, 0.03%)</title><rect x="0.8908%" y="2437" width="0.0259%" height="15" fill="rgb(244,68,36)" fg:x="310" fg:w="9"/><text x="1.1408%" y="2447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (9 samples, 0.03%)</title><rect x="0.8908%" y="2421" width="0.0259%" height="15" fill="rgb(232,229,15)" fg:x="310" fg:w="9"/><text x="1.1408%" y="2431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (4 samples, 0.01%)</title><rect x="0.9051%" y="2405" width="0.0115%" height="15" fill="rgb(254,30,23)" fg:x="315" fg:w="4"/><text x="1.1551%" y="2415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (4 samples, 0.01%)</title><rect x="0.9051%" y="2389" width="0.0115%" height="15" fill="rgb(235,160,14)" fg:x="315" fg:w="4"/><text x="1.1551%" y="2399.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (4 samples, 0.01%)</title><rect x="0.9051%" y="2373" width="0.0115%" height="15" fill="rgb(212,155,44)" fg:x="315" fg:w="4"/><text x="1.1551%" y="2383.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (6 samples, 0.02%)</title><rect x="0.9252%" y="2437" width="0.0172%" height="15" fill="rgb(226,2,50)" fg:x="322" fg:w="6"/><text x="1.1752%" y="2447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (6 samples, 0.02%)</title><rect x="0.9252%" y="2421" width="0.0172%" height="15" fill="rgb(234,177,6)" fg:x="322" fg:w="6"/><text x="1.1752%" y="2431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (6 samples, 0.02%)</title><rect x="0.9252%" y="2405" width="0.0172%" height="15" fill="rgb(217,24,9)" fg:x="322" fg:w="6"/><text x="1.1752%" y="2415.50"></text></g><g><title>hashbrown::map::make_hash (10 samples, 0.03%)</title><rect x="0.9224%" y="2469" width="0.0287%" height="15" fill="rgb(220,13,46)" fg:x="321" fg:w="10"/><text x="1.1724%" y="2479.50"></text></g><g><title>core::hash::BuildHasher::hash_one (10 samples, 0.03%)</title><rect x="0.9224%" y="2453" width="0.0287%" height="15" fill="rgb(239,221,27)" fg:x="321" fg:w="10"/><text x="1.1724%" y="2463.50"></text></g><g><title>aptos_schemadb::SchemaBatch::put (147 samples, 0.42%)</title><rect x="0.5459%" y="2517" width="0.4224%" height="15" fill="rgb(222,198,25)" fg:x="190" fg:w="147"/><text x="0.7959%" y="2527.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (18 samples, 0.05%)</title><rect x="0.9166%" y="2501" width="0.0517%" height="15" fill="rgb(211,99,13)" fg:x="319" fg:w="18"/><text x="1.1666%" y="2511.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (18 samples, 0.05%)</title><rect x="0.9166%" y="2485" width="0.0517%" height="15" fill="rgb(232,111,31)" fg:x="319" fg:w="18"/><text x="1.1666%" y="2495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.02%)</title><rect x="0.9511%" y="2469" width="0.0172%" height="15" fill="rgb(245,82,37)" fg:x="331" fg:w="6"/><text x="1.2011%" y="2479.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (6 samples, 0.02%)</title><rect x="0.9511%" y="2453" width="0.0172%" height="15" fill="rgb(227,149,46)" fg:x="331" fg:w="6"/><text x="1.2011%" y="2463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (5 samples, 0.01%)</title><rect x="0.9540%" y="2437" width="0.0144%" height="15" fill="rgb(218,36,50)" fg:x="332" fg:w="5"/><text x="1.2040%" y="2447.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (5 samples, 0.01%)</title><rect x="0.9540%" y="2421" width="0.0144%" height="15" fill="rgb(226,80,48)" fg:x="332" fg:w="5"/><text x="1.2040%" y="2431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (5 samples, 0.01%)</title><rect x="0.9540%" y="2405" width="0.0144%" height="15" fill="rgb(238,224,15)" fg:x="332" fg:w="5"/><text x="1.2040%" y="2415.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (5 samples, 0.01%)</title><rect x="0.9540%" y="2389" width="0.0144%" height="15" fill="rgb(241,136,10)" fg:x="332" fg:w="5"/><text x="1.2040%" y="2399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (5 samples, 0.01%)</title><rect x="0.9540%" y="2373" width="0.0144%" height="15" fill="rgb(208,32,45)" fg:x="332" fg:w="5"/><text x="1.2040%" y="2383.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (5 samples, 0.01%)</title><rect x="0.9540%" y="2357" width="0.0144%" height="15" fill="rgb(207,135,9)" fg:x="332" fg:w="5"/><text x="1.2040%" y="2367.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (5 samples, 0.01%)</title><rect x="0.9540%" y="2341" width="0.0144%" height="15" fill="rgb(206,86,44)" fg:x="332" fg:w="5"/><text x="1.2040%" y="2351.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (6 samples, 0.02%)</title><rect x="1.0143%" y="1909" width="0.0172%" height="15" fill="rgb(245,177,15)" fg:x="353" fg:w="6"/><text x="1.2643%" y="1919.50"></text></g><g><title>core::hash::Hasher::write_usize (6 samples, 0.02%)</title><rect x="1.0143%" y="1893" width="0.0172%" height="15" fill="rgb(206,64,50)" fg:x="353" fg:w="6"/><text x="1.2643%" y="1903.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (6 samples, 0.02%)</title><rect x="1.0143%" y="1877" width="0.0172%" height="15" fill="rgb(234,36,40)" fg:x="353" fg:w="6"/><text x="1.2643%" y="1887.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (6 samples, 0.02%)</title><rect x="1.0143%" y="1861" width="0.0172%" height="15" fill="rgb(213,64,8)" fg:x="353" fg:w="6"/><text x="1.2643%" y="1871.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.02%)</title><rect x="1.0143%" y="1845" width="0.0172%" height="15" fill="rgb(210,75,36)" fg:x="353" fg:w="6"/><text x="1.2643%" y="1855.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::hash::Hash&gt;::hash (13 samples, 0.04%)</title><rect x="1.0143%" y="1989" width="0.0374%" height="15" fill="rgb(229,88,21)" fg:x="353" fg:w="13"/><text x="1.2643%" y="1999.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (13 samples, 0.04%)</title><rect x="1.0143%" y="1973" width="0.0374%" height="15" fill="rgb(252,204,47)" fg:x="353" fg:w="13"/><text x="1.2643%" y="1983.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T (13 samples, 0.04%)</title><rect x="1.0143%" y="1957" width="0.0374%" height="15" fill="rgb(208,77,27)" fg:x="353" fg:w="13"/><text x="1.2643%" y="1967.50"></text></g><g><title> N]&gt;::hash (13 samples, 0.04%)</title><rect x="1.0143%" y="1941" width="0.0374%" height="15" fill="rgb(221,76,26)" fg:x="353" fg:w="13"/><text x="1.2643%" y="1951.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (13 samples, 0.04%)</title><rect x="1.0143%" y="1925" width="0.0374%" height="15" fill="rgb(225,139,18)" fg:x="353" fg:w="13"/><text x="1.2643%" y="1935.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (7 samples, 0.02%)</title><rect x="1.0315%" y="1909" width="0.0201%" height="15" fill="rgb(230,137,11)" fg:x="359" fg:w="7"/><text x="1.2815%" y="1919.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (7 samples, 0.02%)</title><rect x="1.0315%" y="1893" width="0.0201%" height="15" fill="rgb(212,28,1)" fg:x="359" fg:w="7"/><text x="1.2815%" y="1903.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (7 samples, 0.02%)</title><rect x="1.0315%" y="1877" width="0.0201%" height="15" fill="rgb(248,164,17)" fg:x="359" fg:w="7"/><text x="1.2815%" y="1887.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.02%)</title><rect x="1.0315%" y="1861" width="0.0201%" height="15" fill="rgb(222,171,42)" fg:x="359" fg:w="7"/><text x="1.2815%" y="1871.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.01%)</title><rect x="1.0402%" y="1845" width="0.0115%" height="15" fill="rgb(243,84,45)" fg:x="362" fg:w="4"/><text x="1.2902%" y="1855.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (26 samples, 0.07%)</title><rect x="0.9798%" y="2005" width="0.0747%" height="15" fill="rgb(252,49,23)" fg:x="341" fg:w="26"/><text x="1.2298%" y="2015.50"></text></g><g><title>hashbrown::map::make_hash (34 samples, 0.10%)</title><rect x="0.9712%" y="2069" width="0.0977%" height="15" fill="rgb(215,19,7)" fg:x="338" fg:w="34"/><text x="1.2212%" y="2079.50"></text></g><g><title>core::hash::BuildHasher::hash_one (34 samples, 0.10%)</title><rect x="0.9712%" y="2053" width="0.0977%" height="15" fill="rgb(238,81,41)" fg:x="338" fg:w="34"/><text x="1.2212%" y="2063.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (31 samples, 0.09%)</title><rect x="0.9798%" y="2037" width="0.0891%" height="15" fill="rgb(210,199,37)" fg:x="341" fg:w="31"/><text x="1.2298%" y="2047.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (31 samples, 0.09%)</title><rect x="0.9798%" y="2021" width="0.0891%" height="15" fill="rgb(244,192,49)" fg:x="341" fg:w="31"/><text x="1.2298%" y="2031.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.01%)</title><rect x="1.0545%" y="2005" width="0.0144%" height="15" fill="rgb(226,211,11)" fg:x="367" fg:w="5"/><text x="1.3045%" y="2015.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.01%)</title><rect x="1.0574%" y="1989" width="0.0115%" height="15" fill="rgb(236,162,54)" fg:x="368" fg:w="4"/><text x="1.3074%" y="1999.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (37 samples, 0.11%)</title><rect x="0.9712%" y="2517" width="0.1063%" height="15" fill="rgb(220,229,9)" fg:x="338" fg:w="37"/><text x="1.2212%" y="2527.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (37 samples, 0.11%)</title><rect x="0.9712%" y="2501" width="0.1063%" height="15" fill="rgb(250,87,22)" fg:x="338" fg:w="37"/><text x="1.2212%" y="2511.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (37 samples, 0.11%)</title><rect x="0.9712%" y="2485" width="0.1063%" height="15" fill="rgb(239,43,17)" fg:x="338" fg:w="37"/><text x="1.2212%" y="2495.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (37 samples, 0.11%)</title><rect x="0.9712%" y="2469" width="0.1063%" height="15" fill="rgb(231,177,25)" fg:x="338" fg:w="37"/><text x="1.2212%" y="2479.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (37 samples, 0.11%)</title><rect x="0.9712%" y="2453" width="0.1063%" height="15" fill="rgb(219,179,1)" fg:x="338" fg:w="37"/><text x="1.2212%" y="2463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (37 samples, 0.11%)</title><rect x="0.9712%" y="2437" width="0.1063%" height="15" fill="rgb(238,219,53)" fg:x="338" fg:w="37"/><text x="1.2212%" y="2447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (37 samples, 0.11%)</title><rect x="0.9712%" y="2421" width="0.1063%" height="15" fill="rgb(232,167,36)" fg:x="338" fg:w="37"/><text x="1.2212%" y="2431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (37 samples, 0.11%)</title><rect x="0.9712%" y="2405" width="0.1063%" height="15" fill="rgb(244,19,51)" fg:x="338" fg:w="37"/><text x="1.2212%" y="2415.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (37 samples, 0.11%)</title><rect x="0.9712%" y="2389" width="0.1063%" height="15" fill="rgb(224,6,22)" fg:x="338" fg:w="37"/><text x="1.2212%" y="2399.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (37 samples, 0.11%)</title><rect x="0.9712%" y="2373" width="0.1063%" height="15" fill="rgb(224,145,5)" fg:x="338" fg:w="37"/><text x="1.2212%" y="2383.50"></text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_fold (37 samples, 0.11%)</title><rect x="0.9712%" y="2357" width="0.1063%" height="15" fill="rgb(234,130,49)" fg:x="338" fg:w="37"/><text x="1.2212%" y="2367.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (37 samples, 0.11%)</title><rect x="0.9712%" y="2341" width="0.1063%" height="15" fill="rgb(254,6,2)" fg:x="338" fg:w="37"/><text x="1.2212%" y="2351.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (37 samples, 0.11%)</title><rect x="0.9712%" y="2325" width="0.1063%" height="15" fill="rgb(208,96,46)" fg:x="338" fg:w="37"/><text x="1.2212%" y="2335.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (37 samples, 0.11%)</title><rect x="0.9712%" y="2309" width="0.1063%" height="15" fill="rgb(239,3,39)" fg:x="338" fg:w="37"/><text x="1.2212%" y="2319.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (37 samples, 0.11%)</title><rect x="0.9712%" y="2293" width="0.1063%" height="15" fill="rgb(233,210,1)" fg:x="338" fg:w="37"/><text x="1.2212%" y="2303.50"></text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_fold::flatten::{{closure}} (37 samples, 0.11%)</title><rect x="0.9712%" y="2277" width="0.1063%" height="15" fill="rgb(244,137,37)" fg:x="338" fg:w="37"/><text x="1.2212%" y="2287.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold::flatten::{{closure}} (37 samples, 0.11%)</title><rect x="0.9712%" y="2261" width="0.1063%" height="15" fill="rgb(240,136,2)" fg:x="338" fg:w="37"/><text x="1.2212%" y="2271.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (37 samples, 0.11%)</title><rect x="0.9712%" y="2245" width="0.1063%" height="15" fill="rgb(239,18,37)" fg:x="338" fg:w="37"/><text x="1.2212%" y="2255.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (37 samples, 0.11%)</title><rect x="0.9712%" y="2229" width="0.1063%" height="15" fill="rgb(218,185,22)" fg:x="338" fg:w="37"/><text x="1.2212%" y="2239.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (37 samples, 0.11%)</title><rect x="0.9712%" y="2213" width="0.1063%" height="15" fill="rgb(225,218,4)" fg:x="338" fg:w="37"/><text x="1.2212%" y="2223.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::fold_impl (37 samples, 0.11%)</title><rect x="0.9712%" y="2197" width="0.1063%" height="15" fill="rgb(230,182,32)" fg:x="338" fg:w="37"/><text x="1.2212%" y="2207.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold::{{closure}} (37 samples, 0.11%)</title><rect x="0.9712%" y="2181" width="0.1063%" height="15" fill="rgb(242,56,43)" fg:x="338" fg:w="37"/><text x="1.2212%" y="2191.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (37 samples, 0.11%)</title><rect x="0.9712%" y="2165" width="0.1063%" height="15" fill="rgb(233,99,24)" fg:x="338" fg:w="37"/><text x="1.2212%" y="2175.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (37 samples, 0.11%)</title><rect x="0.9712%" y="2149" width="0.1063%" height="15" fill="rgb(234,209,42)" fg:x="338" fg:w="37"/><text x="1.2212%" y="2159.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (37 samples, 0.11%)</title><rect x="0.9712%" y="2133" width="0.1063%" height="15" fill="rgb(227,7,12)" fg:x="338" fg:w="37"/><text x="1.2212%" y="2143.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (37 samples, 0.11%)</title><rect x="0.9712%" y="2117" width="0.1063%" height="15" fill="rgb(245,203,43)" fg:x="338" fg:w="37"/><text x="1.2212%" y="2127.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (37 samples, 0.11%)</title><rect x="0.9712%" y="2101" width="0.1063%" height="15" fill="rgb(238,205,33)" fg:x="338" fg:w="37"/><text x="1.2212%" y="2111.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (37 samples, 0.11%)</title><rect x="0.9712%" y="2085" width="0.1063%" height="15" fill="rgb(231,56,7)" fg:x="338" fg:w="37"/><text x="1.2212%" y="2095.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::state_store::state_value::StateValue&gt; (5 samples, 0.01%)</title><rect x="1.0861%" y="2517" width="0.0144%" height="15" fill="rgb(244,186,29)" fg:x="378" fg:w="5"/><text x="1.3361%" y="2527.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::state_store::state_value::StateValueInner&gt; (5 samples, 0.01%)</title><rect x="1.0861%" y="2501" width="0.0144%" height="15" fill="rgb(234,111,31)" fg:x="378" fg:w="5"/><text x="1.3361%" y="2511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (5 samples, 0.01%)</title><rect x="1.0861%" y="2485" width="0.0144%" height="15" fill="rgb(241,149,10)" fg:x="378" fg:w="5"/><text x="1.3361%" y="2495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (5 samples, 0.01%)</title><rect x="1.0861%" y="2469" width="0.0144%" height="15" fill="rgb(249,206,44)" fg:x="378" fg:w="5"/><text x="1.3361%" y="2479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="1.0861%" y="2453" width="0.0144%" height="15" fill="rgb(251,153,30)" fg:x="378" fg:w="5"/><text x="1.3361%" y="2463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.01%)</title><rect x="1.0861%" y="2437" width="0.0144%" height="15" fill="rgb(239,152,38)" fg:x="378" fg:w="5"/><text x="1.3361%" y="2447.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.01%)</title><rect x="1.0861%" y="2421" width="0.0144%" height="15" fill="rgb(249,139,47)" fg:x="378" fg:w="5"/><text x="1.3361%" y="2431.50"></text></g><g><title>sdallocx (4 samples, 0.01%)</title><rect x="1.0890%" y="2405" width="0.0115%" height="15" fill="rgb(244,64,35)" fg:x="379" fg:w="4"/><text x="1.3390%" y="2415.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (6 samples, 0.02%)</title><rect x="1.1063%" y="2453" width="0.0172%" height="15" fill="rgb(216,46,15)" fg:x="385" fg:w="6"/><text x="1.3563%" y="2463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (6 samples, 0.02%)</title><rect x="1.1063%" y="2437" width="0.0172%" height="15" fill="rgb(250,74,19)" fg:x="385" fg:w="6"/><text x="1.3563%" y="2447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (6 samples, 0.02%)</title><rect x="1.1063%" y="2421" width="0.0172%" height="15" fill="rgb(249,42,33)" fg:x="385" fg:w="6"/><text x="1.3563%" y="2431.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (4 samples, 0.01%)</title><rect x="1.1235%" y="2437" width="0.0115%" height="15" fill="rgb(242,149,17)" fg:x="391" fg:w="4"/><text x="1.3735%" y="2447.50"></text></g><g><title>hashbrown::map::make_hash (11 samples, 0.03%)</title><rect x="1.1063%" y="2485" width="0.0316%" height="15" fill="rgb(244,29,21)" fg:x="385" fg:w="11"/><text x="1.3563%" y="2495.50"></text></g><g><title>core::hash::BuildHasher::hash_one (11 samples, 0.03%)</title><rect x="1.1063%" y="2469" width="0.0316%" height="15" fill="rgb(220,130,37)" fg:x="385" fg:w="11"/><text x="1.3563%" y="2479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (5 samples, 0.01%)</title><rect x="1.1235%" y="2453" width="0.0144%" height="15" fill="rgb(211,67,2)" fg:x="391" fg:w="5"/><text x="1.3735%" y="2463.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (18 samples, 0.05%)</title><rect x="1.1005%" y="2517" width="0.0517%" height="15" fill="rgb(235,68,52)" fg:x="383" fg:w="18"/><text x="1.3505%" y="2527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (18 samples, 0.05%)</title><rect x="1.1005%" y="2501" width="0.0517%" height="15" fill="rgb(246,142,3)" fg:x="383" fg:w="18"/><text x="1.3505%" y="2511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (5 samples, 0.01%)</title><rect x="1.1379%" y="2485" width="0.0144%" height="15" fill="rgb(241,25,7)" fg:x="396" fg:w="5"/><text x="1.3879%" y="2495.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (5 samples, 0.01%)</title><rect x="1.1379%" y="2469" width="0.0144%" height="15" fill="rgb(242,119,39)" fg:x="396" fg:w="5"/><text x="1.3879%" y="2479.50"></text></g><g><title>aptos_db::state_store::StateStore::put_value_sets (239 samples, 0.69%)</title><rect x="0.4971%" y="2549" width="0.6867%" height="15" fill="rgb(241,98,45)" fg:x="173" fg:w="239"/><text x="0.7471%" y="2559.50"></text></g><g><title>aptos_db::state_store::StateStore::put_stats_and_indices (239 samples, 0.69%)</title><rect x="0.4971%" y="2533" width="0.6867%" height="15" fill="rgb(254,28,30)" fg:x="173" fg:w="239"/><text x="0.7471%" y="2543.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (11 samples, 0.03%)</title><rect x="1.1522%" y="2517" width="0.0316%" height="15" fill="rgb(241,142,54)" fg:x="401" fg:w="11"/><text x="1.4022%" y="2527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (11 samples, 0.03%)</title><rect x="1.1522%" y="2501" width="0.0316%" height="15" fill="rgb(222,85,15)" fg:x="401" fg:w="11"/><text x="1.4022%" y="2511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (11 samples, 0.03%)</title><rect x="1.1522%" y="2485" width="0.0316%" height="15" fill="rgb(210,85,47)" fg:x="401" fg:w="11"/><text x="1.4022%" y="2495.50"></text></g><g><title>hashbrown::raw::RawTableInner::iter (11 samples, 0.03%)</title><rect x="1.1522%" y="2469" width="0.0316%" height="15" fill="rgb(224,206,25)" fg:x="401" fg:w="11"/><text x="1.4022%" y="2479.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (11 samples, 0.03%)</title><rect x="1.1522%" y="2453" width="0.0316%" height="15" fill="rgb(243,201,19)" fg:x="401" fg:w="11"/><text x="1.4022%" y="2463.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (11 samples, 0.03%)</title><rect x="1.1522%" y="2437" width="0.0316%" height="15" fill="rgb(236,59,4)" fg:x="401" fg:w="11"/><text x="1.4022%" y="2447.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (11 samples, 0.03%)</title><rect x="1.1522%" y="2421" width="0.0316%" height="15" fill="rgb(254,179,45)" fg:x="401" fg:w="11"/><text x="1.4022%" y="2431.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.01%)</title><rect x="1.1838%" y="2437" width="0.0144%" height="15" fill="rgb(226,14,10)" fg:x="412" fg:w="5"/><text x="1.4338%" y="2447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.01%)</title><rect x="1.1838%" y="2421" width="0.0144%" height="15" fill="rgb(244,27,41)" fg:x="412" fg:w="5"/><text x="1.4338%" y="2431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.01%)</title><rect x="1.1838%" y="2405" width="0.0144%" height="15" fill="rgb(235,35,32)" fg:x="412" fg:w="5"/><text x="1.4338%" y="2415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.01%)</title><rect x="1.1838%" y="2389" width="0.0144%" height="15" fill="rgb(218,68,31)" fg:x="412" fg:w="5"/><text x="1.4338%" y="2399.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (5 samples, 0.01%)</title><rect x="1.1838%" y="2373" width="0.0144%" height="15" fill="rgb(207,120,37)" fg:x="412" fg:w="5"/><text x="1.4338%" y="2383.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (5 samples, 0.01%)</title><rect x="1.1838%" y="2357" width="0.0144%" height="15" fill="rgb(227,98,0)" fg:x="412" fg:w="5"/><text x="1.4338%" y="2367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (5 samples, 0.01%)</title><rect x="1.1838%" y="2341" width="0.0144%" height="15" fill="rgb(207,7,3)" fg:x="412" fg:w="5"/><text x="1.4338%" y="2351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted::{{closure}} (5 samples, 0.01%)</title><rect x="1.1838%" y="2325" width="0.0144%" height="15" fill="rgb(206,98,19)" fg:x="412" fg:w="5"/><text x="1.4338%" y="2335.50"></text></g><g><title>core::ptr::write (5 samples, 0.01%)</title><rect x="1.1838%" y="2309" width="0.0144%" height="15" fill="rgb(217,5,26)" fg:x="412" fg:w="5"/><text x="1.4338%" y="2319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (6 samples, 0.02%)</title><rect x="1.1838%" y="2533" width="0.0172%" height="15" fill="rgb(235,190,38)" fg:x="412" fg:w="6"/><text x="1.4338%" y="2543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.02%)</title><rect x="1.1838%" y="2517" width="0.0172%" height="15" fill="rgb(247,86,24)" fg:x="412" fg:w="6"/><text x="1.4338%" y="2527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (6 samples, 0.02%)</title><rect x="1.1838%" y="2501" width="0.0172%" height="15" fill="rgb(205,101,16)" fg:x="412" fg:w="6"/><text x="1.4338%" y="2511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (6 samples, 0.02%)</title><rect x="1.1838%" y="2485" width="0.0172%" height="15" fill="rgb(246,168,33)" fg:x="412" fg:w="6"/><text x="1.4338%" y="2495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_trusted (6 samples, 0.02%)</title><rect x="1.1838%" y="2469" width="0.0172%" height="15" fill="rgb(231,114,1)" fg:x="412" fg:w="6"/><text x="1.4338%" y="2479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (6 samples, 0.02%)</title><rect x="1.1838%" y="2453" width="0.0172%" height="15" fill="rgb(207,184,53)" fg:x="412" fg:w="6"/><text x="1.4338%" y="2463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (8 samples, 0.02%)</title><rect x="1.1838%" y="2549" width="0.0230%" height="15" fill="rgb(224,95,51)" fg:x="412" fg:w="8"/><text x="1.4338%" y="2559.50"></text></g><g><title>&lt;aptos_types::transaction::TransactionHasher as aptos_crypto::hash::CryptoHasher&gt;::finish (20 samples, 0.06%)</title><rect x="1.2154%" y="2453" width="0.0575%" height="15" fill="rgb(212,188,45)" fg:x="423" fg:w="20"/><text x="1.4654%" y="2463.50"></text></g><g><title>aptos_crypto::hash::DefaultHasher::finish (20 samples, 0.06%)</title><rect x="1.2154%" y="2437" width="0.0575%" height="15" fill="rgb(223,154,38)" fg:x="423" fg:w="20"/><text x="1.4654%" y="2447.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (20 samples, 0.06%)</title><rect x="1.2154%" y="2421" width="0.0575%" height="15" fill="rgb(251,22,52)" fg:x="423" fg:w="20"/><text x="1.4654%" y="2431.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (20 samples, 0.06%)</title><rect x="1.2154%" y="2405" width="0.0575%" height="15" fill="rgb(229,209,22)" fg:x="423" fg:w="20"/><text x="1.4654%" y="2415.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (20 samples, 0.06%)</title><rect x="1.2154%" y="2389" width="0.0575%" height="15" fill="rgb(234,138,34)" fg:x="423" fg:w="20"/><text x="1.4654%" y="2399.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (20 samples, 0.06%)</title><rect x="1.2154%" y="2373" width="0.0575%" height="15" fill="rgb(212,95,11)" fg:x="423" fg:w="20"/><text x="1.4654%" y="2383.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (20 samples, 0.06%)</title><rect x="1.2154%" y="2357" width="0.0575%" height="15" fill="rgb(240,179,47)" fg:x="423" fg:w="20"/><text x="1.4654%" y="2367.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (20 samples, 0.06%)</title><rect x="1.2154%" y="2341" width="0.0575%" height="15" fill="rgb(240,163,11)" fg:x="423" fg:w="20"/><text x="1.4654%" y="2351.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (19 samples, 0.05%)</title><rect x="1.2183%" y="2325" width="0.0546%" height="15" fill="rgb(236,37,12)" fg:x="424" fg:w="19"/><text x="1.4683%" y="2335.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (6 samples, 0.02%)</title><rect x="1.2557%" y="2309" width="0.0172%" height="15" fill="rgb(232,164,16)" fg:x="437" fg:w="6"/><text x="1.5057%" y="2319.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (13 samples, 0.04%)</title><rect x="1.2729%" y="2325" width="0.0374%" height="15" fill="rgb(244,205,15)" fg:x="443" fg:w="13"/><text x="1.5229%" y="2335.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (13 samples, 0.04%)</title><rect x="1.2729%" y="2309" width="0.0374%" height="15" fill="rgb(223,117,47)" fg:x="443" fg:w="13"/><text x="1.5229%" y="2319.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (13 samples, 0.04%)</title><rect x="1.2729%" y="2293" width="0.0374%" height="15" fill="rgb(244,107,35)" fg:x="443" fg:w="13"/><text x="1.5229%" y="2303.50"></text></g><g><title> 32]&gt;::serialize (13 samples, 0.04%)</title><rect x="1.2729%" y="2277" width="0.0374%" height="15" fill="rgb(205,140,8)" fg:x="443" fg:w="13"/><text x="1.5229%" y="2287.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (13 samples, 0.04%)</title><rect x="1.2729%" y="2261" width="0.0374%" height="15" fill="rgb(228,84,46)" fg:x="443" fg:w="13"/><text x="1.5229%" y="2271.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (13 samples, 0.04%)</title><rect x="1.2729%" y="2245" width="0.0374%" height="15" fill="rgb(254,188,9)" fg:x="443" fg:w="13"/><text x="1.5229%" y="2255.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (13 samples, 0.04%)</title><rect x="1.2729%" y="2229" width="0.0374%" height="15" fill="rgb(206,112,54)" fg:x="443" fg:w="13"/><text x="1.5229%" y="2239.50"></text></g><g><title>std::io::Write::write_all (13 samples, 0.04%)</title><rect x="1.2729%" y="2213" width="0.0374%" height="15" fill="rgb(216,84,49)" fg:x="443" fg:w="13"/><text x="1.5229%" y="2223.50"></text></g><g><title>&lt;aptos_types::transaction::RawTransactionHasher as std::io::Write&gt;::write (13 samples, 0.04%)</title><rect x="1.2729%" y="2197" width="0.0374%" height="15" fill="rgb(214,194,35)" fg:x="443" fg:w="13"/><text x="1.5229%" y="2207.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (7 samples, 0.02%)</title><rect x="1.2902%" y="2181" width="0.0201%" height="15" fill="rgb(249,28,3)" fg:x="449" fg:w="7"/><text x="1.5402%" y="2191.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_str (29 samples, 0.08%)</title><rect x="1.3131%" y="2197" width="0.0833%" height="15" fill="rgb(222,56,52)" fg:x="457" fg:w="29"/><text x="1.5631%" y="2207.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_bytes (29 samples, 0.08%)</title><rect x="1.3131%" y="2181" width="0.0833%" height="15" fill="rgb(245,217,50)" fg:x="457" fg:w="29"/><text x="1.5631%" y="2191.50"></text></g><g><title>std::io::Write::write_all (28 samples, 0.08%)</title><rect x="1.3160%" y="2165" width="0.0805%" height="15" fill="rgb(213,201,24)" fg:x="458" fg:w="28"/><text x="1.5660%" y="2175.50"></text></g><g><title>&lt;aptos_types::transaction::RawTransactionHasher as std::io::Write&gt;::write (28 samples, 0.08%)</title><rect x="1.3160%" y="2149" width="0.0805%" height="15" fill="rgb(248,116,28)" fg:x="458" fg:w="28"/><text x="1.5660%" y="2159.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (28 samples, 0.08%)</title><rect x="1.3160%" y="2133" width="0.0805%" height="15" fill="rgb(219,72,43)" fg:x="458" fg:w="28"/><text x="1.5660%" y="2143.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (27 samples, 0.08%)</title><rect x="1.3189%" y="2117" width="0.0776%" height="15" fill="rgb(209,138,14)" fg:x="459" fg:w="27"/><text x="1.5689%" y="2127.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (27 samples, 0.08%)</title><rect x="1.3189%" y="2101" width="0.0776%" height="15" fill="rgb(222,18,33)" fg:x="459" fg:w="27"/><text x="1.5689%" y="2111.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (27 samples, 0.08%)</title><rect x="1.3189%" y="2085" width="0.0776%" height="15" fill="rgb(213,199,7)" fg:x="459" fg:w="27"/><text x="1.5689%" y="2095.50"></text></g><g><title>aptos_types::transaction::ethereum::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::ethereum::Action&gt;::serialize (31 samples, 0.09%)</title><rect x="1.3131%" y="2261" width="0.0891%" height="15" fill="rgb(250,110,10)" fg:x="457" fg:w="31"/><text x="1.5631%" y="2271.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (31 samples, 0.09%)</title><rect x="1.3131%" y="2245" width="0.0891%" height="15" fill="rgb(248,123,6)" fg:x="457" fg:w="31"/><text x="1.5631%" y="2255.50"></text></g><g><title>primitive_types::serde::&lt;impl serde::ser::Serialize for primitive_types::H160&gt;::serialize (31 samples, 0.09%)</title><rect x="1.3131%" y="2229" width="0.0891%" height="15" fill="rgb(206,91,31)" fg:x="457" fg:w="31"/><text x="1.5631%" y="2239.50"></text></g><g><title>impl_serde::serialize::serialize_raw (31 samples, 0.09%)</title><rect x="1.3131%" y="2213" width="0.0891%" height="15" fill="rgb(211,154,13)" fg:x="457" fg:w="31"/><text x="1.5631%" y="2223.50"></text></g><g><title>aptos_types::transaction::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::TransactionPayload&gt;::serialize (40 samples, 0.11%)</title><rect x="1.3103%" y="2325" width="0.1149%" height="15" fill="rgb(225,148,7)" fg:x="456" fg:w="40"/><text x="1.5603%" y="2335.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (39 samples, 0.11%)</title><rect x="1.3131%" y="2309" width="0.1121%" height="15" fill="rgb(220,160,43)" fg:x="457" fg:w="39"/><text x="1.5631%" y="2319.50"></text></g><g><title>aptos_types::transaction::ethereum::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::ethereum::EthTransactionPayload&gt;::serialize (39 samples, 0.11%)</title><rect x="1.3131%" y="2293" width="0.1121%" height="15" fill="rgb(213,52,39)" fg:x="457" fg:w="39"/><text x="1.5631%" y="2303.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (39 samples, 0.11%)</title><rect x="1.3131%" y="2277" width="0.1121%" height="15" fill="rgb(243,137,7)" fg:x="457" fg:w="39"/><text x="1.5631%" y="2287.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (6 samples, 0.02%)</title><rect x="1.4080%" y="2261" width="0.0172%" height="15" fill="rgb(230,79,13)" fg:x="490" fg:w="6"/><text x="1.6580%" y="2271.50"></text></g><g><title>serde::ser::Serializer::collect_seq (6 samples, 0.02%)</title><rect x="1.4080%" y="2245" width="0.0172%" height="15" fill="rgb(247,105,23)" fg:x="490" fg:w="6"/><text x="1.6580%" y="2255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (6 samples, 0.02%)</title><rect x="1.4080%" y="2229" width="0.0172%" height="15" fill="rgb(223,179,41)" fg:x="490" fg:w="6"/><text x="1.6580%" y="2239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (6 samples, 0.02%)</title><rect x="1.4080%" y="2213" width="0.0172%" height="15" fill="rgb(218,9,34)" fg:x="490" fg:w="6"/><text x="1.6580%" y="2223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (6 samples, 0.02%)</title><rect x="1.4080%" y="2197" width="0.0172%" height="15" fill="rgb(222,106,8)" fg:x="490" fg:w="6"/><text x="1.6580%" y="2207.50"></text></g><g><title>serde::ser::Serializer::collect_seq::{{closure}} (6 samples, 0.02%)</title><rect x="1.4080%" y="2181" width="0.0172%" height="15" fill="rgb(211,220,0)" fg:x="490" fg:w="6"/><text x="1.6580%" y="2191.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeSeq&gt;::serialize_element (6 samples, 0.02%)</title><rect x="1.4080%" y="2165" width="0.0172%" height="15" fill="rgb(229,52,16)" fg:x="490" fg:w="6"/><text x="1.6580%" y="2175.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.02%)</title><rect x="1.4080%" y="2149" width="0.0172%" height="15" fill="rgb(212,155,18)" fg:x="490" fg:w="6"/><text x="1.6580%" y="2159.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (6 samples, 0.02%)</title><rect x="1.4080%" y="2133" width="0.0172%" height="15" fill="rgb(242,21,14)" fg:x="490" fg:w="6"/><text x="1.6580%" y="2143.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (6 samples, 0.02%)</title><rect x="1.4080%" y="2117" width="0.0172%" height="15" fill="rgb(222,19,48)" fg:x="490" fg:w="6"/><text x="1.6580%" y="2127.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.02%)</title><rect x="1.4080%" y="2101" width="0.0172%" height="15" fill="rgb(232,45,27)" fg:x="490" fg:w="6"/><text x="1.6580%" y="2111.50"></text></g><g><title>&lt;aptos_types::transaction::TransactionHasher as std::io::Write&gt;::write (6 samples, 0.02%)</title><rect x="1.4080%" y="2085" width="0.0172%" height="15" fill="rgb(249,103,42)" fg:x="490" fg:w="6"/><text x="1.6580%" y="2095.50"></text></g><g><title>aptos_types::transaction::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::RawTransaction&gt;::serialize (54 samples, 0.16%)</title><rect x="1.2729%" y="2357" width="0.1552%" height="15" fill="rgb(246,81,33)" fg:x="443" fg:w="54"/><text x="1.5229%" y="2367.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (54 samples, 0.16%)</title><rect x="1.2729%" y="2341" width="0.1552%" height="15" fill="rgb(252,33,42)" fg:x="443" fg:w="54"/><text x="1.5229%" y="2351.50"></text></g><g><title>&lt;aptos_crypto::secp256k1::Secp256k1PublicKey as serde::ser::Serialize&gt;::serialize (24 samples, 0.07%)</title><rect x="1.4310%" y="2325" width="0.0690%" height="15" fill="rgb(209,212,41)" fg:x="498" fg:w="24"/><text x="1.6810%" y="2335.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (24 samples, 0.07%)</title><rect x="1.4310%" y="2309" width="0.0690%" height="15" fill="rgb(207,154,6)" fg:x="498" fg:w="24"/><text x="1.6810%" y="2319.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (24 samples, 0.07%)</title><rect x="1.4310%" y="2293" width="0.0690%" height="15" fill="rgb(223,64,47)" fg:x="498" fg:w="24"/><text x="1.6810%" y="2303.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_bytes (24 samples, 0.07%)</title><rect x="1.4310%" y="2277" width="0.0690%" height="15" fill="rgb(211,161,38)" fg:x="498" fg:w="24"/><text x="1.6810%" y="2287.50"></text></g><g><title>std::io::Write::write_all (24 samples, 0.07%)</title><rect x="1.4310%" y="2261" width="0.0690%" height="15" fill="rgb(219,138,40)" fg:x="498" fg:w="24"/><text x="1.6810%" y="2271.50"></text></g><g><title>&lt;aptos_types::transaction::RawTransactionHasher as std::io::Write&gt;::write (24 samples, 0.07%)</title><rect x="1.4310%" y="2245" width="0.0690%" height="15" fill="rgb(241,228,46)" fg:x="498" fg:w="24"/><text x="1.6810%" y="2255.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (24 samples, 0.07%)</title><rect x="1.4310%" y="2229" width="0.0690%" height="15" fill="rgb(223,209,38)" fg:x="498" fg:w="24"/><text x="1.6810%" y="2239.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (24 samples, 0.07%)</title><rect x="1.4310%" y="2213" width="0.0690%" height="15" fill="rgb(236,164,45)" fg:x="498" fg:w="24"/><text x="1.6810%" y="2223.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (24 samples, 0.07%)</title><rect x="1.4310%" y="2197" width="0.0690%" height="15" fill="rgb(231,15,5)" fg:x="498" fg:w="24"/><text x="1.6810%" y="2207.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (24 samples, 0.07%)</title><rect x="1.4310%" y="2181" width="0.0690%" height="15" fill="rgb(252,35,15)" fg:x="498" fg:w="24"/><text x="1.6810%" y="2191.50"></text></g><g><title>&lt;aptos_types::transaction::Transaction as aptos_crypto::hash::CryptoHash&gt;::hash (102 samples, 0.29%)</title><rect x="1.2154%" y="2469" width="0.2931%" height="15" fill="rgb(248,181,18)" fg:x="423" fg:w="102"/><text x="1.4654%" y="2479.50"></text></g><g><title>bcs::ser::serialize_into (82 samples, 0.24%)</title><rect x="1.2729%" y="2453" width="0.2356%" height="15" fill="rgb(233,39,42)" fg:x="443" fg:w="82"/><text x="1.5229%" y="2463.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (82 samples, 0.24%)</title><rect x="1.2729%" y="2437" width="0.2356%" height="15" fill="rgb(238,110,33)" fg:x="443" fg:w="82"/><text x="1.5229%" y="2447.50"></text></g><g><title>aptos_types::transaction::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::Transaction&gt;::serialize (82 samples, 0.24%)</title><rect x="1.2729%" y="2421" width="0.2356%" height="15" fill="rgb(233,195,10)" fg:x="443" fg:w="82"/><text x="1.5229%" y="2431.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (82 samples, 0.24%)</title><rect x="1.2729%" y="2405" width="0.2356%" height="15" fill="rgb(254,105,3)" fg:x="443" fg:w="82"/><text x="1.5229%" y="2415.50"></text></g><g><title>aptos_types::transaction::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::SignedTransaction&gt;::serialize (82 samples, 0.24%)</title><rect x="1.2729%" y="2389" width="0.2356%" height="15" fill="rgb(221,225,9)" fg:x="443" fg:w="82"/><text x="1.5229%" y="2399.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (82 samples, 0.24%)</title><rect x="1.2729%" y="2373" width="0.2356%" height="15" fill="rgb(224,227,45)" fg:x="443" fg:w="82"/><text x="1.5229%" y="2383.50"></text></g><g><title>aptos_types::transaction::authenticator::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::authenticator::TransactionAuthenticator&gt;::serialize (28 samples, 0.08%)</title><rect x="1.4281%" y="2357" width="0.0805%" height="15" fill="rgb(229,198,43)" fg:x="497" fg:w="28"/><text x="1.6781%" y="2367.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStructVariant&gt;::serialize_field (27 samples, 0.08%)</title><rect x="1.4310%" y="2341" width="0.0776%" height="15" fill="rgb(206,209,35)" fg:x="498" fg:w="27"/><text x="1.6810%" y="2351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (7 samples, 0.02%)</title><rect x="1.5143%" y="2453" width="0.0201%" height="15" fill="rgb(245,195,53)" fg:x="527" fg:w="7"/><text x="1.7643%" y="2463.50"></text></g><g><title>core::ptr::write (6 samples, 0.02%)</title><rect x="1.5172%" y="2437" width="0.0172%" height="15" fill="rgb(240,92,26)" fg:x="528" fg:w="6"/><text x="1.7672%" y="2447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (7 samples, 0.02%)</title><rect x="1.5373%" y="2133" width="0.0201%" height="15" fill="rgb(207,40,23)" fg:x="535" fg:w="7"/><text x="1.7873%" y="2143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (7 samples, 0.02%)</title><rect x="1.5373%" y="2117" width="0.0201%" height="15" fill="rgb(223,111,35)" fg:x="535" fg:w="7"/><text x="1.7873%" y="2127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.02%)</title><rect x="1.5401%" y="2101" width="0.0172%" height="15" fill="rgb(229,147,28)" fg:x="536" fg:w="6"/><text x="1.7901%" y="2111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.01%)</title><rect x="1.5430%" y="2085" width="0.0144%" height="15" fill="rgb(211,29,28)" fg:x="537" fg:w="5"/><text x="1.7930%" y="2095.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.01%)</title><rect x="1.5430%" y="2069" width="0.0144%" height="15" fill="rgb(228,72,33)" fg:x="537" fg:w="5"/><text x="1.7930%" y="2079.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (5 samples, 0.01%)</title><rect x="1.5430%" y="2053" width="0.0144%" height="15" fill="rgb(205,214,31)" fg:x="537" fg:w="5"/><text x="1.7930%" y="2063.50"></text></g><g><title>alloc::alloc::Global::grow_impl (5 samples, 0.01%)</title><rect x="1.5430%" y="2037" width="0.0144%" height="15" fill="rgb(224,111,15)" fg:x="537" fg:w="5"/><text x="1.7930%" y="2047.50"></text></g><g><title>alloc::alloc::realloc (5 samples, 0.01%)</title><rect x="1.5430%" y="2021" width="0.0144%" height="15" fill="rgb(253,21,26)" fg:x="537" fg:w="5"/><text x="1.7930%" y="2031.50"></text></g><g><title>rallocx (4 samples, 0.01%)</title><rect x="1.5459%" y="2005" width="0.0115%" height="15" fill="rgb(245,139,43)" fg:x="538" fg:w="4"/><text x="1.7959%" y="2015.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (8 samples, 0.02%)</title><rect x="1.5373%" y="2309" width="0.0230%" height="15" fill="rgb(252,170,7)" fg:x="535" fg:w="8"/><text x="1.7873%" y="2319.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (8 samples, 0.02%)</title><rect x="1.5373%" y="2293" width="0.0230%" height="15" fill="rgb(231,118,14)" fg:x="535" fg:w="8"/><text x="1.7873%" y="2303.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (8 samples, 0.02%)</title><rect x="1.5373%" y="2277" width="0.0230%" height="15" fill="rgb(238,83,0)" fg:x="535" fg:w="8"/><text x="1.7873%" y="2287.50"></text></g><g><title> 32]&gt;::serialize (8 samples, 0.02%)</title><rect x="1.5373%" y="2261" width="0.0230%" height="15" fill="rgb(221,39,39)" fg:x="535" fg:w="8"/><text x="1.7873%" y="2271.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (8 samples, 0.02%)</title><rect x="1.5373%" y="2245" width="0.0230%" height="15" fill="rgb(222,119,46)" fg:x="535" fg:w="8"/><text x="1.7873%" y="2255.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (8 samples, 0.02%)</title><rect x="1.5373%" y="2229" width="0.0230%" height="15" fill="rgb(222,165,49)" fg:x="535" fg:w="8"/><text x="1.7873%" y="2239.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (8 samples, 0.02%)</title><rect x="1.5373%" y="2213" width="0.0230%" height="15" fill="rgb(219,113,52)" fg:x="535" fg:w="8"/><text x="1.7873%" y="2223.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (8 samples, 0.02%)</title><rect x="1.5373%" y="2197" width="0.0230%" height="15" fill="rgb(214,7,15)" fg:x="535" fg:w="8"/><text x="1.7873%" y="2207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (8 samples, 0.02%)</title><rect x="1.5373%" y="2181" width="0.0230%" height="15" fill="rgb(235,32,4)" fg:x="535" fg:w="8"/><text x="1.7873%" y="2191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (8 samples, 0.02%)</title><rect x="1.5373%" y="2165" width="0.0230%" height="15" fill="rgb(238,90,54)" fg:x="535" fg:w="8"/><text x="1.7873%" y="2175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (8 samples, 0.02%)</title><rect x="1.5373%" y="2149" width="0.0230%" height="15" fill="rgb(213,208,19)" fg:x="535" fg:w="8"/><text x="1.7873%" y="2159.50"></text></g><g><title>aptos_types::transaction::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::RawTransaction&gt;::serialize (14 samples, 0.04%)</title><rect x="1.5373%" y="2341" width="0.0402%" height="15" fill="rgb(233,156,4)" fg:x="535" fg:w="14"/><text x="1.7873%" y="2351.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (14 samples, 0.04%)</title><rect x="1.5373%" y="2325" width="0.0402%" height="15" fill="rgb(207,194,5)" fg:x="535" fg:w="14"/><text x="1.7873%" y="2335.50"></text></g><g><title>aptos_types::transaction::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::TransactionPayload&gt;::serialize (6 samples, 0.02%)</title><rect x="1.5603%" y="2309" width="0.0172%" height="15" fill="rgb(206,111,30)" fg:x="543" fg:w="6"/><text x="1.8103%" y="2319.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (6 samples, 0.02%)</title><rect x="1.5603%" y="2293" width="0.0172%" height="15" fill="rgb(243,70,54)" fg:x="543" fg:w="6"/><text x="1.8103%" y="2303.50"></text></g><g><title>aptos_types::transaction::ethereum::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::ethereum::EthTransactionPayload&gt;::serialize (6 samples, 0.02%)</title><rect x="1.5603%" y="2277" width="0.0172%" height="15" fill="rgb(242,28,8)" fg:x="543" fg:w="6"/><text x="1.8103%" y="2287.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.02%)</title><rect x="1.5603%" y="2261" width="0.0172%" height="15" fill="rgb(219,106,18)" fg:x="543" fg:w="6"/><text x="1.8103%" y="2271.50"></text></g><g><title>aptos_types::transaction::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::SignedTransaction&gt;::serialize (18 samples, 0.05%)</title><rect x="1.5373%" y="2373" width="0.0517%" height="15" fill="rgb(244,222,10)" fg:x="535" fg:w="18"/><text x="1.7873%" y="2383.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (18 samples, 0.05%)</title><rect x="1.5373%" y="2357" width="0.0517%" height="15" fill="rgb(236,179,52)" fg:x="535" fg:w="18"/><text x="1.7873%" y="2367.50"></text></g><g><title>aptos_types::transaction::authenticator::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::authenticator::TransactionAuthenticator&gt;::serialize (4 samples, 0.01%)</title><rect x="1.5775%" y="2341" width="0.0115%" height="15" fill="rgb(213,23,39)" fg:x="549" fg:w="4"/><text x="1.8275%" y="2351.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStructVariant&gt;::serialize_field (4 samples, 0.01%)</title><rect x="1.5775%" y="2325" width="0.0115%" height="15" fill="rgb(238,48,10)" fg:x="549" fg:w="4"/><text x="1.8275%" y="2335.50"></text></g><g><title>aptos_db::schema::transaction::&lt;impl aptos_schemadb::schema::ValueCodec&lt;aptos_db::schema::transaction::TransactionSchema&gt; for aptos_types::transaction::Transaction&gt;::encode_value (20 samples, 0.06%)</title><rect x="1.5344%" y="2453" width="0.0575%" height="15" fill="rgb(251,196,23)" fg:x="534" fg:w="20"/><text x="1.7844%" y="2463.50"></text></g><g><title>bcs::ser::to_bytes (19 samples, 0.05%)</title><rect x="1.5373%" y="2437" width="0.0546%" height="15" fill="rgb(250,152,24)" fg:x="535" fg:w="19"/><text x="1.7873%" y="2447.50"></text></g><g><title>bcs::ser::serialize_into (19 samples, 0.05%)</title><rect x="1.5373%" y="2421" width="0.0546%" height="15" fill="rgb(209,150,17)" fg:x="535" fg:w="19"/><text x="1.7873%" y="2431.50"></text></g><g><title>aptos_types::transaction::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::Transaction&gt;::serialize (19 samples, 0.05%)</title><rect x="1.5373%" y="2405" width="0.0546%" height="15" fill="rgb(234,202,34)" fg:x="535" fg:w="19"/><text x="1.7873%" y="2415.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (19 samples, 0.05%)</title><rect x="1.5373%" y="2389" width="0.0546%" height="15" fill="rgb(253,148,53)" fg:x="535" fg:w="19"/><text x="1.7873%" y="2399.50"></text></g><g><title>aptos_infallible::mutex::Mutex&lt;T&gt;::lock (4 samples, 0.01%)</title><rect x="1.6034%" y="2453" width="0.0115%" height="15" fill="rgb(218,129,16)" fg:x="558" fg:w="4"/><text x="1.8534%" y="2463.50"></text></g><g><title>prometheus::histogram::Histogram::observe (9 samples, 0.03%)</title><rect x="1.6206%" y="2405" width="0.0259%" height="15" fill="rgb(216,85,19)" fg:x="564" fg:w="9"/><text x="1.8706%" y="2415.50"></text></g><g><title>prometheus::histogram::HistogramCore::observe (9 samples, 0.03%)</title><rect x="1.6206%" y="2389" width="0.0259%" height="15" fill="rgb(235,228,7)" fg:x="564" fg:w="9"/><text x="1.8706%" y="2399.50"></text></g><g><title>core::ptr::drop_in_place&lt;prometheus::histogram::HistogramTimer&gt; (15 samples, 0.04%)</title><rect x="1.6148%" y="2453" width="0.0431%" height="15" fill="rgb(245,175,0)" fg:x="562" fg:w="15"/><text x="1.8648%" y="2463.50"></text></g><g><title>&lt;prometheus::histogram::HistogramTimer as core::ops::drop::Drop&gt;::drop (15 samples, 0.04%)</title><rect x="1.6148%" y="2437" width="0.0431%" height="15" fill="rgb(208,168,36)" fg:x="562" fg:w="15"/><text x="1.8648%" y="2447.50"></text></g><g><title>prometheus::histogram::HistogramTimer::observe (13 samples, 0.04%)</title><rect x="1.6206%" y="2421" width="0.0374%" height="15" fill="rgb(246,171,24)" fg:x="564" fg:w="13"/><text x="1.8706%" y="2431.50"></text></g><g><title>prometheus::histogram::Instant::elapsed_sec (4 samples, 0.01%)</title><rect x="1.6465%" y="2405" width="0.0115%" height="15" fill="rgb(215,142,24)" fg:x="573" fg:w="4"/><text x="1.8965%" y="2415.50"></text></g><g><title>hashbrown::map::make_hash (5 samples, 0.01%)</title><rect x="1.6723%" y="2357" width="0.0144%" height="15" fill="rgb(250,187,7)" fg:x="582" fg:w="5"/><text x="1.9223%" y="2367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5 samples, 0.01%)</title><rect x="1.6723%" y="2341" width="0.0144%" height="15" fill="rgb(228,66,33)" fg:x="582" fg:w="5"/><text x="1.9223%" y="2351.50"></text></g><g><title>prometheus::vec::MetricVec&lt;T&gt;::with_label_values (11 samples, 0.03%)</title><rect x="1.6580%" y="2453" width="0.0316%" height="15" fill="rgb(234,215,21)" fg:x="577" fg:w="11"/><text x="1.9080%" y="2463.50"></text></g><g><title>prometheus::vec::MetricVec&lt;T&gt;::get_metric_with_label_values (11 samples, 0.03%)</title><rect x="1.6580%" y="2437" width="0.0316%" height="15" fill="rgb(222,191,20)" fg:x="577" fg:w="11"/><text x="1.9080%" y="2447.50"></text></g><g><title>prometheus::vec::MetricVecCore&lt;T&gt;::get_metric_with_label_values (11 samples, 0.03%)</title><rect x="1.6580%" y="2421" width="0.0316%" height="15" fill="rgb(245,79,54)" fg:x="577" fg:w="11"/><text x="1.9080%" y="2431.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (6 samples, 0.02%)</title><rect x="1.6723%" y="2405" width="0.0172%" height="15" fill="rgb(240,10,37)" fg:x="582" fg:w="6"/><text x="1.9223%" y="2415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (6 samples, 0.02%)</title><rect x="1.6723%" y="2389" width="0.0172%" height="15" fill="rgb(214,192,32)" fg:x="582" fg:w="6"/><text x="1.9223%" y="2399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (6 samples, 0.02%)</title><rect x="1.6723%" y="2373" width="0.0172%" height="15" fill="rgb(209,36,54)" fg:x="582" fg:w="6"/><text x="1.9223%" y="2383.50"></text></g><g><title>hashbrown::map::make_hash (8 samples, 0.02%)</title><rect x="1.6896%" y="2421" width="0.0230%" height="15" fill="rgb(220,10,11)" fg:x="588" fg:w="8"/><text x="1.9396%" y="2431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (8 samples, 0.02%)</title><rect x="1.6896%" y="2405" width="0.0230%" height="15" fill="rgb(221,106,17)" fg:x="588" fg:w="8"/><text x="1.9396%" y="2415.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (4 samples, 0.01%)</title><rect x="1.7011%" y="2389" width="0.0115%" height="15" fill="rgb(251,142,44)" fg:x="592" fg:w="4"/><text x="1.9511%" y="2399.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (4 samples, 0.01%)</title><rect x="1.7011%" y="2373" width="0.0115%" height="15" fill="rgb(238,13,15)" fg:x="592" fg:w="4"/><text x="1.9511%" y="2383.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (4 samples, 0.01%)</title><rect x="1.7011%" y="2357" width="0.0115%" height="15" fill="rgb(208,107,27)" fg:x="592" fg:w="4"/><text x="1.9511%" y="2367.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (4 samples, 0.01%)</title><rect x="1.7011%" y="2341" width="0.0115%" height="15" fill="rgb(205,136,37)" fg:x="592" fg:w="4"/><text x="1.9511%" y="2351.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (4 samples, 0.01%)</title><rect x="1.7011%" y="2325" width="0.0115%" height="15" fill="rgb(250,205,27)" fg:x="592" fg:w="4"/><text x="1.9511%" y="2335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (4 samples, 0.01%)</title><rect x="1.7011%" y="2309" width="0.0115%" height="15" fill="rgb(210,80,43)" fg:x="592" fg:w="4"/><text x="1.9511%" y="2319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (4 samples, 0.01%)</title><rect x="1.7154%" y="2389" width="0.0115%" height="15" fill="rgb(247,160,36)" fg:x="597" fg:w="4"/><text x="1.9654%" y="2399.50"></text></g><g><title>aptos_schemadb::SchemaBatch::put (78 samples, 0.22%)</title><rect x="1.5085%" y="2469" width="0.2241%" height="15" fill="rgb(234,13,49)" fg:x="525" fg:w="78"/><text x="1.7585%" y="2479.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (15 samples, 0.04%)</title><rect x="1.6896%" y="2453" width="0.0431%" height="15" fill="rgb(234,122,0)" fg:x="588" fg:w="15"/><text x="1.9396%" y="2463.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (15 samples, 0.04%)</title><rect x="1.6896%" y="2437" width="0.0431%" height="15" fill="rgb(207,146,38)" fg:x="588" fg:w="15"/><text x="1.9396%" y="2447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (7 samples, 0.02%)</title><rect x="1.7125%" y="2421" width="0.0201%" height="15" fill="rgb(207,177,25)" fg:x="596" fg:w="7"/><text x="1.9625%" y="2431.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (7 samples, 0.02%)</title><rect x="1.7125%" y="2405" width="0.0201%" height="15" fill="rgb(211,178,42)" fg:x="596" fg:w="7"/><text x="1.9625%" y="2415.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (27 samples, 0.08%)</title><rect x="1.7499%" y="2389" width="0.0776%" height="15" fill="rgb(230,69,54)" fg:x="609" fg:w="27"/><text x="1.9999%" y="2399.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (27 samples, 0.08%)</title><rect x="1.7499%" y="2373" width="0.0776%" height="15" fill="rgb(214,135,41)" fg:x="609" fg:w="27"/><text x="1.9999%" y="2383.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (27 samples, 0.08%)</title><rect x="1.7499%" y="2357" width="0.0776%" height="15" fill="rgb(237,67,25)" fg:x="609" fg:w="27"/><text x="1.9999%" y="2367.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (27 samples, 0.08%)</title><rect x="1.7499%" y="2341" width="0.0776%" height="15" fill="rgb(222,189,50)" fg:x="609" fg:w="27"/><text x="1.9999%" y="2351.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (27 samples, 0.08%)</title><rect x="1.7499%" y="2325" width="0.0776%" height="15" fill="rgb(245,148,34)" fg:x="609" fg:w="27"/><text x="1.9999%" y="2335.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (27 samples, 0.08%)</title><rect x="1.7499%" y="2309" width="0.0776%" height="15" fill="rgb(222,29,6)" fg:x="609" fg:w="27"/><text x="1.9999%" y="2319.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (27 samples, 0.08%)</title><rect x="1.7499%" y="2293" width="0.0776%" height="15" fill="rgb(221,189,43)" fg:x="609" fg:w="27"/><text x="1.9999%" y="2303.50"></text></g><g><title>keccak_hash::keccak (54 samples, 0.16%)</title><rect x="1.7413%" y="2421" width="0.1552%" height="15" fill="rgb(207,36,27)" fg:x="606" fg:w="54"/><text x="1.9913%" y="2431.50"></text></g><g><title>keccak_hash::write_keccak (53 samples, 0.15%)</title><rect x="1.7442%" y="2405" width="0.1523%" height="15" fill="rgb(217,90,24)" fg:x="607" fg:w="53"/><text x="1.9942%" y="2415.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (24 samples, 0.07%)</title><rect x="1.8275%" y="2389" width="0.0690%" height="15" fill="rgb(224,66,35)" fg:x="636" fg:w="24"/><text x="2.0775%" y="2399.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (24 samples, 0.07%)</title><rect x="1.8275%" y="2373" width="0.0690%" height="15" fill="rgb(221,13,50)" fg:x="636" fg:w="24"/><text x="2.0775%" y="2383.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (24 samples, 0.07%)</title><rect x="1.8275%" y="2357" width="0.0690%" height="15" fill="rgb(236,68,49)" fg:x="636" fg:w="24"/><text x="2.0775%" y="2367.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (24 samples, 0.07%)</title><rect x="1.8275%" y="2341" width="0.0690%" height="15" fill="rgb(229,146,28)" fg:x="636" fg:w="24"/><text x="2.0775%" y="2351.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (5 samples, 0.01%)</title><rect x="1.9252%" y="2261" width="0.0144%" height="15" fill="rgb(225,31,38)" fg:x="670" fg:w="5"/><text x="2.1752%" y="2271.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve (7 samples, 0.02%)</title><rect x="1.9453%" y="2245" width="0.0201%" height="15" fill="rgb(250,208,3)" fg:x="677" fg:w="7"/><text x="2.1953%" y="2255.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::put_u8 (16 samples, 0.05%)</title><rect x="1.9252%" y="2277" width="0.0460%" height="15" fill="rgb(246,54,23)" fg:x="670" fg:w="16"/><text x="2.1752%" y="2287.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (11 samples, 0.03%)</title><rect x="1.9395%" y="2261" width="0.0316%" height="15" fill="rgb(243,76,11)" fg:x="675" fg:w="11"/><text x="2.1895%" y="2271.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::iter::traits::collect::Extend&lt;u8&gt;&gt;::extend (21 samples, 0.06%)</title><rect x="1.9166%" y="2293" width="0.0603%" height="15" fill="rgb(245,21,50)" fg:x="667" fg:w="21"/><text x="2.1666%" y="2303.50"></text></g><g><title>primitive_types::rlp::&lt;impl rlp::traits::Encodable for primitive_types::U256&gt;::rlp_append (26 samples, 0.07%)</title><rect x="1.9108%" y="2341" width="0.0747%" height="15" fill="rgb(228,9,43)" fg:x="665" fg:w="26"/><text x="2.1608%" y="2351.50"></text></g><g><title>rlp::stream::BasicEncoder::encode_value (24 samples, 0.07%)</title><rect x="1.9166%" y="2325" width="0.0690%" height="15" fill="rgb(208,100,47)" fg:x="667" fg:w="24"/><text x="2.1666%" y="2335.50"></text></g><g><title>rlp::stream::BasicEncoder::encode_iter (24 samples, 0.07%)</title><rect x="1.9166%" y="2309" width="0.0690%" height="15" fill="rgb(232,26,8)" fg:x="667" fg:w="24"/><text x="2.1666%" y="2319.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::iter::traits::collect::Extend&lt;u8&gt;&gt;::extend (7 samples, 0.02%)</title><rect x="1.9884%" y="2293" width="0.0201%" height="15" fill="rgb(216,166,38)" fg:x="692" fg:w="7"/><text x="2.2384%" y="2303.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::put_u8 (7 samples, 0.02%)</title><rect x="1.9884%" y="2277" width="0.0201%" height="15" fill="rgb(251,202,51)" fg:x="692" fg:w="7"/><text x="2.2384%" y="2287.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (4 samples, 0.01%)</title><rect x="1.9970%" y="2261" width="0.0115%" height="15" fill="rgb(254,216,34)" fg:x="695" fg:w="4"/><text x="2.2470%" y="2271.50"></text></g><g><title>rlp::impls::&lt;impl rlp::traits::Encodable for alloc::vec::Vec&lt;u8&gt;&gt;::rlp_append (9 samples, 0.03%)</title><rect x="1.9855%" y="2341" width="0.0259%" height="15" fill="rgb(251,32,27)" fg:x="691" fg:w="9"/><text x="2.2355%" y="2351.50"></text></g><g><title>rlp::stream::BasicEncoder::encode_value (8 samples, 0.02%)</title><rect x="1.9884%" y="2325" width="0.0230%" height="15" fill="rgb(208,127,28)" fg:x="692" fg:w="8"/><text x="2.2384%" y="2335.50"></text></g><g><title>rlp::stream::BasicEncoder::encode_iter (8 samples, 0.02%)</title><rect x="1.9884%" y="2309" width="0.0230%" height="15" fill="rgb(224,137,22)" fg:x="692" fg:w="8"/><text x="2.2384%" y="2319.50"></text></g><g><title>rlp::stream::RlpStream::append (43 samples, 0.12%)</title><rect x="1.9051%" y="2357" width="0.1236%" height="15" fill="rgb(254,70,32)" fg:x="663" fg:w="43"/><text x="2.1551%" y="2367.50"></text></g><g><title>rlp::stream::RlpStream::note_appended (4 samples, 0.01%)</title><rect x="2.0171%" y="2341" width="0.0115%" height="15" fill="rgb(229,75,37)" fg:x="702" fg:w="4"/><text x="2.2671%" y="2351.50"></text></g><g><title>&lt;primitives::transaction::TransactionWithSignature as rlp::traits::Encodable&gt;::rlp_append (49 samples, 0.14%)</title><rect x="1.8993%" y="2405" width="0.1408%" height="15" fill="rgb(252,64,23)" fg:x="661" fg:w="49"/><text x="2.1493%" y="2415.50"></text></g><g><title>rlp::stream::RlpStream::append_internal (49 samples, 0.14%)</title><rect x="1.8993%" y="2389" width="0.1408%" height="15" fill="rgb(232,162,48)" fg:x="661" fg:w="49"/><text x="2.1493%" y="2399.50"></text></g><g><title>&lt;primitives::transaction::TransactionWithSignatureSerializePart as rlp::traits::Encodable&gt;::rlp_append (48 samples, 0.14%)</title><rect x="1.9022%" y="2373" width="0.1379%" height="15" fill="rgb(246,160,12)" fg:x="662" fg:w="48"/><text x="2.1522%" y="2383.50"></text></g><g><title>rlp::stream::RlpStream::begin_list (4 samples, 0.01%)</title><rect x="2.0286%" y="2357" width="0.0115%" height="15" fill="rgb(247,166,0)" fg:x="706" fg:w="4"/><text x="2.2786%" y="2367.50"></text></g><g><title>arena_bin_malloc_hard (5 samples, 0.01%)</title><rect x="2.0459%" y="2117" width="0.0144%" height="15" fill="rgb(249,219,21)" fg:x="712" fg:w="5"/><text x="2.2959%" y="2127.50"></text></g><g><title>arena_bin_nonfull_slab_get (5 samples, 0.01%)</title><rect x="2.0459%" y="2101" width="0.0144%" height="15" fill="rgb(205,209,3)" fg:x="712" fg:w="5"/><text x="2.2959%" y="2111.50"></text></g><g><title>arena_slab_alloc (5 samples, 0.01%)</title><rect x="2.0459%" y="2085" width="0.0144%" height="15" fill="rgb(243,44,1)" fg:x="712" fg:w="5"/><text x="2.2959%" y="2095.50"></text></g><g><title>extent_recycle (4 samples, 0.01%)</title><rect x="2.0487%" y="2069" width="0.0115%" height="15" fill="rgb(206,159,16)" fg:x="713" fg:w="4"/><text x="2.2987%" y="2079.50"></text></g><g><title>aptos_types::transaction::SignedTransaction::eth_transaction (116 samples, 0.33%)</title><rect x="1.7327%" y="2469" width="0.3333%" height="15" fill="rgb(244,77,30)" fg:x="603" fg:w="116"/><text x="1.9827%" y="2479.50"></text></g><g><title>primitives::transaction::Transaction::with_signature (116 samples, 0.33%)</title><rect x="1.7327%" y="2453" width="0.3333%" height="15" fill="rgb(218,69,12)" fg:x="603" fg:w="116"/><text x="1.9827%" y="2463.50"></text></g><g><title>primitives::transaction::TransactionWithSignature::compute_hash (115 samples, 0.33%)</title><rect x="1.7355%" y="2437" width="0.3304%" height="15" fill="rgb(212,87,7)" fg:x="604" fg:w="115"/><text x="1.9855%" y="2447.50"></text></g><g><title>rlp::traits::Encodable::rlp_bytes (59 samples, 0.17%)</title><rect x="1.8964%" y="2421" width="0.1695%" height="15" fill="rgb(245,114,25)" fg:x="660" fg:w="59"/><text x="2.1464%" y="2431.50"></text></g><g><title>rlp::stream::RlpStream::new (9 samples, 0.03%)</title><rect x="2.0401%" y="2405" width="0.0259%" height="15" fill="rgb(210,61,42)" fg:x="710" fg:w="9"/><text x="2.2901%" y="2415.50"></text></g><g><title>rlp::stream::RlpStream::new_with_buffer (7 samples, 0.02%)</title><rect x="2.0459%" y="2389" width="0.0201%" height="15" fill="rgb(211,52,33)" fg:x="712" fg:w="7"/><text x="2.2959%" y="2399.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (7 samples, 0.02%)</title><rect x="2.0459%" y="2373" width="0.0201%" height="15" fill="rgb(234,58,33)" fg:x="712" fg:w="7"/><text x="2.2959%" y="2383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7 samples, 0.02%)</title><rect x="2.0459%" y="2357" width="0.0201%" height="15" fill="rgb(220,115,36)" fg:x="712" fg:w="7"/><text x="2.2959%" y="2367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7 samples, 0.02%)</title><rect x="2.0459%" y="2341" width="0.0201%" height="15" fill="rgb(243,153,54)" fg:x="712" fg:w="7"/><text x="2.2959%" y="2351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (7 samples, 0.02%)</title><rect x="2.0459%" y="2325" width="0.0201%" height="15" fill="rgb(251,47,18)" fg:x="712" fg:w="7"/><text x="2.2959%" y="2335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.02%)</title><rect x="2.0459%" y="2309" width="0.0201%" height="15" fill="rgb(242,102,42)" fg:x="712" fg:w="7"/><text x="2.2959%" y="2319.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.02%)</title><rect x="2.0459%" y="2293" width="0.0201%" height="15" fill="rgb(234,31,38)" fg:x="712" fg:w="7"/><text x="2.2959%" y="2303.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.02%)</title><rect x="2.0459%" y="2277" width="0.0201%" height="15" fill="rgb(221,117,51)" fg:x="712" fg:w="7"/><text x="2.2959%" y="2287.50"></text></g><g><title>mallocx (7 samples, 0.02%)</title><rect x="2.0459%" y="2261" width="0.0201%" height="15" fill="rgb(212,20,18)" fg:x="712" fg:w="7"/><text x="2.2959%" y="2271.50"></text></g><g><title>imalloc (7 samples, 0.02%)</title><rect x="2.0459%" y="2245" width="0.0201%" height="15" fill="rgb(245,133,36)" fg:x="712" fg:w="7"/><text x="2.2959%" y="2255.50"></text></g><g><title>imalloc_body (7 samples, 0.02%)</title><rect x="2.0459%" y="2229" width="0.0201%" height="15" fill="rgb(212,6,19)" fg:x="712" fg:w="7"/><text x="2.2959%" y="2239.50"></text></g><g><title>imalloc_no_sample (7 samples, 0.02%)</title><rect x="2.0459%" y="2213" width="0.0201%" height="15" fill="rgb(218,1,36)" fg:x="712" fg:w="7"/><text x="2.2959%" y="2223.50"></text></g><g><title>iallocztm (7 samples, 0.02%)</title><rect x="2.0459%" y="2197" width="0.0201%" height="15" fill="rgb(246,84,54)" fg:x="712" fg:w="7"/><text x="2.2959%" y="2207.50"></text></g><g><title>arena_malloc (7 samples, 0.02%)</title><rect x="2.0459%" y="2181" width="0.0201%" height="15" fill="rgb(242,110,6)" fg:x="712" fg:w="7"/><text x="2.2959%" y="2191.50"></text></g><g><title>tcache_alloc_small (7 samples, 0.02%)</title><rect x="2.0459%" y="2165" width="0.0201%" height="15" fill="rgb(214,47,5)" fg:x="712" fg:w="7"/><text x="2.2959%" y="2175.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (7 samples, 0.02%)</title><rect x="2.0459%" y="2149" width="0.0201%" height="15" fill="rgb(218,159,25)" fg:x="712" fg:w="7"/><text x="2.2959%" y="2159.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (7 samples, 0.02%)</title><rect x="2.0459%" y="2133" width="0.0201%" height="15" fill="rgb(215,211,28)" fg:x="712" fg:w="7"/><text x="2.2959%" y="2143.50"></text></g><g><title>aptos_db::transaction_store::TransactionStore::put_transaction (302 samples, 0.87%)</title><rect x="1.2068%" y="2485" width="0.8678%" height="15" fill="rgb(238,59,32)" fg:x="420" fg:w="302"/><text x="1.4568%" y="2495.50"></text></g><g><title>core::ptr::drop_in_place&lt;bcs::ser::MapSerializer&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (6 samples, 0.02%)</title><rect x="2.0832%" y="2261" width="0.0172%" height="15" fill="rgb(226,82,3)" fg:x="725" fg:w="6"/><text x="2.3332%" y="2271.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;)&gt;&gt; (6 samples, 0.02%)</title><rect x="2.0832%" y="2245" width="0.0172%" height="15" fill="rgb(240,164,32)" fg:x="725" fg:w="6"/><text x="2.3332%" y="2255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="2.0832%" y="2229" width="0.0172%" height="15" fill="rgb(232,46,7)" fg:x="725" fg:w="6"/><text x="2.3332%" y="2239.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;)]&gt; (6 samples, 0.02%)</title><rect x="2.0832%" y="2213" width="0.0172%" height="15" fill="rgb(229,129,53)" fg:x="725" fg:w="6"/><text x="2.3332%" y="2223.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::vec::Vec&lt;u8&gt;,alloc::vec::Vec&lt;u8&gt;)&gt; (6 samples, 0.02%)</title><rect x="2.0832%" y="2197" width="0.0172%" height="15" fill="rgb(234,188,29)" fg:x="725" fg:w="6"/><text x="2.3332%" y="2207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (6 samples, 0.02%)</title><rect x="2.0832%" y="2181" width="0.0172%" height="15" fill="rgb(246,141,4)" fg:x="725" fg:w="6"/><text x="2.3332%" y="2191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (6 samples, 0.02%)</title><rect x="2.0832%" y="2165" width="0.0172%" height="15" fill="rgb(229,23,39)" fg:x="725" fg:w="6"/><text x="2.3332%" y="2175.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="2.0832%" y="2149" width="0.0172%" height="15" fill="rgb(206,12,3)" fg:x="725" fg:w="6"/><text x="2.3332%" y="2159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.02%)</title><rect x="2.0832%" y="2133" width="0.0172%" height="15" fill="rgb(252,226,20)" fg:x="725" fg:w="6"/><text x="2.3332%" y="2143.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.02%)</title><rect x="2.0832%" y="2117" width="0.0172%" height="15" fill="rgb(216,123,35)" fg:x="725" fg:w="6"/><text x="2.3332%" y="2127.50"></text></g><g><title>sdallocx (5 samples, 0.01%)</title><rect x="2.0861%" y="2101" width="0.0144%" height="15" fill="rgb(212,68,40)" fg:x="726" fg:w="5"/><text x="2.3361%" y="2111.50"></text></g><g><title>_rjem_je_extent_alloc (7 samples, 0.02%)</title><rect x="2.1407%" y="1845" width="0.0201%" height="15" fill="rgb(254,125,32)" fg:x="745" fg:w="7"/><text x="2.3907%" y="1855.50"></text></g><g><title>_rjem_je_extent_avail_remove (6 samples, 0.02%)</title><rect x="2.1436%" y="1829" width="0.0172%" height="15" fill="rgb(253,97,22)" fg:x="746" fg:w="6"/><text x="2.3936%" y="1839.50"></text></g><g><title>_rjem_je_extent_alloc_wrapper (14 samples, 0.04%)</title><rect x="2.1292%" y="1941" width="0.0402%" height="15" fill="rgb(241,101,14)" fg:x="741" fg:w="14"/><text x="2.3792%" y="1951.50"></text></g><g><title>extent_alloc_retained (14 samples, 0.04%)</title><rect x="2.1292%" y="1925" width="0.0402%" height="15" fill="rgb(238,103,29)" fg:x="741" fg:w="14"/><text x="2.3792%" y="1935.50"></text></g><g><title>extent_recycle (13 samples, 0.04%)</title><rect x="2.1321%" y="1909" width="0.0374%" height="15" fill="rgb(233,195,47)" fg:x="742" fg:w="13"/><text x="2.3821%" y="1919.50"></text></g><g><title>extent_recycle_split (11 samples, 0.03%)</title><rect x="2.1378%" y="1893" width="0.0316%" height="15" fill="rgb(246,218,30)" fg:x="744" fg:w="11"/><text x="2.3878%" y="1903.50"></text></g><g><title>extent_split_interior (10 samples, 0.03%)</title><rect x="2.1407%" y="1877" width="0.0287%" height="15" fill="rgb(219,145,47)" fg:x="745" fg:w="10"/><text x="2.3907%" y="1887.50"></text></g><g><title>extent_split_impl (10 samples, 0.03%)</title><rect x="2.1407%" y="1861" width="0.0287%" height="15" fill="rgb(243,12,26)" fg:x="745" fg:w="10"/><text x="2.3907%" y="1871.50"></text></g><g><title>arena_malloc (17 samples, 0.05%)</title><rect x="2.1263%" y="2005" width="0.0488%" height="15" fill="rgb(214,87,16)" fg:x="740" fg:w="17"/><text x="2.3763%" y="2015.50"></text></g><g><title>tcache_alloc_large (17 samples, 0.05%)</title><rect x="2.1263%" y="1989" width="0.0488%" height="15" fill="rgb(208,99,42)" fg:x="740" fg:w="17"/><text x="2.3763%" y="1999.50"></text></g><g><title>_rjem_je_large_palloc (17 samples, 0.05%)</title><rect x="2.1263%" y="1973" width="0.0488%" height="15" fill="rgb(253,99,2)" fg:x="740" fg:w="17"/><text x="2.3763%" y="1983.50"></text></g><g><title>_rjem_je_arena_extent_alloc_large (17 samples, 0.05%)</title><rect x="2.1263%" y="1957" width="0.0488%" height="15" fill="rgb(220,168,23)" fg:x="740" fg:w="17"/><text x="2.3763%" y="1967.50"></text></g><g><title>arena_ralloc_move_helper (20 samples, 0.06%)</title><rect x="2.1263%" y="2021" width="0.0575%" height="15" fill="rgb(242,38,24)" fg:x="740" fg:w="20"/><text x="2.3763%" y="2031.50"></text></g><g><title>iralloct (26 samples, 0.07%)</title><rect x="2.1234%" y="2053" width="0.0747%" height="15" fill="rgb(225,182,9)" fg:x="739" fg:w="26"/><text x="2.3734%" y="2063.50"></text></g><g><title>_rjem_je_arena_ralloc (26 samples, 0.07%)</title><rect x="2.1234%" y="2037" width="0.0747%" height="15" fill="rgb(243,178,37)" fg:x="739" fg:w="26"/><text x="2.3734%" y="2047.50"></text></g><g><title>isdalloct (5 samples, 0.01%)</title><rect x="2.1838%" y="2021" width="0.0144%" height="15" fill="rgb(232,139,19)" fg:x="760" fg:w="5"/><text x="2.4338%" y="2031.50"></text></g><g><title>arena_sdalloc (5 samples, 0.01%)</title><rect x="2.1838%" y="2005" width="0.0144%" height="15" fill="rgb(225,201,24)" fg:x="760" fg:w="5"/><text x="2.4338%" y="2015.50"></text></g><g><title>tcache_dalloc_small (5 samples, 0.01%)</title><rect x="2.1838%" y="1989" width="0.0144%" height="15" fill="rgb(221,47,46)" fg:x="760" fg:w="5"/><text x="2.4338%" y="1999.50"></text></g><g><title>&lt;bcs::ser::MapSerializer&lt;W&gt; as serde::ser::SerializeMap&gt;::end (42 samples, 0.12%)</title><rect x="2.0803%" y="2277" width="0.1207%" height="15" fill="rgb(249,23,13)" fg:x="724" fg:w="42"/><text x="2.3303%" y="2287.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (35 samples, 0.10%)</title><rect x="2.1005%" y="2261" width="0.1006%" height="15" fill="rgb(219,9,5)" fg:x="731" fg:w="35"/><text x="2.3505%" y="2271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (35 samples, 0.10%)</title><rect x="2.1005%" y="2245" width="0.1006%" height="15" fill="rgb(254,171,16)" fg:x="731" fg:w="35"/><text x="2.3505%" y="2255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (35 samples, 0.10%)</title><rect x="2.1005%" y="2229" width="0.1006%" height="15" fill="rgb(230,171,20)" fg:x="731" fg:w="35"/><text x="2.3505%" y="2239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (35 samples, 0.10%)</title><rect x="2.1005%" y="2213" width="0.1006%" height="15" fill="rgb(210,71,41)" fg:x="731" fg:w="35"/><text x="2.3505%" y="2223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (30 samples, 0.09%)</title><rect x="2.1148%" y="2197" width="0.0862%" height="15" fill="rgb(206,173,20)" fg:x="736" fg:w="30"/><text x="2.3648%" y="2207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (30 samples, 0.09%)</title><rect x="2.1148%" y="2181" width="0.0862%" height="15" fill="rgb(233,88,34)" fg:x="736" fg:w="30"/><text x="2.3648%" y="2191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (30 samples, 0.09%)</title><rect x="2.1148%" y="2165" width="0.0862%" height="15" fill="rgb(223,209,46)" fg:x="736" fg:w="30"/><text x="2.3648%" y="2175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (30 samples, 0.09%)</title><rect x="2.1148%" y="2149" width="0.0862%" height="15" fill="rgb(250,43,18)" fg:x="736" fg:w="30"/><text x="2.3648%" y="2159.50"></text></g><g><title>alloc::raw_vec::finish_grow (29 samples, 0.08%)</title><rect x="2.1177%" y="2133" width="0.0833%" height="15" fill="rgb(208,13,10)" fg:x="737" fg:w="29"/><text x="2.3677%" y="2143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (29 samples, 0.08%)</title><rect x="2.1177%" y="2117" width="0.0833%" height="15" fill="rgb(212,200,36)" fg:x="737" fg:w="29"/><text x="2.3677%" y="2127.50"></text></g><g><title>alloc::alloc::Global::grow_impl (29 samples, 0.08%)</title><rect x="2.1177%" y="2101" width="0.0833%" height="15" fill="rgb(225,90,30)" fg:x="737" fg:w="29"/><text x="2.3677%" y="2111.50"></text></g><g><title>alloc::alloc::realloc (29 samples, 0.08%)</title><rect x="2.1177%" y="2085" width="0.0833%" height="15" fill="rgb(236,182,39)" fg:x="737" fg:w="29"/><text x="2.3677%" y="2095.50"></text></g><g><title>rallocx (27 samples, 0.08%)</title><rect x="2.1234%" y="2069" width="0.0776%" height="15" fill="rgb(212,144,35)" fg:x="739" fg:w="27"/><text x="2.3734%" y="2079.50"></text></g><g><title>&lt;aptos_types::access_path::_::&lt;impl serde::ser::Serialize for aptos_types::access_path::AccessPath&gt;::serialize::__SerializeWith as serde::ser::Serialize&gt;::serialize (4 samples, 0.01%)</title><rect x="2.2125%" y="2101" width="0.0115%" height="15" fill="rgb(228,63,44)" fg:x="770" fg:w="4"/><text x="2.4625%" y="2111.50"></text></g><g><title>serde_bytes::serialize (4 samples, 0.01%)</title><rect x="2.2125%" y="2085" width="0.0115%" height="15" fill="rgb(228,109,6)" fg:x="770" fg:w="4"/><text x="2.4625%" y="2095.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as serde_bytes::ser::Serialize&gt;::serialize (4 samples, 0.01%)</title><rect x="2.2125%" y="2069" width="0.0115%" height="15" fill="rgb(238,117,24)" fg:x="770" fg:w="4"/><text x="2.4625%" y="2079.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_bytes (4 samples, 0.01%)</title><rect x="2.2125%" y="2053" width="0.0115%" height="15" fill="rgb(242,26,26)" fg:x="770" fg:w="4"/><text x="2.4625%" y="2063.50"></text></g><g><title>arena_ralloc_move_helper (7 samples, 0.02%)</title><rect x="2.2844%" y="1749" width="0.0201%" height="15" fill="rgb(221,92,48)" fg:x="795" fg:w="7"/><text x="2.5344%" y="1759.50"></text></g><g><title>ipalloct (7 samples, 0.02%)</title><rect x="2.2844%" y="1733" width="0.0201%" height="15" fill="rgb(209,209,32)" fg:x="795" fg:w="7"/><text x="2.5344%" y="1743.50"></text></g><g><title>ipallocztm (7 samples, 0.02%)</title><rect x="2.2844%" y="1717" width="0.0201%" height="15" fill="rgb(221,70,22)" fg:x="795" fg:w="7"/><text x="2.5344%" y="1727.50"></text></g><g><title>_rjem_je_arena_palloc (7 samples, 0.02%)</title><rect x="2.2844%" y="1701" width="0.0201%" height="15" fill="rgb(248,145,5)" fg:x="795" fg:w="7"/><text x="2.5344%" y="1711.50"></text></g><g><title>_rjem_je_arena_palloc (7 samples, 0.02%)</title><rect x="2.2844%" y="1685" width="0.0201%" height="15" fill="rgb(226,116,26)" fg:x="795" fg:w="7"/><text x="2.5344%" y="1695.50"></text></g><g><title>arena_malloc (7 samples, 0.02%)</title><rect x="2.2844%" y="1669" width="0.0201%" height="15" fill="rgb(244,5,17)" fg:x="795" fg:w="7"/><text x="2.5344%" y="1679.50"></text></g><g><title>tcache_alloc_small (7 samples, 0.02%)</title><rect x="2.2844%" y="1653" width="0.0201%" height="15" fill="rgb(252,159,33)" fg:x="795" fg:w="7"/><text x="2.5344%" y="1663.50"></text></g><g><title>cache_bin_alloc_easy (4 samples, 0.01%)</title><rect x="2.2930%" y="1637" width="0.0115%" height="15" fill="rgb(206,71,0)" fg:x="798" fg:w="4"/><text x="2.5430%" y="1647.50"></text></g><g><title>iralloct (21 samples, 0.06%)</title><rect x="2.2470%" y="1781" width="0.0603%" height="15" fill="rgb(233,118,54)" fg:x="782" fg:w="21"/><text x="2.4970%" y="1791.50"></text></g><g><title>_rjem_je_arena_ralloc (19 samples, 0.05%)</title><rect x="2.2527%" y="1765" width="0.0546%" height="15" fill="rgb(234,83,48)" fg:x="784" fg:w="19"/><text x="2.5027%" y="1775.50"></text></g><g><title>alloc::raw_vec::finish_grow (27 samples, 0.08%)</title><rect x="2.2384%" y="1861" width="0.0776%" height="15" fill="rgb(228,3,54)" fg:x="779" fg:w="27"/><text x="2.4884%" y="1871.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (25 samples, 0.07%)</title><rect x="2.2441%" y="1845" width="0.0718%" height="15" fill="rgb(226,155,13)" fg:x="781" fg:w="25"/><text x="2.4941%" y="1855.50"></text></g><g><title>alloc::alloc::Global::grow_impl (25 samples, 0.07%)</title><rect x="2.2441%" y="1829" width="0.0718%" height="15" fill="rgb(241,28,37)" fg:x="781" fg:w="25"/><text x="2.4941%" y="1839.50"></text></g><g><title>alloc::alloc::realloc (25 samples, 0.07%)</title><rect x="2.2441%" y="1813" width="0.0718%" height="15" fill="rgb(233,93,10)" fg:x="781" fg:w="25"/><text x="2.4941%" y="1823.50"></text></g><g><title>rallocx (25 samples, 0.07%)</title><rect x="2.2441%" y="1797" width="0.0718%" height="15" fill="rgb(225,113,19)" fg:x="781" fg:w="25"/><text x="2.4941%" y="1807.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (33 samples, 0.09%)</title><rect x="2.2240%" y="1925" width="0.0948%" height="15" fill="rgb(241,2,18)" fg:x="774" fg:w="33"/><text x="2.4740%" y="1935.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (33 samples, 0.09%)</title><rect x="2.2240%" y="1909" width="0.0948%" height="15" fill="rgb(228,207,21)" fg:x="774" fg:w="33"/><text x="2.4740%" y="1919.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (32 samples, 0.09%)</title><rect x="2.2269%" y="1893" width="0.0919%" height="15" fill="rgb(213,211,35)" fg:x="775" fg:w="32"/><text x="2.4769%" y="1903.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (30 samples, 0.09%)</title><rect x="2.2326%" y="1877" width="0.0862%" height="15" fill="rgb(209,83,10)" fg:x="777" fg:w="30"/><text x="2.4826%" y="1887.50"></text></g><g><title>aptos_types::access_path::_::&lt;impl serde::ser::Serialize for aptos_types::access_path::AccessPath&gt;::serialize (40 samples, 0.11%)</title><rect x="2.2125%" y="2133" width="0.1149%" height="15" fill="rgb(209,164,1)" fg:x="770" fg:w="40"/><text x="2.4625%" y="2143.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (40 samples, 0.11%)</title><rect x="2.2125%" y="2117" width="0.1149%" height="15" fill="rgb(213,184,43)" fg:x="770" fg:w="40"/><text x="2.4625%" y="2127.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (36 samples, 0.10%)</title><rect x="2.2240%" y="2101" width="0.1034%" height="15" fill="rgb(231,61,34)" fg:x="774" fg:w="36"/><text x="2.4740%" y="2111.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (36 samples, 0.10%)</title><rect x="2.2240%" y="2085" width="0.1034%" height="15" fill="rgb(235,75,3)" fg:x="774" fg:w="36"/><text x="2.4740%" y="2095.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (36 samples, 0.10%)</title><rect x="2.2240%" y="2069" width="0.1034%" height="15" fill="rgb(220,106,47)" fg:x="774" fg:w="36"/><text x="2.4740%" y="2079.50"></text></g><g><title> 32]&gt;::serialize (36 samples, 0.10%)</title><rect x="2.2240%" y="2053" width="0.1034%" height="15" fill="rgb(210,196,33)" fg:x="774" fg:w="36"/><text x="2.4740%" y="2063.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (36 samples, 0.10%)</title><rect x="2.2240%" y="2037" width="0.1034%" height="15" fill="rgb(229,154,42)" fg:x="774" fg:w="36"/><text x="2.4740%" y="2047.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (36 samples, 0.10%)</title><rect x="2.2240%" y="2021" width="0.1034%" height="15" fill="rgb(228,114,26)" fg:x="774" fg:w="36"/><text x="2.4740%" y="2031.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (36 samples, 0.10%)</title><rect x="2.2240%" y="2005" width="0.1034%" height="15" fill="rgb(208,144,1)" fg:x="774" fg:w="36"/><text x="2.4740%" y="2015.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (36 samples, 0.10%)</title><rect x="2.2240%" y="1989" width="0.1034%" height="15" fill="rgb(239,112,37)" fg:x="774" fg:w="36"/><text x="2.4740%" y="1999.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (36 samples, 0.10%)</title><rect x="2.2240%" y="1973" width="0.1034%" height="15" fill="rgb(210,96,50)" fg:x="774" fg:w="36"/><text x="2.4740%" y="1983.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (36 samples, 0.10%)</title><rect x="2.2240%" y="1957" width="0.1034%" height="15" fill="rgb(222,178,2)" fg:x="774" fg:w="36"/><text x="2.4740%" y="1967.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (36 samples, 0.10%)</title><rect x="2.2240%" y="1941" width="0.1034%" height="15" fill="rgb(226,74,18)" fg:x="774" fg:w="36"/><text x="2.4740%" y="1951.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (4 samples, 0.01%)</title><rect x="2.3275%" y="2037" width="0.0115%" height="15" fill="rgb(225,67,54)" fg:x="810" fg:w="4"/><text x="2.5775%" y="2047.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.01%)</title><rect x="2.3275%" y="2021" width="0.0115%" height="15" fill="rgb(251,92,32)" fg:x="810" fg:w="4"/><text x="2.5775%" y="2031.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.01%)</title><rect x="2.3275%" y="2005" width="0.0115%" height="15" fill="rgb(228,149,22)" fg:x="810" fg:w="4"/><text x="2.5775%" y="2015.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.01%)</title><rect x="2.3275%" y="1989" width="0.0115%" height="15" fill="rgb(243,54,13)" fg:x="810" fg:w="4"/><text x="2.5775%" y="1999.50"></text></g><g><title>&lt;bcs::ser::MapSerializer&lt;W&gt; as serde::ser::SerializeMap&gt;::serialize_key (46 samples, 0.13%)</title><rect x="2.2096%" y="2197" width="0.1322%" height="15" fill="rgb(243,180,28)" fg:x="769" fg:w="46"/><text x="2.4596%" y="2207.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (46 samples, 0.13%)</title><rect x="2.2096%" y="2181" width="0.1322%" height="15" fill="rgb(208,167,24)" fg:x="769" fg:w="46"/><text x="2.4596%" y="2191.50"></text></g><g><title>aptos_types::state_store::state_key::_::&lt;impl serde::ser::Serialize for aptos_types::state_store::state_key::StateKey&gt;::serialize (46 samples, 0.13%)</title><rect x="2.2096%" y="2165" width="0.1322%" height="15" fill="rgb(245,73,45)" fg:x="769" fg:w="46"/><text x="2.4596%" y="2175.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (46 samples, 0.13%)</title><rect x="2.2096%" y="2149" width="0.1322%" height="15" fill="rgb(237,203,48)" fg:x="769" fg:w="46"/><text x="2.4596%" y="2159.50"></text></g><g><title>bcs::ser::Serializer&lt;W&gt;::output_variant_index (5 samples, 0.01%)</title><rect x="2.3275%" y="2133" width="0.0144%" height="15" fill="rgb(211,197,16)" fg:x="810" fg:w="5"/><text x="2.5775%" y="2143.50"></text></g><g><title>bcs::ser::Serializer&lt;W&gt;::output_u32_as_uleb128 (5 samples, 0.01%)</title><rect x="2.3275%" y="2117" width="0.0144%" height="15" fill="rgb(243,99,51)" fg:x="810" fg:w="5"/><text x="2.5775%" y="2127.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (5 samples, 0.01%)</title><rect x="2.3275%" y="2101" width="0.0144%" height="15" fill="rgb(215,123,29)" fg:x="810" fg:w="5"/><text x="2.5775%" y="2111.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (5 samples, 0.01%)</title><rect x="2.3275%" y="2085" width="0.0144%" height="15" fill="rgb(239,186,37)" fg:x="810" fg:w="5"/><text x="2.5775%" y="2095.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (5 samples, 0.01%)</title><rect x="2.3275%" y="2069" width="0.0144%" height="15" fill="rgb(252,136,39)" fg:x="810" fg:w="5"/><text x="2.5775%" y="2079.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (5 samples, 0.01%)</title><rect x="2.3275%" y="2053" width="0.0144%" height="15" fill="rgb(223,213,32)" fg:x="810" fg:w="5"/><text x="2.5775%" y="2063.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_bytes (7 samples, 0.02%)</title><rect x="2.3591%" y="2149" width="0.0201%" height="15" fill="rgb(233,115,5)" fg:x="821" fg:w="7"/><text x="2.6091%" y="2159.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (5 samples, 0.01%)</title><rect x="2.3648%" y="2133" width="0.0144%" height="15" fill="rgb(207,226,44)" fg:x="823" fg:w="5"/><text x="2.6148%" y="2143.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (5 samples, 0.01%)</title><rect x="2.3648%" y="2117" width="0.0144%" height="15" fill="rgb(208,126,0)" fg:x="823" fg:w="5"/><text x="2.6148%" y="2127.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (5 samples, 0.01%)</title><rect x="2.3648%" y="2101" width="0.0144%" height="15" fill="rgb(244,66,21)" fg:x="823" fg:w="5"/><text x="2.6148%" y="2111.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (5 samples, 0.01%)</title><rect x="2.3648%" y="2085" width="0.0144%" height="15" fill="rgb(222,97,12)" fg:x="823" fg:w="5"/><text x="2.6148%" y="2095.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (5 samples, 0.01%)</title><rect x="2.3648%" y="2069" width="0.0144%" height="15" fill="rgb(219,213,19)" fg:x="823" fg:w="5"/><text x="2.6148%" y="2079.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5 samples, 0.01%)</title><rect x="2.3648%" y="2053" width="0.0144%" height="15" fill="rgb(252,169,30)" fg:x="823" fg:w="5"/><text x="2.6148%" y="2063.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.01%)</title><rect x="2.3648%" y="2037" width="0.0144%" height="15" fill="rgb(206,32,51)" fg:x="823" fg:w="5"/><text x="2.6148%" y="2047.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.01%)</title><rect x="2.3648%" y="2021" width="0.0144%" height="15" fill="rgb(250,172,42)" fg:x="823" fg:w="5"/><text x="2.6148%" y="2031.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.01%)</title><rect x="2.3648%" y="2005" width="0.0144%" height="15" fill="rgb(209,34,43)" fg:x="823" fg:w="5"/><text x="2.6148%" y="2015.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetV0&gt;::serialize (110 samples, 0.32%)</title><rect x="2.0803%" y="2373" width="0.3161%" height="15" fill="rgb(223,11,35)" fg:x="724" fg:w="110"/><text x="2.3303%" y="2383.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (110 samples, 0.32%)</title><rect x="2.0803%" y="2357" width="0.3161%" height="15" fill="rgb(251,219,26)" fg:x="724" fg:w="110"/><text x="2.3303%" y="2367.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetMut&gt;::serialize (110 samples, 0.32%)</title><rect x="2.0803%" y="2341" width="0.3161%" height="15" fill="rgb(231,119,3)" fg:x="724" fg:w="110"/><text x="2.3303%" y="2351.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (110 samples, 0.32%)</title><rect x="2.0803%" y="2325" width="0.3161%" height="15" fill="rgb(216,97,11)" fg:x="724" fg:w="110"/><text x="2.3303%" y="2335.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::serialize (110 samples, 0.32%)</title><rect x="2.0803%" y="2309" width="0.3161%" height="15" fill="rgb(223,59,9)" fg:x="724" fg:w="110"/><text x="2.3303%" y="2319.50"></text></g><g><title>serde::ser::Serializer::collect_map (110 samples, 0.32%)</title><rect x="2.0803%" y="2293" width="0.3161%" height="15" fill="rgb(233,93,31)" fg:x="724" fg:w="110"/><text x="2.3303%" y="2303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (68 samples, 0.20%)</title><rect x="2.2010%" y="2277" width="0.1954%" height="15" fill="rgb(239,81,33)" fg:x="766" fg:w="68"/><text x="2.4510%" y="2287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (68 samples, 0.20%)</title><rect x="2.2010%" y="2261" width="0.1954%" height="15" fill="rgb(213,120,34)" fg:x="766" fg:w="68"/><text x="2.4510%" y="2271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (65 samples, 0.19%)</title><rect x="2.2096%" y="2245" width="0.1868%" height="15" fill="rgb(243,49,53)" fg:x="769" fg:w="65"/><text x="2.4596%" y="2255.50"></text></g><g><title>serde::ser::Serializer::collect_map::{{closure}} (65 samples, 0.19%)</title><rect x="2.2096%" y="2229" width="0.1868%" height="15" fill="rgb(247,216,33)" fg:x="769" fg:w="65"/><text x="2.4596%" y="2239.50"></text></g><g><title>serde::ser::SerializeMap::serialize_entry (65 samples, 0.19%)</title><rect x="2.2096%" y="2213" width="0.1868%" height="15" fill="rgb(226,26,14)" fg:x="769" fg:w="65"/><text x="2.4596%" y="2223.50"></text></g><g><title>&lt;bcs::ser::MapSerializer&lt;W&gt; as serde::ser::SerializeMap&gt;::serialize_value (19 samples, 0.05%)</title><rect x="2.3418%" y="2197" width="0.0546%" height="15" fill="rgb(215,49,53)" fg:x="815" fg:w="19"/><text x="2.5918%" y="2207.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (16 samples, 0.05%)</title><rect x="2.3504%" y="2181" width="0.0460%" height="15" fill="rgb(245,162,40)" fg:x="818" fg:w="16"/><text x="2.6004%" y="2191.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteOp&gt;::serialize (16 samples, 0.05%)</title><rect x="2.3504%" y="2165" width="0.0460%" height="15" fill="rgb(229,68,17)" fg:x="818" fg:w="16"/><text x="2.6004%" y="2175.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (6 samples, 0.02%)</title><rect x="2.3792%" y="2149" width="0.0172%" height="15" fill="rgb(213,182,10)" fg:x="828" fg:w="6"/><text x="2.6292%" y="2159.50"></text></g><g><title>bcs::ser::Serializer&lt;W&gt;::output_variant_index (6 samples, 0.02%)</title><rect x="2.3792%" y="2133" width="0.0172%" height="15" fill="rgb(245,125,30)" fg:x="828" fg:w="6"/><text x="2.6292%" y="2143.50"></text></g><g><title>bcs::ser::Serializer&lt;W&gt;::output_u32_as_uleb128 (6 samples, 0.02%)</title><rect x="2.3792%" y="2117" width="0.0172%" height="15" fill="rgb(232,202,2)" fg:x="828" fg:w="6"/><text x="2.6292%" y="2127.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (6 samples, 0.02%)</title><rect x="2.3792%" y="2101" width="0.0172%" height="15" fill="rgb(237,140,51)" fg:x="828" fg:w="6"/><text x="2.6292%" y="2111.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (6 samples, 0.02%)</title><rect x="2.3792%" y="2085" width="0.0172%" height="15" fill="rgb(236,157,25)" fg:x="828" fg:w="6"/><text x="2.6292%" y="2095.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (6 samples, 0.02%)</title><rect x="2.3792%" y="2069" width="0.0172%" height="15" fill="rgb(219,209,0)" fg:x="828" fg:w="6"/><text x="2.6292%" y="2079.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (6 samples, 0.02%)</title><rect x="2.3792%" y="2053" width="0.0172%" height="15" fill="rgb(240,116,54)" fg:x="828" fg:w="6"/><text x="2.6292%" y="2063.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (5 samples, 0.01%)</title><rect x="2.3820%" y="2037" width="0.0144%" height="15" fill="rgb(216,10,36)" fg:x="829" fg:w="5"/><text x="2.6320%" y="2047.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5 samples, 0.01%)</title><rect x="2.3820%" y="2021" width="0.0144%" height="15" fill="rgb(222,72,44)" fg:x="829" fg:w="5"/><text x="2.6320%" y="2031.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.01%)</title><rect x="2.3849%" y="2005" width="0.0115%" height="15" fill="rgb(232,159,9)" fg:x="830" fg:w="4"/><text x="2.6349%" y="2015.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.01%)</title><rect x="2.3849%" y="1989" width="0.0115%" height="15" fill="rgb(210,39,32)" fg:x="830" fg:w="4"/><text x="2.6349%" y="1999.50"></text></g><g><title>bcs::ser::to_bytes (115 samples, 0.33%)</title><rect x="2.0746%" y="2437" width="0.3304%" height="15" fill="rgb(216,194,45)" fg:x="722" fg:w="115"/><text x="2.3246%" y="2447.50"></text></g><g><title>bcs::ser::serialize_into (113 samples, 0.32%)</title><rect x="2.0803%" y="2421" width="0.3247%" height="15" fill="rgb(218,18,35)" fg:x="724" fg:w="113"/><text x="2.3303%" y="2431.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSet&gt;::serialize (113 samples, 0.32%)</title><rect x="2.0803%" y="2405" width="0.3247%" height="15" fill="rgb(207,83,51)" fg:x="724" fg:w="113"/><text x="2.3303%" y="2415.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (113 samples, 0.32%)</title><rect x="2.0803%" y="2389" width="0.3247%" height="15" fill="rgb(225,63,43)" fg:x="724" fg:w="113"/><text x="2.3303%" y="2399.50"></text></g><g><title>aptos_db::schema::write_set::&lt;impl aptos_schemadb::schema::ValueCodec&lt;aptos_db::schema::write_set::WriteSetSchema&gt; for aptos_types::write_set::WriteSet&gt;::encode_value (117 samples, 0.34%)</title><rect x="2.0746%" y="2453" width="0.3362%" height="15" fill="rgb(207,57,36)" fg:x="722" fg:w="117"/><text x="2.3246%" y="2463.50"></text></g><g><title>core::ptr::drop_in_place&lt;prometheus::histogram::HistogramTimer&gt; (4 samples, 0.01%)</title><rect x="2.4108%" y="2453" width="0.0115%" height="15" fill="rgb(216,99,33)" fg:x="839" fg:w="4"/><text x="2.6608%" y="2463.50"></text></g><g><title>prometheus::vec::MetricVec&lt;T&gt;::with_label_values (4 samples, 0.01%)</title><rect x="2.4223%" y="2453" width="0.0115%" height="15" fill="rgb(225,42,16)" fg:x="843" fg:w="4"/><text x="2.6723%" y="2463.50"></text></g><g><title>prometheus::vec::MetricVec&lt;T&gt;::get_metric_with_label_values (4 samples, 0.01%)</title><rect x="2.4223%" y="2437" width="0.0115%" height="15" fill="rgb(220,201,45)" fg:x="843" fg:w="4"/><text x="2.6723%" y="2447.50"></text></g><g><title>prometheus::vec::MetricVecCore&lt;T&gt;::get_metric_with_label_values (4 samples, 0.01%)</title><rect x="2.4223%" y="2421" width="0.0115%" height="15" fill="rgb(225,33,4)" fg:x="843" fg:w="4"/><text x="2.6723%" y="2431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (428 samples, 1.23%)</title><rect x="1.2068%" y="2549" width="1.2298%" height="15" fill="rgb(224,33,50)" fg:x="420" fg:w="428"/><text x="1.4568%" y="2559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (428 samples, 1.23%)</title><rect x="1.2068%" y="2533" width="1.2298%" height="15" fill="rgb(246,198,51)" fg:x="420" fg:w="428"/><text x="1.4568%" y="2543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (428 samples, 1.23%)</title><rect x="1.2068%" y="2517" width="1.2298%" height="15" fill="rgb(205,22,4)" fg:x="420" fg:w="428"/><text x="1.4568%" y="2527.50"></text></g><g><title>aptos_db::AptosDB::save_transactions_impl::{{closure}}::{{closure}}::{{closure}} (428 samples, 1.23%)</title><rect x="1.2068%" y="2501" width="1.2298%" height="15" fill="rgb(206,3,8)" fg:x="420" fg:w="428"/><text x="1.4568%" y="2511.50"></text></g><g><title>aptos_db::transaction_store::TransactionStore::put_write_set (126 samples, 0.36%)</title><rect x="2.0746%" y="2485" width="0.3620%" height="15" fill="rgb(251,23,15)" fg:x="722" fg:w="126"/><text x="2.3246%" y="2495.50"></text></g><g><title>aptos_schemadb::SchemaBatch::put (126 samples, 0.36%)</title><rect x="2.0746%" y="2469" width="0.3620%" height="15" fill="rgb(252,88,28)" fg:x="722" fg:w="126"/><text x="2.3246%" y="2479.50"></text></g><g><title>aptos_db::AptosDB::save_transactions_impl::{{closure}}::{{closure}} (845 samples, 2.43%)</title><rect x="0.0144%" y="2565" width="2.4280%" height="15" fill="rgb(212,127,14)" fg:x="5" fg:w="845"/><text x="0.2644%" y="2575.50">ap..</text></g><g><title>&lt;aptos_types::transaction::TransactionHasher as aptos_crypto::hash::CryptoHasher&gt;::finish (17 samples, 0.05%)</title><rect x="2.4510%" y="1285" width="0.0488%" height="15" fill="rgb(247,145,37)" fg:x="853" fg:w="17"/><text x="2.7010%" y="1295.50"></text></g><g><title>aptos_crypto::hash::DefaultHasher::finish (17 samples, 0.05%)</title><rect x="2.4510%" y="1269" width="0.0488%" height="15" fill="rgb(209,117,53)" fg:x="853" fg:w="17"/><text x="2.7010%" y="1279.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (17 samples, 0.05%)</title><rect x="2.4510%" y="1253" width="0.0488%" height="15" fill="rgb(212,90,42)" fg:x="853" fg:w="17"/><text x="2.7010%" y="1263.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (16 samples, 0.05%)</title><rect x="2.4539%" y="1237" width="0.0460%" height="15" fill="rgb(218,164,37)" fg:x="854" fg:w="16"/><text x="2.7039%" y="1247.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (16 samples, 0.05%)</title><rect x="2.4539%" y="1221" width="0.0460%" height="15" fill="rgb(246,65,34)" fg:x="854" fg:w="16"/><text x="2.7039%" y="1231.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (14 samples, 0.04%)</title><rect x="2.4596%" y="1205" width="0.0402%" height="15" fill="rgb(231,100,33)" fg:x="856" fg:w="14"/><text x="2.7096%" y="1215.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (14 samples, 0.04%)</title><rect x="2.4596%" y="1189" width="0.0402%" height="15" fill="rgb(228,126,14)" fg:x="856" fg:w="14"/><text x="2.7096%" y="1199.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (14 samples, 0.04%)</title><rect x="2.4596%" y="1173" width="0.0402%" height="15" fill="rgb(215,173,21)" fg:x="856" fg:w="14"/><text x="2.7096%" y="1183.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (14 samples, 0.04%)</title><rect x="2.4596%" y="1157" width="0.0402%" height="15" fill="rgb(210,6,40)" fg:x="856" fg:w="14"/><text x="2.7096%" y="1167.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (11 samples, 0.03%)</title><rect x="2.5056%" y="1157" width="0.0316%" height="15" fill="rgb(212,48,18)" fg:x="872" fg:w="11"/><text x="2.7556%" y="1167.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (11 samples, 0.03%)</title><rect x="2.5056%" y="1141" width="0.0316%" height="15" fill="rgb(230,214,11)" fg:x="872" fg:w="11"/><text x="2.7556%" y="1151.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (11 samples, 0.03%)</title><rect x="2.5056%" y="1125" width="0.0316%" height="15" fill="rgb(254,105,39)" fg:x="872" fg:w="11"/><text x="2.7556%" y="1135.50"></text></g><g><title> 32]&gt;::serialize (11 samples, 0.03%)</title><rect x="2.5056%" y="1109" width="0.0316%" height="15" fill="rgb(245,158,5)" fg:x="872" fg:w="11"/><text x="2.7556%" y="1119.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (8 samples, 0.02%)</title><rect x="2.5142%" y="1093" width="0.0230%" height="15" fill="rgb(249,208,11)" fg:x="875" fg:w="8"/><text x="2.7642%" y="1103.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (8 samples, 0.02%)</title><rect x="2.5142%" y="1077" width="0.0230%" height="15" fill="rgb(210,39,28)" fg:x="875" fg:w="8"/><text x="2.7642%" y="1087.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (8 samples, 0.02%)</title><rect x="2.5142%" y="1061" width="0.0230%" height="15" fill="rgb(211,56,53)" fg:x="875" fg:w="8"/><text x="2.7642%" y="1071.50"></text></g><g><title>std::io::Write::write_all (8 samples, 0.02%)</title><rect x="2.5142%" y="1045" width="0.0230%" height="15" fill="rgb(226,201,30)" fg:x="875" fg:w="8"/><text x="2.7642%" y="1055.50"></text></g><g><title>&lt;aptos_types::transaction::RawTransactionHasher as std::io::Write&gt;::write (8 samples, 0.02%)</title><rect x="2.5142%" y="1029" width="0.0230%" height="15" fill="rgb(239,101,34)" fg:x="875" fg:w="8"/><text x="2.7642%" y="1039.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (6 samples, 0.02%)</title><rect x="2.5200%" y="1013" width="0.0172%" height="15" fill="rgb(226,209,5)" fg:x="877" fg:w="6"/><text x="2.7700%" y="1023.50"></text></g><g><title>tiny_keccak::Buffer::xorin (6 samples, 0.02%)</title><rect x="2.5200%" y="997" width="0.0172%" height="15" fill="rgb(250,105,47)" fg:x="877" fg:w="6"/><text x="2.7700%" y="1007.50"></text></g><g><title>tiny_keccak::Buffer::execute (6 samples, 0.02%)</title><rect x="2.5200%" y="981" width="0.0172%" height="15" fill="rgb(230,72,3)" fg:x="877" fg:w="6"/><text x="2.7700%" y="991.50"></text></g><g><title>tiny_keccak::Buffer::xorin::{{closure}} (6 samples, 0.02%)</title><rect x="2.5200%" y="965" width="0.0172%" height="15" fill="rgb(232,218,39)" fg:x="877" fg:w="6"/><text x="2.7700%" y="975.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_str (30 samples, 0.09%)</title><rect x="2.5458%" y="1029" width="0.0862%" height="15" fill="rgb(248,166,6)" fg:x="886" fg:w="30"/><text x="2.7958%" y="1039.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_bytes (30 samples, 0.09%)</title><rect x="2.5458%" y="1013" width="0.0862%" height="15" fill="rgb(247,89,20)" fg:x="886" fg:w="30"/><text x="2.7958%" y="1023.50"></text></g><g><title>std::io::Write::write_all (30 samples, 0.09%)</title><rect x="2.5458%" y="997" width="0.0862%" height="15" fill="rgb(248,130,54)" fg:x="886" fg:w="30"/><text x="2.7958%" y="1007.50"></text></g><g><title>&lt;aptos_types::transaction::RawTransactionHasher as std::io::Write&gt;::write (30 samples, 0.09%)</title><rect x="2.5458%" y="981" width="0.0862%" height="15" fill="rgb(234,196,4)" fg:x="886" fg:w="30"/><text x="2.7958%" y="991.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (30 samples, 0.09%)</title><rect x="2.5458%" y="965" width="0.0862%" height="15" fill="rgb(250,143,31)" fg:x="886" fg:w="30"/><text x="2.7958%" y="975.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (30 samples, 0.09%)</title><rect x="2.5458%" y="949" width="0.0862%" height="15" fill="rgb(211,110,34)" fg:x="886" fg:w="30"/><text x="2.7958%" y="959.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (30 samples, 0.09%)</title><rect x="2.5458%" y="933" width="0.0862%" height="15" fill="rgb(215,124,48)" fg:x="886" fg:w="30"/><text x="2.7958%" y="943.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (30 samples, 0.09%)</title><rect x="2.5458%" y="917" width="0.0862%" height="15" fill="rgb(216,46,13)" fg:x="886" fg:w="30"/><text x="2.7958%" y="927.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (30 samples, 0.09%)</title><rect x="2.5458%" y="901" width="0.0862%" height="15" fill="rgb(205,184,25)" fg:x="886" fg:w="30"/><text x="2.7958%" y="911.50"></text></g><g><title>aptos_types::transaction::ethereum::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::ethereum::Action&gt;::serialize (33 samples, 0.09%)</title><rect x="2.5430%" y="1093" width="0.0948%" height="15" fill="rgb(228,1,10)" fg:x="885" fg:w="33"/><text x="2.7930%" y="1103.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (33 samples, 0.09%)</title><rect x="2.5430%" y="1077" width="0.0948%" height="15" fill="rgb(213,116,27)" fg:x="885" fg:w="33"/><text x="2.7930%" y="1087.50"></text></g><g><title>primitive_types::serde::&lt;impl serde::ser::Serialize for primitive_types::H160&gt;::serialize (32 samples, 0.09%)</title><rect x="2.5458%" y="1061" width="0.0919%" height="15" fill="rgb(241,95,50)" fg:x="886" fg:w="32"/><text x="2.7958%" y="1071.50"></text></g><g><title>impl_serde::serialize::serialize_raw (32 samples, 0.09%)</title><rect x="2.5458%" y="1045" width="0.0919%" height="15" fill="rgb(238,48,32)" fg:x="886" fg:w="32"/><text x="2.7958%" y="1055.50"></text></g><g><title>aptos_crypto::hash::DefaultHasher::update (7 samples, 0.02%)</title><rect x="2.6550%" y="901" width="0.0201%" height="15" fill="rgb(235,113,49)" fg:x="924" fg:w="7"/><text x="2.9050%" y="911.50"></text></g><g><title>aptos_types::transaction::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::RawTransaction&gt;::serialize (69 samples, 0.20%)</title><rect x="2.4999%" y="1189" width="0.1983%" height="15" fill="rgb(205,127,43)" fg:x="870" fg:w="69"/><text x="2.7499%" y="1199.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (67 samples, 0.19%)</title><rect x="2.5056%" y="1173" width="0.1925%" height="15" fill="rgb(250,162,2)" fg:x="872" fg:w="67"/><text x="2.7556%" y="1183.50"></text></g><g><title>aptos_types::transaction::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::TransactionPayload&gt;::serialize (56 samples, 0.16%)</title><rect x="2.5372%" y="1157" width="0.1609%" height="15" fill="rgb(220,13,41)" fg:x="883" fg:w="56"/><text x="2.7872%" y="1167.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (56 samples, 0.16%)</title><rect x="2.5372%" y="1141" width="0.1609%" height="15" fill="rgb(249,221,25)" fg:x="883" fg:w="56"/><text x="2.7872%" y="1151.50"></text></g><g><title>aptos_types::transaction::ethereum::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::ethereum::EthTransactionPayload&gt;::serialize (56 samples, 0.16%)</title><rect x="2.5372%" y="1125" width="0.1609%" height="15" fill="rgb(215,208,19)" fg:x="883" fg:w="56"/><text x="2.7872%" y="1135.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (54 samples, 0.16%)</title><rect x="2.5430%" y="1109" width="0.1552%" height="15" fill="rgb(236,175,2)" fg:x="885" fg:w="54"/><text x="2.7930%" y="1119.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (19 samples, 0.05%)</title><rect x="2.6435%" y="1093" width="0.0546%" height="15" fill="rgb(241,52,2)" fg:x="920" fg:w="19"/><text x="2.8935%" y="1103.50"></text></g><g><title>serde::ser::Serializer::collect_seq (19 samples, 0.05%)</title><rect x="2.6435%" y="1077" width="0.0546%" height="15" fill="rgb(248,140,14)" fg:x="920" fg:w="19"/><text x="2.8935%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (19 samples, 0.05%)</title><rect x="2.6435%" y="1061" width="0.0546%" height="15" fill="rgb(253,22,42)" fg:x="920" fg:w="19"/><text x="2.8935%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (19 samples, 0.05%)</title><rect x="2.6435%" y="1045" width="0.0546%" height="15" fill="rgb(234,61,47)" fg:x="920" fg:w="19"/><text x="2.8935%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (16 samples, 0.05%)</title><rect x="2.6521%" y="1029" width="0.0460%" height="15" fill="rgb(208,226,15)" fg:x="923" fg:w="16"/><text x="2.9021%" y="1039.50"></text></g><g><title>serde::ser::Serializer::collect_seq::{{closure}} (16 samples, 0.05%)</title><rect x="2.6521%" y="1013" width="0.0460%" height="15" fill="rgb(217,221,4)" fg:x="923" fg:w="16"/><text x="2.9021%" y="1023.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeSeq&gt;::serialize_element (16 samples, 0.05%)</title><rect x="2.6521%" y="997" width="0.0460%" height="15" fill="rgb(212,174,34)" fg:x="923" fg:w="16"/><text x="2.9021%" y="1007.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (16 samples, 0.05%)</title><rect x="2.6521%" y="981" width="0.0460%" height="15" fill="rgb(253,83,4)" fg:x="923" fg:w="16"/><text x="2.9021%" y="991.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (16 samples, 0.05%)</title><rect x="2.6521%" y="965" width="0.0460%" height="15" fill="rgb(250,195,49)" fg:x="923" fg:w="16"/><text x="2.9021%" y="975.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (16 samples, 0.05%)</title><rect x="2.6521%" y="949" width="0.0460%" height="15" fill="rgb(241,192,25)" fg:x="923" fg:w="16"/><text x="2.9021%" y="959.50"></text></g><g><title>std::io::Write::write_all (16 samples, 0.05%)</title><rect x="2.6521%" y="933" width="0.0460%" height="15" fill="rgb(208,124,10)" fg:x="923" fg:w="16"/><text x="2.9021%" y="943.50"></text></g><g><title>&lt;aptos_types::transaction::TransactionHasher as std::io::Write&gt;::write (16 samples, 0.05%)</title><rect x="2.6521%" y="917" width="0.0460%" height="15" fill="rgb(222,33,0)" fg:x="923" fg:w="16"/><text x="2.9021%" y="927.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (8 samples, 0.02%)</title><rect x="2.6751%" y="901" width="0.0230%" height="15" fill="rgb(234,209,28)" fg:x="931" fg:w="8"/><text x="2.9251%" y="911.50"></text></g><g><title>&lt;aptos_crypto::secp256k1::Secp256k1PublicKey as serde::ser::Serialize&gt;::serialize (41 samples, 0.12%)</title><rect x="2.6981%" y="1157" width="0.1178%" height="15" fill="rgb(224,11,23)" fg:x="939" fg:w="41"/><text x="2.9481%" y="1167.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (41 samples, 0.12%)</title><rect x="2.6981%" y="1141" width="0.1178%" height="15" fill="rgb(232,99,1)" fg:x="939" fg:w="41"/><text x="2.9481%" y="1151.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (41 samples, 0.12%)</title><rect x="2.6981%" y="1125" width="0.1178%" height="15" fill="rgb(237,95,45)" fg:x="939" fg:w="41"/><text x="2.9481%" y="1135.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_bytes (41 samples, 0.12%)</title><rect x="2.6981%" y="1109" width="0.1178%" height="15" fill="rgb(208,109,11)" fg:x="939" fg:w="41"/><text x="2.9481%" y="1119.50"></text></g><g><title>std::io::Write::write_all (41 samples, 0.12%)</title><rect x="2.6981%" y="1093" width="0.1178%" height="15" fill="rgb(216,190,48)" fg:x="939" fg:w="41"/><text x="2.9481%" y="1103.50"></text></g><g><title>&lt;aptos_types::transaction::RawTransactionHasher as std::io::Write&gt;::write (41 samples, 0.12%)</title><rect x="2.6981%" y="1077" width="0.1178%" height="15" fill="rgb(251,171,36)" fg:x="939" fg:w="41"/><text x="2.9481%" y="1087.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (40 samples, 0.11%)</title><rect x="2.7010%" y="1061" width="0.1149%" height="15" fill="rgb(230,62,22)" fg:x="940" fg:w="40"/><text x="2.9510%" y="1071.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (40 samples, 0.11%)</title><rect x="2.7010%" y="1045" width="0.1149%" height="15" fill="rgb(225,114,35)" fg:x="940" fg:w="40"/><text x="2.9510%" y="1055.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (40 samples, 0.11%)</title><rect x="2.7010%" y="1029" width="0.1149%" height="15" fill="rgb(215,118,42)" fg:x="940" fg:w="40"/><text x="2.9510%" y="1039.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (40 samples, 0.11%)</title><rect x="2.7010%" y="1013" width="0.1149%" height="15" fill="rgb(243,119,21)" fg:x="940" fg:w="40"/><text x="2.9510%" y="1023.50"></text></g><g><title>&lt;aptos_types::transaction::Transaction as aptos_crypto::hash::CryptoHash&gt;::hash (129 samples, 0.37%)</title><rect x="2.4510%" y="1301" width="0.3707%" height="15" fill="rgb(252,177,53)" fg:x="853" fg:w="129"/><text x="2.7010%" y="1311.50"></text></g><g><title>bcs::ser::serialize_into (112 samples, 0.32%)</title><rect x="2.4999%" y="1285" width="0.3218%" height="15" fill="rgb(237,209,29)" fg:x="870" fg:w="112"/><text x="2.7499%" y="1295.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (112 samples, 0.32%)</title><rect x="2.4999%" y="1269" width="0.3218%" height="15" fill="rgb(212,65,23)" fg:x="870" fg:w="112"/><text x="2.7499%" y="1279.50"></text></g><g><title>aptos_types::transaction::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::Transaction&gt;::serialize (112 samples, 0.32%)</title><rect x="2.4999%" y="1253" width="0.3218%" height="15" fill="rgb(230,222,46)" fg:x="870" fg:w="112"/><text x="2.7499%" y="1263.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (112 samples, 0.32%)</title><rect x="2.4999%" y="1237" width="0.3218%" height="15" fill="rgb(215,135,32)" fg:x="870" fg:w="112"/><text x="2.7499%" y="1247.50"></text></g><g><title>aptos_types::transaction::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::SignedTransaction&gt;::serialize (112 samples, 0.32%)</title><rect x="2.4999%" y="1221" width="0.3218%" height="15" fill="rgb(246,101,22)" fg:x="870" fg:w="112"/><text x="2.7499%" y="1231.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (112 samples, 0.32%)</title><rect x="2.4999%" y="1205" width="0.3218%" height="15" fill="rgb(206,107,13)" fg:x="870" fg:w="112"/><text x="2.7499%" y="1215.50"></text></g><g><title>aptos_types::transaction::authenticator::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::authenticator::TransactionAuthenticator&gt;::serialize (43 samples, 0.12%)</title><rect x="2.6981%" y="1189" width="0.1236%" height="15" fill="rgb(250,100,44)" fg:x="939" fg:w="43"/><text x="2.9481%" y="1199.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStructVariant&gt;::serialize_field (43 samples, 0.12%)</title><rect x="2.6981%" y="1173" width="0.1236%" height="15" fill="rgb(231,147,38)" fg:x="939" fg:w="43"/><text x="2.9481%" y="1183.50"></text></g><g><title>&lt;aptos_types::transaction::TransactionInfoHasher as aptos_crypto::hash::CryptoHasher&gt;::finish (30 samples, 0.09%)</title><rect x="2.8217%" y="1285" width="0.0862%" height="15" fill="rgb(229,8,40)" fg:x="982" fg:w="30"/><text x="3.0717%" y="1295.50"></text></g><g><title>aptos_crypto::hash::DefaultHasher::finish (30 samples, 0.09%)</title><rect x="2.8217%" y="1269" width="0.0862%" height="15" fill="rgb(221,135,30)" fg:x="982" fg:w="30"/><text x="3.0717%" y="1279.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (30 samples, 0.09%)</title><rect x="2.8217%" y="1253" width="0.0862%" height="15" fill="rgb(249,193,18)" fg:x="982" fg:w="30"/><text x="3.0717%" y="1263.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (30 samples, 0.09%)</title><rect x="2.8217%" y="1237" width="0.0862%" height="15" fill="rgb(209,133,39)" fg:x="982" fg:w="30"/><text x="3.0717%" y="1247.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (30 samples, 0.09%)</title><rect x="2.8217%" y="1221" width="0.0862%" height="15" fill="rgb(232,100,14)" fg:x="982" fg:w="30"/><text x="3.0717%" y="1231.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (29 samples, 0.08%)</title><rect x="2.8246%" y="1205" width="0.0833%" height="15" fill="rgb(224,185,1)" fg:x="983" fg:w="29"/><text x="3.0746%" y="1215.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (29 samples, 0.08%)</title><rect x="2.8246%" y="1189" width="0.0833%" height="15" fill="rgb(223,139,8)" fg:x="983" fg:w="29"/><text x="3.0746%" y="1199.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (29 samples, 0.08%)</title><rect x="2.8246%" y="1173" width="0.0833%" height="15" fill="rgb(232,213,38)" fg:x="983" fg:w="29"/><text x="3.0746%" y="1183.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (29 samples, 0.08%)</title><rect x="2.8246%" y="1157" width="0.0833%" height="15" fill="rgb(207,94,22)" fg:x="983" fg:w="29"/><text x="3.0746%" y="1167.50"></text></g><g><title>aptos_crypto::hash::DefaultHasher::update (12 samples, 0.03%)</title><rect x="2.9280%" y="1013" width="0.0345%" height="15" fill="rgb(219,183,54)" fg:x="1019" fg:w="12"/><text x="3.1780%" y="1023.50"></text></g><g><title>&lt;aptos_crypto::hash::HashValue as serde::ser::Serialize&gt;::serialize (62 samples, 0.18%)</title><rect x="2.9079%" y="1189" width="0.1782%" height="15" fill="rgb(216,185,54)" fg:x="1012" fg:w="62"/><text x="3.1579%" y="1199.50"></text></g><g><title>&lt;aptos_crypto::hash::HashValue as serde::ser::Serialize&gt;::serialize::_::&lt;impl serde::ser::Serialize for &lt;aptos_crypto::hash::HashValue as serde::ser::Serialize&gt;::serialize::Value&gt;::serialize (62 samples, 0.18%)</title><rect x="2.9079%" y="1173" width="0.1782%" height="15" fill="rgb(254,217,39)" fg:x="1012" fg:w="62"/><text x="3.1579%" y="1183.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (62 samples, 0.18%)</title><rect x="2.9079%" y="1157" width="0.1782%" height="15" fill="rgb(240,178,23)" fg:x="1012" fg:w="62"/><text x="3.1579%" y="1167.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (62 samples, 0.18%)</title><rect x="2.9079%" y="1141" width="0.1782%" height="15" fill="rgb(218,11,47)" fg:x="1012" fg:w="62"/><text x="3.1579%" y="1151.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (62 samples, 0.18%)</title><rect x="2.9079%" y="1125" width="0.1782%" height="15" fill="rgb(218,51,51)" fg:x="1012" fg:w="62"/><text x="3.1579%" y="1135.50"></text></g><g><title> 32]&gt;::serialize (62 samples, 0.18%)</title><rect x="2.9079%" y="1109" width="0.1782%" height="15" fill="rgb(238,126,27)" fg:x="1012" fg:w="62"/><text x="3.1579%" y="1119.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (62 samples, 0.18%)</title><rect x="2.9079%" y="1093" width="0.1782%" height="15" fill="rgb(249,202,22)" fg:x="1012" fg:w="62"/><text x="3.1579%" y="1103.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (62 samples, 0.18%)</title><rect x="2.9079%" y="1077" width="0.1782%" height="15" fill="rgb(254,195,49)" fg:x="1012" fg:w="62"/><text x="3.1579%" y="1087.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (62 samples, 0.18%)</title><rect x="2.9079%" y="1061" width="0.1782%" height="15" fill="rgb(208,123,14)" fg:x="1012" fg:w="62"/><text x="3.1579%" y="1071.50"></text></g><g><title>std::io::Write::write_all (58 samples, 0.17%)</title><rect x="2.9194%" y="1045" width="0.1667%" height="15" fill="rgb(224,200,8)" fg:x="1016" fg:w="58"/><text x="3.1694%" y="1055.50"></text></g><g><title>&lt;aptos_types::transaction::TransactionInfoV0Hasher as std::io::Write&gt;::write (58 samples, 0.17%)</title><rect x="2.9194%" y="1029" width="0.1667%" height="15" fill="rgb(217,61,36)" fg:x="1016" fg:w="58"/><text x="3.1694%" y="1039.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (43 samples, 0.12%)</title><rect x="2.9625%" y="1013" width="0.1236%" height="15" fill="rgb(206,35,45)" fg:x="1031" fg:w="43"/><text x="3.2125%" y="1023.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (30 samples, 0.09%)</title><rect x="2.9998%" y="997" width="0.0862%" height="15" fill="rgb(217,65,33)" fg:x="1044" fg:w="30"/><text x="3.2498%" y="1007.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (30 samples, 0.09%)</title><rect x="2.9998%" y="981" width="0.0862%" height="15" fill="rgb(222,158,48)" fg:x="1044" fg:w="30"/><text x="3.2498%" y="991.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (30 samples, 0.09%)</title><rect x="2.9998%" y="965" width="0.0862%" height="15" fill="rgb(254,2,54)" fg:x="1044" fg:w="30"/><text x="3.2498%" y="975.50"></text></g><g><title>&lt;aptos_types::transaction::TransactionInfo as aptos_crypto::hash::CryptoHash&gt;::hash (96 samples, 0.28%)</title><rect x="2.8217%" y="1301" width="0.2758%" height="15" fill="rgb(250,143,38)" fg:x="982" fg:w="96"/><text x="3.0717%" y="1311.50"></text></g><g><title>bcs::ser::serialize_into (66 samples, 0.19%)</title><rect x="2.9079%" y="1285" width="0.1896%" height="15" fill="rgb(248,25,0)" fg:x="1012" fg:w="66"/><text x="3.1579%" y="1295.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (66 samples, 0.19%)</title><rect x="2.9079%" y="1269" width="0.1896%" height="15" fill="rgb(206,152,27)" fg:x="1012" fg:w="66"/><text x="3.1579%" y="1279.50"></text></g><g><title>aptos_types::transaction::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::TransactionInfo&gt;::serialize (66 samples, 0.19%)</title><rect x="2.9079%" y="1253" width="0.1896%" height="15" fill="rgb(240,77,30)" fg:x="1012" fg:w="66"/><text x="3.1579%" y="1263.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (66 samples, 0.19%)</title><rect x="2.9079%" y="1237" width="0.1896%" height="15" fill="rgb(231,5,3)" fg:x="1012" fg:w="66"/><text x="3.1579%" y="1247.50"></text></g><g><title>aptos_types::transaction::_::&lt;impl serde::ser::Serialize for aptos_types::transaction::TransactionInfoV0&gt;::serialize (66 samples, 0.19%)</title><rect x="2.9079%" y="1221" width="0.1896%" height="15" fill="rgb(207,226,32)" fg:x="1012" fg:w="66"/><text x="3.1579%" y="1231.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (66 samples, 0.19%)</title><rect x="2.9079%" y="1205" width="0.1896%" height="15" fill="rgb(222,207,47)" fg:x="1012" fg:w="66"/><text x="3.1579%" y="1215.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="3.0975%" y="1301" width="0.0115%" height="15" fill="rgb(229,115,45)" fg:x="1078" fg:w="4"/><text x="3.3475%" y="1311.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="3.0975%" y="1285" width="0.0115%" height="15" fill="rgb(224,191,6)" fg:x="1078" fg:w="4"/><text x="3.3475%" y="1295.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (4 samples, 0.01%)</title><rect x="3.0975%" y="1269" width="0.0115%" height="15" fill="rgb(230,227,24)" fg:x="1078" fg:w="4"/><text x="3.3475%" y="1279.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="3.0975%" y="1253" width="0.0115%" height="15" fill="rgb(228,80,19)" fg:x="1078" fg:w="4"/><text x="3.3475%" y="1263.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (4 samples, 0.01%)</title><rect x="3.0975%" y="1237" width="0.0115%" height="15" fill="rgb(247,229,0)" fg:x="1078" fg:w="4"/><text x="3.3475%" y="1247.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="3.0975%" y="1221" width="0.0115%" height="15" fill="rgb(237,194,15)" fg:x="1078" fg:w="4"/><text x="3.3475%" y="1231.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (4 samples, 0.01%)</title><rect x="3.0975%" y="1205" width="0.0115%" height="15" fill="rgb(219,203,20)" fg:x="1078" fg:w="4"/><text x="3.3475%" y="1215.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="3.0975%" y="1189" width="0.0115%" height="15" fill="rgb(234,128,8)" fg:x="1078" fg:w="4"/><text x="3.3475%" y="1199.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::read (4 samples, 0.01%)</title><rect x="3.0975%" y="1173" width="0.0115%" height="15" fill="rgb(248,202,8)" fg:x="1078" fg:w="4"/><text x="3.3475%" y="1183.50"></text></g><g><title>core::ptr::read (4 samples, 0.01%)</title><rect x="3.0975%" y="1157" width="0.0115%" height="15" fill="rgb(206,104,37)" fg:x="1078" fg:w="4"/><text x="3.3475%" y="1167.50"></text></g><g><title>aptos_executor::components::apply_chunk_output::ApplyChunkOutput::assemble_ledger_diff (231 samples, 0.66%)</title><rect x="2.4510%" y="1317" width="0.6638%" height="15" fill="rgb(223,8,27)" fg:x="853" fg:w="231"/><text x="2.7010%" y="1327.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (19 samples, 0.05%)</title><rect x="3.1205%" y="1301" width="0.0546%" height="15" fill="rgb(216,217,28)" fg:x="1086" fg:w="19"/><text x="3.3705%" y="1311.50"></text></g><g><title>core::ptr::write (19 samples, 0.05%)</title><rect x="3.1205%" y="1285" width="0.0546%" height="15" fill="rgb(249,199,1)" fg:x="1086" fg:w="19"/><text x="3.3705%" y="1295.50"></text></g><g><title>&lt;aptos_types::write_set::WriteOp as core::clone::Clone&gt;::clone (7 samples, 0.02%)</title><rect x="3.1751%" y="1205" width="0.0201%" height="15" fill="rgb(240,85,17)" fg:x="1105" fg:w="7"/><text x="3.4251%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7 samples, 0.02%)</title><rect x="3.1751%" y="1189" width="0.0201%" height="15" fill="rgb(206,108,45)" fg:x="1105" fg:w="7"/><text x="3.4251%" y="1199.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (7 samples, 0.02%)</title><rect x="3.1751%" y="1173" width="0.0201%" height="15" fill="rgb(245,210,41)" fg:x="1105" fg:w="7"/><text x="3.4251%" y="1183.50"></text></g><g><title>alloc::slice::hack::to_vec (7 samples, 0.02%)</title><rect x="3.1751%" y="1157" width="0.0201%" height="15" fill="rgb(206,13,37)" fg:x="1105" fg:w="7"/><text x="3.4251%" y="1167.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7 samples, 0.02%)</title><rect x="3.1751%" y="1141" width="0.0201%" height="15" fill="rgb(250,61,18)" fg:x="1105" fg:w="7"/><text x="3.4251%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7 samples, 0.02%)</title><rect x="3.1751%" y="1125" width="0.0201%" height="15" fill="rgb(235,172,48)" fg:x="1105" fg:w="7"/><text x="3.4251%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7 samples, 0.02%)</title><rect x="3.1751%" y="1109" width="0.0201%" height="15" fill="rgb(249,201,17)" fg:x="1105" fg:w="7"/><text x="3.4251%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (7 samples, 0.02%)</title><rect x="3.1751%" y="1093" width="0.0201%" height="15" fill="rgb(219,208,6)" fg:x="1105" fg:w="7"/><text x="3.4251%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.02%)</title><rect x="3.1751%" y="1077" width="0.0201%" height="15" fill="rgb(248,31,23)" fg:x="1105" fg:w="7"/><text x="3.4251%" y="1087.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.02%)</title><rect x="3.1751%" y="1061" width="0.0201%" height="15" fill="rgb(245,15,42)" fg:x="1105" fg:w="7"/><text x="3.4251%" y="1071.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.02%)</title><rect x="3.1751%" y="1045" width="0.0201%" height="15" fill="rgb(222,217,39)" fg:x="1105" fg:w="7"/><text x="3.4251%" y="1055.50"></text></g><g><title>mallocx (7 samples, 0.02%)</title><rect x="3.1751%" y="1029" width="0.0201%" height="15" fill="rgb(210,219,27)" fg:x="1105" fg:w="7"/><text x="3.4251%" y="1039.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSet as core::clone::Clone&gt;::clone (29 samples, 0.08%)</title><rect x="3.1751%" y="1285" width="0.0833%" height="15" fill="rgb(252,166,36)" fg:x="1105" fg:w="29"/><text x="3.4251%" y="1295.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSetV0 as core::clone::Clone&gt;::clone (29 samples, 0.08%)</title><rect x="3.1751%" y="1269" width="0.0833%" height="15" fill="rgb(245,132,34)" fg:x="1105" fg:w="29"/><text x="3.4251%" y="1279.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSetMut as core::clone::Clone&gt;::clone (29 samples, 0.08%)</title><rect x="3.1751%" y="1253" width="0.0833%" height="15" fill="rgb(236,54,3)" fg:x="1105" fg:w="29"/><text x="3.4251%" y="1263.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (29 samples, 0.08%)</title><rect x="3.1751%" y="1237" width="0.0833%" height="15" fill="rgb(241,173,43)" fg:x="1105" fg:w="29"/><text x="3.4251%" y="1247.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (29 samples, 0.08%)</title><rect x="3.1751%" y="1221" width="0.0833%" height="15" fill="rgb(215,190,9)" fg:x="1105" fg:w="29"/><text x="3.4251%" y="1231.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (22 samples, 0.06%)</title><rect x="3.1952%" y="1205" width="0.0632%" height="15" fill="rgb(242,101,16)" fg:x="1112" fg:w="22"/><text x="3.4452%" y="1215.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::clone::Clone&gt;::clone (14 samples, 0.04%)</title><rect x="3.2584%" y="1189" width="0.0402%" height="15" fill="rgb(223,190,21)" fg:x="1134" fg:w="14"/><text x="3.5084%" y="1199.50"></text></g><g><title>__rust_alloc (10 samples, 0.03%)</title><rect x="3.2987%" y="981" width="0.0287%" height="15" fill="rgb(215,228,25)" fg:x="1148" fg:w="10"/><text x="3.5487%" y="991.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (31 samples, 0.09%)</title><rect x="3.2584%" y="1237" width="0.0891%" height="15" fill="rgb(225,36,22)" fg:x="1134" fg:w="31"/><text x="3.5084%" y="1247.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (31 samples, 0.09%)</title><rect x="3.2584%" y="1221" width="0.0891%" height="15" fill="rgb(251,106,46)" fg:x="1134" fg:w="31"/><text x="3.5084%" y="1231.50"></text></g><g><title>core::clone::Clone::clone (31 samples, 0.09%)</title><rect x="3.2584%" y="1205" width="0.0891%" height="15" fill="rgb(208,90,1)" fg:x="1134" fg:w="31"/><text x="3.5084%" y="1215.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (17 samples, 0.05%)</title><rect x="3.2987%" y="1189" width="0.0488%" height="15" fill="rgb(243,10,4)" fg:x="1148" fg:w="17"/><text x="3.5487%" y="1199.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::StateValue as core::clone::Clone&gt;::clone (17 samples, 0.05%)</title><rect x="3.2987%" y="1173" width="0.0488%" height="15" fill="rgb(212,137,27)" fg:x="1148" fg:w="17"/><text x="3.5487%" y="1183.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::StateValueInner as core::clone::Clone&gt;::clone (17 samples, 0.05%)</title><rect x="3.2987%" y="1157" width="0.0488%" height="15" fill="rgb(231,220,49)" fg:x="1148" fg:w="17"/><text x="3.5487%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (17 samples, 0.05%)</title><rect x="3.2987%" y="1141" width="0.0488%" height="15" fill="rgb(237,96,20)" fg:x="1148" fg:w="17"/><text x="3.5487%" y="1151.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (17 samples, 0.05%)</title><rect x="3.2987%" y="1125" width="0.0488%" height="15" fill="rgb(239,229,30)" fg:x="1148" fg:w="17"/><text x="3.5487%" y="1135.50"></text></g><g><title>alloc::slice::hack::to_vec (17 samples, 0.05%)</title><rect x="3.2987%" y="1109" width="0.0488%" height="15" fill="rgb(219,65,33)" fg:x="1148" fg:w="17"/><text x="3.5487%" y="1119.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (17 samples, 0.05%)</title><rect x="3.2987%" y="1093" width="0.0488%" height="15" fill="rgb(243,134,7)" fg:x="1148" fg:w="17"/><text x="3.5487%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (17 samples, 0.05%)</title><rect x="3.2987%" y="1077" width="0.0488%" height="15" fill="rgb(216,177,54)" fg:x="1148" fg:w="17"/><text x="3.5487%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (17 samples, 0.05%)</title><rect x="3.2987%" y="1061" width="0.0488%" height="15" fill="rgb(211,160,20)" fg:x="1148" fg:w="17"/><text x="3.5487%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (17 samples, 0.05%)</title><rect x="3.2987%" y="1045" width="0.0488%" height="15" fill="rgb(239,85,39)" fg:x="1148" fg:w="17"/><text x="3.5487%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (17 samples, 0.05%)</title><rect x="3.2987%" y="1029" width="0.0488%" height="15" fill="rgb(232,125,22)" fg:x="1148" fg:w="17"/><text x="3.5487%" y="1039.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (17 samples, 0.05%)</title><rect x="3.2987%" y="1013" width="0.0488%" height="15" fill="rgb(244,57,34)" fg:x="1148" fg:w="17"/><text x="3.5487%" y="1023.50"></text></g><g><title>alloc::alloc::alloc (17 samples, 0.05%)</title><rect x="3.2987%" y="997" width="0.0488%" height="15" fill="rgb(214,203,32)" fg:x="1148" fg:w="17"/><text x="3.5487%" y="1007.50"></text></g><g><title>mallocx (7 samples, 0.02%)</title><rect x="3.3274%" y="981" width="0.0201%" height="15" fill="rgb(207,58,43)" fg:x="1158" fg:w="7"/><text x="3.5774%" y="991.50"></text></g><g><title>imalloc (7 samples, 0.02%)</title><rect x="3.3274%" y="965" width="0.0201%" height="15" fill="rgb(215,193,15)" fg:x="1158" fg:w="7"/><text x="3.5774%" y="975.50"></text></g><g><title>imalloc_body (7 samples, 0.02%)</title><rect x="3.3274%" y="949" width="0.0201%" height="15" fill="rgb(232,15,44)" fg:x="1158" fg:w="7"/><text x="3.5774%" y="959.50"></text></g><g><title>imalloc_no_sample (7 samples, 0.02%)</title><rect x="3.3274%" y="933" width="0.0201%" height="15" fill="rgb(212,3,48)" fg:x="1158" fg:w="7"/><text x="3.5774%" y="943.50"></text></g><g><title>iallocztm (7 samples, 0.02%)</title><rect x="3.3274%" y="917" width="0.0201%" height="15" fill="rgb(218,128,7)" fg:x="1158" fg:w="7"/><text x="3.5774%" y="927.50"></text></g><g><title>arena_malloc (7 samples, 0.02%)</title><rect x="3.3274%" y="901" width="0.0201%" height="15" fill="rgb(226,216,39)" fg:x="1158" fg:w="7"/><text x="3.5774%" y="911.50"></text></g><g><title>tcache_alloc_small (7 samples, 0.02%)</title><rect x="3.3274%" y="885" width="0.0201%" height="15" fill="rgb(243,47,51)" fg:x="1158" fg:w="7"/><text x="3.5774%" y="895.50"></text></g><g><title>cache_bin_alloc_easy (7 samples, 0.02%)</title><rect x="3.3274%" y="869" width="0.0201%" height="15" fill="rgb(241,183,40)" fg:x="1158" fg:w="7"/><text x="3.5774%" y="879.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (39 samples, 0.11%)</title><rect x="3.2584%" y="1285" width="0.1121%" height="15" fill="rgb(231,217,32)" fg:x="1134" fg:w="39"/><text x="3.5084%" y="1295.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (39 samples, 0.11%)</title><rect x="3.2584%" y="1269" width="0.1121%" height="15" fill="rgb(229,61,38)" fg:x="1134" fg:w="39"/><text x="3.5084%" y="1279.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (39 samples, 0.11%)</title><rect x="3.2584%" y="1253" width="0.1121%" height="15" fill="rgb(225,210,5)" fg:x="1134" fg:w="39"/><text x="3.5084%" y="1263.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (8 samples, 0.02%)</title><rect x="3.3475%" y="1237" width="0.0230%" height="15" fill="rgb(231,79,45)" fg:x="1165" fg:w="8"/><text x="3.5975%" y="1247.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (8 samples, 0.02%)</title><rect x="3.3475%" y="1221" width="0.0230%" height="15" fill="rgb(224,100,7)" fg:x="1165" fg:w="8"/><text x="3.5975%" y="1231.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (8 samples, 0.02%)</title><rect x="3.3475%" y="1205" width="0.0230%" height="15" fill="rgb(241,198,18)" fg:x="1165" fg:w="8"/><text x="3.5975%" y="1215.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.02%)</title><rect x="3.3475%" y="1189" width="0.0230%" height="15" fill="rgb(252,97,53)" fg:x="1165" fg:w="8"/><text x="3.5975%" y="1199.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.02%)</title><rect x="3.3475%" y="1173" width="0.0230%" height="15" fill="rgb(220,88,7)" fg:x="1165" fg:w="8"/><text x="3.5975%" y="1183.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.02%)</title><rect x="3.3475%" y="1157" width="0.0230%" height="15" fill="rgb(213,176,14)" fg:x="1165" fg:w="8"/><text x="3.5975%" y="1167.50"></text></g><g><title>mallocx (8 samples, 0.02%)</title><rect x="3.3475%" y="1141" width="0.0230%" height="15" fill="rgb(246,73,7)" fg:x="1165" fg:w="8"/><text x="3.5975%" y="1151.50"></text></g><g><title>imalloc (8 samples, 0.02%)</title><rect x="3.3475%" y="1125" width="0.0230%" height="15" fill="rgb(245,64,36)" fg:x="1165" fg:w="8"/><text x="3.5975%" y="1135.50"></text></g><g><title>imalloc_body (8 samples, 0.02%)</title><rect x="3.3475%" y="1109" width="0.0230%" height="15" fill="rgb(245,80,10)" fg:x="1165" fg:w="8"/><text x="3.5975%" y="1119.50"></text></g><g><title>imalloc_no_sample (8 samples, 0.02%)</title><rect x="3.3475%" y="1093" width="0.0230%" height="15" fill="rgb(232,107,50)" fg:x="1165" fg:w="8"/><text x="3.5975%" y="1103.50"></text></g><g><title>iallocztm (8 samples, 0.02%)</title><rect x="3.3475%" y="1077" width="0.0230%" height="15" fill="rgb(253,3,0)" fg:x="1165" fg:w="8"/><text x="3.5975%" y="1087.50"></text></g><g><title>arena_malloc (8 samples, 0.02%)</title><rect x="3.3475%" y="1061" width="0.0230%" height="15" fill="rgb(212,99,53)" fg:x="1165" fg:w="8"/><text x="3.5975%" y="1071.50"></text></g><g><title>tcache_alloc_small (8 samples, 0.02%)</title><rect x="3.3475%" y="1045" width="0.0230%" height="15" fill="rgb(249,111,54)" fg:x="1165" fg:w="8"/><text x="3.5975%" y="1055.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (8 samples, 0.02%)</title><rect x="3.3475%" y="1029" width="0.0230%" height="15" fill="rgb(249,55,30)" fg:x="1165" fg:w="8"/><text x="3.5975%" y="1039.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (8 samples, 0.02%)</title><rect x="3.3475%" y="1013" width="0.0230%" height="15" fill="rgb(237,47,42)" fg:x="1165" fg:w="8"/><text x="3.5975%" y="1023.50"></text></g><g><title>arena_bin_malloc_hard (6 samples, 0.02%)</title><rect x="3.3533%" y="997" width="0.0172%" height="15" fill="rgb(211,20,18)" fg:x="1167" fg:w="6"/><text x="3.6033%" y="1007.50"></text></g><g><title>arena_bin_nonfull_slab_get (6 samples, 0.02%)</title><rect x="3.3533%" y="981" width="0.0172%" height="15" fill="rgb(231,203,46)" fg:x="1167" fg:w="6"/><text x="3.6033%" y="991.50"></text></g><g><title>arena_slab_alloc (6 samples, 0.02%)</title><rect x="3.3533%" y="965" width="0.0172%" height="15" fill="rgb(237,142,3)" fg:x="1167" fg:w="6"/><text x="3.6033%" y="975.50"></text></g><g><title>extent_recycle (5 samples, 0.01%)</title><rect x="3.3561%" y="949" width="0.0144%" height="15" fill="rgb(241,107,1)" fg:x="1168" fg:w="5"/><text x="3.6061%" y="959.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="3.3705%" y="1189" width="0.0144%" height="15" fill="rgb(229,83,13)" fg:x="1173" fg:w="5"/><text x="3.6205%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::option::Option&lt;aptos_types::state_store::state_value::StateValue&gt;&gt;&gt; (5 samples, 0.01%)</title><rect x="3.3849%" y="1157" width="0.0144%" height="15" fill="rgb(241,91,40)" fg:x="1178" fg:w="5"/><text x="3.6349%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;aptos_types::state_store::state_value::StateValue&gt;&gt; (5 samples, 0.01%)</title><rect x="3.3849%" y="1141" width="0.0144%" height="15" fill="rgb(225,3,45)" fg:x="1178" fg:w="5"/><text x="3.6349%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::state_store::state_value::StateValue&gt; (5 samples, 0.01%)</title><rect x="3.3849%" y="1125" width="0.0144%" height="15" fill="rgb(244,223,14)" fg:x="1178" fg:w="5"/><text x="3.6349%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::state_store::state_value::StateValueInner&gt; (5 samples, 0.01%)</title><rect x="3.3849%" y="1109" width="0.0144%" height="15" fill="rgb(224,124,37)" fg:x="1178" fg:w="5"/><text x="3.6349%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (5 samples, 0.01%)</title><rect x="3.3849%" y="1093" width="0.0144%" height="15" fill="rgb(251,171,30)" fg:x="1178" fg:w="5"/><text x="3.6349%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (5 samples, 0.01%)</title><rect x="3.3849%" y="1077" width="0.0144%" height="15" fill="rgb(236,46,54)" fg:x="1178" fg:w="5"/><text x="3.6349%" y="1087.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="3.3849%" y="1061" width="0.0144%" height="15" fill="rgb(245,213,5)" fg:x="1178" fg:w="5"/><text x="3.6349%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.01%)</title><rect x="3.3849%" y="1045" width="0.0144%" height="15" fill="rgb(230,144,27)" fg:x="1178" fg:w="5"/><text x="3.6349%" y="1055.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.01%)</title><rect x="3.3849%" y="1029" width="0.0144%" height="15" fill="rgb(220,86,6)" fg:x="1178" fg:w="5"/><text x="3.6349%" y="1039.50"></text></g><g><title>sdallocx (4 samples, 0.01%)</title><rect x="3.3877%" y="1013" width="0.0115%" height="15" fill="rgb(240,20,13)" fg:x="1179" fg:w="4"/><text x="3.6377%" y="1023.50"></text></g><g><title>isfree (4 samples, 0.01%)</title><rect x="3.3877%" y="997" width="0.0115%" height="15" fill="rgb(217,89,34)" fg:x="1179" fg:w="4"/><text x="3.6377%" y="1007.50"></text></g><g><title>isdalloct (4 samples, 0.01%)</title><rect x="3.3877%" y="981" width="0.0115%" height="15" fill="rgb(229,13,5)" fg:x="1179" fg:w="4"/><text x="3.6377%" y="991.50"></text></g><g><title>arena_sdalloc (4 samples, 0.01%)</title><rect x="3.3877%" y="965" width="0.0115%" height="15" fill="rgb(244,67,35)" fg:x="1179" fg:w="4"/><text x="3.6377%" y="975.50"></text></g><g><title>tcache_dalloc_small (4 samples, 0.01%)</title><rect x="3.3877%" y="949" width="0.0115%" height="15" fill="rgb(221,40,2)" fg:x="1179" fg:w="4"/><text x="3.6377%" y="959.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (4 samples, 0.01%)</title><rect x="3.4308%" y="997" width="0.0115%" height="15" fill="rgb(237,157,21)" fg:x="1194" fg:w="4"/><text x="3.6808%" y="1007.50"></text></g><g><title>core::hash::Hasher::write_usize (4 samples, 0.01%)</title><rect x="3.4308%" y="981" width="0.0115%" height="15" fill="rgb(222,94,11)" fg:x="1194" fg:w="4"/><text x="3.6808%" y="991.50"></text></g><g><title>core::num::&lt;impl usize&gt;::to_ne_bytes (4 samples, 0.01%)</title><rect x="3.4308%" y="965" width="0.0115%" height="15" fill="rgb(249,113,6)" fg:x="1194" fg:w="4"/><text x="3.6808%" y="975.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::hash::Hash&gt;::hash (11 samples, 0.03%)</title><rect x="3.4308%" y="1077" width="0.0316%" height="15" fill="rgb(238,137,36)" fg:x="1194" fg:w="11"/><text x="3.6808%" y="1087.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (11 samples, 0.03%)</title><rect x="3.4308%" y="1061" width="0.0316%" height="15" fill="rgb(210,102,26)" fg:x="1194" fg:w="11"/><text x="3.6808%" y="1071.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T (11 samples, 0.03%)</title><rect x="3.4308%" y="1045" width="0.0316%" height="15" fill="rgb(218,30,30)" fg:x="1194" fg:w="11"/><text x="3.6808%" y="1055.50"></text></g><g><title> N]&gt;::hash (11 samples, 0.03%)</title><rect x="3.4308%" y="1029" width="0.0316%" height="15" fill="rgb(214,67,26)" fg:x="1194" fg:w="11"/><text x="3.6808%" y="1039.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (11 samples, 0.03%)</title><rect x="3.4308%" y="1013" width="0.0316%" height="15" fill="rgb(251,9,53)" fg:x="1194" fg:w="11"/><text x="3.6808%" y="1023.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (7 samples, 0.02%)</title><rect x="3.4423%" y="997" width="0.0201%" height="15" fill="rgb(228,204,25)" fg:x="1198" fg:w="7"/><text x="3.6923%" y="1007.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (7 samples, 0.02%)</title><rect x="3.4423%" y="981" width="0.0201%" height="15" fill="rgb(207,153,8)" fg:x="1198" fg:w="7"/><text x="3.6923%" y="991.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (7 samples, 0.02%)</title><rect x="3.4423%" y="965" width="0.0201%" height="15" fill="rgb(242,9,16)" fg:x="1198" fg:w="7"/><text x="3.6923%" y="975.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.02%)</title><rect x="3.4423%" y="949" width="0.0201%" height="15" fill="rgb(217,211,10)" fg:x="1198" fg:w="7"/><text x="3.6923%" y="959.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (7 samples, 0.02%)</title><rect x="3.4423%" y="933" width="0.0201%" height="15" fill="rgb(219,228,52)" fg:x="1198" fg:w="7"/><text x="3.6923%" y="943.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (38 samples, 0.11%)</title><rect x="3.3705%" y="1285" width="0.1092%" height="15" fill="rgb(231,92,29)" fg:x="1173" fg:w="38"/><text x="3.6205%" y="1295.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (38 samples, 0.11%)</title><rect x="3.3705%" y="1269" width="0.1092%" height="15" fill="rgb(232,8,23)" fg:x="1173" fg:w="38"/><text x="3.6205%" y="1279.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (38 samples, 0.11%)</title><rect x="3.3705%" y="1253" width="0.1092%" height="15" fill="rgb(216,211,34)" fg:x="1173" fg:w="38"/><text x="3.6205%" y="1263.50"></text></g><g><title>&lt;std::collections::hash::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (38 samples, 0.11%)</title><rect x="3.3705%" y="1237" width="0.1092%" height="15" fill="rgb(236,151,0)" fg:x="1173" fg:w="38"/><text x="3.6205%" y="1247.50"></text></g><g><title>&lt;hashbrown::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (38 samples, 0.11%)</title><rect x="3.3705%" y="1221" width="0.1092%" height="15" fill="rgb(209,168,3)" fg:x="1173" fg:w="38"/><text x="3.6205%" y="1231.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (38 samples, 0.11%)</title><rect x="3.3705%" y="1205" width="0.1092%" height="15" fill="rgb(208,129,28)" fg:x="1173" fg:w="38"/><text x="3.6205%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (33 samples, 0.09%)</title><rect x="3.3849%" y="1189" width="0.0948%" height="15" fill="rgb(229,78,22)" fg:x="1178" fg:w="33"/><text x="3.6349%" y="1199.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (33 samples, 0.09%)</title><rect x="3.3849%" y="1173" width="0.0948%" height="15" fill="rgb(228,187,13)" fg:x="1178" fg:w="33"/><text x="3.6349%" y="1183.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (28 samples, 0.08%)</title><rect x="3.3992%" y="1157" width="0.0805%" height="15" fill="rgb(240,119,24)" fg:x="1183" fg:w="28"/><text x="3.6492%" y="1167.50"></text></g><g><title>hashbrown::map::make_hash (17 samples, 0.05%)</title><rect x="3.4308%" y="1141" width="0.0488%" height="15" fill="rgb(209,194,42)" fg:x="1194" fg:w="17"/><text x="3.6808%" y="1151.50"></text></g><g><title>core::hash::BuildHasher::hash_one (17 samples, 0.05%)</title><rect x="3.4308%" y="1125" width="0.0488%" height="15" fill="rgb(247,200,46)" fg:x="1194" fg:w="17"/><text x="3.6808%" y="1135.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (17 samples, 0.05%)</title><rect x="3.4308%" y="1109" width="0.0488%" height="15" fill="rgb(218,76,16)" fg:x="1194" fg:w="17"/><text x="3.6808%" y="1119.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (17 samples, 0.05%)</title><rect x="3.4308%" y="1093" width="0.0488%" height="15" fill="rgb(225,21,48)" fg:x="1194" fg:w="17"/><text x="3.6808%" y="1103.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (6 samples, 0.02%)</title><rect x="3.4624%" y="1077" width="0.0172%" height="15" fill="rgb(239,223,50)" fg:x="1205" fg:w="6"/><text x="3.7124%" y="1087.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (6 samples, 0.02%)</title><rect x="3.4624%" y="1061" width="0.0172%" height="15" fill="rgb(244,45,21)" fg:x="1205" fg:w="6"/><text x="3.7124%" y="1071.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.02%)</title><rect x="3.4624%" y="1045" width="0.0172%" height="15" fill="rgb(232,33,43)" fg:x="1205" fg:w="6"/><text x="3.7124%" y="1055.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (6 samples, 0.02%)</title><rect x="3.4624%" y="1029" width="0.0172%" height="15" fill="rgb(209,8,3)" fg:x="1205" fg:w="6"/><text x="3.7124%" y="1039.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="3.4854%" y="1061" width="0.0144%" height="15" fill="rgb(214,25,53)" fg:x="1213" fg:w="5"/><text x="3.7354%" y="1071.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (5 samples, 0.01%)</title><rect x="3.4854%" y="1045" width="0.0144%" height="15" fill="rgb(254,186,54)" fg:x="1213" fg:w="5"/><text x="3.7354%" y="1055.50"></text></g><g><title>hashbrown::map::make_hash (19 samples, 0.05%)</title><rect x="3.5027%" y="965" width="0.0546%" height="15" fill="rgb(208,174,49)" fg:x="1219" fg:w="19"/><text x="3.7527%" y="975.50"></text></g><g><title>core::hash::BuildHasher::hash_one (15 samples, 0.04%)</title><rect x="3.5142%" y="949" width="0.0431%" height="15" fill="rgb(233,191,51)" fg:x="1223" fg:w="15"/><text x="3.7642%" y="959.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (15 samples, 0.04%)</title><rect x="3.5142%" y="933" width="0.0431%" height="15" fill="rgb(222,134,10)" fg:x="1223" fg:w="15"/><text x="3.7642%" y="943.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (15 samples, 0.04%)</title><rect x="3.5142%" y="917" width="0.0431%" height="15" fill="rgb(230,226,20)" fg:x="1223" fg:w="15"/><text x="3.7642%" y="927.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (10 samples, 0.03%)</title><rect x="3.5285%" y="901" width="0.0287%" height="15" fill="rgb(251,111,25)" fg:x="1228" fg:w="10"/><text x="3.7785%" y="911.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (10 samples, 0.03%)</title><rect x="3.5285%" y="885" width="0.0287%" height="15" fill="rgb(224,40,46)" fg:x="1228" fg:w="10"/><text x="3.7785%" y="895.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (10 samples, 0.03%)</title><rect x="3.5285%" y="869" width="0.0287%" height="15" fill="rgb(236,108,47)" fg:x="1228" fg:w="10"/><text x="3.7785%" y="879.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (5 samples, 0.01%)</title><rect x="3.5630%" y="821" width="0.0144%" height="15" fill="rgb(234,93,0)" fg:x="1240" fg:w="5"/><text x="3.8130%" y="831.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (5 samples, 0.01%)</title><rect x="3.5630%" y="805" width="0.0144%" height="15" fill="rgb(224,213,32)" fg:x="1240" fg:w="5"/><text x="3.8130%" y="815.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (5 samples, 0.01%)</title><rect x="3.5630%" y="789" width="0.0144%" height="15" fill="rgb(251,11,48)" fg:x="1240" fg:w="5"/><text x="3.8130%" y="799.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (5 samples, 0.01%)</title><rect x="3.5630%" y="773" width="0.0144%" height="15" fill="rgb(236,173,5)" fg:x="1240" fg:w="5"/><text x="3.8130%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (12 samples, 0.03%)</title><rect x="3.5630%" y="885" width="0.0345%" height="15" fill="rgb(230,95,12)" fg:x="1240" fg:w="12"/><text x="3.8130%" y="895.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (12 samples, 0.03%)</title><rect x="3.5630%" y="869" width="0.0345%" height="15" fill="rgb(232,209,1)" fg:x="1240" fg:w="12"/><text x="3.8130%" y="879.50"></text></g><g><title>hashbrown::map::make_hash (12 samples, 0.03%)</title><rect x="3.5630%" y="853" width="0.0345%" height="15" fill="rgb(232,6,1)" fg:x="1240" fg:w="12"/><text x="3.8130%" y="863.50"></text></g><g><title>core::hash::BuildHasher::hash_one (12 samples, 0.03%)</title><rect x="3.5630%" y="837" width="0.0345%" height="15" fill="rgb(210,224,50)" fg:x="1240" fg:w="12"/><text x="3.8130%" y="847.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (7 samples, 0.02%)</title><rect x="3.5774%" y="821" width="0.0201%" height="15" fill="rgb(228,127,35)" fg:x="1245" fg:w="7"/><text x="3.8274%" y="831.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (7 samples, 0.02%)</title><rect x="3.5774%" y="805" width="0.0201%" height="15" fill="rgb(245,102,45)" fg:x="1245" fg:w="7"/><text x="3.8274%" y="815.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (6 samples, 0.02%)</title><rect x="3.5803%" y="789" width="0.0172%" height="15" fill="rgb(214,1,49)" fg:x="1246" fg:w="6"/><text x="3.8303%" y="799.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (6 samples, 0.02%)</title><rect x="3.5803%" y="773" width="0.0172%" height="15" fill="rgb(226,163,40)" fg:x="1246" fg:w="6"/><text x="3.8303%" y="783.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.02%)</title><rect x="3.5803%" y="757" width="0.0172%" height="15" fill="rgb(239,212,28)" fg:x="1246" fg:w="6"/><text x="3.8303%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (6 samples, 0.02%)</title><rect x="3.5803%" y="741" width="0.0172%" height="15" fill="rgb(220,20,13)" fg:x="1246" fg:w="6"/><text x="3.8303%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::{{closure}} (35 samples, 0.10%)</title><rect x="3.4998%" y="1045" width="0.1006%" height="15" fill="rgb(210,164,35)" fg:x="1218" fg:w="35"/><text x="3.7498%" y="1055.50"></text></g><g><title>core::ops::try_trait::NeverShortCircuit&lt;T&gt;::wrap_mut_2::{{closure}} (34 samples, 0.10%)</title><rect x="3.5027%" y="1029" width="0.0977%" height="15" fill="rgb(248,109,41)" fg:x="1219" fg:w="34"/><text x="3.7527%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (34 samples, 0.10%)</title><rect x="3.5027%" y="1013" width="0.0977%" height="15" fill="rgb(238,23,50)" fg:x="1219" fg:w="34"/><text x="3.7527%" y="1023.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (34 samples, 0.10%)</title><rect x="3.5027%" y="997" width="0.0977%" height="15" fill="rgb(211,48,49)" fg:x="1219" fg:w="34"/><text x="3.7527%" y="1007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (34 samples, 0.10%)</title><rect x="3.5027%" y="981" width="0.0977%" height="15" fill="rgb(223,36,21)" fg:x="1219" fg:w="34"/><text x="3.7527%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (15 samples, 0.04%)</title><rect x="3.5573%" y="965" width="0.0431%" height="15" fill="rgb(207,123,46)" fg:x="1238" fg:w="15"/><text x="3.8073%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (15 samples, 0.04%)</title><rect x="3.5573%" y="949" width="0.0431%" height="15" fill="rgb(240,218,32)" fg:x="1238" fg:w="15"/><text x="3.8073%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (15 samples, 0.04%)</title><rect x="3.5573%" y="933" width="0.0431%" height="15" fill="rgb(252,5,43)" fg:x="1238" fg:w="15"/><text x="3.8073%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (15 samples, 0.04%)</title><rect x="3.5573%" y="917" width="0.0431%" height="15" fill="rgb(252,84,19)" fg:x="1238" fg:w="15"/><text x="3.8073%" y="927.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (15 samples, 0.04%)</title><rect x="3.5573%" y="901" width="0.0431%" height="15" fill="rgb(243,152,39)" fg:x="1238" fg:w="15"/><text x="3.8073%" y="911.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::clone::Clone&gt;::clone (4 samples, 0.01%)</title><rect x="3.6032%" y="1013" width="0.0115%" height="15" fill="rgb(234,160,15)" fg:x="1254" fg:w="4"/><text x="3.8532%" y="1023.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (143 samples, 0.41%)</title><rect x="3.6234%" y="885" width="0.4109%" height="15" fill="rgb(237,34,20)" fg:x="1261" fg:w="143"/><text x="3.8734%" y="895.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (143 samples, 0.41%)</title><rect x="3.6234%" y="869" width="0.4109%" height="15" fill="rgb(229,97,13)" fg:x="1261" fg:w="143"/><text x="3.8734%" y="879.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (143 samples, 0.41%)</title><rect x="3.6234%" y="853" width="0.4109%" height="15" fill="rgb(234,71,50)" fg:x="1261" fg:w="143"/><text x="3.8734%" y="863.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (142 samples, 0.41%)</title><rect x="3.6262%" y="837" width="0.4080%" height="15" fill="rgb(253,155,4)" fg:x="1262" fg:w="142"/><text x="3.8762%" y="847.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::StateValueInnerHasher as aptos_crypto::hash::CryptoHasher&gt;::finish (156 samples, 0.45%)</title><rect x="3.6205%" y="965" width="0.4483%" height="15" fill="rgb(222,185,37)" fg:x="1260" fg:w="156"/><text x="3.8705%" y="975.50"></text></g><g><title>aptos_crypto::hash::DefaultHasher::finish (155 samples, 0.45%)</title><rect x="3.6234%" y="949" width="0.4454%" height="15" fill="rgb(251,177,13)" fg:x="1261" fg:w="155"/><text x="3.8734%" y="959.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (155 samples, 0.45%)</title><rect x="3.6234%" y="933" width="0.4454%" height="15" fill="rgb(250,179,40)" fg:x="1261" fg:w="155"/><text x="3.8734%" y="943.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (155 samples, 0.45%)</title><rect x="3.6234%" y="917" width="0.4454%" height="15" fill="rgb(242,44,2)" fg:x="1261" fg:w="155"/><text x="3.8734%" y="927.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (155 samples, 0.45%)</title><rect x="3.6234%" y="901" width="0.4454%" height="15" fill="rgb(216,177,13)" fg:x="1261" fg:w="155"/><text x="3.8734%" y="911.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::pad (12 samples, 0.03%)</title><rect x="4.0343%" y="885" width="0.0345%" height="15" fill="rgb(216,106,43)" fg:x="1404" fg:w="12"/><text x="4.2843%" y="895.50"></text></g><g><title>tiny_keccak::Buffer::pad (12 samples, 0.03%)</title><rect x="4.0343%" y="869" width="0.0345%" height="15" fill="rgb(216,183,2)" fg:x="1404" fg:w="12"/><text x="4.2843%" y="879.50"></text></g><g><title>tiny_keccak::Buffer::execute (12 samples, 0.03%)</title><rect x="4.0343%" y="853" width="0.0345%" height="15" fill="rgb(249,75,3)" fg:x="1404" fg:w="12"/><text x="4.2843%" y="863.50"></text></g><g><title>tiny_keccak::Buffer::pad::{{closure}} (12 samples, 0.03%)</title><rect x="4.0343%" y="837" width="0.0345%" height="15" fill="rgb(219,67,39)" fg:x="1404" fg:w="12"/><text x="4.2843%" y="847.50"></text></g><g><title>tiny_keccak::Buffer::xorin (92 samples, 0.26%)</title><rect x="4.0716%" y="789" width="0.2644%" height="15" fill="rgb(253,228,2)" fg:x="1417" fg:w="92"/><text x="4.3216%" y="799.50"></text></g><g><title>tiny_keccak::Buffer::execute (92 samples, 0.26%)</title><rect x="4.0716%" y="773" width="0.2644%" height="15" fill="rgb(235,138,27)" fg:x="1417" fg:w="92"/><text x="4.3216%" y="783.50"></text></g><g><title>tiny_keccak::Buffer::xorin::{{closure}} (92 samples, 0.26%)</title><rect x="4.0716%" y="757" width="0.2644%" height="15" fill="rgb(236,97,51)" fg:x="1417" fg:w="92"/><text x="4.3216%" y="767.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::StateValue as core::convert::From&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::from (3,638 samples, 10.45%)</title><rect x="3.6147%" y="1013" width="10.4534%" height="15" fill="rgb(240,80,30)" fg:x="1258" fg:w="3638"/><text x="3.8647%" y="1023.50">&lt;aptos_types::s..</text></g><g><title>aptos_types::state_store::state_value::StateValue::new (3,638 samples, 10.45%)</title><rect x="3.6147%" y="997" width="10.4534%" height="15" fill="rgb(230,178,19)" fg:x="1258" fg:w="3638"/><text x="3.8647%" y="1007.50">aptos_types::st..</text></g><g><title>&lt;aptos_types::state_store::state_value::StateValueInner as aptos_crypto::hash::CryptoHash&gt;::hash (3,636 samples, 10.45%)</title><rect x="3.6205%" y="981" width="10.4477%" height="15" fill="rgb(210,190,27)" fg:x="1260" fg:w="3636"/><text x="3.8705%" y="991.50">&lt;aptos_types::s..</text></g><g><title>bcs::ser::serialize_into (3,480 samples, 10.00%)</title><rect x="4.0687%" y="965" width="9.9994%" height="15" fill="rgb(222,107,31)" fg:x="1416" fg:w="3480"/><text x="4.3187%" y="975.50">bcs::ser::seri..</text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (3,480 samples, 10.00%)</title><rect x="4.0687%" y="949" width="9.9994%" height="15" fill="rgb(216,127,34)" fg:x="1416" fg:w="3480"/><text x="4.3187%" y="959.50">serde::ser::im..</text></g><g><title>aptos_types::state_store::state_value::_::&lt;impl serde::ser::Serialize for aptos_types::state_store::state_value::StateValueInner&gt;::serialize (3,480 samples, 10.00%)</title><rect x="4.0687%" y="933" width="9.9994%" height="15" fill="rgb(234,116,52)" fg:x="1416" fg:w="3480"/><text x="4.3187%" y="943.50">aptos_types::s..</text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (3,480 samples, 10.00%)</title><rect x="4.0687%" y="917" width="9.9994%" height="15" fill="rgb(222,124,15)" fg:x="1416" fg:w="3480"/><text x="4.3187%" y="927.50">&lt;bcs::ser::Ser..</text></g><g><title>&lt;aptos_types::state_store::state_value::_::&lt;impl serde::ser::Serialize for aptos_types::state_store::state_value::StateValueInner&gt;::serialize::__SerializeWith as serde::ser::Serialize&gt;::serialize (3,480 samples, 10.00%)</title><rect x="4.0687%" y="901" width="9.9994%" height="15" fill="rgb(231,179,28)" fg:x="1416" fg:w="3480"/><text x="4.3187%" y="911.50">&lt;aptos_types::..</text></g><g><title>serde_bytes::serialize (3,480 samples, 10.00%)</title><rect x="4.0687%" y="885" width="9.9994%" height="15" fill="rgb(226,93,45)" fg:x="1416" fg:w="3480"/><text x="4.3187%" y="895.50">serde_bytes::s..</text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as serde_bytes::ser::Serialize&gt;::serialize (3,480 samples, 10.00%)</title><rect x="4.0687%" y="869" width="9.9994%" height="15" fill="rgb(215,8,51)" fg:x="1416" fg:w="3480"/><text x="4.3187%" y="879.50">&lt;alloc::vec::V..</text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_bytes (3,480 samples, 10.00%)</title><rect x="4.0687%" y="853" width="9.9994%" height="15" fill="rgb(223,106,5)" fg:x="1416" fg:w="3480"/><text x="4.3187%" y="863.50">&lt;bcs::ser::Ser..</text></g><g><title>std::io::Write::write_all (3,479 samples, 10.00%)</title><rect x="4.0716%" y="837" width="9.9966%" height="15" fill="rgb(250,191,5)" fg:x="1417" fg:w="3479"/><text x="4.3216%" y="847.50">std::io::Write..</text></g><g><title>&lt;aptos_types::state_store::state_value::StateValueInnerHasher as std::io::Write&gt;::write (3,479 samples, 10.00%)</title><rect x="4.0716%" y="821" width="9.9966%" height="15" fill="rgb(242,132,44)" fg:x="1417" fg:w="3479"/><text x="4.3216%" y="831.50">&lt;aptos_types::..</text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (3,479 samples, 10.00%)</title><rect x="4.0716%" y="805" width="9.9966%" height="15" fill="rgb(251,152,29)" fg:x="1417" fg:w="3479"/><text x="4.3216%" y="815.50">tiny_keccak::K..</text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (3,387 samples, 9.73%)</title><rect x="4.3360%" y="789" width="9.7322%" height="15" fill="rgb(218,179,5)" fg:x="1509" fg:w="3387"/><text x="4.5860%" y="799.50">tiny_keccak::K..</text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (3,387 samples, 9.73%)</title><rect x="4.3360%" y="773" width="9.7322%" height="15" fill="rgb(227,67,19)" fg:x="1509" fg:w="3387"/><text x="4.5860%" y="783.50">&lt;tiny_keccak::..</text></g><g><title>tiny_keccak::keccakf::keccakf (3,384 samples, 9.72%)</title><rect x="4.3446%" y="757" width="9.7236%" height="15" fill="rgb(233,119,31)" fg:x="1512" fg:w="3384"/><text x="4.5946%" y="767.50">tiny_keccak::k..</text></g><g><title>extent_recycle_extract (6 samples, 0.02%)</title><rect x="14.0883%" y="645" width="0.0172%" height="15" fill="rgb(241,120,22)" fg:x="4903" fg:w="6"/><text x="14.3383%" y="655.50"></text></g><g><title>extents_fit_locked (4 samples, 0.01%)</title><rect x="14.0940%" y="629" width="0.0115%" height="15" fill="rgb(224,102,30)" fg:x="4905" fg:w="4"/><text x="14.3440%" y="639.50"></text></g><g><title>tcache_alloc_large (24 samples, 0.07%)</title><rect x="14.0682%" y="709" width="0.0690%" height="15" fill="rgb(210,164,37)" fg:x="4896" fg:w="24"/><text x="14.3182%" y="719.50"></text></g><g><title>_rjem_je_large_palloc (24 samples, 0.07%)</title><rect x="14.0682%" y="693" width="0.0690%" height="15" fill="rgb(226,191,16)" fg:x="4896" fg:w="24"/><text x="14.3182%" y="703.50"></text></g><g><title>_rjem_je_arena_extent_alloc_large (23 samples, 0.07%)</title><rect x="14.0710%" y="677" width="0.0661%" height="15" fill="rgb(214,40,45)" fg:x="4897" fg:w="23"/><text x="14.3210%" y="687.50"></text></g><g><title>extent_recycle (17 samples, 0.05%)</title><rect x="14.0883%" y="661" width="0.0488%" height="15" fill="rgb(244,29,26)" fg:x="4903" fg:w="17"/><text x="14.3383%" y="671.50"></text></g><g><title>extent_recycle_split (11 samples, 0.03%)</title><rect x="14.1055%" y="645" width="0.0316%" height="15" fill="rgb(216,16,5)" fg:x="4909" fg:w="11"/><text x="14.3555%" y="655.50"></text></g><g><title>extent_split_interior (11 samples, 0.03%)</title><rect x="14.1055%" y="629" width="0.0316%" height="15" fill="rgb(249,76,35)" fg:x="4909" fg:w="11"/><text x="14.3555%" y="639.50"></text></g><g><title>extent_split_impl (11 samples, 0.03%)</title><rect x="14.1055%" y="613" width="0.0316%" height="15" fill="rgb(207,11,44)" fg:x="4909" fg:w="11"/><text x="14.3555%" y="623.50"></text></g><g><title>_rjem_je_extent_alloc (9 samples, 0.03%)</title><rect x="14.1113%" y="597" width="0.0259%" height="15" fill="rgb(228,190,49)" fg:x="4911" fg:w="9"/><text x="14.3613%" y="607.50"></text></g><g><title>_rjem_je_extent_avail_remove (9 samples, 0.03%)</title><rect x="14.1113%" y="581" width="0.0259%" height="15" fill="rgb(214,173,12)" fg:x="4911" fg:w="9"/><text x="14.3613%" y="591.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (32 samples, 0.09%)</title><rect x="14.0682%" y="1013" width="0.0919%" height="15" fill="rgb(218,26,35)" fg:x="4896" fg:w="32"/><text x="14.3182%" y="1023.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::StateValue as core::clone::Clone&gt;::clone (32 samples, 0.09%)</title><rect x="14.0682%" y="997" width="0.0919%" height="15" fill="rgb(220,200,19)" fg:x="4896" fg:w="32"/><text x="14.3182%" y="1007.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::StateValueInner as core::clone::Clone&gt;::clone (32 samples, 0.09%)</title><rect x="14.0682%" y="981" width="0.0919%" height="15" fill="rgb(239,95,49)" fg:x="4896" fg:w="32"/><text x="14.3182%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (32 samples, 0.09%)</title><rect x="14.0682%" y="965" width="0.0919%" height="15" fill="rgb(235,85,53)" fg:x="4896" fg:w="32"/><text x="14.3182%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (32 samples, 0.09%)</title><rect x="14.0682%" y="949" width="0.0919%" height="15" fill="rgb(233,133,31)" fg:x="4896" fg:w="32"/><text x="14.3182%" y="959.50"></text></g><g><title>alloc::slice::hack::to_vec (32 samples, 0.09%)</title><rect x="14.0682%" y="933" width="0.0919%" height="15" fill="rgb(218,25,20)" fg:x="4896" fg:w="32"/><text x="14.3182%" y="943.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (32 samples, 0.09%)</title><rect x="14.0682%" y="917" width="0.0919%" height="15" fill="rgb(252,210,38)" fg:x="4896" fg:w="32"/><text x="14.3182%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (32 samples, 0.09%)</title><rect x="14.0682%" y="901" width="0.0919%" height="15" fill="rgb(242,134,21)" fg:x="4896" fg:w="32"/><text x="14.3182%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (32 samples, 0.09%)</title><rect x="14.0682%" y="885" width="0.0919%" height="15" fill="rgb(213,28,48)" fg:x="4896" fg:w="32"/><text x="14.3182%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (32 samples, 0.09%)</title><rect x="14.0682%" y="869" width="0.0919%" height="15" fill="rgb(250,196,2)" fg:x="4896" fg:w="32"/><text x="14.3182%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (32 samples, 0.09%)</title><rect x="14.0682%" y="853" width="0.0919%" height="15" fill="rgb(227,5,17)" fg:x="4896" fg:w="32"/><text x="14.3182%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (32 samples, 0.09%)</title><rect x="14.0682%" y="837" width="0.0919%" height="15" fill="rgb(221,226,24)" fg:x="4896" fg:w="32"/><text x="14.3182%" y="847.50"></text></g><g><title>alloc::alloc::alloc (32 samples, 0.09%)</title><rect x="14.0682%" y="821" width="0.0919%" height="15" fill="rgb(211,5,48)" fg:x="4896" fg:w="32"/><text x="14.3182%" y="831.50"></text></g><g><title>mallocx (32 samples, 0.09%)</title><rect x="14.0682%" y="805" width="0.0919%" height="15" fill="rgb(219,150,6)" fg:x="4896" fg:w="32"/><text x="14.3182%" y="815.50"></text></g><g><title>imalloc (32 samples, 0.09%)</title><rect x="14.0682%" y="789" width="0.0919%" height="15" fill="rgb(251,46,16)" fg:x="4896" fg:w="32"/><text x="14.3182%" y="799.50"></text></g><g><title>imalloc_body (32 samples, 0.09%)</title><rect x="14.0682%" y="773" width="0.0919%" height="15" fill="rgb(220,204,40)" fg:x="4896" fg:w="32"/><text x="14.3182%" y="783.50"></text></g><g><title>imalloc_no_sample (32 samples, 0.09%)</title><rect x="14.0682%" y="757" width="0.0919%" height="15" fill="rgb(211,85,2)" fg:x="4896" fg:w="32"/><text x="14.3182%" y="767.50"></text></g><g><title>iallocztm (32 samples, 0.09%)</title><rect x="14.0682%" y="741" width="0.0919%" height="15" fill="rgb(229,17,7)" fg:x="4896" fg:w="32"/><text x="14.3182%" y="751.50"></text></g><g><title>arena_malloc (32 samples, 0.09%)</title><rect x="14.0682%" y="725" width="0.0919%" height="15" fill="rgb(239,72,28)" fg:x="4896" fg:w="32"/><text x="14.3182%" y="735.50"></text></g><g><title>tcache_alloc_small (8 samples, 0.02%)</title><rect x="14.1371%" y="709" width="0.0230%" height="15" fill="rgb(230,47,54)" fg:x="4920" fg:w="8"/><text x="14.3871%" y="719.50"></text></g><g><title>cache_bin_alloc_easy (5 samples, 0.01%)</title><rect x="14.1457%" y="693" width="0.0144%" height="15" fill="rgb(214,50,8)" fg:x="4923" fg:w="5"/><text x="14.3957%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::state_store::state_value::StateValue&gt; (6 samples, 0.02%)</title><rect x="14.1601%" y="1013" width="0.0172%" height="15" fill="rgb(216,198,43)" fg:x="4928" fg:w="6"/><text x="14.4101%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::state_store::state_value::StateValueInner&gt; (6 samples, 0.02%)</title><rect x="14.1601%" y="997" width="0.0172%" height="15" fill="rgb(234,20,35)" fg:x="4928" fg:w="6"/><text x="14.4101%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (6 samples, 0.02%)</title><rect x="14.1601%" y="981" width="0.0172%" height="15" fill="rgb(254,45,19)" fg:x="4928" fg:w="6"/><text x="14.4101%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (6 samples, 0.02%)</title><rect x="14.1601%" y="965" width="0.0172%" height="15" fill="rgb(219,14,44)" fg:x="4928" fg:w="6"/><text x="14.4101%" y="975.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="14.1601%" y="949" width="0.0172%" height="15" fill="rgb(217,220,26)" fg:x="4928" fg:w="6"/><text x="14.4101%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.02%)</title><rect x="14.1601%" y="933" width="0.0172%" height="15" fill="rgb(213,158,28)" fg:x="4928" fg:w="6"/><text x="14.4101%" y="943.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.02%)</title><rect x="14.1601%" y="917" width="0.0172%" height="15" fill="rgb(252,51,52)" fg:x="4928" fg:w="6"/><text x="14.4101%" y="927.50"></text></g><g><title>sdallocx (4 samples, 0.01%)</title><rect x="14.1659%" y="901" width="0.0115%" height="15" fill="rgb(246,89,16)" fg:x="4930" fg:w="4"/><text x="14.4159%" y="911.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::hash::Hash&gt;::hash (17 samples, 0.05%)</title><rect x="14.2147%" y="917" width="0.0488%" height="15" fill="rgb(216,158,49)" fg:x="4947" fg:w="17"/><text x="14.4647%" y="927.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (17 samples, 0.05%)</title><rect x="14.2147%" y="901" width="0.0488%" height="15" fill="rgb(236,107,19)" fg:x="4947" fg:w="17"/><text x="14.4647%" y="911.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T (17 samples, 0.05%)</title><rect x="14.2147%" y="885" width="0.0488%" height="15" fill="rgb(228,185,30)" fg:x="4947" fg:w="17"/><text x="14.4647%" y="895.50"></text></g><g><title> N]&gt;::hash (17 samples, 0.05%)</title><rect x="14.2147%" y="869" width="0.0488%" height="15" fill="rgb(246,134,8)" fg:x="4947" fg:w="17"/><text x="14.4647%" y="879.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (17 samples, 0.05%)</title><rect x="14.2147%" y="853" width="0.0488%" height="15" fill="rgb(214,143,50)" fg:x="4947" fg:w="17"/><text x="14.4647%" y="863.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (17 samples, 0.05%)</title><rect x="14.2147%" y="837" width="0.0488%" height="15" fill="rgb(228,75,8)" fg:x="4947" fg:w="17"/><text x="14.4647%" y="847.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (15 samples, 0.04%)</title><rect x="14.2204%" y="821" width="0.0431%" height="15" fill="rgb(207,175,4)" fg:x="4949" fg:w="15"/><text x="14.4704%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3,761 samples, 10.81%)</title><rect x="3.4854%" y="1109" width="10.8069%" height="15" fill="rgb(205,108,24)" fg:x="1213" fg:w="3761"/><text x="3.7354%" y="1119.50">&lt;core::iter::ada..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3,761 samples, 10.81%)</title><rect x="3.4854%" y="1093" width="10.8069%" height="15" fill="rgb(244,120,49)" fg:x="1213" fg:w="3761"/><text x="3.7354%" y="1103.50">&lt;core::iter::ada..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3,761 samples, 10.81%)</title><rect x="3.4854%" y="1077" width="10.8069%" height="15" fill="rgb(223,47,38)" fg:x="1213" fg:w="3761"/><text x="3.7354%" y="1087.50">core::iter::trai..</text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (3,756 samples, 10.79%)</title><rect x="3.4998%" y="1061" width="10.7925%" height="15" fill="rgb(229,179,11)" fg:x="1218" fg:w="3756"/><text x="3.7498%" y="1071.50">core::iter::adap..</text></g><g><title>aptos_executor_types::in_memory_state_calculator::process_write_set::{{closure}} (3,721 samples, 10.69%)</title><rect x="3.6004%" y="1045" width="10.6919%" height="15" fill="rgb(231,122,1)" fg:x="1253" fg:w="3721"/><text x="3.8504%" y="1055.50">aptos_executor_t..</text></g><g><title>aptos_executor_types::in_memory_state_calculator::process_state_key_write_op (3,721 samples, 10.69%)</title><rect x="3.6004%" y="1029" width="10.6919%" height="15" fill="rgb(245,119,9)" fg:x="1253" fg:w="3721"/><text x="3.8504%" y="1039.50">aptos_executor_t..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (40 samples, 0.11%)</title><rect x="14.1773%" y="1013" width="0.1149%" height="15" fill="rgb(241,163,25)" fg:x="4934" fg:w="40"/><text x="14.4273%" y="1023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (40 samples, 0.11%)</title><rect x="14.1773%" y="997" width="0.1149%" height="15" fill="rgb(217,214,3)" fg:x="4934" fg:w="40"/><text x="14.4273%" y="1007.50"></text></g><g><title>hashbrown::map::make_hash (37 samples, 0.11%)</title><rect x="14.1860%" y="981" width="0.1063%" height="15" fill="rgb(240,86,28)" fg:x="4937" fg:w="37"/><text x="14.4360%" y="991.50"></text></g><g><title>core::hash::BuildHasher::hash_one (27 samples, 0.08%)</title><rect x="14.2147%" y="965" width="0.0776%" height="15" fill="rgb(215,47,9)" fg:x="4947" fg:w="27"/><text x="14.4647%" y="975.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (27 samples, 0.08%)</title><rect x="14.2147%" y="949" width="0.0776%" height="15" fill="rgb(252,25,45)" fg:x="4947" fg:w="27"/><text x="14.4647%" y="959.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (27 samples, 0.08%)</title><rect x="14.2147%" y="933" width="0.0776%" height="15" fill="rgb(251,164,9)" fg:x="4947" fg:w="27"/><text x="14.4647%" y="943.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (10 samples, 0.03%)</title><rect x="14.2635%" y="917" width="0.0287%" height="15" fill="rgb(233,194,0)" fg:x="4964" fg:w="10"/><text x="14.5135%" y="927.50"></text></g><g><title>core::hash::Hasher::write_isize (10 samples, 0.03%)</title><rect x="14.2635%" y="901" width="0.0287%" height="15" fill="rgb(249,111,24)" fg:x="4964" fg:w="10"/><text x="14.5135%" y="911.50"></text></g><g><title>core::hash::Hasher::write_usize (10 samples, 0.03%)</title><rect x="14.2635%" y="885" width="0.0287%" height="15" fill="rgb(250,223,3)" fg:x="4964" fg:w="10"/><text x="14.5135%" y="895.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (10 samples, 0.03%)</title><rect x="14.2635%" y="869" width="0.0287%" height="15" fill="rgb(236,178,37)" fg:x="4964" fg:w="10"/><text x="14.5135%" y="879.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (10 samples, 0.03%)</title><rect x="14.2635%" y="853" width="0.0287%" height="15" fill="rgb(241,158,50)" fg:x="4964" fg:w="10"/><text x="14.5135%" y="863.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (10 samples, 0.03%)</title><rect x="14.2635%" y="837" width="0.0287%" height="15" fill="rgb(213,121,41)" fg:x="4964" fg:w="10"/><text x="14.5135%" y="847.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (10 samples, 0.03%)</title><rect x="14.2635%" y="821" width="0.0287%" height="15" fill="rgb(240,92,3)" fg:x="4964" fg:w="10"/><text x="14.5135%" y="831.50"></text></g><g><title>aptos_executor_types::in_memory_state_calculator::InMemoryStateCalculator::add_transaction (3,870 samples, 11.12%)</title><rect x="3.1751%" y="1301" width="11.1201%" height="15" fill="rgb(205,123,3)" fg:x="1105" fg:w="3870"/><text x="3.4251%" y="1311.50">aptos_executor_t..</text></g><g><title>aptos_executor_types::in_memory_state_calculator::process_write_set (3,762 samples, 10.81%)</title><rect x="3.4854%" y="1285" width="10.8097%" height="15" fill="rgb(205,97,47)" fg:x="1213" fg:w="3762"/><text x="3.7354%" y="1295.50">aptos_executor_t..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (3,762 samples, 10.81%)</title><rect x="3.4854%" y="1269" width="10.8097%" height="15" fill="rgb(247,152,14)" fg:x="1213" fg:w="3762"/><text x="3.7354%" y="1279.50">core::iter::trai..</text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (3,762 samples, 10.81%)</title><rect x="3.4854%" y="1253" width="10.8097%" height="15" fill="rgb(248,195,53)" fg:x="1213" fg:w="3762"/><text x="3.7354%" y="1263.50">&lt;core::result::R..</text></g><g><title>core::iter::adapters::try_process (3,762 samples, 10.81%)</title><rect x="3.4854%" y="1237" width="10.8097%" height="15" fill="rgb(226,201,16)" fg:x="1213" fg:w="3762"/><text x="3.7354%" y="1247.50">core::iter::adap..</text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (3,762 samples, 10.81%)</title><rect x="3.4854%" y="1221" width="10.8097%" height="15" fill="rgb(205,98,0)" fg:x="1213" fg:w="3762"/><text x="3.7354%" y="1231.50">&lt;core::result::R..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (3,762 samples, 10.81%)</title><rect x="3.4854%" y="1205" width="10.8097%" height="15" fill="rgb(214,191,48)" fg:x="1213" fg:w="3762"/><text x="3.7354%" y="1215.50">core::iter::trai..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (3,762 samples, 10.81%)</title><rect x="3.4854%" y="1189" width="10.8097%" height="15" fill="rgb(237,112,39)" fg:x="1213" fg:w="3762"/><text x="3.7354%" y="1199.50">&lt;std::collection..</text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (3,762 samples, 10.81%)</title><rect x="3.4854%" y="1173" width="10.8097%" height="15" fill="rgb(247,203,27)" fg:x="1213" fg:w="3762"/><text x="3.7354%" y="1183.50">&lt;std::collection..</text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (3,762 samples, 10.81%)</title><rect x="3.4854%" y="1157" width="10.8097%" height="15" fill="rgb(235,124,28)" fg:x="1213" fg:w="3762"/><text x="3.7354%" y="1167.50">&lt;hashbrown::map:..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3,762 samples, 10.81%)</title><rect x="3.4854%" y="1141" width="10.8097%" height="15" fill="rgb(208,207,46)" fg:x="1213" fg:w="3762"/><text x="3.7354%" y="1151.50">core::iter::trai..</text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,762 samples, 10.81%)</title><rect x="3.4854%" y="1125" width="10.8097%" height="15" fill="rgb(234,176,4)" fg:x="1213" fg:w="3762"/><text x="3.7354%" y="1135.50">&lt;core::iter::ada..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (4 samples, 0.01%)</title><rect x="14.2952%" y="1285" width="0.0115%" height="15" fill="rgb(230,133,28)" fg:x="4975" fg:w="4"/><text x="14.5452%" y="1295.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (4 samples, 0.01%)</title><rect x="14.2952%" y="1269" width="0.0115%" height="15" fill="rgb(211,137,40)" fg:x="4975" fg:w="4"/><text x="14.5452%" y="1279.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (4 samples, 0.01%)</title><rect x="14.2952%" y="1253" width="0.0115%" height="15" fill="rgb(254,35,13)" fg:x="4975" fg:w="4"/><text x="14.5452%" y="1263.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (4 samples, 0.01%)</title><rect x="14.2952%" y="1237" width="0.0115%" height="15" fill="rgb(225,49,51)" fg:x="4975" fg:w="4"/><text x="14.5452%" y="1247.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4 samples, 0.01%)</title><rect x="14.2952%" y="1221" width="0.0115%" height="15" fill="rgb(251,10,15)" fg:x="4975" fg:w="4"/><text x="14.5452%" y="1231.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.01%)</title><rect x="14.2952%" y="1205" width="0.0115%" height="15" fill="rgb(228,207,15)" fg:x="4975" fg:w="4"/><text x="14.5452%" y="1215.50"></text></g><g><title>&lt;std::collections::hash::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.01%)</title><rect x="14.2952%" y="1189" width="0.0115%" height="15" fill="rgb(241,99,19)" fg:x="4975" fg:w="4"/><text x="14.5452%" y="1199.50"></text></g><g><title>&lt;hashbrown::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.01%)</title><rect x="14.2952%" y="1173" width="0.0115%" height="15" fill="rgb(207,104,49)" fg:x="4975" fg:w="4"/><text x="14.5452%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.01%)</title><rect x="14.2952%" y="1157" width="0.0115%" height="15" fill="rgb(234,99,18)" fg:x="4975" fg:w="4"/><text x="14.5452%" y="1167.50"></text></g><g><title>core::iter::adapters::filter_map::filter_map_fold::{{closure}} (4 samples, 0.01%)</title><rect x="14.2952%" y="1141" width="0.0115%" height="15" fill="rgb(213,191,49)" fg:x="4975" fg:w="4"/><text x="14.5452%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (4 samples, 0.01%)</title><rect x="14.2952%" y="1125" width="0.0115%" height="15" fill="rgb(210,226,19)" fg:x="4975" fg:w="4"/><text x="14.5452%" y="1135.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (4 samples, 0.01%)</title><rect x="14.2952%" y="1109" width="0.0115%" height="15" fill="rgb(229,97,18)" fg:x="4975" fg:w="4"/><text x="14.5452%" y="1119.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.01%)</title><rect x="14.2952%" y="1093" width="0.0115%" height="15" fill="rgb(211,167,15)" fg:x="4975" fg:w="4"/><text x="14.5452%" y="1103.50"></text></g><g><title>aptos_executor_types::in_memory_state_calculator::InMemoryStateCalculator::calculate_for_transaction_chunk (3,894 samples, 11.19%)</title><rect x="3.1205%" y="1317" width="11.1890%" height="15" fill="rgb(210,169,34)" fg:x="1086" fg:w="3894"/><text x="3.3705%" y="1327.50">aptos_executor_t..</text></g><g><title>aptos_executor_types::in_memory_state_calculator::InMemoryStateCalculator::finish (5 samples, 0.01%)</title><rect x="14.2952%" y="1301" width="0.0144%" height="15" fill="rgb(241,121,31)" fg:x="4975" fg:w="5"/><text x="14.5452%" y="1311.50"></text></g><g><title>aptos_executor::components::chunk_output::ChunkOutput::apply_to_ledger (4,153 samples, 11.93%)</title><rect x="2.4510%" y="1349" width="11.9332%" height="15" fill="rgb(232,40,11)" fg:x="853" fg:w="4153"/><text x="2.7010%" y="1359.50">aptos_executor::co..</text></g><g><title>aptos_executor::components::apply_chunk_output::ApplyChunkOutput::apply (4,153 samples, 11.93%)</title><rect x="2.4510%" y="1333" width="11.9332%" height="15" fill="rgb(205,86,26)" fg:x="853" fg:w="4153"/><text x="2.7010%" y="1343.50">aptos_executor::co..</text></g><g><title>aptos_types::proof::accumulator::InMemoryAccumulator&lt;H&gt;::append (26 samples, 0.07%)</title><rect x="14.3095%" y="1317" width="0.0747%" height="15" fill="rgb(231,126,28)" fg:x="4980" fg:w="26"/><text x="14.5595%" y="1327.50"></text></g><g><title>aptos_types::proof::accumulator::InMemoryAccumulator&lt;H&gt;::append_one (26 samples, 0.07%)</title><rect x="14.3095%" y="1301" width="0.0747%" height="15" fill="rgb(219,221,18)" fg:x="4980" fg:w="26"/><text x="14.5595%" y="1311.50"></text></g><g><title>&lt;aptos_types::proof::MerkleTreeInternalNode&lt;H&gt; as aptos_crypto::hash::CryptoHash&gt;::hash (26 samples, 0.07%)</title><rect x="14.3095%" y="1285" width="0.0747%" height="15" fill="rgb(211,40,0)" fg:x="4980" fg:w="26"/><text x="14.5595%" y="1295.50"></text></g><g><title>&lt;aptos_crypto::hash::TransactionAccumulatorHasher as aptos_crypto::hash::CryptoHasher&gt;::finish (26 samples, 0.07%)</title><rect x="14.3095%" y="1269" width="0.0747%" height="15" fill="rgb(239,85,43)" fg:x="4980" fg:w="26"/><text x="14.5595%" y="1279.50"></text></g><g><title>aptos_crypto::hash::DefaultHasher::finish (26 samples, 0.07%)</title><rect x="14.3095%" y="1253" width="0.0747%" height="15" fill="rgb(231,55,21)" fg:x="4980" fg:w="26"/><text x="14.5595%" y="1263.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (24 samples, 0.07%)</title><rect x="14.3153%" y="1237" width="0.0690%" height="15" fill="rgb(225,184,43)" fg:x="4982" fg:w="24"/><text x="14.5653%" y="1247.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (24 samples, 0.07%)</title><rect x="14.3153%" y="1221" width="0.0690%" height="15" fill="rgb(251,158,41)" fg:x="4982" fg:w="24"/><text x="14.5653%" y="1231.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (24 samples, 0.07%)</title><rect x="14.3153%" y="1205" width="0.0690%" height="15" fill="rgb(234,159,37)" fg:x="4982" fg:w="24"/><text x="14.5653%" y="1215.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (23 samples, 0.07%)</title><rect x="14.3181%" y="1189" width="0.0661%" height="15" fill="rgb(216,204,22)" fg:x="4983" fg:w="23"/><text x="14.5681%" y="1199.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (23 samples, 0.07%)</title><rect x="14.3181%" y="1173" width="0.0661%" height="15" fill="rgb(214,17,3)" fg:x="4983" fg:w="23"/><text x="14.5681%" y="1183.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (23 samples, 0.07%)</title><rect x="14.3181%" y="1157" width="0.0661%" height="15" fill="rgb(212,111,17)" fg:x="4983" fg:w="23"/><text x="14.5681%" y="1167.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (23 samples, 0.07%)</title><rect x="14.3181%" y="1141" width="0.0661%" height="15" fill="rgb(221,157,24)" fg:x="4983" fg:w="23"/><text x="14.5681%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.01%)</title><rect x="14.3842%" y="1333" width="0.0115%" height="15" fill="rgb(252,16,13)" fg:x="5006" fg:w="4"/><text x="14.6342%" y="1343.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.01%)</title><rect x="14.3842%" y="1317" width="0.0115%" height="15" fill="rgb(221,62,2)" fg:x="5006" fg:w="4"/><text x="14.6342%" y="1327.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.01%)</title><rect x="14.3842%" y="1301" width="0.0115%" height="15" fill="rgb(247,87,22)" fg:x="5006" fg:w="4"/><text x="14.6342%" y="1311.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.01%)</title><rect x="14.3842%" y="1285" width="0.0115%" height="15" fill="rgb(215,73,9)" fg:x="5006" fg:w="4"/><text x="14.6342%" y="1295.50"></text></g><g><title>&lt;aptos_types::transaction::Transaction as core::clone::Clone&gt;::clone (4 samples, 0.01%)</title><rect x="14.3842%" y="1269" width="0.0115%" height="15" fill="rgb(207,175,33)" fg:x="5006" fg:w="4"/><text x="14.6342%" y="1279.50"></text></g><g><title>&lt;aptos_types::transaction::SignedTransaction as core::clone::Clone&gt;::clone (4 samples, 0.01%)</title><rect x="14.3842%" y="1253" width="0.0115%" height="15" fill="rgb(243,129,54)" fg:x="5006" fg:w="4"/><text x="14.6342%" y="1263.50"></text></g><g><title>&lt;aptos_block_executor::block_executor::AptosTransactionOutput as aptos_block_executor::task::TransactionOutput&gt;::get_deltas (7 samples, 0.02%)</title><rect x="14.3986%" y="1269" width="0.0201%" height="15" fill="rgb(227,119,45)" fg:x="5011" fg:w="7"/><text x="14.6486%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (7 samples, 0.02%)</title><rect x="14.4273%" y="1189" width="0.0201%" height="15" fill="rgb(205,109,36)" fg:x="5021" fg:w="7"/><text x="14.6773%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (7 samples, 0.02%)</title><rect x="14.4273%" y="1173" width="0.0201%" height="15" fill="rgb(205,6,39)" fg:x="5021" fg:w="7"/><text x="14.6773%" y="1183.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.02%)</title><rect x="14.4273%" y="1157" width="0.0201%" height="15" fill="rgb(221,32,16)" fg:x="5021" fg:w="7"/><text x="14.6773%" y="1167.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (7 samples, 0.02%)</title><rect x="14.4273%" y="1141" width="0.0201%" height="15" fill="rgb(228,144,50)" fg:x="5021" fg:w="7"/><text x="14.6773%" y="1151.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (7 samples, 0.02%)</title><rect x="14.4273%" y="1125" width="0.0201%" height="15" fill="rgb(229,201,53)" fg:x="5021" fg:w="7"/><text x="14.6773%" y="1135.50"></text></g><g><title>&lt;aptos_block_executor::block_executor::AptosTransactionOutput as aptos_block_executor::task::TransactionOutput&gt;::get_writes::{{closure}} (7 samples, 0.02%)</title><rect x="14.4273%" y="1109" width="0.0201%" height="15" fill="rgb(249,153,27)" fg:x="5021" fg:w="7"/><text x="14.6773%" y="1119.50"></text></g><g><title>&lt;aptos_types::write_set::WriteOp as core::clone::Clone&gt;::clone (7 samples, 0.02%)</title><rect x="14.4273%" y="1093" width="0.0201%" height="15" fill="rgb(227,106,25)" fg:x="5021" fg:w="7"/><text x="14.6773%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7 samples, 0.02%)</title><rect x="14.4273%" y="1077" width="0.0201%" height="15" fill="rgb(230,65,29)" fg:x="5021" fg:w="7"/><text x="14.6773%" y="1087.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (7 samples, 0.02%)</title><rect x="14.4273%" y="1061" width="0.0201%" height="15" fill="rgb(221,57,46)" fg:x="5021" fg:w="7"/><text x="14.6773%" y="1071.50"></text></g><g><title>alloc::slice::hack::to_vec (7 samples, 0.02%)</title><rect x="14.4273%" y="1045" width="0.0201%" height="15" fill="rgb(229,161,17)" fg:x="5021" fg:w="7"/><text x="14.6773%" y="1055.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7 samples, 0.02%)</title><rect x="14.4273%" y="1029" width="0.0201%" height="15" fill="rgb(222,213,11)" fg:x="5021" fg:w="7"/><text x="14.6773%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7 samples, 0.02%)</title><rect x="14.4273%" y="1013" width="0.0201%" height="15" fill="rgb(235,35,13)" fg:x="5021" fg:w="7"/><text x="14.6773%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7 samples, 0.02%)</title><rect x="14.4273%" y="997" width="0.0201%" height="15" fill="rgb(233,158,34)" fg:x="5021" fg:w="7"/><text x="14.6773%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (7 samples, 0.02%)</title><rect x="14.4273%" y="981" width="0.0201%" height="15" fill="rgb(215,151,48)" fg:x="5021" fg:w="7"/><text x="14.6773%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.02%)</title><rect x="14.4273%" y="965" width="0.0201%" height="15" fill="rgb(229,84,14)" fg:x="5021" fg:w="7"/><text x="14.6773%" y="975.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.02%)</title><rect x="14.4273%" y="949" width="0.0201%" height="15" fill="rgb(229,68,14)" fg:x="5021" fg:w="7"/><text x="14.6773%" y="959.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.02%)</title><rect x="14.4273%" y="933" width="0.0201%" height="15" fill="rgb(243,106,26)" fg:x="5021" fg:w="7"/><text x="14.6773%" y="943.50"></text></g><g><title>mallocx (6 samples, 0.02%)</title><rect x="14.4302%" y="917" width="0.0172%" height="15" fill="rgb(206,45,38)" fg:x="5022" fg:w="6"/><text x="14.6802%" y="927.50"></text></g><g><title>imalloc (6 samples, 0.02%)</title><rect x="14.4302%" y="901" width="0.0172%" height="15" fill="rgb(226,6,15)" fg:x="5022" fg:w="6"/><text x="14.6802%" y="911.50"></text></g><g><title>imalloc_body (6 samples, 0.02%)</title><rect x="14.4302%" y="885" width="0.0172%" height="15" fill="rgb(232,22,54)" fg:x="5022" fg:w="6"/><text x="14.6802%" y="895.50"></text></g><g><title>imalloc_no_sample (6 samples, 0.02%)</title><rect x="14.4302%" y="869" width="0.0172%" height="15" fill="rgb(229,222,32)" fg:x="5022" fg:w="6"/><text x="14.6802%" y="879.50"></text></g><g><title>iallocztm (6 samples, 0.02%)</title><rect x="14.4302%" y="853" width="0.0172%" height="15" fill="rgb(228,62,29)" fg:x="5022" fg:w="6"/><text x="14.6802%" y="863.50"></text></g><g><title>arena_malloc (6 samples, 0.02%)</title><rect x="14.4302%" y="837" width="0.0172%" height="15" fill="rgb(251,103,34)" fg:x="5022" fg:w="6"/><text x="14.6802%" y="847.50"></text></g><g><title>tcache_alloc_large (6 samples, 0.02%)</title><rect x="14.4302%" y="821" width="0.0172%" height="15" fill="rgb(233,12,30)" fg:x="5022" fg:w="6"/><text x="14.6802%" y="831.50"></text></g><g><title>cache_bin_alloc_easy (6 samples, 0.02%)</title><rect x="14.4302%" y="805" width="0.0172%" height="15" fill="rgb(238,52,0)" fg:x="5022" fg:w="6"/><text x="14.6802%" y="815.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.02%)</title><rect x="14.4474%" y="1173" width="0.0201%" height="15" fill="rgb(223,98,5)" fg:x="5028" fg:w="7"/><text x="14.6974%" y="1183.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_unchecked (7 samples, 0.02%)</title><rect x="14.4474%" y="1157" width="0.0201%" height="15" fill="rgb(228,75,37)" fg:x="5028" fg:w="7"/><text x="14.6974%" y="1167.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (7 samples, 0.02%)</title><rect x="14.4474%" y="1141" width="0.0201%" height="15" fill="rgb(205,115,49)" fg:x="5028" fg:w="7"/><text x="14.6974%" y="1151.50"></text></g><g><title>alloc::collections::btree::mem::replace (7 samples, 0.02%)</title><rect x="14.4474%" y="1125" width="0.0201%" height="15" fill="rgb(250,154,43)" fg:x="5028" fg:w="7"/><text x="14.6974%" y="1135.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::{{closure}} (7 samples, 0.02%)</title><rect x="14.4474%" y="1109" width="0.0201%" height="15" fill="rgb(226,43,29)" fg:x="5028" fg:w="7"/><text x="14.6974%" y="1119.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (7 samples, 0.02%)</title><rect x="14.4474%" y="1093" width="0.0201%" height="15" fill="rgb(249,228,39)" fg:x="5028" fg:w="7"/><text x="14.6974%" y="1103.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (7 samples, 0.02%)</title><rect x="14.4474%" y="1077" width="0.0201%" height="15" fill="rgb(216,79,43)" fg:x="5028" fg:w="7"/><text x="14.6974%" y="1087.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (7 samples, 0.02%)</title><rect x="14.4474%" y="1061" width="0.0201%" height="15" fill="rgb(228,95,12)" fg:x="5028" fg:w="7"/><text x="14.6974%" y="1071.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (7 samples, 0.02%)</title><rect x="14.4474%" y="1045" width="0.0201%" height="15" fill="rgb(249,221,15)" fg:x="5028" fg:w="7"/><text x="14.6974%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.04%)</title><rect x="14.4474%" y="1189" width="0.0402%" height="15" fill="rgb(233,34,13)" fg:x="5028" fg:w="14"/><text x="14.6974%" y="1199.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (7 samples, 0.02%)</title><rect x="14.4676%" y="1173" width="0.0201%" height="15" fill="rgb(214,103,39)" fg:x="5035" fg:w="7"/><text x="14.7176%" y="1183.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (7 samples, 0.02%)</title><rect x="14.4676%" y="1157" width="0.0201%" height="15" fill="rgb(251,126,39)" fg:x="5035" fg:w="7"/><text x="14.7176%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="14.4877%" y="1189" width="0.0115%" height="15" fill="rgb(214,216,36)" fg:x="5042" fg:w="4"/><text x="14.7377%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.01%)</title><rect x="14.4877%" y="1173" width="0.0115%" height="15" fill="rgb(220,221,8)" fg:x="5042" fg:w="4"/><text x="14.7377%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.01%)</title><rect x="14.4877%" y="1157" width="0.0115%" height="15" fill="rgb(240,216,3)" fg:x="5042" fg:w="4"/><text x="14.7377%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (4 samples, 0.01%)</title><rect x="14.4877%" y="1141" width="0.0115%" height="15" fill="rgb(232,218,17)" fg:x="5042" fg:w="4"/><text x="14.7377%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.01%)</title><rect x="14.4877%" y="1125" width="0.0115%" height="15" fill="rgb(229,163,45)" fg:x="5042" fg:w="4"/><text x="14.7377%" y="1135.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.01%)</title><rect x="14.4877%" y="1109" width="0.0115%" height="15" fill="rgb(231,110,42)" fg:x="5042" fg:w="4"/><text x="14.7377%" y="1119.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.01%)</title><rect x="14.4877%" y="1093" width="0.0115%" height="15" fill="rgb(208,170,48)" fg:x="5042" fg:w="4"/><text x="14.7377%" y="1103.50"></text></g><g><title>&lt;aptos_block_executor::block_executor::AptosTransactionOutput as aptos_block_executor::task::TransactionOutput&gt;::get_writes (35 samples, 0.10%)</title><rect x="14.4187%" y="1269" width="0.1006%" height="15" fill="rgb(239,116,25)" fg:x="5018" fg:w="35"/><text x="14.6687%" y="1279.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (32 samples, 0.09%)</title><rect x="14.4273%" y="1253" width="0.0919%" height="15" fill="rgb(219,200,50)" fg:x="5021" fg:w="32"/><text x="14.6773%" y="1263.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (32 samples, 0.09%)</title><rect x="14.4273%" y="1237" width="0.0919%" height="15" fill="rgb(245,200,0)" fg:x="5021" fg:w="32"/><text x="14.6773%" y="1247.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (32 samples, 0.09%)</title><rect x="14.4273%" y="1221" width="0.0919%" height="15" fill="rgb(245,119,33)" fg:x="5021" fg:w="32"/><text x="14.6773%" y="1231.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (32 samples, 0.09%)</title><rect x="14.4273%" y="1205" width="0.0919%" height="15" fill="rgb(231,125,12)" fg:x="5021" fg:w="32"/><text x="14.6773%" y="1215.50"></text></g><g><title>core::ptr::write (7 samples, 0.02%)</title><rect x="14.4992%" y="1189" width="0.0201%" height="15" fill="rgb(216,96,41)" fg:x="5046" fg:w="7"/><text x="14.7492%" y="1199.50"></text></g><g><title>&lt;aptos_block_executor::aptos_vm::AptosVM as aptos_block_executor::adapter_common::VMAdapter&gt;::should_restart_execution (4 samples, 0.01%)</title><rect x="14.5480%" y="1253" width="0.0115%" height="15" fill="rgb(248,43,45)" fg:x="5063" fg:w="4"/><text x="14.7980%" y="1263.50"></text></g><g><title>iralloct (4 samples, 0.01%)</title><rect x="14.8267%" y="805" width="0.0115%" height="15" fill="rgb(217,222,7)" fg:x="5160" fg:w="4"/><text x="15.0767%" y="815.50"></text></g><g><title>_rjem_je_arena_ralloc (4 samples, 0.01%)</title><rect x="14.8267%" y="789" width="0.0115%" height="15" fill="rgb(233,28,6)" fg:x="5160" fg:w="4"/><text x="15.0767%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (10 samples, 0.03%)</title><rect x="14.8267%" y="869" width="0.0287%" height="15" fill="rgb(231,218,15)" fg:x="5160" fg:w="10"/><text x="15.0767%" y="879.50"></text></g><g><title>alloc::alloc::Global::grow_impl (10 samples, 0.03%)</title><rect x="14.8267%" y="853" width="0.0287%" height="15" fill="rgb(226,171,48)" fg:x="5160" fg:w="10"/><text x="15.0767%" y="863.50"></text></g><g><title>alloc::alloc::realloc (10 samples, 0.03%)</title><rect x="14.8267%" y="837" width="0.0287%" height="15" fill="rgb(235,201,9)" fg:x="5160" fg:w="10"/><text x="15.0767%" y="847.50"></text></g><g><title>rallocx (10 samples, 0.03%)</title><rect x="14.8267%" y="821" width="0.0287%" height="15" fill="rgb(217,80,15)" fg:x="5160" fg:w="10"/><text x="15.0767%" y="831.50"></text></g><g><title>isalloc (6 samples, 0.02%)</title><rect x="14.8382%" y="805" width="0.0172%" height="15" fill="rgb(219,152,8)" fg:x="5164" fg:w="6"/><text x="15.0882%" y="815.50"></text></g><g><title>arena_salloc (6 samples, 0.02%)</title><rect x="14.8382%" y="789" width="0.0172%" height="15" fill="rgb(243,107,38)" fg:x="5164" fg:w="6"/><text x="15.0882%" y="799.50"></text></g><g><title>rtree_szind_read (6 samples, 0.02%)</title><rect x="14.8382%" y="773" width="0.0172%" height="15" fill="rgb(231,17,5)" fg:x="5164" fg:w="6"/><text x="15.0882%" y="783.50"></text></g><g><title>rtree_leaf_elm_szind_read (6 samples, 0.02%)</title><rect x="14.8382%" y="757" width="0.0172%" height="15" fill="rgb(209,25,54)" fg:x="5164" fg:w="6"/><text x="15.0882%" y="767.50"></text></g><g><title>rtree_leaf_elm_bits_read (6 samples, 0.02%)</title><rect x="14.8382%" y="741" width="0.0172%" height="15" fill="rgb(219,0,2)" fg:x="5164" fg:w="6"/><text x="15.0882%" y="751.50"></text></g><g><title>atomic_load_p (6 samples, 0.02%)</title><rect x="14.8382%" y="725" width="0.0172%" height="15" fill="rgb(246,9,5)" fg:x="5164" fg:w="6"/><text x="15.0882%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (14 samples, 0.04%)</title><rect x="14.8181%" y="1029" width="0.0402%" height="15" fill="rgb(226,159,4)" fg:x="5157" fg:w="14"/><text x="15.0681%" y="1039.50"></text></g><g><title>alloc::string::String::push_str (14 samples, 0.04%)</title><rect x="14.8181%" y="1013" width="0.0402%" height="15" fill="rgb(219,175,34)" fg:x="5157" fg:w="14"/><text x="15.0681%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (14 samples, 0.04%)</title><rect x="14.8181%" y="997" width="0.0402%" height="15" fill="rgb(236,10,46)" fg:x="5157" fg:w="14"/><text x="15.0681%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (14 samples, 0.04%)</title><rect x="14.8181%" y="981" width="0.0402%" height="15" fill="rgb(240,211,16)" fg:x="5157" fg:w="14"/><text x="15.0681%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (14 samples, 0.04%)</title><rect x="14.8181%" y="965" width="0.0402%" height="15" fill="rgb(205,3,43)" fg:x="5157" fg:w="14"/><text x="15.0681%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (14 samples, 0.04%)</title><rect x="14.8181%" y="949" width="0.0402%" height="15" fill="rgb(245,7,22)" fg:x="5157" fg:w="14"/><text x="15.0681%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (14 samples, 0.04%)</title><rect x="14.8181%" y="933" width="0.0402%" height="15" fill="rgb(239,132,32)" fg:x="5157" fg:w="14"/><text x="15.0681%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (14 samples, 0.04%)</title><rect x="14.8181%" y="917" width="0.0402%" height="15" fill="rgb(228,202,34)" fg:x="5157" fg:w="14"/><text x="15.0681%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (12 samples, 0.03%)</title><rect x="14.8239%" y="901" width="0.0345%" height="15" fill="rgb(254,200,22)" fg:x="5159" fg:w="12"/><text x="15.0739%" y="911.50"></text></g><g><title>alloc::raw_vec::finish_grow (12 samples, 0.03%)</title><rect x="14.8239%" y="885" width="0.0345%" height="15" fill="rgb(219,10,39)" fg:x="5159" fg:w="12"/><text x="15.0739%" y="895.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (56 samples, 0.16%)</title><rect x="14.7348%" y="1237" width="0.1609%" height="15" fill="rgb(226,210,39)" fg:x="5128" fg:w="56"/><text x="14.9848%" y="1247.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::fmt::Debug&gt;::fmt (56 samples, 0.16%)</title><rect x="14.7348%" y="1221" width="0.1609%" height="15" fill="rgb(208,219,16)" fg:x="5128" fg:w="56"/><text x="14.9848%" y="1231.50"></text></g><g><title>core::fmt::Formatter::write_fmt (56 samples, 0.16%)</title><rect x="14.7348%" y="1205" width="0.1609%" height="15" fill="rgb(216,158,51)" fg:x="5128" fg:w="56"/><text x="14.9848%" y="1215.50"></text></g><g><title>core::fmt::write (56 samples, 0.16%)</title><rect x="14.7348%" y="1189" width="0.1609%" height="15" fill="rgb(233,14,44)" fg:x="5128" fg:w="56"/><text x="14.9848%" y="1199.50"></text></g><g><title>core::fmt::rt::Argument::fmt (54 samples, 0.16%)</title><rect x="14.7405%" y="1173" width="0.1552%" height="15" fill="rgb(237,97,39)" fg:x="5130" fg:w="54"/><text x="14.9905%" y="1183.50"></text></g><g><title>&lt;&amp;T as core::fmt::LowerHex&gt;::fmt (54 samples, 0.16%)</title><rect x="14.7405%" y="1157" width="0.1552%" height="15" fill="rgb(218,198,43)" fg:x="5130" fg:w="54"/><text x="14.9905%" y="1167.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::fmt::LowerHex&gt;::fmt (54 samples, 0.16%)</title><rect x="14.7405%" y="1141" width="0.1552%" height="15" fill="rgb(231,104,20)" fg:x="5130" fg:w="54"/><text x="14.9905%" y="1151.50"></text></g><g><title>core::fmt::Formatter::write_fmt (49 samples, 0.14%)</title><rect x="14.7549%" y="1125" width="0.1408%" height="15" fill="rgb(254,36,13)" fg:x="5135" fg:w="49"/><text x="15.0049%" y="1135.50"></text></g><g><title>core::fmt::write (48 samples, 0.14%)</title><rect x="14.7578%" y="1109" width="0.1379%" height="15" fill="rgb(248,14,50)" fg:x="5136" fg:w="48"/><text x="15.0078%" y="1119.50"></text></g><g><title>core::fmt::run (48 samples, 0.14%)</title><rect x="14.7578%" y="1093" width="0.1379%" height="15" fill="rgb(217,107,29)" fg:x="5136" fg:w="48"/><text x="15.0078%" y="1103.50"></text></g><g><title>core::fmt::rt::Argument::fmt (40 samples, 0.11%)</title><rect x="14.7808%" y="1077" width="0.1149%" height="15" fill="rgb(251,169,33)" fg:x="5144" fg:w="40"/><text x="15.0308%" y="1087.50"></text></g><g><title>core::fmt::num::&lt;impl core::fmt::LowerHex for i8&gt;::fmt (34 samples, 0.10%)</title><rect x="14.7980%" y="1061" width="0.0977%" height="15" fill="rgb(217,108,32)" fg:x="5150" fg:w="34"/><text x="15.0480%" y="1071.50"></text></g><g><title>core::fmt::num::GenericRadix::fmt_int (27 samples, 0.08%)</title><rect x="14.8181%" y="1045" width="0.0776%" height="15" fill="rgb(219,66,42)" fg:x="5157" fg:w="27"/><text x="15.0681%" y="1055.50"></text></g><g><title>core::fmt::Formatter::pad_integral (13 samples, 0.04%)</title><rect x="14.8583%" y="1029" width="0.0374%" height="15" fill="rgb(206,180,7)" fg:x="5171" fg:w="13"/><text x="15.1083%" y="1039.50"></text></g><g><title>core::fmt::Formatter::padding (11 samples, 0.03%)</title><rect x="14.8641%" y="1013" width="0.0316%" height="15" fill="rgb(208,226,31)" fg:x="5173" fg:w="11"/><text x="15.1141%" y="1023.50"></text></g><g><title>&lt;aptos_logger::aptos_logger::AptosData as aptos_logger::logger::Logger&gt;::enabled (6 samples, 0.02%)</title><rect x="14.8957%" y="1221" width="0.0172%" height="15" fill="rgb(218,26,49)" fg:x="5184" fg:w="6"/><text x="15.1457%" y="1231.50"></text></g><g><title>aptos_infallible::rwlock::RwLock&lt;T&gt;::read (6 samples, 0.02%)</title><rect x="14.8957%" y="1205" width="0.0172%" height="15" fill="rgb(233,197,48)" fg:x="5184" fg:w="6"/><text x="15.1457%" y="1215.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (6 samples, 0.02%)</title><rect x="14.8957%" y="1189" width="0.0172%" height="15" fill="rgb(252,181,51)" fg:x="5184" fg:w="6"/><text x="15.1457%" y="1199.50"></text></g><g><title>std::sys::sync::rwlock::futex::RwLock::read (6 samples, 0.02%)</title><rect x="14.8957%" y="1173" width="0.0172%" height="15" fill="rgb(253,90,19)" fg:x="5184" fg:w="6"/><text x="15.1457%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicU32::load (6 samples, 0.02%)</title><rect x="14.8957%" y="1157" width="0.0172%" height="15" fill="rgb(215,171,30)" fg:x="5184" fg:w="6"/><text x="15.1457%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_load (6 samples, 0.02%)</title><rect x="14.8957%" y="1141" width="0.0172%" height="15" fill="rgb(214,222,9)" fg:x="5184" fg:w="6"/><text x="15.1457%" y="1151.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSet as core::iter::traits::collect::IntoIterator&gt;::into_iter (7 samples, 0.02%)</title><rect x="14.9129%" y="1221" width="0.0201%" height="15" fill="rgb(223,3,22)" fg:x="5190" fg:w="7"/><text x="15.1629%" y="1231.50"></text></g><g><title>&lt;cfx_statedb::impls::StateDb as cfx_statedb::StateDbTrait&gt;::commit (4 samples, 0.01%)</title><rect x="14.9560%" y="1205" width="0.0115%" height="15" fill="rgb(225,196,46)" fg:x="5205" fg:w="4"/><text x="15.2060%" y="1215.50"></text></g><g><title>&lt;cfx_statedb::impls::StateDb as cfx_statedb::StateDbTrait&gt;::delete (6 samples, 0.02%)</title><rect x="14.9848%" y="1157" width="0.0172%" height="15" fill="rgb(209,110,37)" fg:x="5215" fg:w="6"/><text x="15.2348%" y="1167.50"></text></g><g><title>cfx_evm::state::State::commit_world_statistics (9 samples, 0.03%)</title><rect x="14.9790%" y="1205" width="0.0259%" height="15" fill="rgb(249,89,12)" fg:x="5213" fg:w="9"/><text x="15.2290%" y="1215.50"></text></g><g><title>cfx_statedb::statedb_ext::StateDbExt::set_total_issued_tokens (9 samples, 0.03%)</title><rect x="14.9790%" y="1189" width="0.0259%" height="15" fill="rgb(226,27,33)" fg:x="5213" fg:w="9"/><text x="15.2290%" y="1199.50"></text></g><g><title>cfx_statedb::statedb_ext::StateDbExt::set (7 samples, 0.02%)</title><rect x="14.9848%" y="1173" width="0.0201%" height="15" fill="rgb(213,82,22)" fg:x="5215" fg:w="7"/><text x="15.2348%" y="1183.50"></text></g><g><title>cfx_evm::state::account_entry::OverlayAccount::as_account (6 samples, 0.02%)</title><rect x="15.0451%" y="1189" width="0.0172%" height="15" fill="rgb(248,140,0)" fg:x="5236" fg:w="6"/><text x="15.2951%" y="1199.50"></text></g><g><title>primitives::account::Account::new_empty (5 samples, 0.01%)</title><rect x="15.0480%" y="1173" width="0.0144%" height="15" fill="rgb(228,106,3)" fg:x="5237" fg:w="5"/><text x="15.2980%" y="1183.50"></text></g><g><title>primitives::account::Account::new_empty_with_balance (4 samples, 0.01%)</title><rect x="15.0509%" y="1157" width="0.0115%" height="15" fill="rgb(209,23,37)" fg:x="5238" fg:w="4"/><text x="15.3009%" y="1167.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.01%)</title><rect x="15.0853%" y="1093" width="0.0115%" height="15" fill="rgb(241,93,50)" fg:x="5250" fg:w="4"/><text x="15.3353%" y="1103.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.01%)</title><rect x="15.0853%" y="1077" width="0.0115%" height="15" fill="rgb(253,46,43)" fg:x="5250" fg:w="4"/><text x="15.3353%" y="1087.50"></text></g><g><title>&lt;cfx_storage::StorageKeyWrapper&lt;T,Key&gt; as cfx_storage::StorageTrait&gt;::delete (13 samples, 0.04%)</title><rect x="15.0738%" y="1157" width="0.0374%" height="15" fill="rgb(226,206,43)" fg:x="5246" fg:w="13"/><text x="15.3238%" y="1167.50"></text></g><g><title>&lt;&amp;mut aptos_evm::state::ViewWrapper&lt;S&gt; as cfx_storage::StorageTrait&gt;::delete (9 samples, 0.03%)</title><rect x="15.0853%" y="1141" width="0.0259%" height="15" fill="rgb(217,54,7)" fg:x="5250" fg:w="9"/><text x="15.3353%" y="1151.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (9 samples, 0.03%)</title><rect x="15.0853%" y="1125" width="0.0259%" height="15" fill="rgb(223,5,52)" fg:x="5250" fg:w="9"/><text x="15.3353%" y="1135.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (9 samples, 0.03%)</title><rect x="15.0853%" y="1109" width="0.0259%" height="15" fill="rgb(206,52,46)" fg:x="5250" fg:w="9"/><text x="15.3353%" y="1119.50"></text></g><g><title>&lt;cfx_statedb::impls::StateDb as cfx_statedb::StateDbTrait&gt;::delete (14 samples, 0.04%)</title><rect x="15.0738%" y="1173" width="0.0402%" height="15" fill="rgb(253,136,11)" fg:x="5246" fg:w="14"/><text x="15.3238%" y="1183.50"></text></g><g><title>hashbrown::map::make_hash (6 samples, 0.02%)</title><rect x="15.1313%" y="1093" width="0.0172%" height="15" fill="rgb(208,106,33)" fg:x="5266" fg:w="6"/><text x="15.3813%" y="1103.50"></text></g><g><title>core::hash::BuildHasher::hash_one (6 samples, 0.02%)</title><rect x="15.1313%" y="1077" width="0.0172%" height="15" fill="rgb(206,54,4)" fg:x="5266" fg:w="6"/><text x="15.3813%" y="1087.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (4 samples, 0.01%)</title><rect x="15.1371%" y="1061" width="0.0115%" height="15" fill="rgb(213,3,15)" fg:x="5268" fg:w="4"/><text x="15.3871%" y="1071.50"></text></g><g><title>&lt;aptos_evm::storage_key::StorageKey as core::hash::Hash&gt;::hash (4 samples, 0.01%)</title><rect x="15.1371%" y="1045" width="0.0115%" height="15" fill="rgb(252,211,39)" fg:x="5268" fg:w="4"/><text x="15.3871%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (4 samples, 0.01%)</title><rect x="15.1543%" y="1013" width="0.0115%" height="15" fill="rgb(223,6,36)" fg:x="5274" fg:w="4"/><text x="15.4043%" y="1023.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (4 samples, 0.01%)</title><rect x="15.1543%" y="997" width="0.0115%" height="15" fill="rgb(252,169,45)" fg:x="5274" fg:w="4"/><text x="15.4043%" y="1007.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.01%)</title><rect x="15.1543%" y="981" width="0.0115%" height="15" fill="rgb(212,48,26)" fg:x="5274" fg:w="4"/><text x="15.4043%" y="991.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.01%)</title><rect x="15.1543%" y="965" width="0.0115%" height="15" fill="rgb(251,102,48)" fg:x="5274" fg:w="4"/><text x="15.4043%" y="975.50"></text></g><g><title>hashbrown::raw::RawTableInner::full_buckets_indices (4 samples, 0.01%)</title><rect x="15.1658%" y="1013" width="0.0115%" height="15" fill="rgb(243,208,16)" fg:x="5278" fg:w="4"/><text x="15.4158%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTableInner::ctrl (4 samples, 0.01%)</title><rect x="15.1658%" y="997" width="0.0115%" height="15" fill="rgb(219,96,24)" fg:x="5278" fg:w="4"/><text x="15.4158%" y="1007.50"></text></g><g><title>&lt;cfx_storage::StorageKeyWrapper&lt;T,Key&gt; as cfx_storage::StorageTrait&gt;::set (23 samples, 0.07%)</title><rect x="15.1198%" y="1157" width="0.0661%" height="15" fill="rgb(219,33,29)" fg:x="5262" fg:w="23"/><text x="15.3698%" y="1167.50"></text></g><g><title>&lt;&amp;mut aptos_evm::state::ViewWrapper&lt;S&gt; as cfx_storage::StorageTrait&gt;::set (21 samples, 0.06%)</title><rect x="15.1256%" y="1141" width="0.0603%" height="15" fill="rgb(223,176,5)" fg:x="5264" fg:w="21"/><text x="15.3756%" y="1151.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (21 samples, 0.06%)</title><rect x="15.1256%" y="1125" width="0.0603%" height="15" fill="rgb(228,140,14)" fg:x="5264" fg:w="21"/><text x="15.3756%" y="1135.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (21 samples, 0.06%)</title><rect x="15.1256%" y="1109" width="0.0603%" height="15" fill="rgb(217,179,31)" fg:x="5264" fg:w="21"/><text x="15.3756%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (13 samples, 0.04%)</title><rect x="15.1486%" y="1093" width="0.0374%" height="15" fill="rgb(230,9,30)" fg:x="5272" fg:w="13"/><text x="15.3986%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (13 samples, 0.04%)</title><rect x="15.1486%" y="1077" width="0.0374%" height="15" fill="rgb(230,136,20)" fg:x="5272" fg:w="13"/><text x="15.3986%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (13 samples, 0.04%)</title><rect x="15.1486%" y="1061" width="0.0374%" height="15" fill="rgb(215,210,22)" fg:x="5272" fg:w="13"/><text x="15.3986%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (13 samples, 0.04%)</title><rect x="15.1486%" y="1045" width="0.0374%" height="15" fill="rgb(218,43,5)" fg:x="5272" fg:w="13"/><text x="15.3986%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (13 samples, 0.04%)</title><rect x="15.1486%" y="1029" width="0.0374%" height="15" fill="rgb(216,11,5)" fg:x="5272" fg:w="13"/><text x="15.3986%" y="1039.50"></text></g><g><title>&lt;cfx_statedb::impls::StateDb as cfx_statedb::StateDbTrait&gt;::set_raw (26 samples, 0.07%)</title><rect x="15.1141%" y="1173" width="0.0747%" height="15" fill="rgb(209,82,29)" fg:x="5260" fg:w="26"/><text x="15.3641%" y="1183.50"></text></g><g><title>&lt;primitives::account::Account as primitives::is_default::IsDefault&gt;::is_default (6 samples, 0.02%)</title><rect x="15.1888%" y="1173" width="0.0172%" height="15" fill="rgb(244,115,12)" fg:x="5286" fg:w="6"/><text x="15.4388%" y="1183.50"></text></g><g><title>&lt;primitive_types::U256 as core::cmp::PartialEq&gt;::eq (6 samples, 0.02%)</title><rect x="15.1888%" y="1157" width="0.0172%" height="15" fill="rgb(222,82,18)" fg:x="5286" fg:w="6"/><text x="15.4388%" y="1167.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[U (6 samples, 0.02%)</title><rect x="15.1888%" y="1141" width="0.0172%" height="15" fill="rgb(249,227,8)" fg:x="5286" fg:w="6"/><text x="15.4388%" y="1151.50"></text></g><g><title> N]&gt; for [T (6 samples, 0.02%)</title><rect x="15.1888%" y="1125" width="0.0172%" height="15" fill="rgb(253,141,45)" fg:x="5286" fg:w="6"/><text x="15.4388%" y="1135.50"></text></g><g><title> N]&gt;::eq (6 samples, 0.02%)</title><rect x="15.1888%" y="1109" width="0.0172%" height="15" fill="rgb(234,184,4)" fg:x="5286" fg:w="6"/><text x="15.4388%" y="1119.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (6 samples, 0.02%)</title><rect x="15.1888%" y="1093" width="0.0172%" height="15" fill="rgb(218,194,23)" fg:x="5286" fg:w="6"/><text x="15.4388%" y="1103.50"></text></g><g><title>_rjem_je_arena_ralloc (5 samples, 0.01%)</title><rect x="15.2118%" y="1045" width="0.0144%" height="15" fill="rgb(235,66,41)" fg:x="5294" fg:w="5"/><text x="15.4618%" y="1055.50"></text></g><g><title>arena_ralloc_move_helper (4 samples, 0.01%)</title><rect x="15.2146%" y="1029" width="0.0115%" height="15" fill="rgb(245,217,1)" fg:x="5295" fg:w="4"/><text x="15.4646%" y="1039.50"></text></g><g><title>arena_malloc (4 samples, 0.01%)</title><rect x="15.2146%" y="1013" width="0.0115%" height="15" fill="rgb(229,91,1)" fg:x="5295" fg:w="4"/><text x="15.4646%" y="1023.50"></text></g><g><title>tcache_alloc_small (4 samples, 0.01%)</title><rect x="15.2146%" y="997" width="0.0115%" height="15" fill="rgb(207,101,30)" fg:x="5295" fg:w="4"/><text x="15.4646%" y="1007.50"></text></g><g><title>cache_bin_alloc_easy (4 samples, 0.01%)</title><rect x="15.2146%" y="981" width="0.0115%" height="15" fill="rgb(223,82,49)" fg:x="5295" fg:w="4"/><text x="15.4646%" y="991.50"></text></g><g><title>extent_deactivate_locked (4 samples, 0.01%)</title><rect x="15.2434%" y="965" width="0.0115%" height="15" fill="rgb(218,167,17)" fg:x="5305" fg:w="4"/><text x="15.4934%" y="975.50"></text></g><g><title>extents_insert_locked (4 samples, 0.01%)</title><rect x="15.2434%" y="949" width="0.0115%" height="15" fill="rgb(208,103,14)" fg:x="5305" fg:w="4"/><text x="15.4934%" y="959.50"></text></g><g><title>extent_size_quantize_floor (4 samples, 0.01%)</title><rect x="15.2434%" y="933" width="0.0115%" height="15" fill="rgb(238,20,8)" fg:x="5305" fg:w="4"/><text x="15.4934%" y="943.50"></text></g><g><title>extent_hooks_assure_initialized (4 samples, 0.01%)</title><rect x="15.2549%" y="965" width="0.0115%" height="15" fill="rgb(218,80,54)" fg:x="5309" fg:w="4"/><text x="15.5049%" y="975.50"></text></g><g><title>extent_can_coalesce (8 samples, 0.02%)</title><rect x="15.2664%" y="949" width="0.0230%" height="15" fill="rgb(240,144,17)" fg:x="5313" fg:w="8"/><text x="15.5164%" y="959.50"></text></g><g><title>extent_can_coalesce (8 samples, 0.02%)</title><rect x="15.2664%" y="933" width="0.0230%" height="15" fill="rgb(245,27,50)" fg:x="5313" fg:w="8"/><text x="15.5164%" y="943.50"></text></g><g><title>extent_committed_get (8 samples, 0.02%)</title><rect x="15.2664%" y="917" width="0.0230%" height="15" fill="rgb(251,51,7)" fg:x="5313" fg:w="8"/><text x="15.5164%" y="927.50"></text></g><g><title>extent_activate_locked (5 samples, 0.01%)</title><rect x="15.2894%" y="933" width="0.0144%" height="15" fill="rgb(245,217,29)" fg:x="5321" fg:w="5"/><text x="15.5394%" y="943.50"></text></g><g><title>extents_remove_locked (5 samples, 0.01%)</title><rect x="15.2894%" y="917" width="0.0144%" height="15" fill="rgb(221,176,29)" fg:x="5321" fg:w="5"/><text x="15.5394%" y="927.50"></text></g><g><title>_rjem_je_arena_extents_dirty_dalloc (29 samples, 0.08%)</title><rect x="15.2319%" y="997" width="0.0833%" height="15" fill="rgb(212,180,24)" fg:x="5301" fg:w="29"/><text x="15.4819%" y="1007.50"></text></g><g><title>extent_record (25 samples, 0.07%)</title><rect x="15.2434%" y="981" width="0.0718%" height="15" fill="rgb(254,24,2)" fg:x="5305" fg:w="25"/><text x="15.4934%" y="991.50"></text></g><g><title>extent_try_coalesce (17 samples, 0.05%)</title><rect x="15.2664%" y="965" width="0.0488%" height="15" fill="rgb(230,100,2)" fg:x="5313" fg:w="17"/><text x="15.5164%" y="975.50"></text></g><g><title>extent_coalesce (9 samples, 0.03%)</title><rect x="15.2894%" y="949" width="0.0259%" height="15" fill="rgb(219,142,25)" fg:x="5321" fg:w="9"/><text x="15.5394%" y="959.50"></text></g><g><title>extent_merge_impl (4 samples, 0.01%)</title><rect x="15.3037%" y="933" width="0.0115%" height="15" fill="rgb(240,73,43)" fg:x="5326" fg:w="4"/><text x="15.5537%" y="943.50"></text></g><g><title>iralloct (59 samples, 0.17%)</title><rect x="15.2118%" y="1061" width="0.1695%" height="15" fill="rgb(214,114,15)" fg:x="5294" fg:w="59"/><text x="15.4618%" y="1071.50"></text></g><g><title>_rjem_je_large_ralloc (54 samples, 0.16%)</title><rect x="15.2261%" y="1045" width="0.1552%" height="15" fill="rgb(207,130,4)" fg:x="5299" fg:w="54"/><text x="15.4761%" y="1055.50"></text></g><g><title>_rjem_je_large_ralloc_no_move (54 samples, 0.16%)</title><rect x="15.2261%" y="1029" width="0.1552%" height="15" fill="rgb(221,25,40)" fg:x="5299" fg:w="54"/><text x="15.4761%" y="1039.50"></text></g><g><title>large_ralloc_no_move_shrink (54 samples, 0.16%)</title><rect x="15.2261%" y="1013" width="0.1552%" height="15" fill="rgb(241,184,7)" fg:x="5299" fg:w="54"/><text x="15.4761%" y="1023.50"></text></g><g><title>extent_split_impl (17 samples, 0.05%)</title><rect x="15.3325%" y="997" width="0.0488%" height="15" fill="rgb(235,159,4)" fg:x="5336" fg:w="17"/><text x="15.5825%" y="1007.50"></text></g><g><title>_rjem_je_extent_alloc (11 samples, 0.03%)</title><rect x="15.3497%" y="981" width="0.0316%" height="15" fill="rgb(214,87,48)" fg:x="5342" fg:w="11"/><text x="15.5997%" y="991.50"></text></g><g><title>_rjem_je_extent_avail_remove (8 samples, 0.02%)</title><rect x="15.3583%" y="965" width="0.0230%" height="15" fill="rgb(246,198,24)" fg:x="5345" fg:w="8"/><text x="15.6083%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::into_boxed_slice (69 samples, 0.20%)</title><rect x="15.2060%" y="1173" width="0.1983%" height="15" fill="rgb(209,66,40)" fg:x="5292" fg:w="69"/><text x="15.4560%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::shrink_to_fit (69 samples, 0.20%)</title><rect x="15.2060%" y="1157" width="0.1983%" height="15" fill="rgb(233,147,39)" fg:x="5292" fg:w="69"/><text x="15.4560%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::shrink_to_fit (69 samples, 0.20%)</title><rect x="15.2060%" y="1141" width="0.1983%" height="15" fill="rgb(231,145,52)" fg:x="5292" fg:w="69"/><text x="15.4560%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::shrink (69 samples, 0.20%)</title><rect x="15.2060%" y="1125" width="0.1983%" height="15" fill="rgb(206,20,26)" fg:x="5292" fg:w="69"/><text x="15.4560%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::shrink (69 samples, 0.20%)</title><rect x="15.2060%" y="1109" width="0.1983%" height="15" fill="rgb(238,220,4)" fg:x="5292" fg:w="69"/><text x="15.4560%" y="1119.50"></text></g><g><title>alloc::alloc::realloc (69 samples, 0.20%)</title><rect x="15.2060%" y="1093" width="0.1983%" height="15" fill="rgb(252,195,42)" fg:x="5292" fg:w="69"/><text x="15.4560%" y="1103.50"></text></g><g><title>rallocx (67 samples, 0.19%)</title><rect x="15.2118%" y="1077" width="0.1925%" height="15" fill="rgb(209,10,6)" fg:x="5294" fg:w="67"/><text x="15.4618%" y="1087.50"></text></g><g><title>rtree_szind_slab_read (8 samples, 0.02%)</title><rect x="15.3813%" y="1061" width="0.0230%" height="15" fill="rgb(229,3,52)" fg:x="5353" fg:w="8"/><text x="15.6313%" y="1071.50"></text></g><g><title>rtree_read (8 samples, 0.02%)</title><rect x="15.3813%" y="1045" width="0.0230%" height="15" fill="rgb(253,49,37)" fg:x="5353" fg:w="8"/><text x="15.6313%" y="1055.50"></text></g><g><title>rtree_leaf_elm_lookup (8 samples, 0.02%)</title><rect x="15.3813%" y="1029" width="0.0230%" height="15" fill="rgb(240,103,49)" fg:x="5353" fg:w="8"/><text x="15.6313%" y="1039.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::iter::traits::collect::Extend&lt;u8&gt;&gt;::extend (13 samples, 0.04%)</title><rect x="15.4301%" y="1029" width="0.0374%" height="15" fill="rgb(250,182,30)" fg:x="5370" fg:w="13"/><text x="15.6801%" y="1039.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::put_u8 (8 samples, 0.02%)</title><rect x="15.4445%" y="1013" width="0.0230%" height="15" fill="rgb(248,8,30)" fg:x="5375" fg:w="8"/><text x="15.6945%" y="1023.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (6 samples, 0.02%)</title><rect x="15.4503%" y="997" width="0.0172%" height="15" fill="rgb(237,120,30)" fg:x="5377" fg:w="6"/><text x="15.7003%" y="1007.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.02%)</title><rect x="15.4503%" y="981" width="0.0172%" height="15" fill="rgb(221,146,34)" fg:x="5377" fg:w="6"/><text x="15.7003%" y="991.50"></text></g><g><title>primitive_types::rlp::&lt;impl rlp::traits::Encodable for primitive_types::H256&gt;::rlp_append (16 samples, 0.05%)</title><rect x="15.4301%" y="1077" width="0.0460%" height="15" fill="rgb(242,55,13)" fg:x="5370" fg:w="16"/><text x="15.6801%" y="1087.50"></text></g><g><title>rlp::stream::BasicEncoder::encode_value (16 samples, 0.05%)</title><rect x="15.4301%" y="1061" width="0.0460%" height="15" fill="rgb(242,112,31)" fg:x="5370" fg:w="16"/><text x="15.6801%" y="1071.50"></text></g><g><title>rlp::stream::BasicEncoder::encode_iter (16 samples, 0.05%)</title><rect x="15.4301%" y="1045" width="0.0460%" height="15" fill="rgb(249,192,27)" fg:x="5370" fg:w="16"/><text x="15.6801%" y="1055.50"></text></g><g><title>primitive_types::U256::bits (7 samples, 0.02%)</title><rect x="15.4819%" y="1061" width="0.0201%" height="15" fill="rgb(208,204,44)" fg:x="5388" fg:w="7"/><text x="15.7319%" y="1071.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::iter::traits::collect::Extend&lt;u8&gt;&gt;::extend (11 samples, 0.03%)</title><rect x="15.5106%" y="1029" width="0.0316%" height="15" fill="rgb(208,93,54)" fg:x="5398" fg:w="11"/><text x="15.7606%" y="1039.50"></text></g><g><title>bytes::buf::buf_mut::BufMut::put_u8 (11 samples, 0.03%)</title><rect x="15.5106%" y="1013" width="0.0316%" height="15" fill="rgb(242,1,31)" fg:x="5398" fg:w="11"/><text x="15.7606%" y="1023.50"></text></g><g><title>primitive_types::rlp::&lt;impl rlp::traits::Encodable for primitive_types::U256&gt;::rlp_append (26 samples, 0.07%)</title><rect x="15.4761%" y="1077" width="0.0747%" height="15" fill="rgb(241,83,25)" fg:x="5386" fg:w="26"/><text x="15.7261%" y="1087.50"></text></g><g><title>rlp::stream::BasicEncoder::encode_value (17 samples, 0.05%)</title><rect x="15.5020%" y="1061" width="0.0488%" height="15" fill="rgb(205,169,50)" fg:x="5395" fg:w="17"/><text x="15.7520%" y="1071.50"></text></g><g><title>rlp::stream::BasicEncoder::encode_iter (17 samples, 0.05%)</title><rect x="15.5020%" y="1045" width="0.0488%" height="15" fill="rgb(239,186,37)" fg:x="5395" fg:w="17"/><text x="15.7520%" y="1055.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_mut (7 samples, 0.02%)</title><rect x="15.5537%" y="1061" width="0.0201%" height="15" fill="rgb(205,221,10)" fg:x="5413" fg:w="7"/><text x="15.8037%" y="1071.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_mut (7 samples, 0.02%)</title><rect x="15.5537%" y="1045" width="0.0201%" height="15" fill="rgb(218,196,15)" fg:x="5413" fg:w="7"/><text x="15.8037%" y="1055.50"></text></g><g><title>rlp::stream::RlpStream::append (60 samples, 0.17%)</title><rect x="15.4072%" y="1093" width="0.1724%" height="15" fill="rgb(218,196,35)" fg:x="5362" fg:w="60"/><text x="15.6572%" y="1103.50"></text></g><g><title>rlp::stream::RlpStream::note_appended (10 samples, 0.03%)</title><rect x="15.5508%" y="1077" width="0.0287%" height="15" fill="rgb(233,63,24)" fg:x="5412" fg:w="10"/><text x="15.8008%" y="1087.50"></text></g><g><title>&lt;primitives::account::Account as rlp::traits::Encodable&gt;::rlp_append (62 samples, 0.18%)</title><rect x="15.4072%" y="1141" width="0.1782%" height="15" fill="rgb(225,8,4)" fg:x="5362" fg:w="62"/><text x="15.6572%" y="1151.50"></text></g><g><title>rlp::stream::RlpStream::append_internal (62 samples, 0.18%)</title><rect x="15.4072%" y="1125" width="0.1782%" height="15" fill="rgb(234,105,35)" fg:x="5362" fg:w="62"/><text x="15.6572%" y="1135.50"></text></g><g><title>primitives::account::_IMPL_RLP_ENCODABLE_FOR_EthereumAccount::&lt;impl rlp::traits::Encodable for primitives::account::EthereumAccount&gt;::rlp_append (62 samples, 0.18%)</title><rect x="15.4072%" y="1109" width="0.1782%" height="15" fill="rgb(236,21,32)" fg:x="5362" fg:w="62"/><text x="15.6572%" y="1119.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as bytes::buf::buf_mut::BufMut&gt;::put_slice (1,301 samples, 3.74%)</title><rect x="21.3867%" y="1029" width="3.7383%" height="15" fill="rgb(228,109,6)" fg:x="7443" fg:w="1301"/><text x="21.6367%" y="1039.50">&lt;byt..</text></g><g><title>bytes::buf::buf_mut::BufMut::put_u8 (5,711 samples, 16.41%)</title><rect x="15.6026%" y="1045" width="16.4100%" height="15" fill="rgb(229,215,31)" fg:x="5430" fg:w="5711"/><text x="15.8526%" y="1055.50">bytes::buf::buf_mut::BufM..</text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (2,397 samples, 6.89%)</title><rect x="25.1250%" y="1029" width="6.8875%" height="15" fill="rgb(221,52,54)" fg:x="8744" fg:w="2397"/><text x="25.3750%" y="1039.50">bytes::by..</text></g><g><title>alloc::raw_vec::finish_grow (8 samples, 0.02%)</title><rect x="32.0326%" y="949" width="0.0230%" height="15" fill="rgb(252,129,43)" fg:x="11148" fg:w="8"/><text x="32.2826%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (6 samples, 0.02%)</title><rect x="32.0384%" y="933" width="0.0172%" height="15" fill="rgb(248,183,27)" fg:x="11150" fg:w="6"/><text x="32.2884%" y="943.50"></text></g><g><title>alloc::alloc::Global::grow_impl (6 samples, 0.02%)</title><rect x="32.0384%" y="917" width="0.0172%" height="15" fill="rgb(250,0,22)" fg:x="11150" fg:w="6"/><text x="32.2884%" y="927.50"></text></g><g><title>alloc::alloc::realloc (6 samples, 0.02%)</title><rect x="32.0384%" y="901" width="0.0172%" height="15" fill="rgb(213,166,10)" fg:x="11150" fg:w="6"/><text x="32.2884%" y="911.50"></text></g><g><title>rallocx (6 samples, 0.02%)</title><rect x="32.0384%" y="885" width="0.0172%" height="15" fill="rgb(207,163,36)" fg:x="11150" fg:w="6"/><text x="32.2884%" y="895.50"></text></g><g><title>iralloct (6 samples, 0.02%)</title><rect x="32.0384%" y="869" width="0.0172%" height="15" fill="rgb(208,122,22)" fg:x="11150" fg:w="6"/><text x="32.2884%" y="879.50"></text></g><g><title>_rjem_je_arena_ralloc (6 samples, 0.02%)</title><rect x="32.0384%" y="853" width="0.0172%" height="15" fill="rgb(207,104,49)" fg:x="11150" fg:w="6"/><text x="32.2884%" y="863.50"></text></g><g><title>arena_ralloc_move_helper (6 samples, 0.02%)</title><rect x="32.0384%" y="837" width="0.0172%" height="15" fill="rgb(248,211,50)" fg:x="11150" fg:w="6"/><text x="32.2884%" y="847.50"></text></g><g><title>arena_malloc (6 samples, 0.02%)</title><rect x="32.0384%" y="821" width="0.0172%" height="15" fill="rgb(217,13,45)" fg:x="11150" fg:w="6"/><text x="32.2884%" y="831.50"></text></g><g><title>tcache_alloc_large (6 samples, 0.02%)</title><rect x="32.0384%" y="805" width="0.0172%" height="15" fill="rgb(211,216,49)" fg:x="11150" fg:w="6"/><text x="32.2884%" y="815.50"></text></g><g><title>cache_bin_alloc_easy (6 samples, 0.02%)</title><rect x="32.0384%" y="789" width="0.0172%" height="15" fill="rgb(221,58,53)" fg:x="11150" fg:w="6"/><text x="32.2884%" y="799.50"></text></g><g><title>&lt;bytes::bytes_mut::BytesMut as core::iter::traits::collect::Extend&lt;u8&gt;&gt;::extend (5,728 samples, 16.46%)</title><rect x="15.6026%" y="1061" width="16.4588%" height="15" fill="rgb(220,112,41)" fg:x="5430" fg:w="5728"/><text x="15.8526%" y="1071.50">&lt;bytes::bytes_mut::BytesM..</text></g><g><title>bytes::bytes_mut::BytesMut::reserve (17 samples, 0.05%)</title><rect x="32.0125%" y="1045" width="0.0488%" height="15" fill="rgb(236,38,28)" fg:x="11141" fg:w="17"/><text x="32.2625%" y="1055.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve_inner (11 samples, 0.03%)</title><rect x="32.0298%" y="1029" width="0.0316%" height="15" fill="rgb(227,195,22)" fg:x="11147" fg:w="11"/><text x="32.2798%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (11 samples, 0.03%)</title><rect x="32.0298%" y="1013" width="0.0316%" height="15" fill="rgb(214,55,33)" fg:x="11147" fg:w="11"/><text x="32.2798%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (11 samples, 0.03%)</title><rect x="32.0298%" y="997" width="0.0316%" height="15" fill="rgb(248,80,13)" fg:x="11147" fg:w="11"/><text x="32.2798%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (10 samples, 0.03%)</title><rect x="32.0326%" y="981" width="0.0287%" height="15" fill="rgb(238,52,6)" fg:x="11148" fg:w="10"/><text x="32.2826%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (10 samples, 0.03%)</title><rect x="32.0326%" y="965" width="0.0287%" height="15" fill="rgb(224,198,47)" fg:x="11148" fg:w="10"/><text x="32.2826%" y="975.50"></text></g><g><title>&lt;primitives::account::CodeInfo as rlp::traits::Encodable&gt;::rlp_append (5,738 samples, 16.49%)</title><rect x="15.5853%" y="1141" width="16.4876%" height="15" fill="rgb(233,171,20)" fg:x="5424" fg:w="5738"/><text x="15.8353%" y="1151.50">&lt;primitives::account::Cod..</text></g><g><title>rlp::stream::RlpStream::append (5,737 samples, 16.48%)</title><rect x="15.5882%" y="1125" width="16.4847%" height="15" fill="rgb(241,30,25)" fg:x="5425" fg:w="5737"/><text x="15.8382%" y="1135.50">rlp::stream::RlpStream::a..</text></g><g><title>rlp::impls::&lt;impl rlp::traits::Encodable for alloc::vec::Vec&lt;u8&gt;&gt;::rlp_append (5,737 samples, 16.48%)</title><rect x="15.5882%" y="1109" width="16.4847%" height="15" fill="rgb(207,171,38)" fg:x="5425" fg:w="5737"/><text x="15.8382%" y="1119.50">rlp::impls::&lt;impl rlp::tr..</text></g><g><title>rlp::stream::BasicEncoder::encode_value (5,734 samples, 16.48%)</title><rect x="15.5968%" y="1093" width="16.4761%" height="15" fill="rgb(234,70,1)" fg:x="5428" fg:w="5734"/><text x="15.8468%" y="1103.50">rlp::stream::BasicEncoder..</text></g><g><title>rlp::stream::BasicEncoder::encode_iter (5,734 samples, 16.48%)</title><rect x="15.5968%" y="1077" width="16.4761%" height="15" fill="rgb(232,178,18)" fg:x="5428" fg:w="5734"/><text x="15.8468%" y="1087.50">rlp::stream::BasicEncoder..</text></g><g><title>_rjem_je_arena_extent_ralloc_large_expand (5 samples, 0.01%)</title><rect x="32.1188%" y="837" width="0.0144%" height="15" fill="rgb(241,78,40)" fg:x="11178" fg:w="5"/><text x="32.3688%" y="847.50"></text></g><g><title>extent_lock2 (8 samples, 0.02%)</title><rect x="32.1390%" y="821" width="0.0230%" height="15" fill="rgb(222,35,25)" fg:x="11185" fg:w="8"/><text x="32.3890%" y="831.50"></text></g><g><title>mutex_pool_lock2 (8 samples, 0.02%)</title><rect x="32.1390%" y="805" width="0.0230%" height="15" fill="rgb(207,92,16)" fg:x="11185" fg:w="8"/><text x="32.3890%" y="815.50"></text></g><g><title>mutex_pool_mutex (8 samples, 0.02%)</title><rect x="32.1390%" y="789" width="0.0230%" height="15" fill="rgb(216,59,51)" fg:x="11185" fg:w="8"/><text x="32.3890%" y="799.50"></text></g><g><title>hash (8 samples, 0.02%)</title><rect x="32.1390%" y="773" width="0.0230%" height="15" fill="rgb(213,80,28)" fg:x="11185" fg:w="8"/><text x="32.3890%" y="783.50"></text></g><g><title>hash_x64_128 (8 samples, 0.02%)</title><rect x="32.1390%" y="757" width="0.0230%" height="15" fill="rgb(220,93,7)" fg:x="11185" fg:w="8"/><text x="32.3890%" y="767.50"></text></g><g><title>hash_fmix_64 (8 samples, 0.02%)</title><rect x="32.1390%" y="741" width="0.0230%" height="15" fill="rgb(225,24,44)" fg:x="11185" fg:w="8"/><text x="32.3890%" y="751.50"></text></g><g><title>extent_merge_default_impl (6 samples, 0.02%)</title><rect x="32.1619%" y="821" width="0.0172%" height="15" fill="rgb(243,74,40)" fg:x="11193" fg:w="6"/><text x="32.4119%" y="831.50"></text></g><g><title>_rjem_je_extent_dss_mergeable (6 samples, 0.02%)</title><rect x="32.1619%" y="805" width="0.0172%" height="15" fill="rgb(228,39,7)" fg:x="11193" fg:w="6"/><text x="32.4119%" y="815.50"></text></g><g><title>extent_merge_impl (17 samples, 0.05%)</title><rect x="32.1390%" y="837" width="0.0488%" height="15" fill="rgb(227,79,8)" fg:x="11185" fg:w="17"/><text x="32.3890%" y="847.50"></text></g><g><title>_rjem_je_extent_alloc (8 samples, 0.02%)</title><rect x="32.2108%" y="773" width="0.0230%" height="15" fill="rgb(236,58,11)" fg:x="11210" fg:w="8"/><text x="32.4608%" y="783.50"></text></g><g><title>_rjem_je_extent_avail_remove (6 samples, 0.02%)</title><rect x="32.2165%" y="757" width="0.0172%" height="15" fill="rgb(249,63,35)" fg:x="11212" fg:w="6"/><text x="32.4665%" y="767.50"></text></g><g><title>extent_lock2 (5 samples, 0.01%)</title><rect x="32.2338%" y="773" width="0.0144%" height="15" fill="rgb(252,114,16)" fg:x="11218" fg:w="5"/><text x="32.4838%" y="783.50"></text></g><g><title>mutex_pool_lock2 (5 samples, 0.01%)</title><rect x="32.2338%" y="757" width="0.0144%" height="15" fill="rgb(254,151,24)" fg:x="11218" fg:w="5"/><text x="32.4838%" y="767.50"></text></g><g><title>malloc_mutex_lock (5 samples, 0.01%)</title><rect x="32.2338%" y="741" width="0.0144%" height="15" fill="rgb(253,54,39)" fg:x="11218" fg:w="5"/><text x="32.4838%" y="751.50"></text></g><g><title>malloc_mutex_trylock_final (5 samples, 0.01%)</title><rect x="32.2338%" y="725" width="0.0144%" height="15" fill="rgb(243,25,45)" fg:x="11218" fg:w="5"/><text x="32.4838%" y="735.50"></text></g><g><title>_rjem_je_large_ralloc_no_move (58 samples, 0.17%)</title><rect x="32.0872%" y="869" width="0.1667%" height="15" fill="rgb(234,134,9)" fg:x="11167" fg:w="58"/><text x="32.3372%" y="879.50"></text></g><g><title>large_ralloc_no_move_expand (55 samples, 0.16%)</title><rect x="32.0959%" y="853" width="0.1580%" height="15" fill="rgb(227,166,31)" fg:x="11170" fg:w="55"/><text x="32.3459%" y="863.50"></text></g><g><title>extent_recycle (23 samples, 0.07%)</title><rect x="32.1878%" y="837" width="0.0661%" height="15" fill="rgb(245,143,41)" fg:x="11202" fg:w="23"/><text x="32.4378%" y="847.50"></text></g><g><title>extent_recycle_split (18 samples, 0.05%)</title><rect x="32.2022%" y="821" width="0.0517%" height="15" fill="rgb(238,181,32)" fg:x="11207" fg:w="18"/><text x="32.4522%" y="831.50"></text></g><g><title>extent_split_interior (16 samples, 0.05%)</title><rect x="32.2079%" y="805" width="0.0460%" height="15" fill="rgb(224,113,18)" fg:x="11209" fg:w="16"/><text x="32.4579%" y="815.50"></text></g><g><title>extent_split_impl (15 samples, 0.04%)</title><rect x="32.2108%" y="789" width="0.0431%" height="15" fill="rgb(240,229,28)" fg:x="11210" fg:w="15"/><text x="32.4608%" y="799.50"></text></g><g><title>extent_usize_get (6 samples, 0.02%)</title><rect x="32.2539%" y="869" width="0.0172%" height="15" fill="rgb(250,185,3)" fg:x="11225" fg:w="6"/><text x="32.5039%" y="879.50"></text></g><g><title>extent_szind_get (6 samples, 0.02%)</title><rect x="32.2539%" y="853" width="0.0172%" height="15" fill="rgb(212,59,25)" fg:x="11225" fg:w="6"/><text x="32.5039%" y="863.50"></text></g><g><title>extent_szind_get_maybe_invalid (6 samples, 0.02%)</title><rect x="32.2539%" y="837" width="0.0172%" height="15" fill="rgb(221,87,20)" fg:x="11225" fg:w="6"/><text x="32.5039%" y="847.50"></text></g><g><title>extent_recycle_extract (6 samples, 0.02%)</title><rect x="32.2769%" y="805" width="0.0172%" height="15" fill="rgb(213,74,28)" fg:x="11233" fg:w="6"/><text x="32.5269%" y="815.50"></text></g><g><title>iralloct (76 samples, 0.22%)</title><rect x="32.0872%" y="901" width="0.2184%" height="15" fill="rgb(224,132,34)" fg:x="11167" fg:w="76"/><text x="32.3372%" y="911.50"></text></g><g><title>_rjem_je_large_ralloc (76 samples, 0.22%)</title><rect x="32.0872%" y="885" width="0.2184%" height="15" fill="rgb(222,101,24)" fg:x="11167" fg:w="76"/><text x="32.3372%" y="895.50"></text></g><g><title>large_ralloc_move_helper (12 samples, 0.03%)</title><rect x="32.2711%" y="869" width="0.0345%" height="15" fill="rgb(254,142,4)" fg:x="11231" fg:w="12"/><text x="32.5211%" y="879.50"></text></g><g><title>_rjem_je_large_palloc (12 samples, 0.03%)</title><rect x="32.2711%" y="853" width="0.0345%" height="15" fill="rgb(230,229,49)" fg:x="11231" fg:w="12"/><text x="32.5211%" y="863.50"></text></g><g><title>_rjem_je_arena_extent_alloc_large (12 samples, 0.03%)</title><rect x="32.2711%" y="837" width="0.0345%" height="15" fill="rgb(238,70,47)" fg:x="11231" fg:w="12"/><text x="32.5211%" y="847.50"></text></g><g><title>extent_recycle (10 samples, 0.03%)</title><rect x="32.2769%" y="821" width="0.0287%" height="15" fill="rgb(231,160,17)" fg:x="11233" fg:w="10"/><text x="32.5269%" y="831.50"></text></g><g><title>extent_recycle_split (4 samples, 0.01%)</title><rect x="32.2941%" y="805" width="0.0115%" height="15" fill="rgb(218,68,53)" fg:x="11239" fg:w="4"/><text x="32.5441%" y="815.50"></text></g><g><title>extent_split_interior (4 samples, 0.01%)</title><rect x="32.2941%" y="789" width="0.0115%" height="15" fill="rgb(236,111,10)" fg:x="11239" fg:w="4"/><text x="32.5441%" y="799.50"></text></g><g><title>rlp::stream::RlpStream::append (5,883 samples, 16.90%)</title><rect x="15.4072%" y="1157" width="16.9042%" height="15" fill="rgb(224,34,41)" fg:x="5362" fg:w="5883"/><text x="15.6572%" y="1167.50">rlp::stream::RlpStream::ap..</text></g><g><title>rlp::stream::RlpStream::note_appended (83 samples, 0.24%)</title><rect x="32.0729%" y="1141" width="0.2385%" height="15" fill="rgb(241,118,19)" fg:x="11162" fg:w="83"/><text x="32.3229%" y="1151.50"></text></g><g><title>rlp::stream::BasicEncoder::insert_list_payload (83 samples, 0.24%)</title><rect x="32.0729%" y="1125" width="0.2385%" height="15" fill="rgb(238,129,25)" fg:x="11162" fg:w="83"/><text x="32.3229%" y="1135.50"></text></g><g><title>rlp::stream::BasicEncoder::insert_size (81 samples, 0.23%)</title><rect x="32.0786%" y="1109" width="0.2327%" height="15" fill="rgb(238,22,31)" fg:x="11164" fg:w="81"/><text x="32.3286%" y="1119.50"></text></g><g><title>bytes::bytes_mut::BytesMut::extend_from_slice (81 samples, 0.23%)</title><rect x="32.0786%" y="1093" width="0.2327%" height="15" fill="rgb(222,174,48)" fg:x="11164" fg:w="81"/><text x="32.3286%" y="1103.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve (81 samples, 0.23%)</title><rect x="32.0786%" y="1077" width="0.2327%" height="15" fill="rgb(206,152,40)" fg:x="11164" fg:w="81"/><text x="32.3286%" y="1087.50"></text></g><g><title>bytes::bytes_mut::BytesMut::reserve_inner (80 samples, 0.23%)</title><rect x="32.0815%" y="1061" width="0.2299%" height="15" fill="rgb(218,99,54)" fg:x="11165" fg:w="80"/><text x="32.3315%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (80 samples, 0.23%)</title><rect x="32.0815%" y="1045" width="0.2299%" height="15" fill="rgb(220,174,26)" fg:x="11165" fg:w="80"/><text x="32.3315%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (80 samples, 0.23%)</title><rect x="32.0815%" y="1029" width="0.2299%" height="15" fill="rgb(245,116,9)" fg:x="11165" fg:w="80"/><text x="32.3315%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (79 samples, 0.23%)</title><rect x="32.0844%" y="1013" width="0.2270%" height="15" fill="rgb(209,72,35)" fg:x="11166" fg:w="79"/><text x="32.3344%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (79 samples, 0.23%)</title><rect x="32.0844%" y="997" width="0.2270%" height="15" fill="rgb(226,126,21)" fg:x="11166" fg:w="79"/><text x="32.3344%" y="1007.50"></text></g><g><title>alloc::raw_vec::finish_grow (79 samples, 0.23%)</title><rect x="32.0844%" y="981" width="0.2270%" height="15" fill="rgb(227,192,1)" fg:x="11166" fg:w="79"/><text x="32.3344%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (78 samples, 0.22%)</title><rect x="32.0872%" y="965" width="0.2241%" height="15" fill="rgb(237,180,29)" fg:x="11167" fg:w="78"/><text x="32.3372%" y="975.50"></text></g><g><title>alloc::alloc::Global::grow_impl (78 samples, 0.22%)</title><rect x="32.0872%" y="949" width="0.2241%" height="15" fill="rgb(230,197,35)" fg:x="11167" fg:w="78"/><text x="32.3372%" y="959.50"></text></g><g><title>alloc::alloc::realloc (78 samples, 0.22%)</title><rect x="32.0872%" y="933" width="0.2241%" height="15" fill="rgb(246,193,31)" fg:x="11167" fg:w="78"/><text x="32.3372%" y="943.50"></text></g><g><title>rallocx (78 samples, 0.22%)</title><rect x="32.0872%" y="917" width="0.2241%" height="15" fill="rgb(241,36,4)" fg:x="11167" fg:w="78"/><text x="32.3372%" y="927.50"></text></g><g><title>bytes::bytes_mut::BytesMut::with_capacity (4 samples, 0.01%)</title><rect x="32.3200%" y="1141" width="0.0115%" height="15" fill="rgb(241,130,17)" fg:x="11248" fg:w="4"/><text x="32.5700%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="32.3200%" y="1125" width="0.0115%" height="15" fill="rgb(206,137,32)" fg:x="11248" fg:w="4"/><text x="32.5700%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.01%)</title><rect x="32.3200%" y="1109" width="0.0115%" height="15" fill="rgb(237,228,51)" fg:x="11248" fg:w="4"/><text x="32.5700%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.01%)</title><rect x="32.3200%" y="1093" width="0.0115%" height="15" fill="rgb(243,6,42)" fg:x="11248" fg:w="4"/><text x="32.5700%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (4 samples, 0.01%)</title><rect x="32.3200%" y="1077" width="0.0115%" height="15" fill="rgb(251,74,28)" fg:x="11248" fg:w="4"/><text x="32.5700%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.01%)</title><rect x="32.3200%" y="1061" width="0.0115%" height="15" fill="rgb(218,20,49)" fg:x="11248" fg:w="4"/><text x="32.5700%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.01%)</title><rect x="32.3200%" y="1045" width="0.0115%" height="15" fill="rgb(238,28,14)" fg:x="11248" fg:w="4"/><text x="32.5700%" y="1055.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.01%)</title><rect x="32.3200%" y="1029" width="0.0115%" height="15" fill="rgb(229,40,46)" fg:x="11248" fg:w="4"/><text x="32.5700%" y="1039.50"></text></g><g><title>rlp::stream::RlpStream::new (8 samples, 0.02%)</title><rect x="32.3114%" y="1157" width="0.0230%" height="15" fill="rgb(244,195,20)" fg:x="11245" fg:w="8"/><text x="32.5614%" y="1167.50"></text></g><g><title>cfx_evm::state::account_entry::OverlayAccount::commit (6,036 samples, 17.34%)</title><rect x="15.0078%" y="1205" width="17.3438%" height="15" fill="rgb(253,56,35)" fg:x="5223" fg:w="6036"/><text x="15.2578%" y="1215.50">cfx_evm::state::account_ent..</text></g><g><title>cfx_statedb::statedb_ext::StateDbExt::set (6,017 samples, 17.29%)</title><rect x="15.0624%" y="1189" width="17.2892%" height="15" fill="rgb(210,149,44)" fg:x="5242" fg:w="6017"/><text x="15.3124%" y="1199.50">cfx_statedb::statedb_ext::S..</text></g><g><title>rlp::encode (5,897 samples, 16.94%)</title><rect x="15.4072%" y="1173" width="16.9444%" height="15" fill="rgb(240,135,12)" fg:x="5362" fg:w="5897"/><text x="15.6572%" y="1183.50">rlp::encode</text></g><g><title>rlp::stream::RlpStream::out (6 samples, 0.02%)</title><rect x="32.3343%" y="1157" width="0.0172%" height="15" fill="rgb(251,24,50)" fg:x="11253" fg:w="6"/><text x="32.5843%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;rlp::stream::ListInfo&gt;&gt; (4 samples, 0.01%)</title><rect x="32.3401%" y="1141" width="0.0115%" height="15" fill="rgb(243,200,47)" fg:x="11255" fg:w="4"/><text x="32.5901%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;rlp::stream::ListInfo&gt;&gt; (4 samples, 0.01%)</title><rect x="32.3401%" y="1125" width="0.0115%" height="15" fill="rgb(224,166,26)" fg:x="11255" fg:w="4"/><text x="32.5901%" y="1135.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="32.3401%" y="1109" width="0.0115%" height="15" fill="rgb(233,0,47)" fg:x="11255" fg:w="4"/><text x="32.5901%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.01%)</title><rect x="32.3401%" y="1093" width="0.0115%" height="15" fill="rgb(253,80,5)" fg:x="11255" fg:w="4"/><text x="32.5901%" y="1103.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.01%)</title><rect x="32.3401%" y="1077" width="0.0115%" height="15" fill="rgb(214,133,25)" fg:x="11255" fg:w="4"/><text x="32.5901%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (9 samples, 0.03%)</title><rect x="32.3516%" y="1205" width="0.0259%" height="15" fill="rgb(209,27,14)" fg:x="11259" fg:w="9"/><text x="32.6016%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (9 samples, 0.03%)</title><rect x="32.3516%" y="1189" width="0.0259%" height="15" fill="rgb(219,102,51)" fg:x="11259" fg:w="9"/><text x="32.6016%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.03%)</title><rect x="32.3516%" y="1173" width="0.0259%" height="15" fill="rgb(237,18,16)" fg:x="11259" fg:w="9"/><text x="32.6016%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (9 samples, 0.03%)</title><rect x="32.3516%" y="1157" width="0.0259%" height="15" fill="rgb(241,85,17)" fg:x="11259" fg:w="9"/><text x="32.6016%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;lock_api::rwlock::RwLock&lt;parking_lot::raw_rwlock::RawRwLock,std::collections::hash::map::HashMap&lt;alloc::vec::Vec&lt;u8&gt;,primitive_types::U256&gt;&gt;&gt;&gt; (6 samples, 0.02%)</title><rect x="32.3976%" y="1093" width="0.0172%" height="15" fill="rgb(236,90,42)" fg:x="11275" fg:w="6"/><text x="32.6476%" y="1103.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="32.3976%" y="1077" width="0.0172%" height="15" fill="rgb(249,57,21)" fg:x="11275" fg:w="6"/><text x="32.6476%" y="1087.50"></text></g><g><title>sdallocx (4 samples, 0.01%)</title><rect x="32.4033%" y="1061" width="0.0115%" height="15" fill="rgb(243,12,36)" fg:x="11277" fg:w="4"/><text x="32.6533%" y="1071.50"></text></g><g><title>isfree (4 samples, 0.01%)</title><rect x="32.4033%" y="1045" width="0.0115%" height="15" fill="rgb(253,128,47)" fg:x="11277" fg:w="4"/><text x="32.6533%" y="1055.50"></text></g><g><title>isdalloct (4 samples, 0.01%)</title><rect x="32.4033%" y="1029" width="0.0115%" height="15" fill="rgb(207,33,20)" fg:x="11277" fg:w="4"/><text x="32.6533%" y="1039.50"></text></g><g><title>arena_sdalloc (4 samples, 0.01%)</title><rect x="32.4033%" y="1013" width="0.0115%" height="15" fill="rgb(233,215,35)" fg:x="11277" fg:w="4"/><text x="32.6533%" y="1023.50"></text></g><g><title>tcache_dalloc_small (4 samples, 0.01%)</title><rect x="32.4033%" y="997" width="0.0115%" height="15" fill="rgb(249,188,52)" fg:x="11277" fg:w="4"/><text x="32.6533%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;(cfx_types::AddressWithSpace,cfx_evm::state::account_entry::AccountEntry)&gt; (10 samples, 0.03%)</title><rect x="32.3889%" y="1157" width="0.0287%" height="15" fill="rgb(225,12,32)" fg:x="11272" fg:w="10"/><text x="32.6389%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;cfx_evm::state::account_entry::AccountEntry&gt; (10 samples, 0.03%)</title><rect x="32.3889%" y="1141" width="0.0287%" height="15" fill="rgb(247,98,14)" fg:x="11272" fg:w="10"/><text x="32.6389%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;cfx_evm::state::account_entry::OverlayAccount&gt;&gt; (10 samples, 0.03%)</title><rect x="32.3889%" y="1125" width="0.0287%" height="15" fill="rgb(247,219,48)" fg:x="11272" fg:w="10"/><text x="32.6389%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;cfx_evm::state::account_entry::OverlayAccount&gt; (7 samples, 0.02%)</title><rect x="32.3976%" y="1109" width="0.0201%" height="15" fill="rgb(253,60,48)" fg:x="11275" fg:w="7"/><text x="32.6476%" y="1119.50"></text></g><g><title>&lt;cfx_evm::state::State as cfx_state::state_trait::StateTrait&gt;::commit (6,088 samples, 17.49%)</title><rect x="14.9330%" y="1221" width="17.4932%" height="15" fill="rgb(245,15,52)" fg:x="5197" fg:w="6088"/><text x="15.1830%" y="1231.50">&lt;cfx_evm::state::State as c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(cfx_types::AddressWithSpace,cfx_evm::state::account_entry::AccountEntry)&gt;&gt; (17 samples, 0.05%)</title><rect x="32.3774%" y="1205" width="0.0488%" height="15" fill="rgb(220,133,28)" fg:x="11268" fg:w="17"/><text x="32.6274%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.05%)</title><rect x="32.3774%" y="1189" width="0.0488%" height="15" fill="rgb(217,180,4)" fg:x="11268" fg:w="17"/><text x="32.6274%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(cfx_types::AddressWithSpace,cfx_evm::state::account_entry::AccountEntry)]&gt; (17 samples, 0.05%)</title><rect x="32.3774%" y="1173" width="0.0488%" height="15" fill="rgb(251,24,1)" fg:x="11268" fg:w="17"/><text x="32.6274%" y="1183.50"></text></g><g><title>&lt;aptos_types::write_set::WriteOp as core::clone::Clone&gt;::clone (14 samples, 0.04%)</title><rect x="32.4292%" y="1125" width="0.0402%" height="15" fill="rgb(212,185,49)" fg:x="11286" fg:w="14"/><text x="32.6792%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (14 samples, 0.04%)</title><rect x="32.4292%" y="1109" width="0.0402%" height="15" fill="rgb(215,175,22)" fg:x="11286" fg:w="14"/><text x="32.6792%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (14 samples, 0.04%)</title><rect x="32.4292%" y="1093" width="0.0402%" height="15" fill="rgb(250,205,14)" fg:x="11286" fg:w="14"/><text x="32.6792%" y="1103.50"></text></g><g><title>alloc::slice::hack::to_vec (14 samples, 0.04%)</title><rect x="32.4292%" y="1077" width="0.0402%" height="15" fill="rgb(225,211,22)" fg:x="11286" fg:w="14"/><text x="32.6792%" y="1087.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (14 samples, 0.04%)</title><rect x="32.4292%" y="1061" width="0.0402%" height="15" fill="rgb(251,179,42)" fg:x="11286" fg:w="14"/><text x="32.6792%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (14 samples, 0.04%)</title><rect x="32.4292%" y="1045" width="0.0402%" height="15" fill="rgb(208,216,51)" fg:x="11286" fg:w="14"/><text x="32.6792%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (14 samples, 0.04%)</title><rect x="32.4292%" y="1029" width="0.0402%" height="15" fill="rgb(235,36,11)" fg:x="11286" fg:w="14"/><text x="32.6792%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (14 samples, 0.04%)</title><rect x="32.4292%" y="1013" width="0.0402%" height="15" fill="rgb(213,189,28)" fg:x="11286" fg:w="14"/><text x="32.6792%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (14 samples, 0.04%)</title><rect x="32.4292%" y="997" width="0.0402%" height="15" fill="rgb(227,203,42)" fg:x="11286" fg:w="14"/><text x="32.6792%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (14 samples, 0.04%)</title><rect x="32.4292%" y="981" width="0.0402%" height="15" fill="rgb(244,72,36)" fg:x="11286" fg:w="14"/><text x="32.6792%" y="991.50"></text></g><g><title>alloc::alloc::alloc (14 samples, 0.04%)</title><rect x="32.4292%" y="965" width="0.0402%" height="15" fill="rgb(213,53,17)" fg:x="11286" fg:w="14"/><text x="32.6792%" y="975.50"></text></g><g><title>mallocx (14 samples, 0.04%)</title><rect x="32.4292%" y="949" width="0.0402%" height="15" fill="rgb(207,167,3)" fg:x="11286" fg:w="14"/><text x="32.6792%" y="959.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSet as core::clone::Clone&gt;::clone (34 samples, 0.10%)</title><rect x="32.4263%" y="1205" width="0.0977%" height="15" fill="rgb(216,98,30)" fg:x="11285" fg:w="34"/><text x="32.6763%" y="1215.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSetV0 as core::clone::Clone&gt;::clone (34 samples, 0.10%)</title><rect x="32.4263%" y="1189" width="0.0977%" height="15" fill="rgb(236,123,15)" fg:x="11285" fg:w="34"/><text x="32.6763%" y="1199.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSetMut as core::clone::Clone&gt;::clone (34 samples, 0.10%)</title><rect x="32.4263%" y="1173" width="0.0977%" height="15" fill="rgb(248,81,50)" fg:x="11285" fg:w="34"/><text x="32.6763%" y="1183.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (34 samples, 0.10%)</title><rect x="32.4263%" y="1157" width="0.0977%" height="15" fill="rgb(214,120,4)" fg:x="11285" fg:w="34"/><text x="32.6763%" y="1167.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (34 samples, 0.10%)</title><rect x="32.4263%" y="1141" width="0.0977%" height="15" fill="rgb(208,179,34)" fg:x="11285" fg:w="34"/><text x="32.6763%" y="1151.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (19 samples, 0.05%)</title><rect x="32.4694%" y="1125" width="0.0546%" height="15" fill="rgb(227,140,7)" fg:x="11300" fg:w="19"/><text x="32.7194%" y="1135.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (19 samples, 0.05%)</title><rect x="32.4694%" y="1109" width="0.0546%" height="15" fill="rgb(214,22,6)" fg:x="11300" fg:w="19"/><text x="32.7194%" y="1119.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (19 samples, 0.05%)</title><rect x="32.4694%" y="1093" width="0.0546%" height="15" fill="rgb(207,137,27)" fg:x="11300" fg:w="19"/><text x="32.7194%" y="1103.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (19 samples, 0.05%)</title><rect x="32.4694%" y="1077" width="0.0546%" height="15" fill="rgb(210,8,46)" fg:x="11300" fg:w="19"/><text x="32.7194%" y="1087.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (7 samples, 0.02%)</title><rect x="32.5039%" y="1061" width="0.0201%" height="15" fill="rgb(240,16,54)" fg:x="11312" fg:w="7"/><text x="32.7539%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.02%)</title><rect x="32.5039%" y="1045" width="0.0201%" height="15" fill="rgb(211,209,29)" fg:x="11312" fg:w="7"/><text x="32.7539%" y="1055.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.02%)</title><rect x="32.5039%" y="1029" width="0.0201%" height="15" fill="rgb(226,228,24)" fg:x="11312" fg:w="7"/><text x="32.7539%" y="1039.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.02%)</title><rect x="32.5039%" y="1013" width="0.0201%" height="15" fill="rgb(222,84,9)" fg:x="11312" fg:w="7"/><text x="32.7539%" y="1023.50"></text></g><g><title>mallocx (6 samples, 0.02%)</title><rect x="32.5068%" y="997" width="0.0172%" height="15" fill="rgb(234,203,30)" fg:x="11313" fg:w="6"/><text x="32.7568%" y="1007.50"></text></g><g><title>imalloc (6 samples, 0.02%)</title><rect x="32.5068%" y="981" width="0.0172%" height="15" fill="rgb(238,109,14)" fg:x="11313" fg:w="6"/><text x="32.7568%" y="991.50"></text></g><g><title>imalloc_body (6 samples, 0.02%)</title><rect x="32.5068%" y="965" width="0.0172%" height="15" fill="rgb(233,206,34)" fg:x="11313" fg:w="6"/><text x="32.7568%" y="975.50"></text></g><g><title>imalloc_no_sample (6 samples, 0.02%)</title><rect x="32.5068%" y="949" width="0.0172%" height="15" fill="rgb(220,167,47)" fg:x="11313" fg:w="6"/><text x="32.7568%" y="959.50"></text></g><g><title>iallocztm (6 samples, 0.02%)</title><rect x="32.5068%" y="933" width="0.0172%" height="15" fill="rgb(238,105,10)" fg:x="11313" fg:w="6"/><text x="32.7568%" y="943.50"></text></g><g><title>arena_malloc (6 samples, 0.02%)</title><rect x="32.5068%" y="917" width="0.0172%" height="15" fill="rgb(213,227,17)" fg:x="11313" fg:w="6"/><text x="32.7568%" y="927.50"></text></g><g><title>tcache_alloc_small (6 samples, 0.02%)</title><rect x="32.5068%" y="901" width="0.0172%" height="15" fill="rgb(217,132,38)" fg:x="11313" fg:w="6"/><text x="32.7568%" y="911.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (6 samples, 0.02%)</title><rect x="32.5068%" y="885" width="0.0172%" height="15" fill="rgb(242,146,4)" fg:x="11313" fg:w="6"/><text x="32.7568%" y="895.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (6 samples, 0.02%)</title><rect x="32.5068%" y="869" width="0.0172%" height="15" fill="rgb(212,61,9)" fg:x="11313" fg:w="6"/><text x="32.7568%" y="879.50"></text></g><g><title>arena_bin_malloc_hard (4 samples, 0.01%)</title><rect x="32.5125%" y="853" width="0.0115%" height="15" fill="rgb(247,126,22)" fg:x="11315" fg:w="4"/><text x="32.7625%" y="863.50"></text></g><g><title>arena_bin_nonfull_slab_get (4 samples, 0.01%)</title><rect x="32.5125%" y="837" width="0.0115%" height="15" fill="rgb(220,196,2)" fg:x="11315" fg:w="4"/><text x="32.7625%" y="847.50"></text></g><g><title>&lt;X as better_any::TidExt&gt;::downcast_mut (4 samples, 0.01%)</title><rect x="32.5326%" y="1173" width="0.0115%" height="15" fill="rgb(208,46,4)" fg:x="11322" fg:w="4"/><text x="32.7826%" y="1183.50"></text></g><g><title>aptos_block_executor::move_vm_ext::session::SessionExt&lt;S&gt;::extract_publish_request (9 samples, 0.03%)</title><rect x="32.5326%" y="1205" width="0.0259%" height="15" fill="rgb(252,104,46)" fg:x="11322" fg:w="9"/><text x="32.7826%" y="1215.50"></text></g><g><title>move_vm_runtime::native_extensions::NativeContextExtensions::get_mut (9 samples, 0.03%)</title><rect x="32.5326%" y="1189" width="0.0259%" height="15" fill="rgb(237,152,48)" fg:x="11322" fg:w="9"/><text x="32.7826%" y="1199.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (5 samples, 0.01%)</title><rect x="32.5441%" y="1173" width="0.0144%" height="15" fill="rgb(221,59,37)" fg:x="11326" fg:w="5"/><text x="32.7941%" y="1183.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (5 samples, 0.01%)</title><rect x="32.5441%" y="1157" width="0.0144%" height="15" fill="rgb(209,202,51)" fg:x="11326" fg:w="5"/><text x="32.7941%" y="1167.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (5 samples, 0.01%)</title><rect x="32.5441%" y="1141" width="0.0144%" height="15" fill="rgb(228,81,30)" fg:x="11326" fg:w="5"/><text x="32.7941%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (4 samples, 0.01%)</title><rect x="32.5470%" y="1125" width="0.0115%" height="15" fill="rgb(227,42,39)" fg:x="11327" fg:w="4"/><text x="32.7970%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (4 samples, 0.01%)</title><rect x="32.5470%" y="1109" width="0.0115%" height="15" fill="rgb(221,26,2)" fg:x="11327" fg:w="4"/><text x="32.7970%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (4 samples, 0.01%)</title><rect x="32.5470%" y="1093" width="0.0115%" height="15" fill="rgb(254,61,31)" fg:x="11327" fg:w="4"/><text x="32.7970%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (4 samples, 0.01%)</title><rect x="32.5470%" y="1077" width="0.0115%" height="15" fill="rgb(222,173,38)" fg:x="11327" fg:w="4"/><text x="32.7970%" y="1087.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (4 samples, 0.01%)</title><rect x="32.5470%" y="1061" width="0.0115%" height="15" fill="rgb(218,50,12)" fg:x="11327" fg:w="4"/><text x="32.7970%" y="1071.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (4 samples, 0.01%)</title><rect x="32.5470%" y="1045" width="0.0115%" height="15" fill="rgb(223,88,40)" fg:x="11327" fg:w="4"/><text x="32.7970%" y="1055.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4 samples, 0.01%)</title><rect x="32.5470%" y="1029" width="0.0115%" height="15" fill="rgb(237,54,19)" fg:x="11327" fg:w="4"/><text x="32.7970%" y="1039.50"></text></g><g><title>&lt;core::any::TypeId as core::cmp::PartialEq&gt;::eq (4 samples, 0.01%)</title><rect x="32.5470%" y="1013" width="0.0115%" height="15" fill="rgb(251,129,25)" fg:x="11327" fg:w="4"/><text x="32.7970%" y="1023.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (U,T)&gt;::eq (4 samples, 0.01%)</title><rect x="32.5470%" y="997" width="0.0115%" height="15" fill="rgb(238,97,19)" fg:x="11327" fg:w="4"/><text x="32.7970%" y="1007.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u64&gt;::eq (4 samples, 0.01%)</title><rect x="32.5470%" y="981" width="0.0115%" height="15" fill="rgb(240,169,18)" fg:x="11327" fg:w="4"/><text x="32.7970%" y="991.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="32.5700%" y="1173" width="0.0144%" height="15" fill="rgb(230,187,49)" fg:x="11335" fg:w="5"/><text x="32.8200%" y="1183.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (5 samples, 0.01%)</title><rect x="32.5700%" y="1157" width="0.0144%" height="15" fill="rgb(209,44,26)" fg:x="11335" fg:w="5"/><text x="32.8200%" y="1167.50"></text></g><g><title>&lt;alloc::collections::btree::set::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="32.5843%" y="1173" width="0.0115%" height="15" fill="rgb(244,0,6)" fg:x="11340" fg:w="4"/><text x="32.8343%" y="1183.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="32.5843%" y="1157" width="0.0115%" height="15" fill="rgb(248,18,21)" fg:x="11340" fg:w="4"/><text x="32.8343%" y="1167.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (4 samples, 0.01%)</title><rect x="32.5843%" y="1141" width="0.0115%" height="15" fill="rgb(245,180,19)" fg:x="11340" fg:w="4"/><text x="32.8343%" y="1151.50"></text></g><g><title>aptos_framework::natives::aggregator_natives::context::NativeAggregatorContext::into_change_set (19 samples, 0.05%)</title><rect x="32.5585%" y="1189" width="0.0546%" height="15" fill="rgb(252,118,36)" fg:x="11331" fg:w="19"/><text x="32.8085%" y="1199.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (6 samples, 0.02%)</title><rect x="32.5958%" y="1173" width="0.0172%" height="15" fill="rgb(210,224,19)" fg:x="11344" fg:w="6"/><text x="32.8458%" y="1183.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (6 samples, 0.02%)</title><rect x="32.5958%" y="1157" width="0.0172%" height="15" fill="rgb(218,30,24)" fg:x="11344" fg:w="6"/><text x="32.8458%" y="1167.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (4 samples, 0.01%)</title><rect x="32.6016%" y="1141" width="0.0115%" height="15" fill="rgb(219,75,50)" fg:x="11346" fg:w="4"/><text x="32.8516%" y="1151.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (4 samples, 0.01%)</title><rect x="32.6016%" y="1125" width="0.0115%" height="15" fill="rgb(234,72,50)" fg:x="11346" fg:w="4"/><text x="32.8516%" y="1135.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (4 samples, 0.01%)</title><rect x="32.6016%" y="1109" width="0.0115%" height="15" fill="rgb(219,100,48)" fg:x="11346" fg:w="4"/><text x="32.8516%" y="1119.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (4 samples, 0.01%)</title><rect x="32.6016%" y="1093" width="0.0115%" height="15" fill="rgb(253,5,41)" fg:x="11346" fg:w="4"/><text x="32.8516%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.01%)</title><rect x="32.6016%" y="1077" width="0.0115%" height="15" fill="rgb(247,181,11)" fg:x="11346" fg:w="4"/><text x="32.8516%" y="1087.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.01%)</title><rect x="32.6016%" y="1061" width="0.0115%" height="15" fill="rgb(222,223,25)" fg:x="11346" fg:w="4"/><text x="32.8516%" y="1071.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.01%)</title><rect x="32.6016%" y="1045" width="0.0115%" height="15" fill="rgb(214,198,28)" fg:x="11346" fg:w="4"/><text x="32.8516%" y="1055.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.02%)</title><rect x="32.6159%" y="1013" width="0.0201%" height="15" fill="rgb(230,46,43)" fg:x="11351" fg:w="7"/><text x="32.8659%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.02%)</title><rect x="32.6159%" y="997" width="0.0201%" height="15" fill="rgb(233,65,53)" fg:x="11351" fg:w="7"/><text x="32.8659%" y="1007.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.02%)</title><rect x="32.6159%" y="981" width="0.0201%" height="15" fill="rgb(221,121,27)" fg:x="11351" fg:w="7"/><text x="32.8659%" y="991.50"></text></g><g><title>sdallocx (5 samples, 0.01%)</title><rect x="32.6217%" y="965" width="0.0144%" height="15" fill="rgb(247,70,47)" fg:x="11353" fg:w="5"/><text x="32.8717%" y="975.50"></text></g><g><title>isfree (5 samples, 0.01%)</title><rect x="32.6217%" y="949" width="0.0144%" height="15" fill="rgb(228,85,35)" fg:x="11353" fg:w="5"/><text x="32.8717%" y="959.50"></text></g><g><title>isdalloct (5 samples, 0.01%)</title><rect x="32.6217%" y="933" width="0.0144%" height="15" fill="rgb(209,50,18)" fg:x="11353" fg:w="5"/><text x="32.8717%" y="943.50"></text></g><g><title>arena_sdalloc (5 samples, 0.01%)</title><rect x="32.6217%" y="917" width="0.0144%" height="15" fill="rgb(250,19,35)" fg:x="11353" fg:w="5"/><text x="32.8717%" y="927.50"></text></g><g><title>tcache_dalloc_small (5 samples, 0.01%)</title><rect x="32.6217%" y="901" width="0.0144%" height="15" fill="rgb(253,107,29)" fg:x="11353" fg:w="5"/><text x="32.8717%" y="911.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.04%)</title><rect x="32.6131%" y="1125" width="0.0431%" height="15" fill="rgb(252,179,29)" fg:x="11350" fg:w="15"/><text x="32.8631%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (15 samples, 0.04%)</title><rect x="32.6131%" y="1109" width="0.0431%" height="15" fill="rgb(238,194,6)" fg:x="11350" fg:w="15"/><text x="32.8631%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (15 samples, 0.04%)</title><rect x="32.6131%" y="1093" width="0.0431%" height="15" fill="rgb(238,164,29)" fg:x="11350" fg:w="15"/><text x="32.8631%" y="1103.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (15 samples, 0.04%)</title><rect x="32.6131%" y="1077" width="0.0431%" height="15" fill="rgb(224,25,9)" fg:x="11350" fg:w="15"/><text x="32.8631%" y="1087.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (15 samples, 0.04%)</title><rect x="32.6131%" y="1061" width="0.0431%" height="15" fill="rgb(244,153,23)" fg:x="11350" fg:w="15"/><text x="32.8631%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;(core::any::TypeId,alloc::boxed::Box&lt;dyn better_any::Tid&gt;)&gt; (15 samples, 0.04%)</title><rect x="32.6131%" y="1045" width="0.0431%" height="15" fill="rgb(212,203,14)" fg:x="11350" fg:w="15"/><text x="32.8631%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn better_any::Tid&gt;&gt; (15 samples, 0.04%)</title><rect x="32.6131%" y="1029" width="0.0431%" height="15" fill="rgb(220,164,20)" fg:x="11350" fg:w="15"/><text x="32.8631%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_framework::natives::transaction_context::NativeTransactionContext&gt; (4 samples, 0.01%)</title><rect x="32.6447%" y="1013" width="0.0115%" height="15" fill="rgb(222,203,48)" fg:x="11361" fg:w="4"/><text x="32.8947%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::native_extensions::NativeContextExtensions&gt; (17 samples, 0.05%)</title><rect x="32.6131%" y="1189" width="0.0488%" height="15" fill="rgb(215,159,22)" fg:x="11350" fg:w="17"/><text x="32.8631%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn better_any::Tid&gt;&gt;&gt; (17 samples, 0.05%)</title><rect x="32.6131%" y="1173" width="0.0488%" height="15" fill="rgb(216,183,47)" fg:x="11350" fg:w="17"/><text x="32.8631%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn better_any::Tid&gt;,std::hash::random::RandomState&gt;&gt; (17 samples, 0.05%)</title><rect x="32.6131%" y="1157" width="0.0488%" height="15" fill="rgb(229,195,25)" fg:x="11350" fg:w="17"/><text x="32.8631%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(core::any::TypeId,alloc::boxed::Box&lt;dyn better_any::Tid&gt;)&gt;&gt; (17 samples, 0.05%)</title><rect x="32.6131%" y="1141" width="0.0488%" height="15" fill="rgb(224,132,51)" fg:x="11350" fg:w="17"/><text x="32.8631%" y="1151.50"></text></g><g><title>move_table_extension::NativeTableContext::into_change_set (11 samples, 0.03%)</title><rect x="32.6677%" y="1189" width="0.0316%" height="15" fill="rgb(240,63,7)" fg:x="11369" fg:w="11"/><text x="32.9177%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;move_table_extension::TableHandle,move_table_extension::Table&gt;&gt; (4 samples, 0.01%)</title><rect x="32.6878%" y="1173" width="0.0115%" height="15" fill="rgb(249,182,41)" fg:x="11376" fg:w="4"/><text x="32.9378%" y="1183.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="32.6878%" y="1157" width="0.0115%" height="15" fill="rgb(243,47,26)" fg:x="11376" fg:w="4"/><text x="32.9378%" y="1167.50"></text></g><g><title>&lt;X as better_any::TidExt&gt;::downcast_box (4 samples, 0.01%)</title><rect x="32.7108%" y="1173" width="0.0115%" height="15" fill="rgb(233,48,2)" fg:x="11384" fg:w="4"/><text x="32.9608%" y="1183.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.01%)</title><rect x="32.7223%" y="1125" width="0.0115%" height="15" fill="rgb(244,165,34)" fg:x="11388" fg:w="4"/><text x="32.9723%" y="1135.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.01%)</title><rect x="32.7223%" y="1109" width="0.0115%" height="15" fill="rgb(207,89,7)" fg:x="11388" fg:w="4"/><text x="32.9723%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.02%)</title><rect x="32.7338%" y="1109" width="0.0172%" height="15" fill="rgb(244,117,36)" fg:x="11392" fg:w="6"/><text x="32.9838%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (6 samples, 0.02%)</title><rect x="32.7338%" y="1093" width="0.0172%" height="15" fill="rgb(226,144,34)" fg:x="11392" fg:w="6"/><text x="32.9838%" y="1103.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (6 samples, 0.02%)</title><rect x="32.7338%" y="1077" width="0.0172%" height="15" fill="rgb(213,23,19)" fg:x="11392" fg:w="6"/><text x="32.9838%" y="1087.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (6 samples, 0.02%)</title><rect x="32.7338%" y="1061" width="0.0172%" height="15" fill="rgb(217,75,12)" fg:x="11392" fg:w="6"/><text x="32.9838%" y="1071.50"></text></g><g><title>move_vm_runtime::native_extensions::NativeContextExtensions::remove (20 samples, 0.06%)</title><rect x="32.6993%" y="1189" width="0.0575%" height="15" fill="rgb(224,159,17)" fg:x="11380" fg:w="20"/><text x="32.9493%" y="1199.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (12 samples, 0.03%)</title><rect x="32.7223%" y="1173" width="0.0345%" height="15" fill="rgb(217,118,1)" fg:x="11388" fg:w="12"/><text x="32.9723%" y="1183.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (12 samples, 0.03%)</title><rect x="32.7223%" y="1157" width="0.0345%" height="15" fill="rgb(232,180,48)" fg:x="11388" fg:w="12"/><text x="32.9723%" y="1167.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (12 samples, 0.03%)</title><rect x="32.7223%" y="1141" width="0.0345%" height="15" fill="rgb(230,27,33)" fg:x="11388" fg:w="12"/><text x="32.9723%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (8 samples, 0.02%)</title><rect x="32.7338%" y="1125" width="0.0230%" height="15" fill="rgb(205,31,21)" fg:x="11392" fg:w="8"/><text x="32.9838%" y="1135.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (5 samples, 0.01%)</title><rect x="32.7596%" y="1125" width="0.0144%" height="15" fill="rgb(253,59,4)" fg:x="11401" fg:w="5"/><text x="33.0096%" y="1135.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_end (5 samples, 0.01%)</title><rect x="32.7596%" y="1109" width="0.0144%" height="15" fill="rgb(224,201,9)" fg:x="11401" fg:w="5"/><text x="33.0096%" y="1119.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::deallocate_and_ascend (5 samples, 0.01%)</title><rect x="32.7596%" y="1093" width="0.0144%" height="15" fill="rgb(229,206,30)" fg:x="11401" fg:w="5"/><text x="33.0096%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.01%)</title><rect x="32.7596%" y="1077" width="0.0144%" height="15" fill="rgb(212,67,47)" fg:x="11401" fg:w="5"/><text x="33.0096%" y="1087.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.01%)</title><rect x="32.7596%" y="1061" width="0.0144%" height="15" fill="rgb(211,96,50)" fg:x="11401" fg:w="5"/><text x="33.0096%" y="1071.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (8 samples, 0.02%)</title><rect x="32.7740%" y="1109" width="0.0230%" height="15" fill="rgb(252,114,18)" fg:x="11406" fg:w="8"/><text x="33.0240%" y="1119.50"></text></g><g><title>alloc::collections::btree::mem::replace (8 samples, 0.02%)</title><rect x="32.7740%" y="1093" width="0.0230%" height="15" fill="rgb(223,58,37)" fg:x="11406" fg:w="8"/><text x="33.0240%" y="1103.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked::{{closure}} (8 samples, 0.02%)</title><rect x="32.7740%" y="1077" width="0.0230%" height="15" fill="rgb(237,70,4)" fg:x="11406" fg:w="8"/><text x="33.0240%" y="1087.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next (8 samples, 0.02%)</title><rect x="32.7740%" y="1061" width="0.0230%" height="15" fill="rgb(244,85,46)" fg:x="11406" fg:w="8"/><text x="33.0240%" y="1071.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,NodeType&gt;,alloc::collections::btree::node::marker::Edge&gt;::right_kv (8 samples, 0.02%)</title><rect x="32.7740%" y="1045" width="0.0230%" height="15" fill="rgb(223,39,52)" fg:x="11406" fg:w="8"/><text x="33.0240%" y="1055.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;::len (8 samples, 0.02%)</title><rect x="32.7740%" y="1029" width="0.0230%" height="15" fill="rgb(218,200,14)" fg:x="11406" fg:w="8"/><text x="33.0240%" y="1039.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.05%)</title><rect x="32.7596%" y="1157" width="0.0546%" height="15" fill="rgb(208,171,16)" fg:x="11401" fg:w="19"/><text x="33.0096%" y="1167.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (19 samples, 0.05%)</title><rect x="32.7596%" y="1141" width="0.0546%" height="15" fill="rgb(234,200,18)" fg:x="11401" fg:w="19"/><text x="33.0096%" y="1151.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_next_unchecked (14 samples, 0.04%)</title><rect x="32.7740%" y="1125" width="0.0402%" height="15" fill="rgb(228,45,11)" fg:x="11406" fg:w="14"/><text x="33.0240%" y="1135.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;BorrowType,K,V&gt;::init_front (6 samples, 0.02%)</title><rect x="32.7970%" y="1109" width="0.0172%" height="15" fill="rgb(237,182,11)" fg:x="11414" fg:w="6"/><text x="33.0470%" y="1119.50"></text></g><g><title>core::ptr::read (6 samples, 0.02%)</title><rect x="32.7970%" y="1093" width="0.0172%" height="15" fill="rgb(241,175,49)" fg:x="11414" fg:w="6"/><text x="33.0470%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="32.8171%" y="901" width="0.0144%" height="15" fill="rgb(247,38,35)" fg:x="11421" fg:w="5"/><text x="33.0671%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (5 samples, 0.01%)</title><rect x="32.8171%" y="885" width="0.0144%" height="15" fill="rgb(228,39,49)" fg:x="11421" fg:w="5"/><text x="33.0671%" y="895.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.02%)</title><rect x="32.8171%" y="965" width="0.0201%" height="15" fill="rgb(226,101,26)" fg:x="11421" fg:w="7"/><text x="33.0671%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (7 samples, 0.02%)</title><rect x="32.8171%" y="949" width="0.0201%" height="15" fill="rgb(206,141,19)" fg:x="11421" fg:w="7"/><text x="33.0671%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (7 samples, 0.02%)</title><rect x="32.8171%" y="933" width="0.0201%" height="15" fill="rgb(211,200,13)" fg:x="11421" fg:w="7"/><text x="33.0671%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (7 samples, 0.02%)</title><rect x="32.8171%" y="917" width="0.0201%" height="15" fill="rgb(241,121,6)" fg:x="11421" fg:w="7"/><text x="33.0671%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.04%)</title><rect x="32.8171%" y="997" width="0.0374%" height="15" fill="rgb(234,221,29)" fg:x="11421" fg:w="13"/><text x="33.0671%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (13 samples, 0.04%)</title><rect x="32.8171%" y="981" width="0.0374%" height="15" fill="rgb(229,136,5)" fg:x="11421" fg:w="13"/><text x="33.0671%" y="991.50"></text></g><g><title>sdallocx (4 samples, 0.01%)</title><rect x="32.8429%" y="965" width="0.0115%" height="15" fill="rgb(238,36,11)" fg:x="11430" fg:w="4"/><text x="33.0929%" y="975.50"></text></g><g><title>isfree (4 samples, 0.01%)</title><rect x="32.8429%" y="949" width="0.0115%" height="15" fill="rgb(251,55,41)" fg:x="11430" fg:w="4"/><text x="33.0929%" y="959.50"></text></g><g><title>isdalloct (4 samples, 0.01%)</title><rect x="32.8429%" y="933" width="0.0115%" height="15" fill="rgb(242,34,40)" fg:x="11430" fg:w="4"/><text x="33.0929%" y="943.50"></text></g><g><title>arena_sdalloc (4 samples, 0.01%)</title><rect x="32.8429%" y="917" width="0.0115%" height="15" fill="rgb(215,42,17)" fg:x="11430" fg:w="4"/><text x="33.0929%" y="927.50"></text></g><g><title>tcache_dalloc_small (4 samples, 0.01%)</title><rect x="32.8429%" y="901" width="0.0115%" height="15" fill="rgb(207,44,46)" fg:x="11430" fg:w="4"/><text x="33.0929%" y="911.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.05%)</title><rect x="32.8142%" y="1061" width="0.0488%" height="15" fill="rgb(211,206,28)" fg:x="11420" fg:w="17"/><text x="33.0642%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (16 samples, 0.05%)</title><rect x="32.8171%" y="1045" width="0.0460%" height="15" fill="rgb(237,167,16)" fg:x="11421" fg:w="16"/><text x="33.0671%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (16 samples, 0.05%)</title><rect x="32.8171%" y="1029" width="0.0460%" height="15" fill="rgb(233,66,6)" fg:x="11421" fg:w="16"/><text x="33.0671%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (16 samples, 0.05%)</title><rect x="32.8171%" y="1013" width="0.0460%" height="15" fill="rgb(246,123,29)" fg:x="11421" fg:w="16"/><text x="33.0671%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (27 samples, 0.08%)</title><rect x="32.8142%" y="1093" width="0.0776%" height="15" fill="rgb(209,62,40)" fg:x="11420" fg:w="27"/><text x="33.0642%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (27 samples, 0.08%)</title><rect x="32.8142%" y="1077" width="0.0776%" height="15" fill="rgb(218,4,25)" fg:x="11420" fg:w="27"/><text x="33.0642%" y="1087.50"></text></g><g><title>sdallocx (8 samples, 0.02%)</title><rect x="32.8688%" y="1061" width="0.0230%" height="15" fill="rgb(253,91,49)" fg:x="11439" fg:w="8"/><text x="33.1188%" y="1071.50"></text></g><g><title>isfree (8 samples, 0.02%)</title><rect x="32.8688%" y="1045" width="0.0230%" height="15" fill="rgb(228,155,29)" fg:x="11439" fg:w="8"/><text x="33.1188%" y="1055.50"></text></g><g><title>isdalloct (8 samples, 0.02%)</title><rect x="32.8688%" y="1029" width="0.0230%" height="15" fill="rgb(243,57,37)" fg:x="11439" fg:w="8"/><text x="33.1188%" y="1039.50"></text></g><g><title>arena_sdalloc (8 samples, 0.02%)</title><rect x="32.8688%" y="1013" width="0.0230%" height="15" fill="rgb(244,167,17)" fg:x="11439" fg:w="8"/><text x="33.1188%" y="1023.50"></text></g><g><title>tcache_dalloc_small (8 samples, 0.02%)</title><rect x="32.8688%" y="997" width="0.0230%" height="15" fill="rgb(207,181,38)" fg:x="11439" fg:w="8"/><text x="33.1188%" y="1007.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.08%)</title><rect x="32.8142%" y="1157" width="0.0805%" height="15" fill="rgb(211,8,23)" fg:x="11420" fg:w="28"/><text x="33.0642%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (28 samples, 0.08%)</title><rect x="32.8142%" y="1141" width="0.0805%" height="15" fill="rgb(235,11,44)" fg:x="11420" fg:w="28"/><text x="33.0642%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (28 samples, 0.08%)</title><rect x="32.8142%" y="1125" width="0.0805%" height="15" fill="rgb(248,18,52)" fg:x="11420" fg:w="28"/><text x="33.0642%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (28 samples, 0.08%)</title><rect x="32.8142%" y="1109" width="0.0805%" height="15" fill="rgb(208,4,7)" fg:x="11420" fg:w="28"/><text x="33.0642%" y="1119.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (4 samples, 0.01%)</title><rect x="32.9033%" y="1141" width="0.0115%" height="15" fill="rgb(240,17,39)" fg:x="11451" fg:w="4"/><text x="33.1533%" y="1151.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (8 samples, 0.02%)</title><rect x="32.9033%" y="1157" width="0.0230%" height="15" fill="rgb(207,170,3)" fg:x="11451" fg:w="8"/><text x="33.1533%" y="1167.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.01%)</title><rect x="32.9148%" y="1141" width="0.0115%" height="15" fill="rgb(236,100,52)" fg:x="11455" fg:w="4"/><text x="33.1648%" y="1151.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (4 samples, 0.01%)</title><rect x="32.9148%" y="1125" width="0.0115%" height="15" fill="rgb(246,78,51)" fg:x="11455" fg:w="4"/><text x="33.1648%" y="1135.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (4 samples, 0.01%)</title><rect x="32.9148%" y="1109" width="0.0115%" height="15" fill="rgb(211,17,15)" fg:x="11455" fg:w="4"/><text x="33.1648%" y="1119.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (4 samples, 0.01%)</title><rect x="32.9148%" y="1093" width="0.0115%" height="15" fill="rgb(209,59,46)" fg:x="11455" fg:w="4"/><text x="33.1648%" y="1103.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (4 samples, 0.01%)</title><rect x="32.9148%" y="1077" width="0.0115%" height="15" fill="rgb(210,92,25)" fg:x="11455" fg:w="4"/><text x="33.1648%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.01%)</title><rect x="32.9148%" y="1061" width="0.0115%" height="15" fill="rgb(238,174,52)" fg:x="11455" fg:w="4"/><text x="33.1648%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.01%)</title><rect x="32.9148%" y="1045" width="0.0115%" height="15" fill="rgb(230,73,7)" fg:x="11455" fg:w="4"/><text x="33.1648%" y="1055.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.01%)</title><rect x="32.9148%" y="1029" width="0.0115%" height="15" fill="rgb(243,124,40)" fg:x="11455" fg:w="4"/><text x="33.1648%" y="1039.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or_else (22 samples, 0.06%)</title><rect x="32.9349%" y="1157" width="0.0632%" height="15" fill="rgb(244,170,11)" fg:x="11462" fg:w="22"/><text x="33.1849%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_core_types::value::MoveTypeLayout&gt;&gt; (9 samples, 0.03%)</title><rect x="33.0441%" y="981" width="0.0259%" height="15" fill="rgb(207,114,54)" fg:x="11500" fg:w="9"/><text x="33.2941%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (9 samples, 0.03%)</title><rect x="33.0441%" y="965" width="0.0259%" height="15" fill="rgb(205,42,20)" fg:x="11500" fg:w="9"/><text x="33.2941%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveStructLayout&gt; (9 samples, 0.03%)</title><rect x="33.0441%" y="949" width="0.0259%" height="15" fill="rgb(230,30,28)" fg:x="11500" fg:w="9"/><text x="33.2941%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::value::MoveTypeLayout&gt;&gt; (9 samples, 0.03%)</title><rect x="33.0441%" y="933" width="0.0259%" height="15" fill="rgb(205,73,54)" fg:x="11500" fg:w="9"/><text x="33.2941%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.03%)</title><rect x="33.0441%" y="917" width="0.0259%" height="15" fill="rgb(254,227,23)" fg:x="11500" fg:w="9"/><text x="33.2941%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::value::MoveTypeLayout]&gt; (9 samples, 0.03%)</title><rect x="33.0441%" y="901" width="0.0259%" height="15" fill="rgb(228,202,34)" fg:x="11500" fg:w="9"/><text x="33.2941%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (9 samples, 0.03%)</title><rect x="33.0441%" y="885" width="0.0259%" height="15" fill="rgb(222,225,37)" fg:x="11500" fg:w="9"/><text x="33.2941%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveStructLayout&gt; (9 samples, 0.03%)</title><rect x="33.0441%" y="869" width="0.0259%" height="15" fill="rgb(221,14,54)" fg:x="11500" fg:w="9"/><text x="33.2941%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::value::MoveTypeLayout&gt;&gt; (9 samples, 0.03%)</title><rect x="33.0441%" y="853" width="0.0259%" height="15" fill="rgb(254,102,2)" fg:x="11500" fg:w="9"/><text x="33.2941%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.03%)</title><rect x="33.0441%" y="837" width="0.0259%" height="15" fill="rgb(232,104,17)" fg:x="11500" fg:w="9"/><text x="33.2941%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::value::MoveTypeLayout]&gt; (9 samples, 0.03%)</title><rect x="33.0441%" y="821" width="0.0259%" height="15" fill="rgb(250,220,14)" fg:x="11500" fg:w="9"/><text x="33.2941%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (8 samples, 0.02%)</title><rect x="33.0470%" y="805" width="0.0230%" height="15" fill="rgb(241,158,9)" fg:x="11501" fg:w="8"/><text x="33.2970%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_core_types::value::MoveTypeLayout&gt;&gt; (4 samples, 0.01%)</title><rect x="33.0584%" y="789" width="0.0115%" height="15" fill="rgb(246,9,43)" fg:x="11505" fg:w="4"/><text x="33.3084%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (9 samples, 0.03%)</title><rect x="33.0757%" y="917" width="0.0259%" height="15" fill="rgb(206,73,33)" fg:x="11511" fg:w="9"/><text x="33.3257%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveStructLayout&gt; (5 samples, 0.01%)</title><rect x="33.0872%" y="901" width="0.0144%" height="15" fill="rgb(222,79,8)" fg:x="11515" fg:w="5"/><text x="33.3372%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::value::MoveTypeLayout&gt;&gt; (5 samples, 0.01%)</title><rect x="33.0872%" y="885" width="0.0144%" height="15" fill="rgb(234,8,54)" fg:x="11515" fg:w="5"/><text x="33.3372%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="33.0872%" y="869" width="0.0144%" height="15" fill="rgb(209,134,38)" fg:x="11515" fg:w="5"/><text x="33.3372%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::value::MoveTypeLayout]&gt; (5 samples, 0.01%)</title><rect x="33.0872%" y="853" width="0.0144%" height="15" fill="rgb(230,127,29)" fg:x="11515" fg:w="5"/><text x="33.3372%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (5 samples, 0.01%)</title><rect x="33.0872%" y="837" width="0.0144%" height="15" fill="rgb(242,44,41)" fg:x="11515" fg:w="5"/><text x="33.3372%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (32 samples, 0.09%)</title><rect x="33.0211%" y="997" width="0.0919%" height="15" fill="rgb(222,56,43)" fg:x="11492" fg:w="32"/><text x="33.2711%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveStructLayout&gt; (15 samples, 0.04%)</title><rect x="33.0699%" y="981" width="0.0431%" height="15" fill="rgb(238,39,47)" fg:x="11509" fg:w="15"/><text x="33.3199%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::value::MoveTypeLayout&gt;&gt; (15 samples, 0.04%)</title><rect x="33.0699%" y="965" width="0.0431%" height="15" fill="rgb(226,79,43)" fg:x="11509" fg:w="15"/><text x="33.3199%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.04%)</title><rect x="33.0699%" y="949" width="0.0431%" height="15" fill="rgb(242,105,53)" fg:x="11509" fg:w="15"/><text x="33.3199%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::value::MoveTypeLayout]&gt; (15 samples, 0.04%)</title><rect x="33.0699%" y="933" width="0.0431%" height="15" fill="rgb(251,132,46)" fg:x="11509" fg:w="15"/><text x="33.3199%" y="943.50"></text></g><g><title>sdallocx (4 samples, 0.01%)</title><rect x="33.1015%" y="917" width="0.0115%" height="15" fill="rgb(231,77,14)" fg:x="11520" fg:w="4"/><text x="33.3515%" y="927.50"></text></g><g><title>isfree (4 samples, 0.01%)</title><rect x="33.1015%" y="901" width="0.0115%" height="15" fill="rgb(240,135,9)" fg:x="11520" fg:w="4"/><text x="33.3515%" y="911.50"></text></g><g><title>isdalloct (4 samples, 0.01%)</title><rect x="33.1015%" y="885" width="0.0115%" height="15" fill="rgb(248,109,14)" fg:x="11520" fg:w="4"/><text x="33.3515%" y="895.50"></text></g><g><title>arena_sdalloc (4 samples, 0.01%)</title><rect x="33.1015%" y="869" width="0.0115%" height="15" fill="rgb(227,146,52)" fg:x="11520" fg:w="4"/><text x="33.3515%" y="879.50"></text></g><g><title>tcache_dalloc_small (4 samples, 0.01%)</title><rect x="33.1015%" y="853" width="0.0115%" height="15" fill="rgb(232,54,3)" fg:x="11520" fg:w="4"/><text x="33.3515%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (41 samples, 0.12%)</title><rect x="33.0182%" y="1029" width="0.1178%" height="15" fill="rgb(229,201,43)" fg:x="11491" fg:w="41"/><text x="33.2682%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::value::MoveTypeLayout]&gt; (41 samples, 0.12%)</title><rect x="33.0182%" y="1013" width="0.1178%" height="15" fill="rgb(252,161,33)" fg:x="11491" fg:w="41"/><text x="33.2682%" y="1023.50"></text></g><g><title>sdallocx (8 samples, 0.02%)</title><rect x="33.1130%" y="997" width="0.0230%" height="15" fill="rgb(226,146,40)" fg:x="11524" fg:w="8"/><text x="33.3630%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (49 samples, 0.14%)</title><rect x="33.0182%" y="1077" width="0.1408%" height="15" fill="rgb(219,47,25)" fg:x="11491" fg:w="49"/><text x="33.2682%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveStructLayout&gt; (49 samples, 0.14%)</title><rect x="33.0182%" y="1061" width="0.1408%" height="15" fill="rgb(250,135,13)" fg:x="11491" fg:w="49"/><text x="33.2682%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::value::MoveTypeLayout&gt;&gt; (49 samples, 0.14%)</title><rect x="33.0182%" y="1045" width="0.1408%" height="15" fill="rgb(219,229,18)" fg:x="11491" fg:w="49"/><text x="33.2682%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_core_types::value::MoveTypeLayout&gt;&gt; (8 samples, 0.02%)</title><rect x="33.1360%" y="1029" width="0.0230%" height="15" fill="rgb(217,152,27)" fg:x="11532" fg:w="8"/><text x="33.3860%" y="1039.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.02%)</title><rect x="33.1360%" y="1013" width="0.0230%" height="15" fill="rgb(225,71,47)" fg:x="11532" fg:w="8"/><text x="33.3860%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (62 samples, 0.18%)</title><rect x="33.0067%" y="1157" width="0.1782%" height="15" fill="rgb(220,139,14)" fg:x="11487" fg:w="62"/><text x="33.2567%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveStructLayout&gt; (60 samples, 0.17%)</title><rect x="33.0125%" y="1141" width="0.1724%" height="15" fill="rgb(247,54,32)" fg:x="11489" fg:w="60"/><text x="33.2625%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::value::MoveTypeLayout&gt;&gt; (60 samples, 0.17%)</title><rect x="33.0125%" y="1125" width="0.1724%" height="15" fill="rgb(252,131,39)" fg:x="11489" fg:w="60"/><text x="33.2625%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (60 samples, 0.17%)</title><rect x="33.0125%" y="1109" width="0.1724%" height="15" fill="rgb(210,108,39)" fg:x="11489" fg:w="60"/><text x="33.2625%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::value::MoveTypeLayout]&gt; (60 samples, 0.17%)</title><rect x="33.0125%" y="1093" width="0.1724%" height="15" fill="rgb(205,23,29)" fg:x="11489" fg:w="60"/><text x="33.2625%" y="1103.50"></text></g><g><title>sdallocx (9 samples, 0.03%)</title><rect x="33.1590%" y="1077" width="0.0259%" height="15" fill="rgb(246,139,46)" fg:x="11540" fg:w="9"/><text x="33.4090%" y="1087.50"></text></g><g><title>inallocx (9 samples, 0.03%)</title><rect x="33.1590%" y="1061" width="0.0259%" height="15" fill="rgb(250,81,26)" fg:x="11540" fg:w="9"/><text x="33.4090%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (8 samples, 0.02%)</title><rect x="33.1849%" y="1157" width="0.0230%" height="15" fill="rgb(214,104,7)" fg:x="11549" fg:w="8"/><text x="33.4349%" y="1167.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (8 samples, 0.02%)</title><rect x="33.2136%" y="1141" width="0.0230%" height="15" fill="rgb(233,189,8)" fg:x="11559" fg:w="8"/><text x="33.4636%" y="1151.50"></text></g><g><title>move_core_types::effects::ChangeSet::add_account_changeset (14 samples, 0.04%)</title><rect x="33.2136%" y="1157" width="0.0402%" height="15" fill="rgb(228,141,17)" fg:x="11559" fg:w="14"/><text x="33.4636%" y="1167.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (6 samples, 0.02%)</title><rect x="33.2366%" y="1141" width="0.0172%" height="15" fill="rgb(247,157,1)" fg:x="11567" fg:w="6"/><text x="33.4866%" y="1151.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (8 samples, 0.02%)</title><rect x="33.2797%" y="997" width="0.0230%" height="15" fill="rgb(249,225,5)" fg:x="11582" fg:w="8"/><text x="33.5297%" y="1007.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::clone::Clone&gt;::clone (8 samples, 0.02%)</title><rect x="33.2797%" y="981" width="0.0230%" height="15" fill="rgb(242,55,13)" fg:x="11582" fg:w="8"/><text x="33.5297%" y="991.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::clone::Clone&gt;::clone (4 samples, 0.01%)</title><rect x="33.2912%" y="965" width="0.0115%" height="15" fill="rgb(230,49,50)" fg:x="11586" fg:w="4"/><text x="33.5412%" y="975.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::clone::Clone&gt;::clone (4 samples, 0.01%)</title><rect x="33.2912%" y="949" width="0.0115%" height="15" fill="rgb(241,111,38)" fg:x="11586" fg:w="4"/><text x="33.5412%" y="959.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (4 samples, 0.01%)</title><rect x="33.2912%" y="933" width="0.0115%" height="15" fill="rgb(252,155,4)" fg:x="11586" fg:w="4"/><text x="33.5412%" y="943.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (4 samples, 0.01%)</title><rect x="33.2912%" y="917" width="0.0115%" height="15" fill="rgb(212,69,32)" fg:x="11586" fg:w="4"/><text x="33.5412%" y="927.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as alloc::boxed::BoxFromSlice&lt;T&gt;&gt;::from_slice (4 samples, 0.01%)</title><rect x="33.2912%" y="901" width="0.0115%" height="15" fill="rgb(243,107,47)" fg:x="11586" fg:w="4"/><text x="33.5412%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="33.2912%" y="885" width="0.0115%" height="15" fill="rgb(247,130,12)" fg:x="11586" fg:w="4"/><text x="33.5412%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (4 samples, 0.01%)</title><rect x="33.2912%" y="869" width="0.0115%" height="15" fill="rgb(233,74,16)" fg:x="11586" fg:w="4"/><text x="33.5412%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.01%)</title><rect x="33.2912%" y="853" width="0.0115%" height="15" fill="rgb(208,58,18)" fg:x="11586" fg:w="4"/><text x="33.5412%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.01%)</title><rect x="33.2912%" y="837" width="0.0115%" height="15" fill="rgb(242,225,1)" fg:x="11586" fg:w="4"/><text x="33.5412%" y="847.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.01%)</title><rect x="33.2912%" y="821" width="0.0115%" height="15" fill="rgb(249,39,40)" fg:x="11586" fg:w="4"/><text x="33.5412%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (11 samples, 0.03%)</title><rect x="33.2768%" y="1093" width="0.0316%" height="15" fill="rgb(207,72,44)" fg:x="11581" fg:w="11"/><text x="33.5268%" y="1103.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (10 samples, 0.03%)</title><rect x="33.2797%" y="1077" width="0.0287%" height="15" fill="rgb(215,193,12)" fg:x="11582" fg:w="10"/><text x="33.5297%" y="1087.50"></text></g><g><title>alloc::slice::hack::to_vec (10 samples, 0.03%)</title><rect x="33.2797%" y="1061" width="0.0287%" height="15" fill="rgb(248,41,39)" fg:x="11582" fg:w="10"/><text x="33.5297%" y="1071.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (10 samples, 0.03%)</title><rect x="33.2797%" y="1045" width="0.0287%" height="15" fill="rgb(253,85,4)" fg:x="11582" fg:w="10"/><text x="33.5297%" y="1055.50"></text></g><g><title>&lt;move_core_types::language_storage::TypeTag as core::clone::Clone&gt;::clone (10 samples, 0.03%)</title><rect x="33.2797%" y="1029" width="0.0287%" height="15" fill="rgb(243,70,31)" fg:x="11582" fg:w="10"/><text x="33.5297%" y="1039.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (10 samples, 0.03%)</title><rect x="33.2797%" y="1013" width="0.0287%" height="15" fill="rgb(253,195,26)" fg:x="11582" fg:w="10"/><text x="33.5297%" y="1023.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::clone::Clone&gt;::clone (20 samples, 0.06%)</title><rect x="33.2768%" y="1109" width="0.0575%" height="15" fill="rgb(243,42,11)" fg:x="11581" fg:w="20"/><text x="33.5268%" y="1119.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::clone::Clone&gt;::clone (9 samples, 0.03%)</title><rect x="33.3084%" y="1093" width="0.0259%" height="15" fill="rgb(239,66,17)" fg:x="11592" fg:w="9"/><text x="33.5584%" y="1103.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::clone::Clone&gt;::clone (9 samples, 0.03%)</title><rect x="33.3084%" y="1077" width="0.0259%" height="15" fill="rgb(217,132,21)" fg:x="11592" fg:w="9"/><text x="33.5584%" y="1087.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (8 samples, 0.02%)</title><rect x="33.3113%" y="1061" width="0.0230%" height="15" fill="rgb(252,202,21)" fg:x="11593" fg:w="8"/><text x="33.5613%" y="1071.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (8 samples, 0.02%)</title><rect x="33.3113%" y="1045" width="0.0230%" height="15" fill="rgb(233,98,36)" fg:x="11593" fg:w="8"/><text x="33.5613%" y="1055.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as alloc::boxed::BoxFromSlice&lt;T&gt;&gt;::from_slice (8 samples, 0.02%)</title><rect x="33.3113%" y="1029" width="0.0230%" height="15" fill="rgb(216,153,54)" fg:x="11593" fg:w="8"/><text x="33.5613%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (8 samples, 0.02%)</title><rect x="33.3113%" y="1013" width="0.0230%" height="15" fill="rgb(250,99,7)" fg:x="11593" fg:w="8"/><text x="33.5613%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (8 samples, 0.02%)</title><rect x="33.3113%" y="997" width="0.0230%" height="15" fill="rgb(207,56,50)" fg:x="11593" fg:w="8"/><text x="33.5613%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.02%)</title><rect x="33.3113%" y="981" width="0.0230%" height="15" fill="rgb(244,61,34)" fg:x="11593" fg:w="8"/><text x="33.5613%" y="991.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.02%)</title><rect x="33.3113%" y="965" width="0.0230%" height="15" fill="rgb(241,50,38)" fg:x="11593" fg:w="8"/><text x="33.5613%" y="975.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.02%)</title><rect x="33.3113%" y="949" width="0.0230%" height="15" fill="rgb(212,166,30)" fg:x="11593" fg:w="8"/><text x="33.5613%" y="959.50"></text></g><g><title>mallocx (5 samples, 0.01%)</title><rect x="33.3199%" y="933" width="0.0144%" height="15" fill="rgb(249,127,32)" fg:x="11596" fg:w="5"/><text x="33.5699%" y="943.50"></text></g><g><title>imalloc (5 samples, 0.01%)</title><rect x="33.3199%" y="917" width="0.0144%" height="15" fill="rgb(209,103,0)" fg:x="11596" fg:w="5"/><text x="33.5699%" y="927.50"></text></g><g><title>imalloc_body (5 samples, 0.01%)</title><rect x="33.3199%" y="901" width="0.0144%" height="15" fill="rgb(238,209,51)" fg:x="11596" fg:w="5"/><text x="33.5699%" y="911.50"></text></g><g><title>imalloc_no_sample (5 samples, 0.01%)</title><rect x="33.3199%" y="885" width="0.0144%" height="15" fill="rgb(237,56,23)" fg:x="11596" fg:w="5"/><text x="33.5699%" y="895.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (4 samples, 0.01%)</title><rect x="33.3487%" y="1029" width="0.0115%" height="15" fill="rgb(215,153,46)" fg:x="11606" fg:w="4"/><text x="33.5987%" y="1039.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4 samples, 0.01%)</title><rect x="33.3487%" y="1013" width="0.0115%" height="15" fill="rgb(224,49,31)" fg:x="11606" fg:w="4"/><text x="33.5987%" y="1023.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4 samples, 0.01%)</title><rect x="33.3487%" y="997" width="0.0115%" height="15" fill="rgb(250,18,42)" fg:x="11606" fg:w="4"/><text x="33.5987%" y="1007.50"></text></g><g><title>hashbrown::map::make_hash (14 samples, 0.04%)</title><rect x="33.3343%" y="1061" width="0.0402%" height="15" fill="rgb(215,176,39)" fg:x="11601" fg:w="14"/><text x="33.5843%" y="1071.50"></text></g><g><title>core::hash::BuildHasher::hash_one (14 samples, 0.04%)</title><rect x="33.3343%" y="1045" width="0.0402%" height="15" fill="rgb(223,77,29)" fg:x="11601" fg:w="14"/><text x="33.5843%" y="1055.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (5 samples, 0.01%)</title><rect x="33.3602%" y="1029" width="0.0144%" height="15" fill="rgb(234,94,52)" fg:x="11610" fg:w="5"/><text x="33.6102%" y="1039.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag (59 samples, 0.17%)</title><rect x="33.2538%" y="1157" width="0.1695%" height="15" fill="rgb(220,154,50)" fg:x="11573" fg:w="59"/><text x="33.5038%" y="1167.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag_impl (54 samples, 0.16%)</title><rect x="33.2682%" y="1141" width="0.1552%" height="15" fill="rgb(212,11,10)" fg:x="11578" fg:w="54"/><text x="33.5182%" y="1151.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_tag (51 samples, 0.15%)</title><rect x="33.2768%" y="1125" width="0.1465%" height="15" fill="rgb(205,166,19)" fg:x="11581" fg:w="51"/><text x="33.5268%" y="1135.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (31 samples, 0.09%)</title><rect x="33.3343%" y="1109" width="0.0891%" height="15" fill="rgb(244,198,16)" fg:x="11601" fg:w="31"/><text x="33.5843%" y="1119.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (31 samples, 0.09%)</title><rect x="33.3343%" y="1093" width="0.0891%" height="15" fill="rgb(219,69,12)" fg:x="11601" fg:w="31"/><text x="33.5843%" y="1103.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (31 samples, 0.09%)</title><rect x="33.3343%" y="1077" width="0.0891%" height="15" fill="rgb(245,30,7)" fg:x="11601" fg:w="31"/><text x="33.5843%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (17 samples, 0.05%)</title><rect x="33.3745%" y="1061" width="0.0488%" height="15" fill="rgb(218,221,48)" fg:x="11615" fg:w="17"/><text x="33.6245%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (17 samples, 0.05%)</title><rect x="33.3745%" y="1045" width="0.0488%" height="15" fill="rgb(216,66,15)" fg:x="11615" fg:w="17"/><text x="33.6245%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (17 samples, 0.05%)</title><rect x="33.3745%" y="1029" width="0.0488%" height="15" fill="rgb(226,122,50)" fg:x="11615" fg:w="17"/><text x="33.6245%" y="1039.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.05%)</title><rect x="33.3745%" y="1013" width="0.0488%" height="15" fill="rgb(239,156,16)" fg:x="11615" fg:w="17"/><text x="33.6245%" y="1023.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (17 samples, 0.05%)</title><rect x="33.3745%" y="997" width="0.0488%" height="15" fill="rgb(224,27,38)" fg:x="11615" fg:w="17"/><text x="33.6245%" y="1007.50"></text></g><g><title>alloc::rc::RcInnerPtr::dec_strong (4 samples, 0.01%)</title><rect x="33.4234%" y="1093" width="0.0115%" height="15" fill="rgb(224,39,27)" fg:x="11632" fg:w="4"/><text x="33.6734%" y="1103.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (4 samples, 0.01%)</title><rect x="33.4234%" y="1077" width="0.0115%" height="15" fill="rgb(215,92,29)" fg:x="11632" fg:w="4"/><text x="33.6734%" y="1087.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (4 samples, 0.01%)</title><rect x="33.4234%" y="1061" width="0.0115%" height="15" fill="rgb(207,159,16)" fg:x="11632" fg:w="4"/><text x="33.6734%" y="1071.50"></text></g><g><title>core::mem::replace (4 samples, 0.01%)</title><rect x="33.4234%" y="1045" width="0.0115%" height="15" fill="rgb(238,163,47)" fg:x="11632" fg:w="4"/><text x="33.6734%" y="1055.50"></text></g><g><title>core::ptr::write (4 samples, 0.01%)</title><rect x="33.4234%" y="1029" width="0.0115%" height="15" fill="rgb(219,91,49)" fg:x="11632" fg:w="4"/><text x="33.6734%" y="1039.50"></text></g><g><title>alloc::rc::RcInnerPtr::dec_strong (9 samples, 0.03%)</title><rect x="33.4722%" y="949" width="0.0259%" height="15" fill="rgb(227,167,31)" fg:x="11649" fg:w="9"/><text x="33.7222%" y="959.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (9 samples, 0.03%)</title><rect x="33.4722%" y="933" width="0.0259%" height="15" fill="rgb(234,80,54)" fg:x="11649" fg:w="9"/><text x="33.7222%" y="943.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (9 samples, 0.03%)</title><rect x="33.4722%" y="917" width="0.0259%" height="15" fill="rgb(212,114,2)" fg:x="11649" fg:w="9"/><text x="33.7222%" y="927.50"></text></g><g><title>core::mem::replace (9 samples, 0.03%)</title><rect x="33.4722%" y="901" width="0.0259%" height="15" fill="rgb(234,50,24)" fg:x="11649" fg:w="9"/><text x="33.7222%" y="911.50"></text></g><g><title>core::ptr::write (9 samples, 0.03%)</title><rect x="33.4722%" y="885" width="0.0259%" height="15" fill="rgb(221,68,8)" fg:x="11649" fg:w="9"/><text x="33.7222%" y="895.50"></text></g><g><title>alloc::rc::RcInnerPtr::dec_strong (4 samples, 0.01%)</title><rect x="33.5412%" y="805" width="0.0115%" height="15" fill="rgb(254,180,31)" fg:x="11673" fg:w="4"/><text x="33.7912%" y="815.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (4 samples, 0.01%)</title><rect x="33.5412%" y="789" width="0.0115%" height="15" fill="rgb(247,130,50)" fg:x="11673" fg:w="4"/><text x="33.7912%" y="799.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (4 samples, 0.01%)</title><rect x="33.5412%" y="773" width="0.0115%" height="15" fill="rgb(211,109,4)" fg:x="11673" fg:w="4"/><text x="33.7912%" y="783.50"></text></g><g><title>core::mem::replace (4 samples, 0.01%)</title><rect x="33.5412%" y="757" width="0.0115%" height="15" fill="rgb(238,50,21)" fg:x="11673" fg:w="4"/><text x="33.7912%" y="767.50"></text></g><g><title>core::ptr::write (4 samples, 0.01%)</title><rect x="33.5412%" y="741" width="0.0115%" height="15" fill="rgb(225,57,45)" fg:x="11673" fg:w="4"/><text x="33.7912%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (7 samples, 0.02%)</title><rect x="33.6101%" y="405" width="0.0201%" height="15" fill="rgb(209,196,50)" fg:x="11697" fg:w="7"/><text x="33.8601%" y="415.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.02%)</title><rect x="33.6101%" y="389" width="0.0201%" height="15" fill="rgb(242,140,13)" fg:x="11697" fg:w="7"/><text x="33.8601%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (7 samples, 0.02%)</title><rect x="33.6101%" y="373" width="0.0201%" height="15" fill="rgb(217,111,7)" fg:x="11697" fg:w="7"/><text x="33.8601%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (7 samples, 0.02%)</title><rect x="33.6101%" y="357" width="0.0201%" height="15" fill="rgb(253,193,51)" fg:x="11697" fg:w="7"/><text x="33.8601%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (7 samples, 0.02%)</title><rect x="33.6101%" y="341" width="0.0201%" height="15" fill="rgb(252,70,29)" fg:x="11697" fg:w="7"/><text x="33.8601%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.02%)</title><rect x="33.6101%" y="325" width="0.0201%" height="15" fill="rgb(232,127,12)" fg:x="11697" fg:w="7"/><text x="33.8601%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (5 samples, 0.01%)</title><rect x="33.6159%" y="309" width="0.0144%" height="15" fill="rgb(211,180,21)" fg:x="11699" fg:w="5"/><text x="33.8659%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::ValueImpl&gt; (5 samples, 0.01%)</title><rect x="33.6159%" y="293" width="0.0144%" height="15" fill="rgb(229,72,13)" fg:x="11699" fg:w="5"/><text x="33.8659%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (5 samples, 0.01%)</title><rect x="33.6159%" y="277" width="0.0144%" height="15" fill="rgb(240,211,49)" fg:x="11699" fg:w="5"/><text x="33.8659%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (10 samples, 0.03%)</title><rect x="33.6044%" y="421" width="0.0287%" height="15" fill="rgb(219,149,40)" fg:x="11695" fg:w="10"/><text x="33.8544%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (28 samples, 0.08%)</title><rect x="33.5613%" y="693" width="0.0805%" height="15" fill="rgb(210,127,46)" fg:x="11680" fg:w="28"/><text x="33.8113%" y="703.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.08%)</title><rect x="33.5613%" y="677" width="0.0805%" height="15" fill="rgb(220,106,7)" fg:x="11680" fg:w="28"/><text x="33.8113%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (25 samples, 0.07%)</title><rect x="33.5699%" y="661" width="0.0718%" height="15" fill="rgb(249,31,22)" fg:x="11683" fg:w="25"/><text x="33.8199%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (25 samples, 0.07%)</title><rect x="33.5699%" y="645" width="0.0718%" height="15" fill="rgb(253,1,49)" fg:x="11683" fg:w="25"/><text x="33.8199%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (25 samples, 0.07%)</title><rect x="33.5699%" y="629" width="0.0718%" height="15" fill="rgb(227,144,33)" fg:x="11683" fg:w="25"/><text x="33.8199%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.07%)</title><rect x="33.5699%" y="613" width="0.0718%" height="15" fill="rgb(249,163,44)" fg:x="11683" fg:w="25"/><text x="33.8199%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (25 samples, 0.07%)</title><rect x="33.5699%" y="597" width="0.0718%" height="15" fill="rgb(234,15,39)" fg:x="11683" fg:w="25"/><text x="33.8199%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::ValueImpl&gt; (25 samples, 0.07%)</title><rect x="33.5699%" y="581" width="0.0718%" height="15" fill="rgb(207,66,16)" fg:x="11683" fg:w="25"/><text x="33.8199%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (22 samples, 0.06%)</title><rect x="33.5785%" y="565" width="0.0632%" height="15" fill="rgb(233,112,24)" fg:x="11686" fg:w="22"/><text x="33.8285%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (22 samples, 0.06%)</title><rect x="33.5785%" y="549" width="0.0632%" height="15" fill="rgb(230,90,22)" fg:x="11686" fg:w="22"/><text x="33.8285%" y="559.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.06%)</title><rect x="33.5785%" y="533" width="0.0632%" height="15" fill="rgb(229,61,13)" fg:x="11686" fg:w="22"/><text x="33.8285%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (22 samples, 0.06%)</title><rect x="33.5785%" y="517" width="0.0632%" height="15" fill="rgb(225,57,24)" fg:x="11686" fg:w="22"/><text x="33.8285%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (22 samples, 0.06%)</title><rect x="33.5785%" y="501" width="0.0632%" height="15" fill="rgb(208,169,48)" fg:x="11686" fg:w="22"/><text x="33.8285%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (22 samples, 0.06%)</title><rect x="33.5785%" y="485" width="0.0632%" height="15" fill="rgb(244,218,51)" fg:x="11686" fg:w="22"/><text x="33.8285%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.05%)</title><rect x="33.5872%" y="469" width="0.0546%" height="15" fill="rgb(214,148,10)" fg:x="11689" fg:w="19"/><text x="33.8372%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (19 samples, 0.05%)</title><rect x="33.5872%" y="453" width="0.0546%" height="15" fill="rgb(225,174,27)" fg:x="11689" fg:w="19"/><text x="33.8372%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::ValueImpl&gt; (19 samples, 0.05%)</title><rect x="33.5872%" y="437" width="0.0546%" height="15" fill="rgb(230,96,26)" fg:x="11689" fg:w="19"/><text x="33.8372%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (36 samples, 0.10%)</title><rect x="33.5412%" y="837" width="0.1034%" height="15" fill="rgb(232,10,30)" fg:x="11673" fg:w="36"/><text x="33.7912%" y="847.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.10%)</title><rect x="33.5412%" y="821" width="0.1034%" height="15" fill="rgb(222,8,50)" fg:x="11673" fg:w="36"/><text x="33.7912%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (32 samples, 0.09%)</title><rect x="33.5527%" y="805" width="0.0919%" height="15" fill="rgb(213,81,27)" fg:x="11677" fg:w="32"/><text x="33.8027%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (32 samples, 0.09%)</title><rect x="33.5527%" y="789" width="0.0919%" height="15" fill="rgb(245,50,10)" fg:x="11677" fg:w="32"/><text x="33.8027%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (32 samples, 0.09%)</title><rect x="33.5527%" y="773" width="0.0919%" height="15" fill="rgb(216,100,18)" fg:x="11677" fg:w="32"/><text x="33.8027%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 0.09%)</title><rect x="33.5527%" y="757" width="0.0919%" height="15" fill="rgb(236,147,54)" fg:x="11677" fg:w="32"/><text x="33.8027%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (32 samples, 0.09%)</title><rect x="33.5527%" y="741" width="0.0919%" height="15" fill="rgb(205,143,26)" fg:x="11677" fg:w="32"/><text x="33.8027%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::ValueImpl&gt; (32 samples, 0.09%)</title><rect x="33.5527%" y="725" width="0.0919%" height="15" fill="rgb(236,26,9)" fg:x="11677" fg:w="32"/><text x="33.8027%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (29 samples, 0.08%)</title><rect x="33.5613%" y="709" width="0.0833%" height="15" fill="rgb(221,165,53)" fg:x="11680" fg:w="29"/><text x="33.8113%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (44 samples, 0.13%)</title><rect x="33.5412%" y="853" width="0.1264%" height="15" fill="rgb(214,110,17)" fg:x="11673" fg:w="44"/><text x="33.7912%" y="863.50"></text></g><g><title>sdallocx (8 samples, 0.02%)</title><rect x="33.6446%" y="837" width="0.0230%" height="15" fill="rgb(237,197,12)" fg:x="11709" fg:w="8"/><text x="33.8946%" y="847.50"></text></g><g><title>inallocx (8 samples, 0.02%)</title><rect x="33.6446%" y="821" width="0.0230%" height="15" fill="rgb(205,84,17)" fg:x="11709" fg:w="8"/><text x="33.8946%" y="831.50"></text></g><g><title>sz_s2u (8 samples, 0.02%)</title><rect x="33.6446%" y="805" width="0.0230%" height="15" fill="rgb(237,18,45)" fg:x="11709" fg:w="8"/><text x="33.8946%" y="815.50"></text></g><g><title>sz_s2u_lookup (8 samples, 0.02%)</title><rect x="33.6446%" y="789" width="0.0230%" height="15" fill="rgb(221,87,14)" fg:x="11709" fg:w="8"/><text x="33.8946%" y="799.50"></text></g><g><title>sz_size2index_lookup (8 samples, 0.02%)</title><rect x="33.6446%" y="773" width="0.0230%" height="15" fill="rgb(238,186,15)" fg:x="11709" fg:w="8"/><text x="33.8946%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (71 samples, 0.20%)</title><rect x="33.4722%" y="981" width="0.2040%" height="15" fill="rgb(208,115,11)" fg:x="11649" fg:w="71"/><text x="33.7222%" y="991.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (71 samples, 0.20%)</title><rect x="33.4722%" y="965" width="0.2040%" height="15" fill="rgb(254,175,0)" fg:x="11649" fg:w="71"/><text x="33.7222%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (62 samples, 0.18%)</title><rect x="33.4981%" y="949" width="0.1782%" height="15" fill="rgb(227,24,42)" fg:x="11658" fg:w="62"/><text x="33.7481%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (62 samples, 0.18%)</title><rect x="33.4981%" y="933" width="0.1782%" height="15" fill="rgb(223,211,37)" fg:x="11658" fg:w="62"/><text x="33.7481%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (62 samples, 0.18%)</title><rect x="33.4981%" y="917" width="0.1782%" height="15" fill="rgb(235,49,27)" fg:x="11658" fg:w="62"/><text x="33.7481%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (62 samples, 0.18%)</title><rect x="33.4981%" y="901" width="0.1782%" height="15" fill="rgb(254,97,51)" fg:x="11658" fg:w="62"/><text x="33.7481%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (62 samples, 0.18%)</title><rect x="33.4981%" y="885" width="0.1782%" height="15" fill="rgb(249,51,40)" fg:x="11658" fg:w="62"/><text x="33.7481%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::ValueImpl&gt; (62 samples, 0.18%)</title><rect x="33.4981%" y="869" width="0.1782%" height="15" fill="rgb(210,128,45)" fg:x="11658" fg:w="62"/><text x="33.7481%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (75 samples, 0.22%)</title><rect x="33.4636%" y="997" width="0.2155%" height="15" fill="rgb(224,137,50)" fg:x="11646" fg:w="75"/><text x="33.7136%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (88 samples, 0.25%)</title><rect x="33.4349%" y="1045" width="0.2529%" height="15" fill="rgb(242,15,9)" fg:x="11636" fg:w="88"/><text x="33.6849%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (88 samples, 0.25%)</title><rect x="33.4349%" y="1029" width="0.2529%" height="15" fill="rgb(233,187,41)" fg:x="11636" fg:w="88"/><text x="33.6849%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::ValueImpl&gt; (88 samples, 0.25%)</title><rect x="33.4349%" y="1013" width="0.2529%" height="15" fill="rgb(227,2,29)" fg:x="11636" fg:w="88"/><text x="33.6849%" y="1023.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (94 samples, 0.27%)</title><rect x="33.4234%" y="1109" width="0.2701%" height="15" fill="rgb(222,70,3)" fg:x="11632" fg:w="94"/><text x="33.6734%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (90 samples, 0.26%)</title><rect x="33.4349%" y="1093" width="0.2586%" height="15" fill="rgb(213,11,42)" fg:x="11636" fg:w="90"/><text x="33.6849%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (90 samples, 0.26%)</title><rect x="33.4349%" y="1077" width="0.2586%" height="15" fill="rgb(225,150,9)" fg:x="11636" fg:w="90"/><text x="33.6849%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (90 samples, 0.26%)</title><rect x="33.4349%" y="1061" width="0.2586%" height="15" fill="rgb(230,162,45)" fg:x="11636" fg:w="90"/><text x="33.6849%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (98 samples, 0.28%)</title><rect x="33.4234%" y="1125" width="0.2816%" height="15" fill="rgb(222,14,52)" fg:x="11632" fg:w="98"/><text x="33.6734%" y="1135.50"></text></g><g><title>sdallocx (4 samples, 0.01%)</title><rect x="33.6935%" y="1109" width="0.0115%" height="15" fill="rgb(254,198,14)" fg:x="11726" fg:w="4"/><text x="33.9435%" y="1119.50"></text></g><g><title>inallocx (4 samples, 0.01%)</title><rect x="33.6935%" y="1093" width="0.0115%" height="15" fill="rgb(220,217,30)" fg:x="11726" fg:w="4"/><text x="33.9435%" y="1103.50"></text></g><g><title>move_vm_types::values::values_impl::GlobalValue::into_effect (108 samples, 0.31%)</title><rect x="33.4234%" y="1157" width="0.3103%" height="15" fill="rgb(215,146,41)" fg:x="11632" fg:w="108"/><text x="33.6734%" y="1167.50"></text></g><g><title>move_vm_types::values::values_impl::GlobalValueImpl::into_effect (108 samples, 0.31%)</title><rect x="33.4234%" y="1141" width="0.3103%" height="15" fill="rgb(217,27,36)" fg:x="11632" fg:w="108"/><text x="33.6734%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;move_vm_types::values::values_impl::GlobalDataStatus&gt;&gt;&gt; (10 samples, 0.03%)</title><rect x="33.7050%" y="1125" width="0.0287%" height="15" fill="rgb(219,218,39)" fg:x="11730" fg:w="10"/><text x="33.9550%" y="1135.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.03%)</title><rect x="33.7050%" y="1109" width="0.0287%" height="15" fill="rgb(219,4,42)" fg:x="11730" fg:w="10"/><text x="33.9550%" y="1119.50"></text></g><g><title>alloc::rc::RcInnerPtr::dec_weak (9 samples, 0.03%)</title><rect x="33.7078%" y="1093" width="0.0259%" height="15" fill="rgb(249,119,36)" fg:x="11731" fg:w="9"/><text x="33.9578%" y="1103.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (9 samples, 0.03%)</title><rect x="33.7078%" y="1077" width="0.0259%" height="15" fill="rgb(209,23,33)" fg:x="11731" fg:w="9"/><text x="33.9578%" y="1087.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (9 samples, 0.03%)</title><rect x="33.7078%" y="1061" width="0.0259%" height="15" fill="rgb(211,10,0)" fg:x="11731" fg:w="9"/><text x="33.9578%" y="1071.50"></text></g><g><title>core::mem::replace (9 samples, 0.03%)</title><rect x="33.7078%" y="1045" width="0.0259%" height="15" fill="rgb(208,99,37)" fg:x="11731" fg:w="9"/><text x="33.9578%" y="1055.50"></text></g><g><title>core::ptr::write (9 samples, 0.03%)</title><rect x="33.7078%" y="1029" width="0.0259%" height="15" fill="rgb(213,132,31)" fg:x="11731" fg:w="9"/><text x="33.9578%" y="1039.50"></text></g><g><title>iralloct (5 samples, 0.01%)</title><rect x="33.8199%" y="773" width="0.0144%" height="15" fill="rgb(243,129,40)" fg:x="11770" fg:w="5"/><text x="34.0699%" y="783.50"></text></g><g><title>_rjem_je_arena_ralloc (5 samples, 0.01%)</title><rect x="33.8199%" y="757" width="0.0144%" height="15" fill="rgb(210,66,33)" fg:x="11770" fg:w="5"/><text x="34.0699%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (10 samples, 0.03%)</title><rect x="33.8199%" y="837" width="0.0287%" height="15" fill="rgb(209,189,4)" fg:x="11770" fg:w="10"/><text x="34.0699%" y="847.50"></text></g><g><title>alloc::alloc::Global::grow_impl (10 samples, 0.03%)</title><rect x="33.8199%" y="821" width="0.0287%" height="15" fill="rgb(214,107,37)" fg:x="11770" fg:w="10"/><text x="34.0699%" y="831.50"></text></g><g><title>alloc::alloc::realloc (10 samples, 0.03%)</title><rect x="33.8199%" y="805" width="0.0287%" height="15" fill="rgb(245,88,54)" fg:x="11770" fg:w="10"/><text x="34.0699%" y="815.50"></text></g><g><title>rallocx (10 samples, 0.03%)</title><rect x="33.8199%" y="789" width="0.0287%" height="15" fill="rgb(205,146,20)" fg:x="11770" fg:w="10"/><text x="34.0699%" y="799.50"></text></g><g><title>isalloc (5 samples, 0.01%)</title><rect x="33.8343%" y="773" width="0.0144%" height="15" fill="rgb(220,161,25)" fg:x="11775" fg:w="5"/><text x="34.0843%" y="783.50"></text></g><g><title>arena_salloc (5 samples, 0.01%)</title><rect x="33.8343%" y="757" width="0.0144%" height="15" fill="rgb(215,152,15)" fg:x="11775" fg:w="5"/><text x="34.0843%" y="767.50"></text></g><g><title>rtree_szind_read (5 samples, 0.01%)</title><rect x="33.8343%" y="741" width="0.0144%" height="15" fill="rgb(233,192,44)" fg:x="11775" fg:w="5"/><text x="34.0843%" y="751.50"></text></g><g><title>rtree_leaf_elm_szind_read (5 samples, 0.01%)</title><rect x="33.8343%" y="725" width="0.0144%" height="15" fill="rgb(240,170,46)" fg:x="11775" fg:w="5"/><text x="34.0843%" y="735.50"></text></g><g><title>rtree_leaf_elm_bits_read (5 samples, 0.01%)</title><rect x="33.8343%" y="709" width="0.0144%" height="15" fill="rgb(207,104,33)" fg:x="11775" fg:w="5"/><text x="34.0843%" y="719.50"></text></g><g><title>atomic_load_p (5 samples, 0.01%)</title><rect x="33.8343%" y="693" width="0.0144%" height="15" fill="rgb(219,21,39)" fg:x="11775" fg:w="5"/><text x="34.0843%" y="703.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u64 (11 samples, 0.03%)</title><rect x="33.8199%" y="997" width="0.0316%" height="15" fill="rgb(214,133,29)" fg:x="11770" fg:w="11"/><text x="34.0699%" y="1007.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (11 samples, 0.03%)</title><rect x="33.8199%" y="981" width="0.0316%" height="15" fill="rgb(226,93,6)" fg:x="11770" fg:w="11"/><text x="34.0699%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (11 samples, 0.03%)</title><rect x="33.8199%" y="965" width="0.0316%" height="15" fill="rgb(252,222,34)" fg:x="11770" fg:w="11"/><text x="34.0699%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (11 samples, 0.03%)</title><rect x="33.8199%" y="949" width="0.0316%" height="15" fill="rgb(252,92,48)" fg:x="11770" fg:w="11"/><text x="34.0699%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (11 samples, 0.03%)</title><rect x="33.8199%" y="933" width="0.0316%" height="15" fill="rgb(245,223,24)" fg:x="11770" fg:w="11"/><text x="34.0699%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (11 samples, 0.03%)</title><rect x="33.8199%" y="917" width="0.0316%" height="15" fill="rgb(205,176,3)" fg:x="11770" fg:w="11"/><text x="34.0699%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (11 samples, 0.03%)</title><rect x="33.8199%" y="901" width="0.0316%" height="15" fill="rgb(235,151,15)" fg:x="11770" fg:w="11"/><text x="34.0699%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (11 samples, 0.03%)</title><rect x="33.8199%" y="885" width="0.0316%" height="15" fill="rgb(237,209,11)" fg:x="11770" fg:w="11"/><text x="34.0699%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (11 samples, 0.03%)</title><rect x="33.8199%" y="869" width="0.0316%" height="15" fill="rgb(243,227,24)" fg:x="11770" fg:w="11"/><text x="34.0699%" y="879.50"></text></g><g><title>alloc::raw_vec::finish_grow (11 samples, 0.03%)</title><rect x="33.8199%" y="853" width="0.0316%" height="15" fill="rgb(239,193,16)" fg:x="11770" fg:w="11"/><text x="34.0699%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (8 samples, 0.02%)</title><rect x="33.8716%" y="725" width="0.0230%" height="15" fill="rgb(231,27,9)" fg:x="11788" fg:w="8"/><text x="34.1216%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (8 samples, 0.02%)</title><rect x="33.8716%" y="709" width="0.0230%" height="15" fill="rgb(219,169,10)" fg:x="11788" fg:w="8"/><text x="34.1216%" y="719.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (21 samples, 0.06%)</title><rect x="33.8572%" y="933" width="0.0603%" height="15" fill="rgb(244,229,43)" fg:x="11783" fg:w="21"/><text x="34.1072%" y="943.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::ValueImpl&gt; as serde::ser::Serialize&gt;::serialize (21 samples, 0.06%)</title><rect x="33.8572%" y="917" width="0.0603%" height="15" fill="rgb(254,38,20)" fg:x="11783" fg:w="21"/><text x="34.1072%" y="927.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (16 samples, 0.05%)</title><rect x="33.8716%" y="901" width="0.0460%" height="15" fill="rgb(250,47,30)" fg:x="11788" fg:w="16"/><text x="34.1216%" y="911.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (16 samples, 0.05%)</title><rect x="33.8716%" y="885" width="0.0460%" height="15" fill="rgb(224,124,36)" fg:x="11788" fg:w="16"/><text x="34.1216%" y="895.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (16 samples, 0.05%)</title><rect x="33.8716%" y="869" width="0.0460%" height="15" fill="rgb(246,68,51)" fg:x="11788" fg:w="16"/><text x="34.1216%" y="879.50"></text></g><g><title> 32]&gt;::serialize (16 samples, 0.05%)</title><rect x="33.8716%" y="853" width="0.0460%" height="15" fill="rgb(253,43,49)" fg:x="11788" fg:w="16"/><text x="34.1216%" y="863.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (16 samples, 0.05%)</title><rect x="33.8716%" y="837" width="0.0460%" height="15" fill="rgb(219,54,36)" fg:x="11788" fg:w="16"/><text x="34.1216%" y="847.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (16 samples, 0.05%)</title><rect x="33.8716%" y="821" width="0.0460%" height="15" fill="rgb(227,133,34)" fg:x="11788" fg:w="16"/><text x="34.1216%" y="831.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (16 samples, 0.05%)</title><rect x="33.8716%" y="805" width="0.0460%" height="15" fill="rgb(247,227,15)" fg:x="11788" fg:w="16"/><text x="34.1216%" y="815.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (16 samples, 0.05%)</title><rect x="33.8716%" y="789" width="0.0460%" height="15" fill="rgb(229,96,14)" fg:x="11788" fg:w="16"/><text x="34.1216%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (16 samples, 0.05%)</title><rect x="33.8716%" y="773" width="0.0460%" height="15" fill="rgb(220,79,17)" fg:x="11788" fg:w="16"/><text x="34.1216%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (16 samples, 0.05%)</title><rect x="33.8716%" y="757" width="0.0460%" height="15" fill="rgb(205,131,53)" fg:x="11788" fg:w="16"/><text x="34.1216%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (16 samples, 0.05%)</title><rect x="33.8716%" y="741" width="0.0460%" height="15" fill="rgb(209,50,29)" fg:x="11788" fg:w="16"/><text x="34.1216%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (8 samples, 0.02%)</title><rect x="33.8946%" y="725" width="0.0230%" height="15" fill="rgb(245,86,46)" fg:x="11796" fg:w="8"/><text x="34.1446%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (8 samples, 0.02%)</title><rect x="33.8946%" y="709" width="0.0230%" height="15" fill="rgb(235,66,46)" fg:x="11796" fg:w="8"/><text x="34.1446%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (8 samples, 0.02%)</title><rect x="33.8946%" y="693" width="0.0230%" height="15" fill="rgb(232,148,31)" fg:x="11796" fg:w="8"/><text x="34.1446%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (8 samples, 0.02%)</title><rect x="33.8946%" y="677" width="0.0230%" height="15" fill="rgb(217,149,8)" fg:x="11796" fg:w="8"/><text x="34.1446%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (7 samples, 0.02%)</title><rect x="33.8975%" y="661" width="0.0201%" height="15" fill="rgb(209,183,11)" fg:x="11797" fg:w="7"/><text x="34.1475%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (7 samples, 0.02%)</title><rect x="33.8975%" y="645" width="0.0201%" height="15" fill="rgb(208,55,20)" fg:x="11797" fg:w="7"/><text x="34.1475%" y="655.50"></text></g><g><title>alloc::alloc::Global::grow_impl (7 samples, 0.02%)</title><rect x="33.8975%" y="629" width="0.0201%" height="15" fill="rgb(218,39,14)" fg:x="11797" fg:w="7"/><text x="34.1475%" y="639.50"></text></g><g><title>alloc::alloc::realloc (7 samples, 0.02%)</title><rect x="33.8975%" y="613" width="0.0201%" height="15" fill="rgb(216,169,33)" fg:x="11797" fg:w="7"/><text x="34.1475%" y="623.50"></text></g><g><title>rallocx (6 samples, 0.02%)</title><rect x="33.9004%" y="597" width="0.0172%" height="15" fill="rgb(233,80,24)" fg:x="11798" fg:w="6"/><text x="34.1504%" y="607.50"></text></g><g><title>iralloct (4 samples, 0.01%)</title><rect x="33.9061%" y="581" width="0.0115%" height="15" fill="rgb(213,179,31)" fg:x="11800" fg:w="4"/><text x="34.1561%" y="591.50"></text></g><g><title>_rjem_je_arena_ralloc (4 samples, 0.01%)</title><rect x="33.9061%" y="565" width="0.0115%" height="15" fill="rgb(209,19,5)" fg:x="11800" fg:w="4"/><text x="34.1561%" y="575.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveStructLayout,alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; as serde::ser::Serialize&gt;::serialize (25 samples, 0.07%)</title><rect x="33.8515%" y="949" width="0.0718%" height="15" fill="rgb(219,18,35)" fg:x="11781" fg:w="25"/><text x="34.1015%" y="959.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (30 samples, 0.09%)</title><rect x="33.8515%" y="981" width="0.0862%" height="15" fill="rgb(209,169,16)" fg:x="11781" fg:w="30"/><text x="34.1015%" y="991.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::ValueImpl&gt; as serde::ser::Serialize&gt;::serialize (30 samples, 0.09%)</title><rect x="33.8515%" y="965" width="0.0862%" height="15" fill="rgb(245,90,51)" fg:x="11781" fg:w="30"/><text x="34.1015%" y="975.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (5 samples, 0.01%)</title><rect x="33.9233%" y="949" width="0.0144%" height="15" fill="rgb(220,99,45)" fg:x="11806" fg:w="5"/><text x="34.1733%" y="959.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (65 samples, 0.19%)</title><rect x="33.7596%" y="1029" width="0.1868%" height="15" fill="rgb(249,89,25)" fg:x="11749" fg:w="65"/><text x="34.0096%" y="1039.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::ValueImpl&gt; as serde::ser::Serialize&gt;::serialize (65 samples, 0.19%)</title><rect x="33.7596%" y="1013" width="0.1868%" height="15" fill="rgb(239,193,0)" fg:x="11749" fg:w="65"/><text x="34.0096%" y="1023.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveStructLayout,alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; as serde::ser::Serialize&gt;::serialize (33 samples, 0.09%)</title><rect x="33.8515%" y="997" width="0.0948%" height="15" fill="rgb(231,126,1)" fg:x="11781" fg:w="33"/><text x="34.1015%" y="1007.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveStructLayout,alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; as serde::ser::Serialize&gt;::serialize (70 samples, 0.20%)</title><rect x="33.7596%" y="1045" width="0.2011%" height="15" fill="rgb(243,166,3)" fg:x="11749" fg:w="70"/><text x="34.0096%" y="1055.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (5 samples, 0.01%)</title><rect x="33.9463%" y="1029" width="0.0144%" height="15" fill="rgb(223,22,34)" fg:x="11814" fg:w="5"/><text x="34.1963%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (7 samples, 0.02%)</title><rect x="33.9607%" y="1045" width="0.0201%" height="15" fill="rgb(251,52,51)" fg:x="11819" fg:w="7"/><text x="34.2107%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (7 samples, 0.02%)</title><rect x="33.9607%" y="1029" width="0.0201%" height="15" fill="rgb(221,165,28)" fg:x="11819" fg:w="7"/><text x="34.2107%" y="1039.50"></text></g><g><title>alloc::raw_vec::finish_grow (7 samples, 0.02%)</title><rect x="33.9607%" y="1013" width="0.0201%" height="15" fill="rgb(218,121,47)" fg:x="11819" fg:w="7"/><text x="34.2107%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (7 samples, 0.02%)</title><rect x="33.9607%" y="997" width="0.0201%" height="15" fill="rgb(209,120,9)" fg:x="11819" fg:w="7"/><text x="34.2107%" y="1007.50"></text></g><g><title>alloc::alloc::Global::grow_impl (7 samples, 0.02%)</title><rect x="33.9607%" y="981" width="0.0201%" height="15" fill="rgb(236,68,12)" fg:x="11819" fg:w="7"/><text x="34.2107%" y="991.50"></text></g><g><title>alloc::alloc::realloc (7 samples, 0.02%)</title><rect x="33.9607%" y="965" width="0.0201%" height="15" fill="rgb(225,194,26)" fg:x="11819" fg:w="7"/><text x="34.2107%" y="975.50"></text></g><g><title>rallocx (7 samples, 0.02%)</title><rect x="33.9607%" y="949" width="0.0201%" height="15" fill="rgb(231,84,39)" fg:x="11819" fg:w="7"/><text x="34.2107%" y="959.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (93 samples, 0.27%)</title><rect x="33.7509%" y="1077" width="0.2672%" height="15" fill="rgb(210,11,45)" fg:x="11746" fg:w="93"/><text x="34.0009%" y="1087.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::ValueImpl&gt; as serde::ser::Serialize&gt;::serialize (93 samples, 0.27%)</title><rect x="33.7509%" y="1061" width="0.2672%" height="15" fill="rgb(224,54,52)" fg:x="11746" fg:w="93"/><text x="34.0009%" y="1071.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow (13 samples, 0.04%)</title><rect x="33.9808%" y="1045" width="0.0374%" height="15" fill="rgb(238,102,14)" fg:x="11826" fg:w="13"/><text x="34.2308%" y="1055.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow (13 samples, 0.04%)</title><rect x="33.9808%" y="1029" width="0.0374%" height="15" fill="rgb(243,160,52)" fg:x="11826" fg:w="13"/><text x="34.2308%" y="1039.50"></text></g><g><title>core::cell::BorrowRef::new (13 samples, 0.04%)</title><rect x="33.9808%" y="1013" width="0.0374%" height="15" fill="rgb(216,114,19)" fg:x="11826" fg:w="13"/><text x="34.2308%" y="1023.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (13 samples, 0.04%)</title><rect x="33.9808%" y="997" width="0.0374%" height="15" fill="rgb(244,166,37)" fg:x="11826" fg:w="13"/><text x="34.2308%" y="1007.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_serialize (100 samples, 0.29%)</title><rect x="33.7337%" y="1157" width="0.2873%" height="15" fill="rgb(246,29,44)" fg:x="11740" fg:w="100"/><text x="33.9837%" y="1167.50"></text></g><g><title>bcs::ser::to_bytes (98 samples, 0.28%)</title><rect x="33.7394%" y="1141" width="0.2816%" height="15" fill="rgb(215,56,53)" fg:x="11742" fg:w="98"/><text x="33.9894%" y="1151.50"></text></g><g><title>bcs::ser::serialize_into (98 samples, 0.28%)</title><rect x="33.7394%" y="1125" width="0.2816%" height="15" fill="rgb(217,60,2)" fg:x="11742" fg:w="98"/><text x="33.9894%" y="1135.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::ValueImpl&gt; as serde::ser::Serialize&gt;::serialize (98 samples, 0.28%)</title><rect x="33.7394%" y="1109" width="0.2816%" height="15" fill="rgb(207,26,24)" fg:x="11742" fg:w="98"/><text x="33.9894%" y="1119.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveStructLayout,alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; as serde::ser::Serialize&gt;::serialize (95 samples, 0.27%)</title><rect x="33.7481%" y="1093" width="0.2730%" height="15" fill="rgb(252,210,15)" fg:x="11745" fg:w="95"/><text x="33.9981%" y="1103.50"></text></g><g><title>aptos_block_executor::move_vm_ext::session::SessionExt&lt;S&gt;::finish (517 samples, 1.49%)</title><rect x="32.5585%" y="1205" width="1.4855%" height="15" fill="rgb(253,209,26)" fg:x="11331" fg:w="517"/><text x="32.8085%" y="1215.50"></text></g><g><title>move_vm_runtime::session::Session&lt;S&gt;::finish_with_extensions (448 samples, 1.29%)</title><rect x="32.7567%" y="1189" width="1.2873%" height="15" fill="rgb(238,170,14)" fg:x="11400" fg:w="448"/><text x="33.0067%" y="1199.50"></text></g><g><title>move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt;::into_effects (448 samples, 1.29%)</title><rect x="32.7567%" y="1173" width="1.2873%" height="15" fill="rgb(216,178,15)" fg:x="11400" fg:w="448"/><text x="33.0067%" y="1183.50"></text></g><g><title>sdallocx (8 samples, 0.02%)</title><rect x="34.0210%" y="1157" width="0.0230%" height="15" fill="rgb(250,197,2)" fg:x="11840" fg:w="8"/><text x="34.2710%" y="1167.50"></text></g><g><title>isfree (8 samples, 0.02%)</title><rect x="34.0210%" y="1141" width="0.0230%" height="15" fill="rgb(212,70,42)" fg:x="11840" fg:w="8"/><text x="34.2710%" y="1151.50"></text></g><g><title>isdalloct (8 samples, 0.02%)</title><rect x="34.0210%" y="1125" width="0.0230%" height="15" fill="rgb(227,213,9)" fg:x="11840" fg:w="8"/><text x="34.2710%" y="1135.50"></text></g><g><title>arena_sdalloc (8 samples, 0.02%)</title><rect x="34.0210%" y="1109" width="0.0230%" height="15" fill="rgb(245,99,25)" fg:x="11840" fg:w="8"/><text x="34.2710%" y="1119.50"></text></g><g><title>tcache_dalloc_small (8 samples, 0.02%)</title><rect x="34.0210%" y="1093" width="0.0230%" height="15" fill="rgb(250,82,29)" fg:x="11840" fg:w="8"/><text x="34.2710%" y="1103.50"></text></g><g><title>__rust_dealloc (5 samples, 0.01%)</title><rect x="34.1072%" y="1109" width="0.0144%" height="15" fill="rgb(241,226,54)" fg:x="11870" fg:w="5"/><text x="34.3572%" y="1119.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (5 samples, 0.01%)</title><rect x="34.1072%" y="1093" width="0.0144%" height="15" fill="rgb(221,99,41)" fg:x="11870" fg:w="5"/><text x="34.3572%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::language_storage::TypeTag&gt;&gt; (6 samples, 0.02%)</title><rect x="34.1072%" y="1157" width="0.0172%" height="15" fill="rgb(213,90,21)" fg:x="11870" fg:w="6"/><text x="34.3572%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="34.1072%" y="1141" width="0.0172%" height="15" fill="rgb(205,208,24)" fg:x="11870" fg:w="6"/><text x="34.3572%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::language_storage::TypeTag]&gt; (6 samples, 0.02%)</title><rect x="34.1072%" y="1125" width="0.0172%" height="15" fill="rgb(246,31,12)" fg:x="11870" fg:w="6"/><text x="34.3572%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::StructTag&gt; (13 samples, 0.04%)</title><rect x="34.1072%" y="1173" width="0.0374%" height="15" fill="rgb(213,154,6)" fg:x="11870" fg:w="13"/><text x="34.3572%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (7 samples, 0.02%)</title><rect x="34.1245%" y="1157" width="0.0201%" height="15" fill="rgb(222,163,29)" fg:x="11876" fg:w="7"/><text x="34.3745%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (7 samples, 0.02%)</title><rect x="34.1245%" y="1141" width="0.0201%" height="15" fill="rgb(227,201,8)" fg:x="11876" fg:w="7"/><text x="34.3745%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.02%)</title><rect x="34.1245%" y="1125" width="0.0201%" height="15" fill="rgb(233,9,32)" fg:x="11876" fg:w="7"/><text x="34.3745%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.02%)</title><rect x="34.1245%" y="1109" width="0.0201%" height="15" fill="rgb(217,54,24)" fg:x="11876" fg:w="7"/><text x="34.3745%" y="1119.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.02%)</title><rect x="34.1245%" y="1093" width="0.0201%" height="15" fill="rgb(235,192,0)" fg:x="11876" fg:w="7"/><text x="34.3745%" y="1103.50"></text></g><g><title>sdallocx (6 samples, 0.02%)</title><rect x="34.1273%" y="1077" width="0.0172%" height="15" fill="rgb(235,45,9)" fg:x="11877" fg:w="6"/><text x="34.3773%" y="1087.50"></text></g><g><title>isfree (6 samples, 0.02%)</title><rect x="34.1273%" y="1061" width="0.0172%" height="15" fill="rgb(246,42,40)" fg:x="11877" fg:w="6"/><text x="34.3773%" y="1071.50"></text></g><g><title>isdalloct (6 samples, 0.02%)</title><rect x="34.1273%" y="1045" width="0.0172%" height="15" fill="rgb(248,111,24)" fg:x="11877" fg:w="6"/><text x="34.3773%" y="1055.50"></text></g><g><title>arena_sdalloc (6 samples, 0.02%)</title><rect x="34.1273%" y="1029" width="0.0172%" height="15" fill="rgb(249,65,22)" fg:x="11877" fg:w="6"/><text x="34.3773%" y="1039.50"></text></g><g><title>tcache_dalloc_small (6 samples, 0.02%)</title><rect x="34.1273%" y="1013" width="0.0172%" height="15" fill="rgb(238,111,51)" fg:x="11877" fg:w="6"/><text x="34.3773%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append (9 samples, 0.03%)</title><rect x="34.1475%" y="1157" width="0.0259%" height="15" fill="rgb(250,118,22)" fg:x="11884" fg:w="9"/><text x="34.3975%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (9 samples, 0.03%)</title><rect x="34.1475%" y="1141" width="0.0259%" height="15" fill="rgb(234,84,26)" fg:x="11884" fg:w="9"/><text x="34.3975%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (9 samples, 0.03%)</title><rect x="34.1475%" y="1125" width="0.0259%" height="15" fill="rgb(243,172,12)" fg:x="11884" fg:w="9"/><text x="34.3975%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9 samples, 0.03%)</title><rect x="34.1475%" y="1109" width="0.0259%" height="15" fill="rgb(236,150,49)" fg:x="11884" fg:w="9"/><text x="34.3975%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (9 samples, 0.03%)</title><rect x="34.1475%" y="1093" width="0.0259%" height="15" fill="rgb(225,197,26)" fg:x="11884" fg:w="9"/><text x="34.3975%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (9 samples, 0.03%)</title><rect x="34.1475%" y="1077" width="0.0259%" height="15" fill="rgb(214,17,42)" fg:x="11884" fg:w="9"/><text x="34.3975%" y="1087.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.02%)</title><rect x="34.1561%" y="1061" width="0.0172%" height="15" fill="rgb(224,165,40)" fg:x="11887" fg:w="6"/><text x="34.4061%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (5 samples, 0.01%)</title><rect x="34.1590%" y="1045" width="0.0144%" height="15" fill="rgb(246,100,4)" fg:x="11888" fg:w="5"/><text x="34.4090%" y="1055.50"></text></g><g><title>alloc::alloc::Global::grow_impl (5 samples, 0.01%)</title><rect x="34.1590%" y="1029" width="0.0144%" height="15" fill="rgb(222,103,0)" fg:x="11888" fg:w="5"/><text x="34.4090%" y="1039.50"></text></g><g><title>alloc::alloc::realloc (5 samples, 0.01%)</title><rect x="34.1590%" y="1013" width="0.0144%" height="15" fill="rgb(227,189,26)" fg:x="11888" fg:w="5"/><text x="34.4090%" y="1023.50"></text></g><g><title>rallocx (4 samples, 0.01%)</title><rect x="34.1618%" y="997" width="0.0115%" height="15" fill="rgb(214,202,17)" fg:x="11889" fg:w="4"/><text x="34.4118%" y="1007.50"></text></g><g><title>isalloc (4 samples, 0.01%)</title><rect x="34.1618%" y="981" width="0.0115%" height="15" fill="rgb(229,111,3)" fg:x="11889" fg:w="4"/><text x="34.4118%" y="991.50"></text></g><g><title>arena_salloc (4 samples, 0.01%)</title><rect x="34.1618%" y="965" width="0.0115%" height="15" fill="rgb(229,172,15)" fg:x="11889" fg:w="4"/><text x="34.4118%" y="975.50"></text></g><g><title>rtree_szind_read (4 samples, 0.01%)</title><rect x="34.1618%" y="949" width="0.0115%" height="15" fill="rgb(230,224,35)" fg:x="11889" fg:w="4"/><text x="34.4118%" y="959.50"></text></g><g><title>rtree_leaf_elm_szind_read (4 samples, 0.01%)</title><rect x="34.1618%" y="933" width="0.0115%" height="15" fill="rgb(251,141,6)" fg:x="11889" fg:w="4"/><text x="34.4118%" y="943.50"></text></g><g><title>rtree_leaf_elm_bits_read (4 samples, 0.01%)</title><rect x="34.1618%" y="917" width="0.0115%" height="15" fill="rgb(225,208,6)" fg:x="11889" fg:w="4"/><text x="34.4118%" y="927.50"></text></g><g><title>atomic_load_p (4 samples, 0.01%)</title><rect x="34.1618%" y="901" width="0.0115%" height="15" fill="rgb(246,181,16)" fg:x="11889" fg:w="4"/><text x="34.4118%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (13 samples, 0.04%)</title><rect x="34.1733%" y="917" width="0.0374%" height="15" fill="rgb(227,129,36)" fg:x="11893" fg:w="13"/><text x="34.4233%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (13 samples, 0.04%)</title><rect x="34.1733%" y="901" width="0.0374%" height="15" fill="rgb(248,117,24)" fg:x="11893" fg:w="13"/><text x="34.4233%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (5 samples, 0.01%)</title><rect x="34.2107%" y="853" width="0.0144%" height="15" fill="rgb(214,185,35)" fg:x="11906" fg:w="5"/><text x="34.4607%" y="863.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (27 samples, 0.08%)</title><rect x="34.1733%" y="1093" width="0.0776%" height="15" fill="rgb(236,150,34)" fg:x="11893" fg:w="27"/><text x="34.4233%" y="1103.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (27 samples, 0.08%)</title><rect x="34.1733%" y="1077" width="0.0776%" height="15" fill="rgb(243,228,27)" fg:x="11893" fg:w="27"/><text x="34.4233%" y="1087.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (27 samples, 0.08%)</title><rect x="34.1733%" y="1061" width="0.0776%" height="15" fill="rgb(245,77,44)" fg:x="11893" fg:w="27"/><text x="34.4233%" y="1071.50"></text></g><g><title> 32]&gt;::serialize (27 samples, 0.08%)</title><rect x="34.1733%" y="1045" width="0.0776%" height="15" fill="rgb(235,214,42)" fg:x="11893" fg:w="27"/><text x="34.4233%" y="1055.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (27 samples, 0.08%)</title><rect x="34.1733%" y="1029" width="0.0776%" height="15" fill="rgb(221,74,3)" fg:x="11893" fg:w="27"/><text x="34.4233%" y="1039.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (27 samples, 0.08%)</title><rect x="34.1733%" y="1013" width="0.0776%" height="15" fill="rgb(206,121,29)" fg:x="11893" fg:w="27"/><text x="34.4233%" y="1023.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (27 samples, 0.08%)</title><rect x="34.1733%" y="997" width="0.0776%" height="15" fill="rgb(249,131,53)" fg:x="11893" fg:w="27"/><text x="34.4233%" y="1007.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (27 samples, 0.08%)</title><rect x="34.1733%" y="981" width="0.0776%" height="15" fill="rgb(236,170,29)" fg:x="11893" fg:w="27"/><text x="34.4233%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (27 samples, 0.08%)</title><rect x="34.1733%" y="965" width="0.0776%" height="15" fill="rgb(247,96,15)" fg:x="11893" fg:w="27"/><text x="34.4233%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (27 samples, 0.08%)</title><rect x="34.1733%" y="949" width="0.0776%" height="15" fill="rgb(211,210,7)" fg:x="11893" fg:w="27"/><text x="34.4233%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (27 samples, 0.08%)</title><rect x="34.1733%" y="933" width="0.0776%" height="15" fill="rgb(240,88,50)" fg:x="11893" fg:w="27"/><text x="34.4233%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (14 samples, 0.04%)</title><rect x="34.2107%" y="917" width="0.0402%" height="15" fill="rgb(209,229,26)" fg:x="11906" fg:w="14"/><text x="34.4607%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (14 samples, 0.04%)</title><rect x="34.2107%" y="901" width="0.0402%" height="15" fill="rgb(210,68,23)" fg:x="11906" fg:w="14"/><text x="34.4607%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (14 samples, 0.04%)</title><rect x="34.2107%" y="885" width="0.0402%" height="15" fill="rgb(229,180,13)" fg:x="11906" fg:w="14"/><text x="34.4607%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (14 samples, 0.04%)</title><rect x="34.2107%" y="869" width="0.0402%" height="15" fill="rgb(236,53,44)" fg:x="11906" fg:w="14"/><text x="34.4607%" y="879.50"></text></g><g><title>alloc::raw_vec::finish_grow (9 samples, 0.03%)</title><rect x="34.2250%" y="853" width="0.0259%" height="15" fill="rgb(244,214,29)" fg:x="11911" fg:w="9"/><text x="34.4750%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (7 samples, 0.02%)</title><rect x="34.2308%" y="837" width="0.0201%" height="15" fill="rgb(220,75,29)" fg:x="11913" fg:w="7"/><text x="34.4808%" y="847.50"></text></g><g><title>alloc::alloc::Global::grow_impl (7 samples, 0.02%)</title><rect x="34.2308%" y="821" width="0.0201%" height="15" fill="rgb(214,183,37)" fg:x="11913" fg:w="7"/><text x="34.4808%" y="831.50"></text></g><g><title>alloc::alloc::realloc (7 samples, 0.02%)</title><rect x="34.2308%" y="805" width="0.0201%" height="15" fill="rgb(239,117,29)" fg:x="11913" fg:w="7"/><text x="34.4808%" y="815.50"></text></g><g><title>rallocx (5 samples, 0.01%)</title><rect x="34.2365%" y="789" width="0.0144%" height="15" fill="rgb(237,171,35)" fg:x="11915" fg:w="5"/><text x="34.4865%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (8 samples, 0.02%)</title><rect x="34.2509%" y="901" width="0.0230%" height="15" fill="rgb(229,178,53)" fg:x="11920" fg:w="8"/><text x="34.5009%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (8 samples, 0.02%)</title><rect x="34.2509%" y="885" width="0.0230%" height="15" fill="rgb(210,102,19)" fg:x="11920" fg:w="8"/><text x="34.5009%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (8 samples, 0.02%)</title><rect x="34.2509%" y="869" width="0.0230%" height="15" fill="rgb(235,127,22)" fg:x="11920" fg:w="8"/><text x="34.5009%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (8 samples, 0.02%)</title><rect x="34.2509%" y="853" width="0.0230%" height="15" fill="rgb(244,31,31)" fg:x="11920" fg:w="8"/><text x="34.5009%" y="863.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.01%)</title><rect x="34.2624%" y="837" width="0.0115%" height="15" fill="rgb(231,43,21)" fg:x="11924" fg:w="4"/><text x="34.5124%" y="847.50"></text></g><g><title>move_core_types::identifier::_::&lt;impl serde::ser::Serialize for move_core_types::identifier::Identifier&gt;::serialize (9 samples, 0.03%)</title><rect x="34.2509%" y="1093" width="0.0259%" height="15" fill="rgb(217,131,35)" fg:x="11920" fg:w="9"/><text x="34.5009%" y="1103.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (9 samples, 0.03%)</title><rect x="34.2509%" y="1077" width="0.0259%" height="15" fill="rgb(221,149,4)" fg:x="11920" fg:w="9"/><text x="34.5009%" y="1087.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::boxed::Box&lt;T&gt;&gt;::serialize (9 samples, 0.03%)</title><rect x="34.2509%" y="1061" width="0.0259%" height="15" fill="rgb(232,170,28)" fg:x="11920" fg:w="9"/><text x="34.5009%" y="1071.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for str&gt;::serialize (9 samples, 0.03%)</title><rect x="34.2509%" y="1045" width="0.0259%" height="15" fill="rgb(238,56,10)" fg:x="11920" fg:w="9"/><text x="34.5009%" y="1055.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_str (9 samples, 0.03%)</title><rect x="34.2509%" y="1029" width="0.0259%" height="15" fill="rgb(235,196,14)" fg:x="11920" fg:w="9"/><text x="34.5009%" y="1039.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_bytes (9 samples, 0.03%)</title><rect x="34.2509%" y="1013" width="0.0259%" height="15" fill="rgb(216,45,48)" fg:x="11920" fg:w="9"/><text x="34.5009%" y="1023.50"></text></g><g><title>bcs::ser::Serializer&lt;W&gt;::output_seq_len (9 samples, 0.03%)</title><rect x="34.2509%" y="997" width="0.0259%" height="15" fill="rgb(238,213,17)" fg:x="11920" fg:w="9"/><text x="34.5009%" y="1007.50"></text></g><g><title>bcs::ser::Serializer&lt;W&gt;::output_u32_as_uleb128 (9 samples, 0.03%)</title><rect x="34.2509%" y="981" width="0.0259%" height="15" fill="rgb(212,13,2)" fg:x="11920" fg:w="9"/><text x="34.5009%" y="991.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (9 samples, 0.03%)</title><rect x="34.2509%" y="965" width="0.0259%" height="15" fill="rgb(240,114,20)" fg:x="11920" fg:w="9"/><text x="34.5009%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (9 samples, 0.03%)</title><rect x="34.2509%" y="949" width="0.0259%" height="15" fill="rgb(228,41,40)" fg:x="11920" fg:w="9"/><text x="34.5009%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (9 samples, 0.03%)</title><rect x="34.2509%" y="933" width="0.0259%" height="15" fill="rgb(244,132,35)" fg:x="11920" fg:w="9"/><text x="34.5009%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (9 samples, 0.03%)</title><rect x="34.2509%" y="917" width="0.0259%" height="15" fill="rgb(253,189,4)" fg:x="11920" fg:w="9"/><text x="34.5009%" y="927.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (13 samples, 0.04%)</title><rect x="34.3084%" y="885" width="0.0374%" height="15" fill="rgb(224,37,19)" fg:x="11940" fg:w="13"/><text x="34.5584%" y="895.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (13 samples, 0.04%)</title><rect x="34.3084%" y="869" width="0.0374%" height="15" fill="rgb(235,223,18)" fg:x="11940" fg:w="13"/><text x="34.5584%" y="879.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (13 samples, 0.04%)</title><rect x="34.3084%" y="853" width="0.0374%" height="15" fill="rgb(235,163,25)" fg:x="11940" fg:w="13"/><text x="34.5584%" y="863.50"></text></g><g><title> 32]&gt;::serialize (13 samples, 0.04%)</title><rect x="34.3084%" y="837" width="0.0374%" height="15" fill="rgb(217,145,28)" fg:x="11940" fg:w="13"/><text x="34.5584%" y="847.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (13 samples, 0.04%)</title><rect x="34.3084%" y="821" width="0.0374%" height="15" fill="rgb(223,223,32)" fg:x="11940" fg:w="13"/><text x="34.5584%" y="831.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (13 samples, 0.04%)</title><rect x="34.3084%" y="805" width="0.0374%" height="15" fill="rgb(227,189,39)" fg:x="11940" fg:w="13"/><text x="34.5584%" y="815.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (13 samples, 0.04%)</title><rect x="34.3084%" y="789" width="0.0374%" height="15" fill="rgb(248,10,22)" fg:x="11940" fg:w="13"/><text x="34.5584%" y="799.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (13 samples, 0.04%)</title><rect x="34.3084%" y="773" width="0.0374%" height="15" fill="rgb(248,46,39)" fg:x="11940" fg:w="13"/><text x="34.5584%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (13 samples, 0.04%)</title><rect x="34.3084%" y="757" width="0.0374%" height="15" fill="rgb(248,113,48)" fg:x="11940" fg:w="13"/><text x="34.5584%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (13 samples, 0.04%)</title><rect x="34.3084%" y="741" width="0.0374%" height="15" fill="rgb(245,16,25)" fg:x="11940" fg:w="13"/><text x="34.5584%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (13 samples, 0.04%)</title><rect x="34.3084%" y="725" width="0.0374%" height="15" fill="rgb(249,152,16)" fg:x="11940" fg:w="13"/><text x="34.5584%" y="735.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (10 samples, 0.03%)</title><rect x="34.3170%" y="709" width="0.0287%" height="15" fill="rgb(250,16,1)" fg:x="11943" fg:w="10"/><text x="34.5670%" y="719.50"></text></g><g><title>bcs::ser::to_bytes (62 samples, 0.18%)</title><rect x="34.1733%" y="1157" width="0.1782%" height="15" fill="rgb(249,138,3)" fg:x="11893" fg:w="62"/><text x="34.4233%" y="1167.50"></text></g><g><title>bcs::ser::serialize_into (62 samples, 0.18%)</title><rect x="34.1733%" y="1141" width="0.1782%" height="15" fill="rgb(227,71,41)" fg:x="11893" fg:w="62"/><text x="34.4233%" y="1151.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::StructTag&gt;::serialize (62 samples, 0.18%)</title><rect x="34.1733%" y="1125" width="0.1782%" height="15" fill="rgb(209,184,23)" fg:x="11893" fg:w="62"/><text x="34.4233%" y="1135.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (62 samples, 0.18%)</title><rect x="34.1733%" y="1109" width="0.1782%" height="15" fill="rgb(223,215,31)" fg:x="11893" fg:w="62"/><text x="34.4233%" y="1119.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (26 samples, 0.07%)</title><rect x="34.2768%" y="1093" width="0.0747%" height="15" fill="rgb(210,146,28)" fg:x="11929" fg:w="26"/><text x="34.5268%" y="1103.50"></text></g><g><title>serde::ser::Serializer::collect_seq (26 samples, 0.07%)</title><rect x="34.2768%" y="1077" width="0.0747%" height="15" fill="rgb(209,183,41)" fg:x="11929" fg:w="26"/><text x="34.5268%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (26 samples, 0.07%)</title><rect x="34.2768%" y="1061" width="0.0747%" height="15" fill="rgb(209,224,45)" fg:x="11929" fg:w="26"/><text x="34.5268%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (26 samples, 0.07%)</title><rect x="34.2768%" y="1045" width="0.0747%" height="15" fill="rgb(224,209,51)" fg:x="11929" fg:w="26"/><text x="34.5268%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (26 samples, 0.07%)</title><rect x="34.2768%" y="1029" width="0.0747%" height="15" fill="rgb(223,17,39)" fg:x="11929" fg:w="26"/><text x="34.5268%" y="1039.50"></text></g><g><title>serde::ser::Serializer::collect_seq::{{closure}} (26 samples, 0.07%)</title><rect x="34.2768%" y="1013" width="0.0747%" height="15" fill="rgb(234,204,37)" fg:x="11929" fg:w="26"/><text x="34.5268%" y="1023.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeSeq&gt;::serialize_element (26 samples, 0.07%)</title><rect x="34.2768%" y="997" width="0.0747%" height="15" fill="rgb(236,120,5)" fg:x="11929" fg:w="26"/><text x="34.5268%" y="1007.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (26 samples, 0.07%)</title><rect x="34.2768%" y="981" width="0.0747%" height="15" fill="rgb(248,97,27)" fg:x="11929" fg:w="26"/><text x="34.5268%" y="991.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::TypeTag&gt;::serialize (20 samples, 0.06%)</title><rect x="34.2940%" y="965" width="0.0575%" height="15" fill="rgb(240,66,17)" fg:x="11935" fg:w="20"/><text x="34.5440%" y="975.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (15 samples, 0.04%)</title><rect x="34.3084%" y="949" width="0.0431%" height="15" fill="rgb(210,79,3)" fg:x="11940" fg:w="15"/><text x="34.5584%" y="959.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::boxed::Box&lt;T&gt;&gt;::serialize (15 samples, 0.04%)</title><rect x="34.3084%" y="933" width="0.0431%" height="15" fill="rgb(214,176,27)" fg:x="11940" fg:w="15"/><text x="34.5584%" y="943.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::StructTag&gt;::serialize (15 samples, 0.04%)</title><rect x="34.3084%" y="917" width="0.0431%" height="15" fill="rgb(235,185,3)" fg:x="11940" fg:w="15"/><text x="34.5584%" y="927.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (15 samples, 0.04%)</title><rect x="34.3084%" y="901" width="0.0431%" height="15" fill="rgb(227,24,12)" fg:x="11940" fg:w="15"/><text x="34.5584%" y="911.50"></text></g><g><title>&lt;() as aptos_block_executor::access_path_cache::AccessPathCache&gt;::get_resource_path (88 samples, 0.25%)</title><rect x="34.1044%" y="1189" width="0.2529%" height="15" fill="rgb(252,169,48)" fg:x="11869" fg:w="88"/><text x="34.3544%" y="1199.50"></text></g><g><title>move_core_types::language_storage::StructTag::access_vector (74 samples, 0.21%)</title><rect x="34.1446%" y="1173" width="0.2126%" height="15" fill="rgb(212,65,1)" fg:x="11883" fg:w="74"/><text x="34.3946%" y="1183.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::deallocating_end (12 samples, 0.03%)</title><rect x="34.3630%" y="1157" width="0.0345%" height="15" fill="rgb(242,39,24)" fg:x="11959" fg:w="12"/><text x="34.6130%" y="1167.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Dying,K,V&gt;::take_front (9 samples, 0.03%)</title><rect x="34.3716%" y="1141" width="0.0259%" height="15" fill="rgb(249,32,23)" fg:x="11962" fg:w="9"/><text x="34.6216%" y="1151.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (9 samples, 0.03%)</title><rect x="34.3716%" y="1125" width="0.0259%" height="15" fill="rgb(251,195,23)" fg:x="11962" fg:w="9"/><text x="34.6216%" y="1135.50"></text></g><g><title>core::mem::replace (9 samples, 0.03%)</title><rect x="34.3716%" y="1109" width="0.0259%" height="15" fill="rgb(236,174,8)" fg:x="11962" fg:w="9"/><text x="34.6216%" y="1119.50"></text></g><g><title>core::ptr::read (9 samples, 0.03%)</title><rect x="34.3716%" y="1093" width="0.0259%" height="15" fill="rgb(220,197,8)" fg:x="11962" fg:w="9"/><text x="34.6216%" y="1103.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.05%)</title><rect x="34.3572%" y="1189" width="0.0488%" height="15" fill="rgb(240,108,37)" fg:x="11957" fg:w="17"/><text x="34.6072%" y="1199.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (17 samples, 0.05%)</title><rect x="34.3572%" y="1173" width="0.0488%" height="15" fill="rgb(232,176,24)" fg:x="11957" fg:w="17"/><text x="34.6072%" y="1183.50"></text></g><g><title>aptos_aggregator::delta_change_set::DeltaChangeSet::insert (9 samples, 0.03%)</title><rect x="34.4089%" y="1189" width="0.0259%" height="15" fill="rgb(243,35,29)" fg:x="11975" fg:w="9"/><text x="34.6589%" y="1199.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (9 samples, 0.03%)</title><rect x="34.4089%" y="1173" width="0.0259%" height="15" fill="rgb(210,37,18)" fg:x="11975" fg:w="9"/><text x="34.6589%" y="1183.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (9 samples, 0.03%)</title><rect x="34.4089%" y="1157" width="0.0259%" height="15" fill="rgb(224,184,40)" fg:x="11975" fg:w="9"/><text x="34.6589%" y="1167.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (5 samples, 0.01%)</title><rect x="34.4204%" y="1141" width="0.0144%" height="15" fill="rgb(236,39,29)" fg:x="11979" fg:w="5"/><text x="34.6704%" y="1151.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (5 samples, 0.01%)</title><rect x="34.4204%" y="1125" width="0.0144%" height="15" fill="rgb(232,48,39)" fg:x="11979" fg:w="5"/><text x="34.6704%" y="1135.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (5 samples, 0.01%)</title><rect x="34.4204%" y="1109" width="0.0144%" height="15" fill="rgb(236,34,42)" fg:x="11979" fg:w="5"/><text x="34.6704%" y="1119.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (5 samples, 0.01%)</title><rect x="34.4204%" y="1093" width="0.0144%" height="15" fill="rgb(243,106,37)" fg:x="11979" fg:w="5"/><text x="34.6704%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.01%)</title><rect x="34.4204%" y="1077" width="0.0144%" height="15" fill="rgb(218,96,6)" fg:x="11979" fg:w="5"/><text x="34.6704%" y="1087.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.01%)</title><rect x="34.4204%" y="1061" width="0.0144%" height="15" fill="rgb(235,130,12)" fg:x="11979" fg:w="5"/><text x="34.6704%" y="1071.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.01%)</title><rect x="34.4204%" y="1045" width="0.0144%" height="15" fill="rgb(231,95,0)" fg:x="11979" fg:w="5"/><text x="34.6704%" y="1055.50"></text></g><g><title>aptos_types::transaction::change_set::ChangeSet::new (18 samples, 0.05%)</title><rect x="34.4348%" y="1189" width="0.0517%" height="15" fill="rgb(228,12,23)" fg:x="11984" fg:w="18"/><text x="34.6848%" y="1199.50"></text></g><g><title>&lt;aptos_gas::transaction::storage::ChangeSetConfigs as aptos_types::transaction::change_set::CheckChangeSet&gt;::check_change_set (15 samples, 0.04%)</title><rect x="34.4434%" y="1173" width="0.0431%" height="15" fill="rgb(216,12,1)" fg:x="11987" fg:w="15"/><text x="34.6934%" y="1183.50"></text></g><g><title>aptos_types::state_store::state_key::StateKey::size (5 samples, 0.01%)</title><rect x="34.4722%" y="1157" width="0.0144%" height="15" fill="rgb(219,59,3)" fg:x="11997" fg:w="5"/><text x="34.7222%" y="1167.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (4 samples, 0.01%)</title><rect x="34.5066%" y="1157" width="0.0115%" height="15" fill="rgb(215,208,46)" fg:x="12009" fg:w="4"/><text x="34.7566%" y="1167.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (4 samples, 0.01%)</title><rect x="34.5066%" y="1141" width="0.0115%" height="15" fill="rgb(254,224,29)" fg:x="12009" fg:w="4"/><text x="34.7566%" y="1151.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (4 samples, 0.01%)</title><rect x="34.5066%" y="1125" width="0.0115%" height="15" fill="rgb(232,14,29)" fg:x="12009" fg:w="4"/><text x="34.7566%" y="1135.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (4 samples, 0.01%)</title><rect x="34.5066%" y="1109" width="0.0115%" height="15" fill="rgb(208,45,52)" fg:x="12009" fg:w="4"/><text x="34.7566%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="34.5066%" y="1093" width="0.0115%" height="15" fill="rgb(234,191,28)" fg:x="12009" fg:w="4"/><text x="34.7566%" y="1103.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="34.5066%" y="1077" width="0.0115%" height="15" fill="rgb(244,67,43)" fg:x="12009" fg:w="4"/><text x="34.7566%" y="1087.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.01%)</title><rect x="34.5066%" y="1061" width="0.0115%" height="15" fill="rgb(236,189,24)" fg:x="12009" fg:w="4"/><text x="34.7566%" y="1071.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (11 samples, 0.03%)</title><rect x="34.5181%" y="1141" width="0.0316%" height="15" fill="rgb(239,214,33)" fg:x="12013" fg:w="11"/><text x="34.7681%" y="1151.50"></text></g><g><title>aptos_types::write_set::WriteSetMut::insert (28 samples, 0.08%)</title><rect x="34.4865%" y="1189" width="0.0805%" height="15" fill="rgb(226,176,41)" fg:x="12002" fg:w="28"/><text x="34.7365%" y="1199.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (24 samples, 0.07%)</title><rect x="34.4980%" y="1173" width="0.0690%" height="15" fill="rgb(248,47,8)" fg:x="12006" fg:w="24"/><text x="34.7480%" y="1183.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (17 samples, 0.05%)</title><rect x="34.5181%" y="1157" width="0.0488%" height="15" fill="rgb(218,81,44)" fg:x="12013" fg:w="17"/><text x="34.7681%" y="1167.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (6 samples, 0.02%)</title><rect x="34.5497%" y="1141" width="0.0172%" height="15" fill="rgb(213,98,6)" fg:x="12024" fg:w="6"/><text x="34.7997%" y="1151.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (6 samples, 0.02%)</title><rect x="34.5497%" y="1125" width="0.0172%" height="15" fill="rgb(222,85,22)" fg:x="12024" fg:w="6"/><text x="34.7997%" y="1135.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::init (5 samples, 0.01%)</title><rect x="34.5526%" y="1109" width="0.0144%" height="15" fill="rgb(239,46,39)" fg:x="12025" fg:w="5"/><text x="34.8026%" y="1119.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (5 samples, 0.01%)</title><rect x="34.5526%" y="1093" width="0.0144%" height="15" fill="rgb(237,12,29)" fg:x="12025" fg:w="5"/><text x="34.8026%" y="1103.50"></text></g><g><title>core::ptr::write (5 samples, 0.01%)</title><rect x="34.5526%" y="1077" width="0.0144%" height="15" fill="rgb(214,77,8)" fg:x="12025" fg:w="5"/><text x="34.8026%" y="1087.50"></text></g><g><title>aptos_types::write_set::WriteSetMut::new (5 samples, 0.01%)</title><rect x="34.5670%" y="1189" width="0.0144%" height="15" fill="rgb(217,168,37)" fg:x="12030" fg:w="5"/><text x="34.8170%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (5 samples, 0.01%)</title><rect x="34.5670%" y="1173" width="0.0144%" height="15" fill="rgb(221,217,23)" fg:x="12030" fg:w="5"/><text x="34.8170%" y="1183.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (5 samples, 0.01%)</title><rect x="34.5670%" y="1157" width="0.0144%" height="15" fill="rgb(243,229,36)" fg:x="12030" fg:w="5"/><text x="34.8170%" y="1167.50"></text></g><g><title>bcs::de::from_bytes (20 samples, 0.06%)</title><rect x="34.5957%" y="917" width="0.0575%" height="15" fill="rgb(251,163,40)" fg:x="12040" fg:w="20"/><text x="34.8457%" y="927.50"></text></g><g><title>aptos_types::event::_::&lt;impl serde::de::Deserialize for aptos_types::event::EventKey&gt;::deserialize (20 samples, 0.06%)</title><rect x="34.5957%" y="901" width="0.0575%" height="15" fill="rgb(237,222,12)" fg:x="12040" fg:w="20"/><text x="34.8457%" y="911.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_struct (20 samples, 0.06%)</title><rect x="34.5957%" y="885" width="0.0575%" height="15" fill="rgb(248,132,6)" fg:x="12040" fg:w="20"/><text x="34.8457%" y="895.50"></text></g><g><title>&lt;aptos_types::event::_::&lt;impl serde::de::Deserialize for aptos_types::event::EventKey&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_seq (20 samples, 0.06%)</title><rect x="34.5957%" y="869" width="0.0575%" height="15" fill="rgb(227,167,50)" fg:x="12040" fg:w="20"/><text x="34.8457%" y="879.50"></text></g><g><title>serde::de::SeqAccess::next_element (20 samples, 0.06%)</title><rect x="34.5957%" y="853" width="0.0575%" height="15" fill="rgb(242,84,37)" fg:x="12040" fg:w="20"/><text x="34.8457%" y="863.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (20 samples, 0.06%)</title><rect x="34.5957%" y="837" width="0.0575%" height="15" fill="rgb(212,4,50)" fg:x="12040" fg:w="20"/><text x="34.8457%" y="847.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (20 samples, 0.06%)</title><rect x="34.5957%" y="821" width="0.0575%" height="15" fill="rgb(230,228,32)" fg:x="12040" fg:w="20"/><text x="34.8457%" y="831.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize (20 samples, 0.06%)</title><rect x="34.5957%" y="805" width="0.0575%" height="15" fill="rgb(248,217,23)" fg:x="12040" fg:w="20"/><text x="34.8457%" y="815.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize (20 samples, 0.06%)</title><rect x="34.5957%" y="789" width="0.0575%" height="15" fill="rgb(238,197,32)" fg:x="12040" fg:w="20"/><text x="34.8457%" y="799.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (20 samples, 0.06%)</title><rect x="34.5957%" y="773" width="0.0575%" height="15" fill="rgb(236,106,1)" fg:x="12040" fg:w="20"/><text x="34.8457%" y="783.50"></text></g><g><title>&lt;&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (20 samples, 0.06%)</title><rect x="34.5957%" y="757" width="0.0575%" height="15" fill="rgb(219,228,13)" fg:x="12040" fg:w="20"/><text x="34.8457%" y="767.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for [T (6 samples, 0.02%)</title><rect x="34.6359%" y="741" width="0.0172%" height="15" fill="rgb(238,30,35)" fg:x="12054" fg:w="6"/><text x="34.8859%" y="751.50"></text></g><g><title> 32]&gt;::deserialize (6 samples, 0.02%)</title><rect x="34.6359%" y="725" width="0.0172%" height="15" fill="rgb(236,70,23)" fg:x="12054" fg:w="6"/><text x="34.8859%" y="735.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (6 samples, 0.02%)</title><rect x="34.6359%" y="709" width="0.0172%" height="15" fill="rgb(249,104,48)" fg:x="12054" fg:w="6"/><text x="34.8859%" y="719.50"></text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T (6 samples, 0.02%)</title><rect x="34.6359%" y="693" width="0.0172%" height="15" fill="rgb(254,117,50)" fg:x="12054" fg:w="6"/><text x="34.8859%" y="703.50"></text></g><g><title> 32]&gt; as serde::de::Visitor&gt;::visit_seq (6 samples, 0.02%)</title><rect x="34.6359%" y="677" width="0.0172%" height="15" fill="rgb(223,152,4)" fg:x="12054" fg:w="6"/><text x="34.8859%" y="687.50"></text></g><g><title>serde::de::SeqAccess::next_element (4 samples, 0.01%)</title><rect x="34.6417%" y="661" width="0.0115%" height="15" fill="rgb(245,6,2)" fg:x="12056" fg:w="4"/><text x="34.8917%" y="671.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (4 samples, 0.01%)</title><rect x="34.6417%" y="645" width="0.0115%" height="15" fill="rgb(249,150,24)" fg:x="12056" fg:w="4"/><text x="34.8917%" y="655.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (4 samples, 0.01%)</title><rect x="34.6417%" y="629" width="0.0115%" height="15" fill="rgb(228,185,42)" fg:x="12056" fg:w="4"/><text x="34.8917%" y="639.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (4 samples, 0.01%)</title><rect x="34.6417%" y="613" width="0.0115%" height="15" fill="rgb(226,39,33)" fg:x="12056" fg:w="4"/><text x="34.8917%" y="623.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u8 (4 samples, 0.01%)</title><rect x="34.6417%" y="597" width="0.0115%" height="15" fill="rgb(221,166,19)" fg:x="12056" fg:w="4"/><text x="34.8917%" y="607.50"></text></g><g><title>bcs::de::Deserializer::parse_bool (4 samples, 0.01%)</title><rect x="34.6417%" y="581" width="0.0115%" height="15" fill="rgb(209,109,2)" fg:x="12056" fg:w="4"/><text x="34.8917%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.07%)</title><rect x="34.5957%" y="1029" width="0.0661%" height="15" fill="rgb(252,216,26)" fg:x="12040" fg:w="23"/><text x="34.8457%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (23 samples, 0.07%)</title><rect x="34.5957%" y="1013" width="0.0661%" height="15" fill="rgb(227,173,36)" fg:x="12040" fg:w="23"/><text x="34.8457%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (23 samples, 0.07%)</title><rect x="34.5957%" y="997" width="0.0661%" height="15" fill="rgb(209,90,7)" fg:x="12040" fg:w="23"/><text x="34.8457%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (23 samples, 0.07%)</title><rect x="34.5957%" y="981" width="0.0661%" height="15" fill="rgb(250,194,11)" fg:x="12040" fg:w="23"/><text x="34.8457%" y="991.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (23 samples, 0.07%)</title><rect x="34.5957%" y="965" width="0.0661%" height="15" fill="rgb(220,72,50)" fg:x="12040" fg:w="23"/><text x="34.8457%" y="975.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (23 samples, 0.07%)</title><rect x="34.5957%" y="949" width="0.0661%" height="15" fill="rgb(222,106,48)" fg:x="12040" fg:w="23"/><text x="34.8457%" y="959.50"></text></g><g><title>aptos_block_executor::move_vm_ext::session::SessionOutput::into_change_set::{{closure}} (23 samples, 0.07%)</title><rect x="34.5957%" y="933" width="0.0661%" height="15" fill="rgb(216,220,45)" fg:x="12040" fg:w="23"/><text x="34.8457%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (28 samples, 0.08%)</title><rect x="34.5957%" y="1061" width="0.0805%" height="15" fill="rgb(234,112,18)" fg:x="12040" fg:w="28"/><text x="34.8457%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (28 samples, 0.08%)</title><rect x="34.5957%" y="1045" width="0.0805%" height="15" fill="rgb(206,179,9)" fg:x="12040" fg:w="28"/><text x="34.8457%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::GenericShunt&lt;core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;(alloc::vec::Vec&lt;u8&gt;,u64,move_core_types::language_storage::TypeTag,alloc::vec::Vec&lt;u8&gt;)&gt;,aptos_block_executor::move_vm_ext::session::SessionOutput::into_change_set&lt;()&gt;::{{closure}}&gt;,core::result::Result&lt;core::convert::Infallible,move_core_types::vm_status::VMStatus&gt;&gt;&gt; (5 samples, 0.01%)</title><rect x="34.6618%" y="1029" width="0.0144%" height="15" fill="rgb(215,115,40)" fg:x="12063" fg:w="5"/><text x="34.9118%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;(alloc::vec::Vec&lt;u8&gt;,u64,move_core_types::language_storage::TypeTag,alloc::vec::Vec&lt;u8&gt;)&gt;,aptos_block_executor::move_vm_ext::session::SessionOutput::into_change_set&lt;()&gt;::{{closure}}&gt;&gt; (5 samples, 0.01%)</title><rect x="34.6618%" y="1013" width="0.0144%" height="15" fill="rgb(222,69,34)" fg:x="12063" fg:w="5"/><text x="34.9118%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(alloc::vec::Vec&lt;u8&gt;,u64,move_core_types::language_storage::TypeTag,alloc::vec::Vec&lt;u8&gt;)&gt;&gt; (5 samples, 0.01%)</title><rect x="34.6618%" y="997" width="0.0144%" height="15" fill="rgb(209,161,10)" fg:x="12063" fg:w="5"/><text x="34.9118%" y="1007.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (17 samples, 0.05%)</title><rect x="34.7279%" y="613" width="0.0488%" height="15" fill="rgb(217,6,38)" fg:x="12086" fg:w="17"/><text x="34.9779%" y="623.50"></text></g><g><title>&lt;&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (24 samples, 0.07%)</title><rect x="34.7279%" y="789" width="0.0690%" height="15" fill="rgb(229,229,48)" fg:x="12086" fg:w="24"/><text x="34.9779%" y="799.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for [T (24 samples, 0.07%)</title><rect x="34.7279%" y="773" width="0.0690%" height="15" fill="rgb(225,21,28)" fg:x="12086" fg:w="24"/><text x="34.9779%" y="783.50"></text></g><g><title> 32]&gt;::deserialize (24 samples, 0.07%)</title><rect x="34.7279%" y="757" width="0.0690%" height="15" fill="rgb(206,33,13)" fg:x="12086" fg:w="24"/><text x="34.9779%" y="767.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (24 samples, 0.07%)</title><rect x="34.7279%" y="741" width="0.0690%" height="15" fill="rgb(242,178,17)" fg:x="12086" fg:w="24"/><text x="34.9779%" y="751.50"></text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T (24 samples, 0.07%)</title><rect x="34.7279%" y="725" width="0.0690%" height="15" fill="rgb(220,162,5)" fg:x="12086" fg:w="24"/><text x="34.9779%" y="735.50"></text></g><g><title> 32]&gt; as serde::de::Visitor&gt;::visit_seq (24 samples, 0.07%)</title><rect x="34.7279%" y="709" width="0.0690%" height="15" fill="rgb(210,33,43)" fg:x="12086" fg:w="24"/><text x="34.9779%" y="719.50"></text></g><g><title>serde::de::SeqAccess::next_element (24 samples, 0.07%)</title><rect x="34.7279%" y="693" width="0.0690%" height="15" fill="rgb(216,116,54)" fg:x="12086" fg:w="24"/><text x="34.9779%" y="703.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (24 samples, 0.07%)</title><rect x="34.7279%" y="677" width="0.0690%" height="15" fill="rgb(249,92,24)" fg:x="12086" fg:w="24"/><text x="34.9779%" y="687.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (24 samples, 0.07%)</title><rect x="34.7279%" y="661" width="0.0690%" height="15" fill="rgb(231,189,14)" fg:x="12086" fg:w="24"/><text x="34.9779%" y="671.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (24 samples, 0.07%)</title><rect x="34.7279%" y="645" width="0.0690%" height="15" fill="rgb(230,8,41)" fg:x="12086" fg:w="24"/><text x="34.9779%" y="655.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u8 (24 samples, 0.07%)</title><rect x="34.7279%" y="629" width="0.0690%" height="15" fill="rgb(249,7,27)" fg:x="12086" fg:w="24"/><text x="34.9779%" y="639.50"></text></g><g><title>bcs::de::Deserializer::parse_u8 (7 samples, 0.02%)</title><rect x="34.7767%" y="613" width="0.0201%" height="15" fill="rgb(232,86,5)" fg:x="12103" fg:w="7"/><text x="35.0267%" y="623.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize (37 samples, 0.11%)</title><rect x="34.6963%" y="837" width="0.1063%" height="15" fill="rgb(224,175,18)" fg:x="12075" fg:w="37"/><text x="34.9463%" y="847.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize (37 samples, 0.11%)</title><rect x="34.6963%" y="821" width="0.1063%" height="15" fill="rgb(220,129,12)" fg:x="12075" fg:w="37"/><text x="34.9463%" y="831.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (26 samples, 0.07%)</title><rect x="34.7279%" y="805" width="0.0747%" height="15" fill="rgb(210,19,36)" fg:x="12086" fg:w="26"/><text x="34.9779%" y="815.50"></text></g><g><title>&lt;aptos_types::event::_::&lt;impl serde::de::Deserialize for aptos_types::event::EventKey&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_seq (44 samples, 0.13%)</title><rect x="34.6963%" y="901" width="0.1264%" height="15" fill="rgb(219,96,14)" fg:x="12075" fg:w="44"/><text x="34.9463%" y="911.50"></text></g><g><title>serde::de::SeqAccess::next_element (44 samples, 0.13%)</title><rect x="34.6963%" y="885" width="0.1264%" height="15" fill="rgb(249,106,1)" fg:x="12075" fg:w="44"/><text x="34.9463%" y="895.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (44 samples, 0.13%)</title><rect x="34.6963%" y="869" width="0.1264%" height="15" fill="rgb(249,155,20)" fg:x="12075" fg:w="44"/><text x="34.9463%" y="879.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (44 samples, 0.13%)</title><rect x="34.6963%" y="853" width="0.1264%" height="15" fill="rgb(244,168,9)" fg:x="12075" fg:w="44"/><text x="34.9463%" y="863.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (7 samples, 0.02%)</title><rect x="34.8026%" y="837" width="0.0201%" height="15" fill="rgb(216,23,50)" fg:x="12112" fg:w="7"/><text x="35.0526%" y="847.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u64 (7 samples, 0.02%)</title><rect x="34.8026%" y="821" width="0.0201%" height="15" fill="rgb(224,219,20)" fg:x="12112" fg:w="7"/><text x="35.0526%" y="831.50"></text></g><g><title>bcs::de::Deserializer::parse_u64 (7 samples, 0.02%)</title><rect x="34.8026%" y="805" width="0.0201%" height="15" fill="rgb(222,156,15)" fg:x="12112" fg:w="7"/><text x="35.0526%" y="815.50"></text></g><g><title>bcs::de::from_bytes (51 samples, 0.15%)</title><rect x="34.6877%" y="949" width="0.1465%" height="15" fill="rgb(231,97,17)" fg:x="12072" fg:w="51"/><text x="34.9377%" y="959.50"></text></g><g><title>aptos_types::event::_::&lt;impl serde::de::Deserialize for aptos_types::event::EventKey&gt;::deserialize (51 samples, 0.15%)</title><rect x="34.6877%" y="933" width="0.1465%" height="15" fill="rgb(218,70,48)" fg:x="12072" fg:w="51"/><text x="34.9377%" y="943.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_struct (51 samples, 0.15%)</title><rect x="34.6877%" y="917" width="0.1465%" height="15" fill="rgb(212,196,52)" fg:x="12072" fg:w="51"/><text x="34.9377%" y="927.50"></text></g><g><title>bcs::de::Deserializer::enter_named_container (4 samples, 0.01%)</title><rect x="34.8227%" y="901" width="0.0115%" height="15" fill="rgb(243,203,18)" fg:x="12119" fg:w="4"/><text x="35.0727%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (90 samples, 0.26%)</title><rect x="34.5813%" y="1189" width="0.2586%" height="15" fill="rgb(252,125,41)" fg:x="12035" fg:w="90"/><text x="34.8313%" y="1199.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (90 samples, 0.26%)</title><rect x="34.5813%" y="1173" width="0.2586%" height="15" fill="rgb(223,180,33)" fg:x="12035" fg:w="90"/><text x="34.8313%" y="1183.50"></text></g><g><title>core::iter::adapters::try_process (90 samples, 0.26%)</title><rect x="34.5813%" y="1157" width="0.2586%" height="15" fill="rgb(254,159,46)" fg:x="12035" fg:w="90"/><text x="34.8313%" y="1167.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (88 samples, 0.25%)</title><rect x="34.5871%" y="1141" width="0.2529%" height="15" fill="rgb(254,38,10)" fg:x="12037" fg:w="88"/><text x="34.8371%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (88 samples, 0.25%)</title><rect x="34.5871%" y="1125" width="0.2529%" height="15" fill="rgb(208,217,32)" fg:x="12037" fg:w="88"/><text x="34.8371%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (88 samples, 0.25%)</title><rect x="34.5871%" y="1109" width="0.2529%" height="15" fill="rgb(221,120,13)" fg:x="12037" fg:w="88"/><text x="34.8371%" y="1119.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (88 samples, 0.25%)</title><rect x="34.5871%" y="1093" width="0.2529%" height="15" fill="rgb(246,54,52)" fg:x="12037" fg:w="88"/><text x="34.8371%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (88 samples, 0.25%)</title><rect x="34.5871%" y="1077" width="0.2529%" height="15" fill="rgb(242,34,25)" fg:x="12037" fg:w="88"/><text x="34.8371%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (57 samples, 0.16%)</title><rect x="34.6762%" y="1061" width="0.1638%" height="15" fill="rgb(247,209,9)" fg:x="12068" fg:w="57"/><text x="34.9262%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (53 samples, 0.15%)</title><rect x="34.6877%" y="1045" width="0.1523%" height="15" fill="rgb(228,71,26)" fg:x="12072" fg:w="53"/><text x="34.9377%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (53 samples, 0.15%)</title><rect x="34.6877%" y="1029" width="0.1523%" height="15" fill="rgb(222,145,49)" fg:x="12072" fg:w="53"/><text x="34.9377%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (53 samples, 0.15%)</title><rect x="34.6877%" y="1013" width="0.1523%" height="15" fill="rgb(218,121,17)" fg:x="12072" fg:w="53"/><text x="34.9377%" y="1023.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (53 samples, 0.15%)</title><rect x="34.6877%" y="997" width="0.1523%" height="15" fill="rgb(244,50,7)" fg:x="12072" fg:w="53"/><text x="34.9377%" y="1007.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (53 samples, 0.15%)</title><rect x="34.6877%" y="981" width="0.1523%" height="15" fill="rgb(246,229,37)" fg:x="12072" fg:w="53"/><text x="34.9377%" y="991.50"></text></g><g><title>aptos_block_executor::move_vm_ext::session::SessionOutput::into_change_set::{{closure}} (53 samples, 0.15%)</title><rect x="34.6877%" y="965" width="0.1523%" height="15" fill="rgb(225,18,5)" fg:x="12072" fg:w="53"/><text x="34.9377%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;move_table_extension::TableHandle,move_table_extension::TableInfo&gt;&gt; (7 samples, 0.02%)</title><rect x="34.8400%" y="1189" width="0.0201%" height="15" fill="rgb(213,204,8)" fg:x="12125" fg:w="7"/><text x="35.0900%" y="1199.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.02%)</title><rect x="34.8400%" y="1173" width="0.0201%" height="15" fill="rgb(238,103,6)" fg:x="12125" fg:w="7"/><text x="35.0900%" y="1183.50"></text></g><g><title>core::mem::drop (4 samples, 0.01%)</title><rect x="34.8486%" y="1157" width="0.0115%" height="15" fill="rgb(222,25,35)" fg:x="12128" fg:w="4"/><text x="35.0986%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;move_table_extension::TableHandle,move_table_extension::TableInfo&gt;&gt; (4 samples, 0.01%)</title><rect x="34.8486%" y="1141" width="0.0115%" height="15" fill="rgb(213,203,35)" fg:x="12128" fg:w="4"/><text x="35.0986%" y="1151.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="34.8486%" y="1125" width="0.0115%" height="15" fill="rgb(221,79,53)" fg:x="12128" fg:w="4"/><text x="35.0986%" y="1135.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (4 samples, 0.01%)</title><rect x="34.8486%" y="1109" width="0.0115%" height="15" fill="rgb(243,200,35)" fg:x="12128" fg:w="4"/><text x="35.0986%" y="1119.50"></text></g><g><title>aptos_block_executor::move_vm_ext::session::SessionOutput::into_change_set (292 samples, 0.84%)</title><rect x="34.0440%" y="1205" width="0.8390%" height="15" fill="rgb(248,60,25)" fg:x="11848" fg:w="292"/><text x="34.2940%" y="1215.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.02%)</title><rect x="34.8831%" y="1157" width="0.0172%" height="15" fill="rgb(227,53,46)" fg:x="12140" fg:w="6"/><text x="35.1331%" y="1167.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.02%)</title><rect x="34.8831%" y="1141" width="0.0172%" height="15" fill="rgb(216,120,32)" fg:x="12140" fg:w="6"/><text x="35.1331%" y="1151.50"></text></g><g><title>alloc::collections::btree::navigate::LazyLeafRange&lt;alloc::collections::btree::node::marker::Immut,K,V&gt;::next_unchecked (6 samples, 0.02%)</title><rect x="34.8831%" y="1125" width="0.0172%" height="15" fill="rgb(220,134,1)" fg:x="12140" fg:w="6"/><text x="35.1331%" y="1135.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (6 samples, 0.02%)</title><rect x="34.8831%" y="1109" width="0.0172%" height="15" fill="rgb(237,168,5)" fg:x="12140" fg:w="6"/><text x="35.1331%" y="1119.50"></text></g><g><title>alloc::collections::btree::mem::replace (6 samples, 0.02%)</title><rect x="34.8831%" y="1093" width="0.0172%" height="15" fill="rgb(231,100,33)" fg:x="12140" fg:w="6"/><text x="35.1331%" y="1103.50"></text></g><g><title>alloc::collections::btree::navigate::&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked::{{closure}} (6 samples, 0.02%)</title><rect x="34.8831%" y="1077" width="0.0172%" height="15" fill="rgb(236,177,47)" fg:x="12140" fg:w="6"/><text x="35.1331%" y="1087.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::into_kv (6 samples, 0.02%)</title><rect x="34.8831%" y="1061" width="0.0172%" height="15" fill="rgb(235,7,49)" fg:x="12140" fg:w="6"/><text x="35.1331%" y="1071.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (6 samples, 0.02%)</title><rect x="34.8831%" y="1045" width="0.0172%" height="15" fill="rgb(232,119,22)" fg:x="12140" fg:w="6"/><text x="35.1331%" y="1055.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (6 samples, 0.02%)</title><rect x="34.8831%" y="1029" width="0.0172%" height="15" fill="rgb(254,73,53)" fg:x="12140" fg:w="6"/><text x="35.1331%" y="1039.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (6 samples, 0.02%)</title><rect x="34.8831%" y="1013" width="0.0172%" height="15" fill="rgb(251,35,20)" fg:x="12140" fg:w="6"/><text x="35.1331%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.01%)</title><rect x="34.9003%" y="1157" width="0.0144%" height="15" fill="rgb(241,119,20)" fg:x="12146" fg:w="5"/><text x="35.1503%" y="1167.50"></text></g><g><title>aptos_gas::gas_meter::AptosGasMeter::charge_write_set_gas (14 samples, 0.04%)</title><rect x="34.8831%" y="1205" width="0.0402%" height="15" fill="rgb(207,102,14)" fg:x="12140" fg:w="14"/><text x="35.1331%" y="1215.50"></text></g><g><title>aptos_gas::transaction::storage::StoragePricing::calculate_write_set_gas (14 samples, 0.04%)</title><rect x="34.8831%" y="1189" width="0.0402%" height="15" fill="rgb(248,201,50)" fg:x="12140" fg:w="14"/><text x="35.1331%" y="1199.50"></text></g><g><title>aptos_gas::transaction::storage::StoragePricingV2::calculate_write_set_gas (14 samples, 0.04%)</title><rect x="34.8831%" y="1173" width="0.0402%" height="15" fill="rgb(222,185,44)" fg:x="12140" fg:w="14"/><text x="35.1331%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::TypeTag&gt; (7 samples, 0.02%)</title><rect x="34.9434%" y="1093" width="0.0201%" height="15" fill="rgb(218,107,18)" fg:x="12161" fg:w="7"/><text x="35.1934%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_core_types::language_storage::StructTag&gt;&gt; (4 samples, 0.01%)</title><rect x="34.9520%" y="1077" width="0.0115%" height="15" fill="rgb(237,177,39)" fg:x="12164" fg:w="4"/><text x="35.2020%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::StructTag&gt; (4 samples, 0.01%)</title><rect x="34.9520%" y="1061" width="0.0115%" height="15" fill="rgb(246,69,6)" fg:x="12164" fg:w="4"/><text x="35.2020%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.05%)</title><rect x="34.9290%" y="1157" width="0.0488%" height="15" fill="rgb(234,208,37)" fg:x="12156" fg:w="17"/><text x="35.1790%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;[aptos_types::contract_event::ContractEvent]&gt; (15 samples, 0.04%)</title><rect x="34.9348%" y="1141" width="0.0431%" height="15" fill="rgb(225,4,6)" fg:x="12158" fg:w="15"/><text x="35.1848%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::contract_event::ContractEvent&gt; (15 samples, 0.04%)</title><rect x="34.9348%" y="1125" width="0.0431%" height="15" fill="rgb(233,45,0)" fg:x="12158" fg:w="15"/><text x="35.1848%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::contract_event::ContractEventV0&gt; (15 samples, 0.04%)</title><rect x="34.9348%" y="1109" width="0.0431%" height="15" fill="rgb(226,136,5)" fg:x="12158" fg:w="15"/><text x="35.1848%" y="1119.50"></text></g><g><title>sdallocx (5 samples, 0.01%)</title><rect x="34.9635%" y="1093" width="0.0144%" height="15" fill="rgb(211,91,47)" fg:x="12168" fg:w="5"/><text x="35.2135%" y="1103.50"></text></g><g><title>isfree (5 samples, 0.01%)</title><rect x="34.9635%" y="1077" width="0.0144%" height="15" fill="rgb(242,88,51)" fg:x="12168" fg:w="5"/><text x="35.2135%" y="1087.50"></text></g><g><title>isdalloct (5 samples, 0.01%)</title><rect x="34.9635%" y="1061" width="0.0144%" height="15" fill="rgb(230,91,28)" fg:x="12168" fg:w="5"/><text x="35.2135%" y="1071.50"></text></g><g><title>arena_sdalloc (5 samples, 0.01%)</title><rect x="34.9635%" y="1045" width="0.0144%" height="15" fill="rgb(254,186,29)" fg:x="12168" fg:w="5"/><text x="35.2135%" y="1055.50"></text></g><g><title>tcache_dalloc_small (5 samples, 0.01%)</title><rect x="34.9635%" y="1029" width="0.0144%" height="15" fill="rgb(238,6,4)" fg:x="12168" fg:w="5"/><text x="35.2135%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;aptos_types::contract_event::ContractEvent&gt;&gt; (18 samples, 0.05%)</title><rect x="34.9290%" y="1173" width="0.0517%" height="15" fill="rgb(221,151,16)" fg:x="12156" fg:w="18"/><text x="35.1790%" y="1183.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (7 samples, 0.02%)</title><rect x="34.9807%" y="1045" width="0.0201%" height="15" fill="rgb(251,143,52)" fg:x="12174" fg:w="7"/><text x="35.2307%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_aggregator::transaction::ChangeSetExt&gt; (31 samples, 0.09%)</title><rect x="34.9233%" y="1205" width="0.0891%" height="15" fill="rgb(206,90,15)" fg:x="12154" fg:w="31"/><text x="35.1733%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::change_set::ChangeSet&gt; (29 samples, 0.08%)</title><rect x="34.9290%" y="1189" width="0.0833%" height="15" fill="rgb(218,35,8)" fg:x="12156" fg:w="29"/><text x="35.1790%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::write_set::WriteSet&gt; (11 samples, 0.03%)</title><rect x="34.9807%" y="1173" width="0.0316%" height="15" fill="rgb(239,215,6)" fg:x="12174" fg:w="11"/><text x="35.2307%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::write_set::WriteSetV0&gt; (11 samples, 0.03%)</title><rect x="34.9807%" y="1157" width="0.0316%" height="15" fill="rgb(245,116,39)" fg:x="12174" fg:w="11"/><text x="35.2307%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::write_set::WriteSetMut&gt; (11 samples, 0.03%)</title><rect x="34.9807%" y="1141" width="0.0316%" height="15" fill="rgb(242,65,28)" fg:x="12174" fg:w="11"/><text x="35.2307%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;aptos_types::state_store::state_key::StateKey,aptos_types::write_set::WriteOp&gt;&gt; (11 samples, 0.03%)</title><rect x="34.9807%" y="1125" width="0.0316%" height="15" fill="rgb(252,132,53)" fg:x="12174" fg:w="11"/><text x="35.2307%" y="1135.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.03%)</title><rect x="34.9807%" y="1109" width="0.0316%" height="15" fill="rgb(224,159,50)" fg:x="12174" fg:w="11"/><text x="35.2307%" y="1119.50"></text></g><g><title>core::mem::drop (11 samples, 0.03%)</title><rect x="34.9807%" y="1093" width="0.0316%" height="15" fill="rgb(224,93,4)" fg:x="12174" fg:w="11"/><text x="35.2307%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;aptos_types::state_store::state_key::StateKey,aptos_types::write_set::WriteOp&gt;&gt; (11 samples, 0.03%)</title><rect x="34.9807%" y="1077" width="0.0316%" height="15" fill="rgb(208,81,34)" fg:x="12174" fg:w="11"/><text x="35.2307%" y="1087.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.03%)</title><rect x="34.9807%" y="1061" width="0.0316%" height="15" fill="rgb(233,92,54)" fg:x="12174" fg:w="11"/><text x="35.2307%" y="1071.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (4 samples, 0.01%)</title><rect x="35.0009%" y="1045" width="0.0115%" height="15" fill="rgb(237,21,14)" fg:x="12181" fg:w="4"/><text x="35.2509%" y="1055.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (4 samples, 0.01%)</title><rect x="35.0009%" y="1029" width="0.0115%" height="15" fill="rgb(249,128,51)" fg:x="12181" fg:w="4"/><text x="35.2509%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::state_store::state_key::StateKey&gt; (4 samples, 0.01%)</title><rect x="35.0009%" y="1013" width="0.0115%" height="15" fill="rgb(223,129,24)" fg:x="12181" fg:w="4"/><text x="35.2509%" y="1023.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="35.0009%" y="997" width="0.0115%" height="15" fill="rgb(231,168,25)" fg:x="12181" fg:w="4"/><text x="35.2509%" y="1007.50"></text></g><g><title>aptos_block_executor::aptos_vm::CrossSpaceHandler&lt;S&gt;::finalize (906 samples, 2.60%)</title><rect x="32.4263%" y="1221" width="2.6033%" height="15" fill="rgb(224,39,20)" fg:x="11285" fg:w="906"/><text x="32.6763%" y="1231.50">ap..</text></g><g><title>sdallocx (6 samples, 0.02%)</title><rect x="35.0124%" y="1205" width="0.0172%" height="15" fill="rgb(225,152,53)" fg:x="12185" fg:w="6"/><text x="35.2624%" y="1215.50"></text></g><g><title>isfree (6 samples, 0.02%)</title><rect x="35.0124%" y="1189" width="0.0172%" height="15" fill="rgb(252,17,24)" fg:x="12185" fg:w="6"/><text x="35.2624%" y="1199.50"></text></g><g><title>isdalloct (6 samples, 0.02%)</title><rect x="35.0124%" y="1173" width="0.0172%" height="15" fill="rgb(250,114,30)" fg:x="12185" fg:w="6"/><text x="35.2624%" y="1183.50"></text></g><g><title>arena_sdalloc (6 samples, 0.02%)</title><rect x="35.0124%" y="1157" width="0.0172%" height="15" fill="rgb(229,5,4)" fg:x="12185" fg:w="6"/><text x="35.2624%" y="1167.50"></text></g><g><title>tcache_dalloc_small (6 samples, 0.02%)</title><rect x="35.0124%" y="1141" width="0.0172%" height="15" fill="rgb(225,176,49)" fg:x="12185" fg:w="6"/><text x="35.2624%" y="1151.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="35.0325%" y="1189" width="0.0115%" height="15" fill="rgb(224,221,49)" fg:x="12192" fg:w="4"/><text x="35.2825%" y="1199.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (4 samples, 0.01%)</title><rect x="35.0325%" y="1173" width="0.0115%" height="15" fill="rgb(253,169,27)" fg:x="12192" fg:w="4"/><text x="35.2825%" y="1183.50"></text></g><g><title>aptos_evm::events::evm_events_to_aptos_events (12 samples, 0.03%)</title><rect x="35.0296%" y="1221" width="0.0345%" height="15" fill="rgb(211,206,16)" fg:x="12191" fg:w="12"/><text x="35.2796%" y="1231.50"></text></g><g><title>aptos_evm::events::assign_event_nonce (12 samples, 0.03%)</title><rect x="35.0296%" y="1205" width="0.0345%" height="15" fill="rgb(244,87,35)" fg:x="12191" fg:w="12"/><text x="35.2796%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (7 samples, 0.02%)</title><rect x="35.0440%" y="1189" width="0.0201%" height="15" fill="rgb(246,28,10)" fg:x="12196" fg:w="7"/><text x="35.2940%" y="1199.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (7 samples, 0.02%)</title><rect x="35.0440%" y="1173" width="0.0201%" height="15" fill="rgb(229,12,44)" fg:x="12196" fg:w="7"/><text x="35.2940%" y="1183.50"></text></g><g><title>core::iter::adapters::try_process (7 samples, 0.02%)</title><rect x="35.0440%" y="1157" width="0.0201%" height="15" fill="rgb(210,145,37)" fg:x="12196" fg:w="7"/><text x="35.2940%" y="1167.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (7 samples, 0.02%)</title><rect x="35.0440%" y="1141" width="0.0201%" height="15" fill="rgb(227,112,52)" fg:x="12196" fg:w="7"/><text x="35.2940%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (7 samples, 0.02%)</title><rect x="35.0440%" y="1125" width="0.0201%" height="15" fill="rgb(238,155,34)" fg:x="12196" fg:w="7"/><text x="35.2940%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (7 samples, 0.02%)</title><rect x="35.0440%" y="1109" width="0.0201%" height="15" fill="rgb(239,226,36)" fg:x="12196" fg:w="7"/><text x="35.2940%" y="1119.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (4 samples, 0.01%)</title><rect x="35.0526%" y="1093" width="0.0115%" height="15" fill="rgb(230,16,23)" fg:x="12199" fg:w="4"/><text x="35.3026%" y="1103.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (18 samples, 0.05%)</title><rect x="35.0756%" y="997" width="0.0517%" height="15" fill="rgb(236,171,36)" fg:x="12207" fg:w="18"/><text x="35.3256%" y="1007.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (18 samples, 0.05%)</title><rect x="35.0756%" y="981" width="0.0517%" height="15" fill="rgb(221,22,14)" fg:x="12207" fg:w="18"/><text x="35.3256%" y="991.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (18 samples, 0.05%)</title><rect x="35.0756%" y="965" width="0.0517%" height="15" fill="rgb(242,43,11)" fg:x="12207" fg:w="18"/><text x="35.3256%" y="975.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (18 samples, 0.05%)</title><rect x="35.0756%" y="949" width="0.0517%" height="15" fill="rgb(232,69,23)" fg:x="12207" fg:w="18"/><text x="35.3256%" y="959.50"></text></g><g><title>aptos_block_executor::move_vm_ext::session::SessionId::as_uuid (19 samples, 0.05%)</title><rect x="35.0756%" y="1109" width="0.0546%" height="15" fill="rgb(216,180,54)" fg:x="12207" fg:w="19"/><text x="35.3256%" y="1119.50"></text></g><g><title>&lt;aptos_block_executor::move_vm_ext::session::SessionId as aptos_crypto::hash::CryptoHash&gt;::hash (19 samples, 0.05%)</title><rect x="35.0756%" y="1093" width="0.0546%" height="15" fill="rgb(216,5,24)" fg:x="12207" fg:w="19"/><text x="35.3256%" y="1103.50"></text></g><g><title>&lt;aptos_block_executor::move_vm_ext::session::SessionIdHasher as aptos_crypto::hash::CryptoHasher&gt;::finish (19 samples, 0.05%)</title><rect x="35.0756%" y="1077" width="0.0546%" height="15" fill="rgb(225,89,9)" fg:x="12207" fg:w="19"/><text x="35.3256%" y="1087.50"></text></g><g><title>aptos_crypto::hash::DefaultHasher::finish (19 samples, 0.05%)</title><rect x="35.0756%" y="1061" width="0.0546%" height="15" fill="rgb(243,75,33)" fg:x="12207" fg:w="19"/><text x="35.3256%" y="1071.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (19 samples, 0.05%)</title><rect x="35.0756%" y="1045" width="0.0546%" height="15" fill="rgb(247,141,45)" fg:x="12207" fg:w="19"/><text x="35.3256%" y="1055.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (19 samples, 0.05%)</title><rect x="35.0756%" y="1029" width="0.0546%" height="15" fill="rgb(232,177,36)" fg:x="12207" fg:w="19"/><text x="35.3256%" y="1039.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (19 samples, 0.05%)</title><rect x="35.0756%" y="1013" width="0.0546%" height="15" fill="rgb(219,125,36)" fg:x="12207" fg:w="19"/><text x="35.3256%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (5 samples, 0.01%)</title><rect x="35.1474%" y="1045" width="0.0144%" height="15" fill="rgb(227,94,9)" fg:x="12232" fg:w="5"/><text x="35.3974%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.01%)</title><rect x="35.1474%" y="1029" width="0.0144%" height="15" fill="rgb(240,34,52)" fg:x="12232" fg:w="5"/><text x="35.3974%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (5 samples, 0.01%)</title><rect x="35.1474%" y="1013" width="0.0144%" height="15" fill="rgb(216,45,12)" fg:x="12232" fg:w="5"/><text x="35.3974%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (5 samples, 0.01%)</title><rect x="35.1474%" y="997" width="0.0144%" height="15" fill="rgb(246,21,19)" fg:x="12232" fg:w="5"/><text x="35.3974%" y="1007.50"></text></g><g><title>aptos_block_executor::aptos_vm_impl::AptosVMImpl::new_session (35 samples, 0.10%)</title><rect x="35.0727%" y="1157" width="0.1006%" height="15" fill="rgb(213,98,42)" fg:x="12206" fg:w="35"/><text x="35.3227%" y="1167.50"></text></g><g><title>aptos_block_executor::move_vm_ext::vm::MoveVmExt::new_session (35 samples, 0.10%)</title><rect x="35.0727%" y="1141" width="0.1006%" height="15" fill="rgb(250,136,47)" fg:x="12206" fg:w="35"/><text x="35.3227%" y="1151.50"></text></g><g><title>aptos_block_executor::move_vm_ext::vm::MoveVmExt::new_session_inner (35 samples, 0.10%)</title><rect x="35.0727%" y="1125" width="0.1006%" height="15" fill="rgb(251,124,27)" fg:x="12206" fg:w="35"/><text x="35.3227%" y="1135.50"></text></g><g><title>move_vm_runtime::native_extensions::NativeContextExtensions::add (14 samples, 0.04%)</title><rect x="35.1330%" y="1109" width="0.0402%" height="15" fill="rgb(229,180,14)" fg:x="12227" fg:w="14"/><text x="35.3830%" y="1119.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (12 samples, 0.03%)</title><rect x="35.1388%" y="1093" width="0.0345%" height="15" fill="rgb(245,216,25)" fg:x="12229" fg:w="12"/><text x="35.3888%" y="1103.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (12 samples, 0.03%)</title><rect x="35.1388%" y="1077" width="0.0345%" height="15" fill="rgb(251,43,5)" fg:x="12229" fg:w="12"/><text x="35.3888%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (9 samples, 0.03%)</title><rect x="35.1474%" y="1061" width="0.0259%" height="15" fill="rgb(250,128,24)" fg:x="12232" fg:w="9"/><text x="35.3974%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (4 samples, 0.01%)</title><rect x="35.1618%" y="1045" width="0.0115%" height="15" fill="rgb(217,117,27)" fg:x="12237" fg:w="4"/><text x="35.4118%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(alloc::vec::Vec&lt;u8&gt;,move_core_types::value::MoveTypeLayout)&gt;&gt; (4 samples, 0.01%)</title><rect x="35.1733%" y="1157" width="0.0115%" height="15" fill="rgb(245,147,4)" fg:x="12241" fg:w="4"/><text x="35.4233%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(alloc::vec::Vec&lt;u8&gt;,move_core_types::value::MoveTypeLayout)&gt;&gt; (4 samples, 0.01%)</title><rect x="35.1733%" y="1141" width="0.0115%" height="15" fill="rgb(242,201,35)" fg:x="12241" fg:w="4"/><text x="35.4233%" y="1151.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="35.1733%" y="1125" width="0.0115%" height="15" fill="rgb(218,181,1)" fg:x="12241" fg:w="4"/><text x="35.4233%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.01%)</title><rect x="35.1733%" y="1109" width="0.0115%" height="15" fill="rgb(222,6,29)" fg:x="12241" fg:w="4"/><text x="35.4233%" y="1119.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.01%)</title><rect x="35.1733%" y="1093" width="0.0115%" height="15" fill="rgb(208,186,3)" fg:x="12241" fg:w="4"/><text x="35.4233%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (4 samples, 0.01%)</title><rect x="35.2307%" y="613" width="0.0115%" height="15" fill="rgb(216,36,26)" fg:x="12261" fg:w="4"/><text x="35.4807%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveStructLayout&gt; (4 samples, 0.01%)</title><rect x="35.2307%" y="597" width="0.0115%" height="15" fill="rgb(248,201,23)" fg:x="12261" fg:w="4"/><text x="35.4807%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::value::MoveTypeLayout&gt;&gt; (4 samples, 0.01%)</title><rect x="35.2307%" y="581" width="0.0115%" height="15" fill="rgb(251,170,31)" fg:x="12261" fg:w="4"/><text x="35.4807%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (7 samples, 0.02%)</title><rect x="35.2279%" y="693" width="0.0201%" height="15" fill="rgb(207,110,25)" fg:x="12260" fg:w="7"/><text x="35.4779%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveStructLayout&gt; (6 samples, 0.02%)</title><rect x="35.2307%" y="677" width="0.0172%" height="15" fill="rgb(250,54,15)" fg:x="12261" fg:w="6"/><text x="35.4807%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::value::MoveTypeLayout&gt;&gt; (6 samples, 0.02%)</title><rect x="35.2307%" y="661" width="0.0172%" height="15" fill="rgb(227,68,33)" fg:x="12261" fg:w="6"/><text x="35.4807%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="35.2307%" y="645" width="0.0172%" height="15" fill="rgb(238,34,41)" fg:x="12261" fg:w="6"/><text x="35.4807%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::value::MoveTypeLayout]&gt; (6 samples, 0.02%)</title><rect x="35.2307%" y="629" width="0.0172%" height="15" fill="rgb(220,11,15)" fg:x="12261" fg:w="6"/><text x="35.4807%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (12 samples, 0.03%)</title><rect x="35.2164%" y="853" width="0.0345%" height="15" fill="rgb(246,111,35)" fg:x="12256" fg:w="12"/><text x="35.4664%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveStructLayout&gt; (12 samples, 0.03%)</title><rect x="35.2164%" y="837" width="0.0345%" height="15" fill="rgb(209,88,53)" fg:x="12256" fg:w="12"/><text x="35.4664%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::value::MoveTypeLayout&gt;&gt; (12 samples, 0.03%)</title><rect x="35.2164%" y="821" width="0.0345%" height="15" fill="rgb(231,185,47)" fg:x="12256" fg:w="12"/><text x="35.4664%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.03%)</title><rect x="35.2164%" y="805" width="0.0345%" height="15" fill="rgb(233,154,1)" fg:x="12256" fg:w="12"/><text x="35.4664%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::value::MoveTypeLayout]&gt; (12 samples, 0.03%)</title><rect x="35.2164%" y="789" width="0.0345%" height="15" fill="rgb(225,15,46)" fg:x="12256" fg:w="12"/><text x="35.4664%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (11 samples, 0.03%)</title><rect x="35.2192%" y="773" width="0.0316%" height="15" fill="rgb(211,135,41)" fg:x="12257" fg:w="11"/><text x="35.4692%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveStructLayout&gt; (9 samples, 0.03%)</title><rect x="35.2250%" y="757" width="0.0259%" height="15" fill="rgb(208,54,0)" fg:x="12259" fg:w="9"/><text x="35.4750%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::value::MoveTypeLayout&gt;&gt; (9 samples, 0.03%)</title><rect x="35.2250%" y="741" width="0.0259%" height="15" fill="rgb(244,136,14)" fg:x="12259" fg:w="9"/><text x="35.4750%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.03%)</title><rect x="35.2250%" y="725" width="0.0259%" height="15" fill="rgb(241,56,14)" fg:x="12259" fg:w="9"/><text x="35.4750%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::value::MoveTypeLayout]&gt; (9 samples, 0.03%)</title><rect x="35.2250%" y="709" width="0.0259%" height="15" fill="rgb(205,80,24)" fg:x="12259" fg:w="9"/><text x="35.4750%" y="719.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="35.2508%" y="709" width="0.0115%" height="15" fill="rgb(220,57,4)" fg:x="12268" fg:w="4"/><text x="35.5008%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (4 samples, 0.01%)</title><rect x="35.2508%" y="693" width="0.0115%" height="15" fill="rgb(226,193,50)" fg:x="12268" fg:w="4"/><text x="35.5008%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (4 samples, 0.01%)</title><rect x="35.2508%" y="677" width="0.0115%" height="15" fill="rgb(231,168,22)" fg:x="12268" fg:w="4"/><text x="35.5008%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (4 samples, 0.01%)</title><rect x="35.2508%" y="661" width="0.0115%" height="15" fill="rgb(254,215,14)" fg:x="12268" fg:w="4"/><text x="35.5008%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="35.2508%" y="645" width="0.0115%" height="15" fill="rgb(211,115,16)" fg:x="12268" fg:w="4"/><text x="35.5008%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (4 samples, 0.01%)</title><rect x="35.2508%" y="629" width="0.0115%" height="15" fill="rgb(236,210,16)" fg:x="12268" fg:w="4"/><text x="35.5008%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;(move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::GlobalValue)&gt; (21 samples, 0.06%)</title><rect x="35.2135%" y="869" width="0.0603%" height="15" fill="rgb(221,94,12)" fg:x="12255" fg:w="21"/><text x="35.4635%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::GlobalValue&gt; (8 samples, 0.02%)</title><rect x="35.2508%" y="853" width="0.0230%" height="15" fill="rgb(235,218,49)" fg:x="12268" fg:w="8"/><text x="35.5008%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::GlobalValueImpl&gt; (8 samples, 0.02%)</title><rect x="35.2508%" y="837" width="0.0230%" height="15" fill="rgb(217,114,14)" fg:x="12268" fg:w="8"/><text x="35.5008%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (8 samples, 0.02%)</title><rect x="35.2508%" y="821" width="0.0230%" height="15" fill="rgb(216,145,22)" fg:x="12268" fg:w="8"/><text x="35.5008%" y="831.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.02%)</title><rect x="35.2508%" y="805" width="0.0230%" height="15" fill="rgb(217,112,39)" fg:x="12268" fg:w="8"/><text x="35.5008%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (8 samples, 0.02%)</title><rect x="35.2508%" y="789" width="0.0230%" height="15" fill="rgb(225,85,32)" fg:x="12268" fg:w="8"/><text x="35.5008%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (8 samples, 0.02%)</title><rect x="35.2508%" y="773" width="0.0230%" height="15" fill="rgb(245,209,47)" fg:x="12268" fg:w="8"/><text x="35.5008%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (8 samples, 0.02%)</title><rect x="35.2508%" y="757" width="0.0230%" height="15" fill="rgb(218,220,15)" fg:x="12268" fg:w="8"/><text x="35.5008%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.02%)</title><rect x="35.2508%" y="741" width="0.0230%" height="15" fill="rgb(222,202,31)" fg:x="12268" fg:w="8"/><text x="35.5008%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (8 samples, 0.02%)</title><rect x="35.2508%" y="725" width="0.0230%" height="15" fill="rgb(243,203,4)" fg:x="12268" fg:w="8"/><text x="35.5008%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;move_core_types::account_address::AccountAddress,move_vm_runtime::data_cache::AccountDataCache&gt;&gt; (38 samples, 0.11%)</title><rect x="35.1848%" y="1109" width="0.1092%" height="15" fill="rgb(237,92,17)" fg:x="12245" fg:w="38"/><text x="35.4348%" y="1119.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 0.11%)</title><rect x="35.1848%" y="1093" width="0.1092%" height="15" fill="rgb(231,119,7)" fg:x="12245" fg:w="38"/><text x="35.4348%" y="1103.50"></text></g><g><title>core::mem::drop (38 samples, 0.11%)</title><rect x="35.1848%" y="1077" width="0.1092%" height="15" fill="rgb(237,82,41)" fg:x="12245" fg:w="38"/><text x="35.4348%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;move_core_types::account_address::AccountAddress,move_vm_runtime::data_cache::AccountDataCache&gt;&gt; (38 samples, 0.11%)</title><rect x="35.1848%" y="1061" width="0.1092%" height="15" fill="rgb(226,81,48)" fg:x="12245" fg:w="38"/><text x="35.4348%" y="1071.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 0.11%)</title><rect x="35.1848%" y="1045" width="0.1092%" height="15" fill="rgb(234,70,51)" fg:x="12245" fg:w="38"/><text x="35.4348%" y="1055.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (35 samples, 0.10%)</title><rect x="35.1934%" y="1029" width="0.1006%" height="15" fill="rgb(251,86,4)" fg:x="12248" fg:w="35"/><text x="35.4434%" y="1039.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (35 samples, 0.10%)</title><rect x="35.1934%" y="1013" width="0.1006%" height="15" fill="rgb(244,144,28)" fg:x="12248" fg:w="35"/><text x="35.4434%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::data_cache::AccountDataCache&gt; (35 samples, 0.10%)</title><rect x="35.1934%" y="997" width="0.1006%" height="15" fill="rgb(232,161,39)" fg:x="12248" fg:w="35"/><text x="35.4434%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;move_vm_types::loaded_data::runtime_types::Type,(move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::GlobalValue)&gt;&gt; (34 samples, 0.10%)</title><rect x="35.1963%" y="981" width="0.0977%" height="15" fill="rgb(247,34,51)" fg:x="12249" fg:w="34"/><text x="35.4463%" y="991.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.10%)</title><rect x="35.1963%" y="965" width="0.0977%" height="15" fill="rgb(225,132,2)" fg:x="12249" fg:w="34"/><text x="35.4463%" y="975.50"></text></g><g><title>core::mem::drop (32 samples, 0.09%)</title><rect x="35.2020%" y="949" width="0.0919%" height="15" fill="rgb(209,159,44)" fg:x="12251" fg:w="32"/><text x="35.4520%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;move_vm_types::loaded_data::runtime_types::Type,(move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::GlobalValue)&gt;&gt; (32 samples, 0.09%)</title><rect x="35.2020%" y="933" width="0.0919%" height="15" fill="rgb(251,214,1)" fg:x="12251" fg:w="32"/><text x="35.4520%" y="943.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (32 samples, 0.09%)</title><rect x="35.2020%" y="917" width="0.0919%" height="15" fill="rgb(247,84,47)" fg:x="12251" fg:w="32"/><text x="35.4520%" y="927.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (29 samples, 0.08%)</title><rect x="35.2106%" y="901" width="0.0833%" height="15" fill="rgb(240,111,43)" fg:x="12254" fg:w="29"/><text x="35.4606%" y="911.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (29 samples, 0.08%)</title><rect x="35.2106%" y="885" width="0.0833%" height="15" fill="rgb(215,214,35)" fg:x="12254" fg:w="29"/><text x="35.4606%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (7 samples, 0.02%)</title><rect x="35.2738%" y="869" width="0.0201%" height="15" fill="rgb(248,207,23)" fg:x="12276" fg:w="7"/><text x="35.5238%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;aptos_block_executor::data_cache::StorageAdapter&lt;aptos_block_executor::state_view::DbStateView&gt;&gt;&gt; (39 samples, 0.11%)</title><rect x="35.1848%" y="1125" width="0.1121%" height="15" fill="rgb(214,186,4)" fg:x="12245" fg:w="39"/><text x="35.4348%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_block_executor::move_vm_ext::session::SessionExt&lt;aptos_block_executor::data_cache::StorageAdapter&lt;aptos_block_executor::state_view::DbStateView&gt;&gt;&gt; (58 samples, 0.17%)</title><rect x="35.1848%" y="1157" width="0.1667%" height="15" fill="rgb(220,133,22)" fg:x="12245" fg:w="58"/><text x="35.4348%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::session::Session&lt;aptos_block_executor::data_cache::StorageAdapter&lt;aptos_block_executor::state_view::DbStateView&gt;&gt;&gt; (58 samples, 0.17%)</title><rect x="35.1848%" y="1141" width="0.1667%" height="15" fill="rgb(239,134,19)" fg:x="12245" fg:w="58"/><text x="35.4348%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::native_extensions::NativeContextExtensions&gt; (19 samples, 0.05%)</title><rect x="35.2968%" y="1125" width="0.0546%" height="15" fill="rgb(250,140,9)" fg:x="12284" fg:w="19"/><text x="35.5468%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn better_any::Tid&gt;&gt;&gt; (19 samples, 0.05%)</title><rect x="35.2968%" y="1109" width="0.0546%" height="15" fill="rgb(225,59,14)" fg:x="12284" fg:w="19"/><text x="35.5468%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn better_any::Tid&gt;,std::hash::random::RandomState&gt;&gt; (19 samples, 0.05%)</title><rect x="35.2968%" y="1093" width="0.0546%" height="15" fill="rgb(214,152,51)" fg:x="12284" fg:w="19"/><text x="35.5468%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(core::any::TypeId,alloc::boxed::Box&lt;dyn better_any::Tid&gt;)&gt;&gt; (19 samples, 0.05%)</title><rect x="35.2968%" y="1077" width="0.0546%" height="15" fill="rgb(251,227,43)" fg:x="12284" fg:w="19"/><text x="35.5468%" y="1087.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.05%)</title><rect x="35.2968%" y="1061" width="0.0546%" height="15" fill="rgb(241,96,17)" fg:x="12284" fg:w="19"/><text x="35.5468%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (19 samples, 0.05%)</title><rect x="35.2968%" y="1045" width="0.0546%" height="15" fill="rgb(234,198,43)" fg:x="12284" fg:w="19"/><text x="35.5468%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (19 samples, 0.05%)</title><rect x="35.2968%" y="1029" width="0.0546%" height="15" fill="rgb(220,108,29)" fg:x="12284" fg:w="19"/><text x="35.5468%" y="1039.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (19 samples, 0.05%)</title><rect x="35.2968%" y="1013" width="0.0546%" height="15" fill="rgb(226,163,33)" fg:x="12284" fg:w="19"/><text x="35.5468%" y="1023.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (19 samples, 0.05%)</title><rect x="35.2968%" y="997" width="0.0546%" height="15" fill="rgb(205,194,45)" fg:x="12284" fg:w="19"/><text x="35.5468%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;(core::any::TypeId,alloc::boxed::Box&lt;dyn better_any::Tid&gt;)&gt; (19 samples, 0.05%)</title><rect x="35.2968%" y="981" width="0.0546%" height="15" fill="rgb(206,143,44)" fg:x="12284" fg:w="19"/><text x="35.5468%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn better_any::Tid&gt;&gt; (19 samples, 0.05%)</title><rect x="35.2968%" y="965" width="0.0546%" height="15" fill="rgb(236,136,36)" fg:x="12284" fg:w="19"/><text x="35.5468%" y="975.50"></text></g><g><title>move_core_types::value::MoveValue::simple_deserialize (9 samples, 0.03%)</title><rect x="35.3514%" y="1157" width="0.0259%" height="15" fill="rgb(249,172,42)" fg:x="12303" fg:w="9"/><text x="35.6014%" y="1167.50"></text></g><g><title>bcs::de::from_bytes_seed (6 samples, 0.02%)</title><rect x="35.3600%" y="1141" width="0.0172%" height="15" fill="rgb(216,139,23)" fg:x="12306" fg:w="6"/><text x="35.6100%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4 samples, 0.01%)</title><rect x="35.4031%" y="1109" width="0.0115%" height="15" fill="rgb(207,166,20)" fg:x="12321" fg:w="4"/><text x="35.6531%" y="1119.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (4 samples, 0.01%)</title><rect x="35.4031%" y="1093" width="0.0115%" height="15" fill="rgb(210,209,22)" fg:x="12321" fg:w="4"/><text x="35.6531%" y="1103.50"></text></g><g><title>core::iter::adapters::try_process (4 samples, 0.01%)</title><rect x="35.4031%" y="1077" width="0.0115%" height="15" fill="rgb(232,118,20)" fg:x="12321" fg:w="4"/><text x="35.6531%" y="1087.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (4 samples, 0.01%)</title><rect x="35.4031%" y="1061" width="0.0115%" height="15" fill="rgb(238,113,42)" fg:x="12321" fg:w="4"/><text x="35.6531%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4 samples, 0.01%)</title><rect x="35.4031%" y="1045" width="0.0115%" height="15" fill="rgb(231,42,5)" fg:x="12321" fg:w="4"/><text x="35.6531%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4 samples, 0.01%)</title><rect x="35.4031%" y="1029" width="0.0115%" height="15" fill="rgb(243,166,24)" fg:x="12321" fg:w="4"/><text x="35.6531%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.01%)</title><rect x="35.4031%" y="1013" width="0.0115%" height="15" fill="rgb(237,226,12)" fg:x="12321" fg:w="4"/><text x="35.6531%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (4 samples, 0.01%)</title><rect x="35.4031%" y="997" width="0.0115%" height="15" fill="rgb(229,133,24)" fg:x="12321" fg:w="4"/><text x="35.6531%" y="1007.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module (13 samples, 0.04%)</title><rect x="35.4146%" y="1109" width="0.0374%" height="15" fill="rgb(238,33,43)" fg:x="12325" fg:w="13"/><text x="35.6646%" y="1119.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module_internal (8 samples, 0.02%)</title><rect x="35.4290%" y="1093" width="0.0230%" height="15" fill="rgb(227,59,38)" fg:x="12330" fg:w="8"/><text x="35.6790%" y="1103.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::module_at (6 samples, 0.02%)</title><rect x="35.4347%" y="1077" width="0.0172%" height="15" fill="rgb(230,97,0)" fg:x="12332" fg:w="6"/><text x="35.6847%" y="1087.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (6 samples, 0.02%)</title><rect x="35.4347%" y="1061" width="0.0172%" height="15" fill="rgb(250,173,50)" fg:x="12332" fg:w="6"/><text x="35.6847%" y="1071.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (6 samples, 0.02%)</title><rect x="35.4347%" y="1045" width="0.0172%" height="15" fill="rgb(240,15,50)" fg:x="12332" fg:w="6"/><text x="35.6847%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (6 samples, 0.02%)</title><rect x="35.4347%" y="1029" width="0.0172%" height="15" fill="rgb(221,93,22)" fg:x="12332" fg:w="6"/><text x="35.6847%" y="1039.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (6 samples, 0.02%)</title><rect x="35.4347%" y="1013" width="0.0172%" height="15" fill="rgb(245,180,53)" fg:x="12332" fg:w="6"/><text x="35.6847%" y="1023.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.01%)</title><rect x="35.4405%" y="997" width="0.0115%" height="15" fill="rgb(231,88,51)" fg:x="12334" fg:w="4"/><text x="35.6905%" y="1007.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.01%)</title><rect x="35.4405%" y="981" width="0.0115%" height="15" fill="rgb(240,58,21)" fg:x="12334" fg:w="4"/><text x="35.6905%" y="991.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_function (32 samples, 0.09%)</title><rect x="35.3974%" y="1125" width="0.0919%" height="15" fill="rgb(237,21,10)" fg:x="12319" fg:w="32"/><text x="35.6474%" y="1135.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::resolve_function_by_name (12 samples, 0.03%)</title><rect x="35.4549%" y="1109" width="0.0345%" height="15" fill="rgb(218,43,11)" fg:x="12339" fg:w="12"/><text x="35.7049%" y="1119.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (9 samples, 0.03%)</title><rect x="35.4635%" y="1093" width="0.0259%" height="15" fill="rgb(218,221,29)" fg:x="12342" fg:w="9"/><text x="35.7135%" y="1103.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (9 samples, 0.03%)</title><rect x="35.4635%" y="1077" width="0.0259%" height="15" fill="rgb(214,118,42)" fg:x="12342" fg:w="9"/><text x="35.7135%" y="1087.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (9 samples, 0.03%)</title><rect x="35.4635%" y="1061" width="0.0259%" height="15" fill="rgb(251,200,26)" fg:x="12342" fg:w="9"/><text x="35.7135%" y="1071.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (9 samples, 0.03%)</title><rect x="35.4635%" y="1045" width="0.0259%" height="15" fill="rgb(237,101,39)" fg:x="12342" fg:w="9"/><text x="35.7135%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (7 samples, 0.02%)</title><rect x="35.4692%" y="1029" width="0.0201%" height="15" fill="rgb(251,117,11)" fg:x="12344" fg:w="7"/><text x="35.7192%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (7 samples, 0.02%)</title><rect x="35.4692%" y="1013" width="0.0201%" height="15" fill="rgb(216,223,23)" fg:x="12344" fg:w="7"/><text x="35.7192%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (7 samples, 0.02%)</title><rect x="35.4692%" y="997" width="0.0201%" height="15" fill="rgb(251,54,12)" fg:x="12344" fg:w="7"/><text x="35.7192%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (7 samples, 0.02%)</title><rect x="35.4692%" y="981" width="0.0201%" height="15" fill="rgb(254,176,54)" fg:x="12344" fg:w="7"/><text x="35.7192%" y="991.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (7 samples, 0.02%)</title><rect x="35.4692%" y="965" width="0.0201%" height="15" fill="rgb(210,32,8)" fg:x="12344" fg:w="7"/><text x="35.7192%" y="975.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (7 samples, 0.02%)</title><rect x="35.4692%" y="949" width="0.0201%" height="15" fill="rgb(235,52,38)" fg:x="12344" fg:w="7"/><text x="35.7192%" y="959.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (7 samples, 0.02%)</title><rect x="35.4692%" y="933" width="0.0201%" height="15" fill="rgb(231,4,44)" fg:x="12344" fg:w="7"/><text x="35.7192%" y="943.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::PartialEq&gt;::eq (7 samples, 0.02%)</title><rect x="35.4692%" y="917" width="0.0201%" height="15" fill="rgb(249,2,32)" fg:x="12344" fg:w="7"/><text x="35.7192%" y="927.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::cmp::PartialEq&gt;::eq (7 samples, 0.02%)</title><rect x="35.4692%" y="901" width="0.0201%" height="15" fill="rgb(224,65,26)" fg:x="12344" fg:w="7"/><text x="35.7192%" y="911.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[U (7 samples, 0.02%)</title><rect x="35.4692%" y="885" width="0.0201%" height="15" fill="rgb(250,73,40)" fg:x="12344" fg:w="7"/><text x="35.7192%" y="895.50"></text></g><g><title> N]&gt; for [T (7 samples, 0.02%)</title><rect x="35.4692%" y="869" width="0.0201%" height="15" fill="rgb(253,177,16)" fg:x="12344" fg:w="7"/><text x="35.7192%" y="879.50"></text></g><g><title> N]&gt;::eq (7 samples, 0.02%)</title><rect x="35.4692%" y="853" width="0.0201%" height="15" fill="rgb(217,32,34)" fg:x="12344" fg:w="7"/><text x="35.7192%" y="863.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (7 samples, 0.02%)</title><rect x="35.4692%" y="837" width="0.0201%" height="15" fill="rgb(212,7,10)" fg:x="12344" fg:w="7"/><text x="35.7192%" y="847.50"></text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (9 samples, 0.03%)</title><rect x="35.5209%" y="981" width="0.0259%" height="15" fill="rgb(245,89,8)" fg:x="12362" fg:w="9"/><text x="35.7709%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (9 samples, 0.03%)</title><rect x="35.5209%" y="965" width="0.0259%" height="15" fill="rgb(237,16,53)" fg:x="12362" fg:w="9"/><text x="35.7709%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.02%)</title><rect x="35.5296%" y="949" width="0.0172%" height="15" fill="rgb(250,204,30)" fg:x="12365" fg:w="6"/><text x="35.7796%" y="959.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.02%)</title><rect x="35.5296%" y="933" width="0.0172%" height="15" fill="rgb(208,77,27)" fg:x="12365" fg:w="6"/><text x="35.7796%" y="943.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (6 samples, 0.02%)</title><rect x="35.5296%" y="917" width="0.0172%" height="15" fill="rgb(250,204,28)" fg:x="12365" fg:w="6"/><text x="35.7796%" y="927.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function_impl::{{closure}} (6 samples, 0.02%)</title><rect x="35.5296%" y="901" width="0.0172%" height="15" fill="rgb(244,63,21)" fg:x="12365" fg:w="6"/><text x="35.7796%" y="911.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (4 samples, 0.01%)</title><rect x="35.5353%" y="885" width="0.0115%" height="15" fill="rgb(236,85,44)" fg:x="12367" fg:w="4"/><text x="35.7853%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (21 samples, 0.06%)</title><rect x="35.4922%" y="1109" width="0.0603%" height="15" fill="rgb(215,98,4)" fg:x="12352" fg:w="21"/><text x="35.7422%" y="1119.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (18 samples, 0.05%)</title><rect x="35.5008%" y="1093" width="0.0517%" height="15" fill="rgb(235,38,11)" fg:x="12355" fg:w="18"/><text x="35.7508%" y="1103.50"></text></g><g><title>core::iter::adapters::try_process (18 samples, 0.05%)</title><rect x="35.5008%" y="1077" width="0.0517%" height="15" fill="rgb(254,186,25)" fg:x="12355" fg:w="18"/><text x="35.7508%" y="1087.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (18 samples, 0.05%)</title><rect x="35.5008%" y="1061" width="0.0517%" height="15" fill="rgb(225,55,31)" fg:x="12355" fg:w="18"/><text x="35.7508%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (18 samples, 0.05%)</title><rect x="35.5008%" y="1045" width="0.0517%" height="15" fill="rgb(211,15,21)" fg:x="12355" fg:w="18"/><text x="35.7508%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (18 samples, 0.05%)</title><rect x="35.5008%" y="1029" width="0.0517%" height="15" fill="rgb(215,187,41)" fg:x="12355" fg:w="18"/><text x="35.7508%" y="1039.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (18 samples, 0.05%)</title><rect x="35.5008%" y="1013" width="0.0517%" height="15" fill="rgb(248,69,32)" fg:x="12355" fg:w="18"/><text x="35.7508%" y="1023.50"></text></g><g><title>alloc::vec::in_place_collect::from_iter_in_place (12 samples, 0.03%)</title><rect x="35.5181%" y="997" width="0.0345%" height="15" fill="rgb(252,102,52)" fg:x="12361" fg:w="12"/><text x="35.7681%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (4 samples, 0.01%)</title><rect x="35.6445%" y="1045" width="0.0115%" height="15" fill="rgb(253,140,32)" fg:x="12405" fg:w="4"/><text x="35.8945%" y="1055.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::push_ty (4 samples, 0.01%)</title><rect x="35.6934%" y="1029" width="0.0115%" height="15" fill="rgb(216,56,42)" fg:x="12422" fg:w="4"/><text x="35.9434%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 0.01%)</title><rect x="35.6934%" y="1013" width="0.0115%" height="15" fill="rgb(216,184,14)" fg:x="12422" fg:w="4"/><text x="35.9434%" y="1023.50"></text></g><g><title>move_vm_runtime::loader::Loader::abilities (7 samples, 0.02%)</title><rect x="35.7048%" y="1029" width="0.0201%" height="15" fill="rgb(237,187,27)" fg:x="12426" fg:w="7"/><text x="35.9548%" y="1039.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::struct_at (7 samples, 0.02%)</title><rect x="35.7048%" y="1013" width="0.0201%" height="15" fill="rgb(219,65,3)" fg:x="12426" fg:w="7"/><text x="35.9548%" y="1023.50"></text></g><g><title>move_vm_runtime::loader::Resolver::get_field_type (6 samples, 0.02%)</title><rect x="35.7250%" y="1029" width="0.0172%" height="15" fill="rgb(245,83,25)" fg:x="12433" fg:w="6"/><text x="35.9750%" y="1039.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::post_execution_type_stack_transition (31 samples, 0.09%)</title><rect x="35.6617%" y="1045" width="0.0891%" height="15" fill="rgb(214,205,45)" fg:x="12411" fg:w="31"/><text x="35.9117%" y="1055.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::pre_execution_type_stack_transition (8 samples, 0.02%)</title><rect x="35.7508%" y="1045" width="0.0230%" height="15" fill="rgb(241,20,18)" fg:x="12442" fg:w="8"/><text x="36.0008%" y="1055.50"></text></g><g><title>&lt;aptos_block_executor::view::LatestView&lt;T,S&gt; as aptos_state_view::TStateView&gt;::get_state_value (7 samples, 0.02%)</title><rect x="35.7796%" y="965" width="0.0201%" height="15" fill="rgb(232,163,23)" fg:x="12452" fg:w="7"/><text x="36.0296%" y="975.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (5 samples, 0.01%)</title><rect x="35.7853%" y="949" width="0.0144%" height="15" fill="rgb(214,5,46)" fg:x="12454" fg:w="5"/><text x="36.0353%" y="959.50"></text></g><g><title>&lt;aptos_block_executor::view::LatestView&lt;T,S&gt; as aptos_state_view::TStateView&gt;::get_state_value::{{closure}} (5 samples, 0.01%)</title><rect x="35.7853%" y="933" width="0.0144%" height="15" fill="rgb(229,78,17)" fg:x="12454" fg:w="5"/><text x="36.0353%" y="943.50"></text></g><g><title>&lt;R as aptos_state_view::TStateView&gt;::get_state_value (5 samples, 0.01%)</title><rect x="35.7853%" y="917" width="0.0144%" height="15" fill="rgb(248,89,10)" fg:x="12454" fg:w="5"/><text x="36.0353%" y="927.50"></text></g><g><title>&lt;aptos_block_executor::cached_state_view::CachedStateView as aptos_state_view::TStateView&gt;::get_state_value (5 samples, 0.01%)</title><rect x="35.7853%" y="901" width="0.0144%" height="15" fill="rgb(248,54,15)" fg:x="12454" fg:w="5"/><text x="36.0353%" y="911.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (5 samples, 0.01%)</title><rect x="35.7853%" y="885" width="0.0144%" height="15" fill="rgb(223,116,6)" fg:x="12454" fg:w="5"/><text x="36.0353%" y="895.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (5 samples, 0.01%)</title><rect x="35.7853%" y="869" width="0.0144%" height="15" fill="rgb(205,125,38)" fg:x="12454" fg:w="5"/><text x="36.0353%" y="879.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (5 samples, 0.01%)</title><rect x="35.7853%" y="853" width="0.0144%" height="15" fill="rgb(251,78,38)" fg:x="12454" fg:w="5"/><text x="36.0353%" y="863.50"></text></g><g><title>aptos_block_executor::data_cache::StorageAdapter&lt;S&gt;::get (11 samples, 0.03%)</title><rect x="35.7796%" y="981" width="0.0316%" height="15" fill="rgb(253,78,28)" fg:x="12452" fg:w="11"/><text x="36.0296%" y="991.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (4 samples, 0.01%)</title><rect x="35.7997%" y="965" width="0.0115%" height="15" fill="rgb(209,120,3)" fg:x="12459" fg:w="4"/><text x="36.0497%" y="975.50"></text></g><g><title>bcs::ser::to_bytes (14 samples, 0.04%)</title><rect x="35.8112%" y="933" width="0.0402%" height="15" fill="rgb(238,229,9)" fg:x="12463" fg:w="14"/><text x="36.0612%" y="943.50"></text></g><g><title>bcs::ser::serialize_into (14 samples, 0.04%)</title><rect x="35.8112%" y="917" width="0.0402%" height="15" fill="rgb(253,159,18)" fg:x="12463" fg:w="14"/><text x="36.0612%" y="927.50"></text></g><g><title>aptos_types::access_path::_::&lt;impl serde::ser::Serialize for aptos_types::access_path::Path&gt;::serialize (14 samples, 0.04%)</title><rect x="35.8112%" y="901" width="0.0402%" height="15" fill="rgb(244,42,34)" fg:x="12463" fg:w="14"/><text x="36.0612%" y="911.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (14 samples, 0.04%)</title><rect x="35.8112%" y="885" width="0.0402%" height="15" fill="rgb(224,8,7)" fg:x="12463" fg:w="14"/><text x="36.0612%" y="895.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::StructTag&gt;::serialize (11 samples, 0.03%)</title><rect x="35.8198%" y="869" width="0.0316%" height="15" fill="rgb(210,201,45)" fg:x="12466" fg:w="11"/><text x="36.0698%" y="879.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (11 samples, 0.03%)</title><rect x="35.8198%" y="853" width="0.0316%" height="15" fill="rgb(252,185,21)" fg:x="12466" fg:w="11"/><text x="36.0698%" y="863.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (11 samples, 0.03%)</title><rect x="35.8198%" y="837" width="0.0316%" height="15" fill="rgb(223,131,1)" fg:x="12466" fg:w="11"/><text x="36.0698%" y="847.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (11 samples, 0.03%)</title><rect x="35.8198%" y="821" width="0.0316%" height="15" fill="rgb(245,141,16)" fg:x="12466" fg:w="11"/><text x="36.0698%" y="831.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (11 samples, 0.03%)</title><rect x="35.8198%" y="805" width="0.0316%" height="15" fill="rgb(229,55,45)" fg:x="12466" fg:w="11"/><text x="36.0698%" y="815.50"></text></g><g><title> 32]&gt;::serialize (11 samples, 0.03%)</title><rect x="35.8198%" y="789" width="0.0316%" height="15" fill="rgb(208,92,15)" fg:x="12466" fg:w="11"/><text x="36.0698%" y="799.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (11 samples, 0.03%)</title><rect x="35.8198%" y="773" width="0.0316%" height="15" fill="rgb(234,185,47)" fg:x="12466" fg:w="11"/><text x="36.0698%" y="783.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (11 samples, 0.03%)</title><rect x="35.8198%" y="757" width="0.0316%" height="15" fill="rgb(253,104,50)" fg:x="12466" fg:w="11"/><text x="36.0698%" y="767.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (11 samples, 0.03%)</title><rect x="35.8198%" y="741" width="0.0316%" height="15" fill="rgb(205,70,7)" fg:x="12466" fg:w="11"/><text x="36.0698%" y="751.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (11 samples, 0.03%)</title><rect x="35.8198%" y="725" width="0.0316%" height="15" fill="rgb(240,178,43)" fg:x="12466" fg:w="11"/><text x="36.0698%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (11 samples, 0.03%)</title><rect x="35.8198%" y="709" width="0.0316%" height="15" fill="rgb(214,112,2)" fg:x="12466" fg:w="11"/><text x="36.0698%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (11 samples, 0.03%)</title><rect x="35.8198%" y="693" width="0.0316%" height="15" fill="rgb(206,46,17)" fg:x="12466" fg:w="11"/><text x="36.0698%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (11 samples, 0.03%)</title><rect x="35.8198%" y="677" width="0.0316%" height="15" fill="rgb(225,220,16)" fg:x="12466" fg:w="11"/><text x="36.0698%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (11 samples, 0.03%)</title><rect x="35.8198%" y="661" width="0.0316%" height="15" fill="rgb(238,65,40)" fg:x="12466" fg:w="11"/><text x="36.0698%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (11 samples, 0.03%)</title><rect x="35.8198%" y="645" width="0.0316%" height="15" fill="rgb(230,151,21)" fg:x="12466" fg:w="11"/><text x="36.0698%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (10 samples, 0.03%)</title><rect x="35.8227%" y="629" width="0.0287%" height="15" fill="rgb(218,58,49)" fg:x="12467" fg:w="10"/><text x="36.0727%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (9 samples, 0.03%)</title><rect x="35.8255%" y="613" width="0.0259%" height="15" fill="rgb(219,179,14)" fg:x="12468" fg:w="9"/><text x="36.0755%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (9 samples, 0.03%)</title><rect x="35.8255%" y="597" width="0.0259%" height="15" fill="rgb(223,72,1)" fg:x="12468" fg:w="9"/><text x="36.0755%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (9 samples, 0.03%)</title><rect x="35.8255%" y="581" width="0.0259%" height="15" fill="rgb(238,126,10)" fg:x="12468" fg:w="9"/><text x="36.0755%" y="591.50"></text></g><g><title>alloc::alloc::Global::grow_impl (9 samples, 0.03%)</title><rect x="35.8255%" y="565" width="0.0259%" height="15" fill="rgb(224,206,38)" fg:x="12468" fg:w="9"/><text x="36.0755%" y="575.50"></text></g><g><title>alloc::alloc::realloc (9 samples, 0.03%)</title><rect x="35.8255%" y="549" width="0.0259%" height="15" fill="rgb(212,201,54)" fg:x="12468" fg:w="9"/><text x="36.0755%" y="559.50"></text></g><g><title>rallocx (9 samples, 0.03%)</title><rect x="35.8255%" y="533" width="0.0259%" height="15" fill="rgb(218,154,48)" fg:x="12468" fg:w="9"/><text x="36.0755%" y="543.50"></text></g><g><title>iralloct (9 samples, 0.03%)</title><rect x="35.8255%" y="517" width="0.0259%" height="15" fill="rgb(232,93,24)" fg:x="12468" fg:w="9"/><text x="36.0755%" y="527.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_access_path (18 samples, 0.05%)</title><rect x="35.8112%" y="965" width="0.0517%" height="15" fill="rgb(245,30,21)" fg:x="12463" fg:w="18"/><text x="36.0612%" y="975.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_path_vec (18 samples, 0.05%)</title><rect x="35.8112%" y="949" width="0.0517%" height="15" fill="rgb(242,148,29)" fg:x="12463" fg:w="18"/><text x="36.0612%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::access_path::Path&gt; (4 samples, 0.01%)</title><rect x="35.8514%" y="933" width="0.0115%" height="15" fill="rgb(244,153,54)" fg:x="12477" fg:w="4"/><text x="36.1014%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::StructTag&gt; (4 samples, 0.01%)</title><rect x="35.8514%" y="917" width="0.0115%" height="15" fill="rgb(252,87,22)" fg:x="12477" fg:w="4"/><text x="36.1014%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (4 samples, 0.01%)</title><rect x="35.8514%" y="901" width="0.0115%" height="15" fill="rgb(210,51,29)" fg:x="12477" fg:w="4"/><text x="36.1014%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (4 samples, 0.01%)</title><rect x="35.8514%" y="885" width="0.0115%" height="15" fill="rgb(242,136,47)" fg:x="12477" fg:w="4"/><text x="36.1014%" y="895.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="35.8514%" y="869" width="0.0115%" height="15" fill="rgb(238,68,4)" fg:x="12477" fg:w="4"/><text x="36.1014%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.01%)</title><rect x="35.8514%" y="853" width="0.0115%" height="15" fill="rgb(242,161,30)" fg:x="12477" fg:w="4"/><text x="36.1014%" y="863.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.01%)</title><rect x="35.8514%" y="837" width="0.0115%" height="15" fill="rgb(218,58,44)" fg:x="12477" fg:w="4"/><text x="36.1014%" y="847.50"></text></g><g><title>&lt;aptos_block_executor::data_cache::StorageAdapter&lt;S&gt; as move_core_types::resolver::ResourceResolver&gt;::get_resource (34 samples, 0.10%)</title><rect x="35.7738%" y="997" width="0.0977%" height="15" fill="rgb(252,125,32)" fg:x="12450" fg:w="34"/><text x="36.0238%" y="1007.50"></text></g><g><title>aptos_block_executor::data_cache::create_access_path (21 samples, 0.06%)</title><rect x="35.8112%" y="981" width="0.0603%" height="15" fill="rgb(219,178,0)" fg:x="12463" fg:w="21"/><text x="36.0612%" y="991.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (6 samples, 0.02%)</title><rect x="35.8830%" y="997" width="0.0172%" height="15" fill="rgb(213,152,7)" fg:x="12488" fg:w="6"/><text x="36.1330%" y="1007.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (5 samples, 0.01%)</title><rect x="35.8859%" y="981" width="0.0144%" height="15" fill="rgb(249,109,34)" fg:x="12489" fg:w="5"/><text x="36.1359%" y="991.50"></text></g><g><title>move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt;::get_mut_or_insert_with (7 samples, 0.02%)</title><rect x="35.9089%" y="997" width="0.0201%" height="15" fill="rgb(232,96,21)" fg:x="12497" fg:w="7"/><text x="36.1589%" y="1007.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.01%)</title><rect x="35.9175%" y="981" width="0.0115%" height="15" fill="rgb(228,27,39)" fg:x="12500" fg:w="4"/><text x="36.1675%" y="991.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (4 samples, 0.01%)</title><rect x="35.9175%" y="965" width="0.0115%" height="15" fill="rgb(211,182,52)" fg:x="12500" fg:w="4"/><text x="36.1675%" y="975.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (4 samples, 0.01%)</title><rect x="35.9175%" y="949" width="0.0115%" height="15" fill="rgb(234,178,38)" fg:x="12500" fg:w="4"/><text x="36.1675%" y="959.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (4 samples, 0.01%)</title><rect x="35.9175%" y="933" width="0.0115%" height="15" fill="rgb(221,111,3)" fg:x="12500" fg:w="4"/><text x="36.1675%" y="943.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (11 samples, 0.03%)</title><rect x="35.9433%" y="773" width="0.0316%" height="15" fill="rgb(228,175,21)" fg:x="12509" fg:w="11"/><text x="36.1933%" y="783.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (7 samples, 0.02%)</title><rect x="35.9548%" y="757" width="0.0201%" height="15" fill="rgb(228,174,43)" fg:x="12513" fg:w="7"/><text x="36.2048%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7 samples, 0.02%)</title><rect x="35.9548%" y="741" width="0.0201%" height="15" fill="rgb(211,191,0)" fg:x="12513" fg:w="7"/><text x="36.2048%" y="751.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (7 samples, 0.02%)</title><rect x="35.9548%" y="725" width="0.0201%" height="15" fill="rgb(253,117,3)" fg:x="12513" fg:w="7"/><text x="36.2048%" y="735.50"></text></g><g><title>alloc::slice::hack::to_vec (7 samples, 0.02%)</title><rect x="35.9548%" y="709" width="0.0201%" height="15" fill="rgb(241,127,19)" fg:x="12513" fg:w="7"/><text x="36.2048%" y="719.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7 samples, 0.02%)</title><rect x="35.9548%" y="693" width="0.0201%" height="15" fill="rgb(218,103,12)" fg:x="12513" fg:w="7"/><text x="36.2048%" y="703.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (4 samples, 0.01%)</title><rect x="35.9635%" y="677" width="0.0115%" height="15" fill="rgb(236,214,43)" fg:x="12516" fg:w="4"/><text x="36.2135%" y="687.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (14 samples, 0.04%)</title><rect x="35.9376%" y="869" width="0.0402%" height="15" fill="rgb(244,144,19)" fg:x="12507" fg:w="14"/><text x="36.1876%" y="879.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (12 samples, 0.03%)</title><rect x="35.9433%" y="853" width="0.0345%" height="15" fill="rgb(246,188,10)" fg:x="12509" fg:w="12"/><text x="36.1933%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 0.03%)</title><rect x="35.9433%" y="837" width="0.0345%" height="15" fill="rgb(212,193,33)" fg:x="12509" fg:w="12"/><text x="36.1933%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (12 samples, 0.03%)</title><rect x="35.9433%" y="821" width="0.0345%" height="15" fill="rgb(241,51,29)" fg:x="12509" fg:w="12"/><text x="36.1933%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (12 samples, 0.03%)</title><rect x="35.9433%" y="805" width="0.0345%" height="15" fill="rgb(211,58,19)" fg:x="12509" fg:w="12"/><text x="36.1933%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (12 samples, 0.03%)</title><rect x="35.9433%" y="789" width="0.0345%" height="15" fill="rgb(229,111,26)" fg:x="12509" fg:w="12"/><text x="36.1933%" y="799.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (18 samples, 0.05%)</title><rect x="35.9347%" y="949" width="0.0517%" height="15" fill="rgb(213,115,40)" fg:x="12506" fg:w="18"/><text x="36.1847%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (17 samples, 0.05%)</title><rect x="35.9376%" y="933" width="0.0488%" height="15" fill="rgb(209,56,44)" fg:x="12507" fg:w="17"/><text x="36.1876%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (17 samples, 0.05%)</title><rect x="35.9376%" y="917" width="0.0488%" height="15" fill="rgb(230,108,32)" fg:x="12507" fg:w="17"/><text x="36.1876%" y="927.50"></text></g><g><title>alloc::slice::hack::to_vec (17 samples, 0.05%)</title><rect x="35.9376%" y="901" width="0.0488%" height="15" fill="rgb(216,165,31)" fg:x="12507" fg:w="17"/><text x="36.1876%" y="911.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (17 samples, 0.05%)</title><rect x="35.9376%" y="885" width="0.0488%" height="15" fill="rgb(218,122,21)" fg:x="12507" fg:w="17"/><text x="36.1876%" y="895.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout (23 samples, 0.07%)</title><rect x="35.9290%" y="997" width="0.0661%" height="15" fill="rgb(223,224,47)" fg:x="12504" fg:w="23"/><text x="36.1790%" y="1007.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout_impl (23 samples, 0.07%)</title><rect x="35.9290%" y="981" width="0.0661%" height="15" fill="rgb(238,102,44)" fg:x="12504" fg:w="23"/><text x="36.1790%" y="991.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_layout (23 samples, 0.07%)</title><rect x="35.9290%" y="965" width="0.0661%" height="15" fill="rgb(236,46,40)" fg:x="12504" fg:w="23"/><text x="36.1790%" y="975.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (4 samples, 0.01%)</title><rect x="35.9951%" y="965" width="0.0115%" height="15" fill="rgb(247,202,50)" fg:x="12527" fg:w="4"/><text x="36.2451%" y="975.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag (10 samples, 0.03%)</title><rect x="35.9951%" y="997" width="0.0287%" height="15" fill="rgb(209,99,20)" fg:x="12527" fg:w="10"/><text x="36.2451%" y="1007.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag_impl (10 samples, 0.03%)</title><rect x="35.9951%" y="981" width="0.0287%" height="15" fill="rgb(252,27,34)" fg:x="12527" fg:w="10"/><text x="36.2451%" y="991.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_tag (6 samples, 0.02%)</title><rect x="36.0066%" y="965" width="0.0172%" height="15" fill="rgb(215,206,23)" fg:x="12531" fg:w="6"/><text x="36.2566%" y="975.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (6 samples, 0.02%)</title><rect x="36.0066%" y="949" width="0.0172%" height="15" fill="rgb(212,135,36)" fg:x="12531" fg:w="6"/><text x="36.2566%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (6 samples, 0.02%)</title><rect x="36.0066%" y="933" width="0.0172%" height="15" fill="rgb(240,189,1)" fg:x="12531" fg:w="6"/><text x="36.2566%" y="943.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (6 samples, 0.02%)</title><rect x="36.0066%" y="917" width="0.0172%" height="15" fill="rgb(242,56,20)" fg:x="12531" fg:w="6"/><text x="36.2566%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (6 samples, 0.02%)</title><rect x="36.0066%" y="901" width="0.0172%" height="15" fill="rgb(247,132,33)" fg:x="12531" fg:w="6"/><text x="36.2566%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.02%)</title><rect x="36.0066%" y="885" width="0.0172%" height="15" fill="rgb(208,149,11)" fg:x="12531" fg:w="6"/><text x="36.2566%" y="895.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (6 samples, 0.02%)</title><rect x="36.0066%" y="869" width="0.0172%" height="15" fill="rgb(211,33,11)" fg:x="12531" fg:w="6"/><text x="36.2566%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (6 samples, 0.02%)</title><rect x="36.0066%" y="853" width="0.0172%" height="15" fill="rgb(221,29,38)" fg:x="12531" fg:w="6"/><text x="36.2566%" y="863.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (6 samples, 0.02%)</title><rect x="36.0066%" y="837" width="0.0172%" height="15" fill="rgb(206,182,49)" fg:x="12531" fg:w="6"/><text x="36.2566%" y="847.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (6 samples, 0.02%)</title><rect x="36.0066%" y="821" width="0.0172%" height="15" fill="rgb(216,140,1)" fg:x="12531" fg:w="6"/><text x="36.2566%" y="831.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (6 samples, 0.02%)</title><rect x="36.0066%" y="805" width="0.0172%" height="15" fill="rgb(232,57,40)" fg:x="12531" fg:w="6"/><text x="36.2566%" y="815.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::CachedStructIndex as core::cmp::PartialEq&gt;::eq (6 samples, 0.02%)</title><rect x="36.0066%" y="789" width="0.0172%" height="15" fill="rgb(224,186,18)" fg:x="12531" fg:w="6"/><text x="36.2566%" y="799.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize (19 samples, 0.05%)</title><rect x="36.0583%" y="629" width="0.0546%" height="15" fill="rgb(215,121,11)" fg:x="12549" fg:w="19"/><text x="36.3083%" y="639.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize (19 samples, 0.05%)</title><rect x="36.0583%" y="613" width="0.0546%" height="15" fill="rgb(245,147,10)" fg:x="12549" fg:w="19"/><text x="36.3083%" y="623.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (19 samples, 0.05%)</title><rect x="36.0583%" y="597" width="0.0546%" height="15" fill="rgb(238,153,13)" fg:x="12549" fg:w="19"/><text x="36.3083%" y="607.50"></text></g><g><title>&lt;&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (16 samples, 0.05%)</title><rect x="36.0669%" y="581" width="0.0460%" height="15" fill="rgb(233,108,0)" fg:x="12552" fg:w="16"/><text x="36.3169%" y="591.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for [T (16 samples, 0.05%)</title><rect x="36.0669%" y="565" width="0.0460%" height="15" fill="rgb(212,157,17)" fg:x="12552" fg:w="16"/><text x="36.3169%" y="575.50"></text></g><g><title> 32]&gt;::deserialize (16 samples, 0.05%)</title><rect x="36.0669%" y="549" width="0.0460%" height="15" fill="rgb(225,213,38)" fg:x="12552" fg:w="16"/><text x="36.3169%" y="559.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (16 samples, 0.05%)</title><rect x="36.0669%" y="533" width="0.0460%" height="15" fill="rgb(248,16,11)" fg:x="12552" fg:w="16"/><text x="36.3169%" y="543.50"></text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T (16 samples, 0.05%)</title><rect x="36.0669%" y="517" width="0.0460%" height="15" fill="rgb(241,33,4)" fg:x="12552" fg:w="16"/><text x="36.3169%" y="527.50"></text></g><g><title> 32]&gt; as serde::de::Visitor&gt;::visit_seq (16 samples, 0.05%)</title><rect x="36.0669%" y="501" width="0.0460%" height="15" fill="rgb(222,26,43)" fg:x="12552" fg:w="16"/><text x="36.3169%" y="511.50"></text></g><g><title>serde::de::SeqAccess::next_element (7 samples, 0.02%)</title><rect x="36.0928%" y="485" width="0.0201%" height="15" fill="rgb(243,29,36)" fg:x="12561" fg:w="7"/><text x="36.3428%" y="495.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (7 samples, 0.02%)</title><rect x="36.0928%" y="469" width="0.0201%" height="15" fill="rgb(241,9,27)" fg:x="12561" fg:w="7"/><text x="36.3428%" y="479.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (7 samples, 0.02%)</title><rect x="36.0928%" y="453" width="0.0201%" height="15" fill="rgb(205,117,26)" fg:x="12561" fg:w="7"/><text x="36.3428%" y="463.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (7 samples, 0.02%)</title><rect x="36.0928%" y="437" width="0.0201%" height="15" fill="rgb(209,80,39)" fg:x="12561" fg:w="7"/><text x="36.3428%" y="447.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u8 (7 samples, 0.02%)</title><rect x="36.0928%" y="421" width="0.0201%" height="15" fill="rgb(239,155,6)" fg:x="12561" fg:w="7"/><text x="36.3428%" y="431.50"></text></g><g><title>bcs::de::Deserializer::parse_u8 (5 samples, 0.01%)</title><rect x="36.0985%" y="405" width="0.0144%" height="15" fill="rgb(212,104,12)" fg:x="12563" fg:w="5"/><text x="36.3485%" y="415.50"></text></g><g><title>bcs::de::Deserializer::next (5 samples, 0.01%)</title><rect x="36.0985%" y="389" width="0.0144%" height="15" fill="rgb(234,204,3)" fg:x="12563" fg:w="5"/><text x="36.3485%" y="399.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (27 samples, 0.08%)</title><rect x="36.0410%" y="709" width="0.0776%" height="15" fill="rgb(251,218,7)" fg:x="12543" fg:w="27"/><text x="36.2910%" y="719.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (27 samples, 0.08%)</title><rect x="36.0410%" y="693" width="0.0776%" height="15" fill="rgb(221,81,32)" fg:x="12543" fg:w="27"/><text x="36.2910%" y="703.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (27 samples, 0.08%)</title><rect x="36.0410%" y="677" width="0.0776%" height="15" fill="rgb(214,152,26)" fg:x="12543" fg:w="27"/><text x="36.2910%" y="687.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (21 samples, 0.06%)</title><rect x="36.0583%" y="661" width="0.0603%" height="15" fill="rgb(223,22,3)" fg:x="12549" fg:w="21"/><text x="36.3083%" y="671.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (21 samples, 0.06%)</title><rect x="36.0583%" y="645" width="0.0603%" height="15" fill="rgb(207,174,7)" fg:x="12549" fg:w="21"/><text x="36.3083%" y="655.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (30 samples, 0.09%)</title><rect x="36.0353%" y="725" width="0.0862%" height="15" fill="rgb(224,19,52)" fg:x="12541" fg:w="30"/><text x="36.2853%" y="735.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (32 samples, 0.09%)</title><rect x="36.0353%" y="741" width="0.0919%" height="15" fill="rgb(228,24,14)" fg:x="12541" fg:w="32"/><text x="36.2853%" y="751.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (34 samples, 0.10%)</title><rect x="36.0353%" y="773" width="0.0977%" height="15" fill="rgb(230,153,43)" fg:x="12541" fg:w="34"/><text x="36.2853%" y="783.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (34 samples, 0.10%)</title><rect x="36.0353%" y="757" width="0.0977%" height="15" fill="rgb(231,106,12)" fg:x="12541" fg:w="34"/><text x="36.2853%" y="767.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (35 samples, 0.10%)</title><rect x="36.0353%" y="789" width="0.1006%" height="15" fill="rgb(215,92,2)" fg:x="12541" fg:w="35"/><text x="36.2853%" y="799.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (37 samples, 0.11%)</title><rect x="36.0353%" y="821" width="0.1063%" height="15" fill="rgb(249,143,25)" fg:x="12541" fg:w="37"/><text x="36.2853%" y="831.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (37 samples, 0.11%)</title><rect x="36.0353%" y="805" width="0.1063%" height="15" fill="rgb(252,7,35)" fg:x="12541" fg:w="37"/><text x="36.2853%" y="815.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (4 samples, 0.01%)</title><rect x="36.1416%" y="821" width="0.0115%" height="15" fill="rgb(216,69,40)" fg:x="12578" fg:w="4"/><text x="36.3916%" y="831.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (42 samples, 0.12%)</title><rect x="36.0353%" y="869" width="0.1207%" height="15" fill="rgb(240,36,33)" fg:x="12541" fg:w="42"/><text x="36.2853%" y="879.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (42 samples, 0.12%)</title><rect x="36.0353%" y="853" width="0.1207%" height="15" fill="rgb(231,128,14)" fg:x="12541" fg:w="42"/><text x="36.2853%" y="863.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (42 samples, 0.12%)</title><rect x="36.0353%" y="837" width="0.1207%" height="15" fill="rgb(245,143,14)" fg:x="12541" fg:w="42"/><text x="36.2853%" y="847.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (47 samples, 0.14%)</title><rect x="36.0353%" y="885" width="0.1350%" height="15" fill="rgb(222,130,28)" fg:x="12541" fg:w="47"/><text x="36.2853%" y="895.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (5 samples, 0.01%)</title><rect x="36.1560%" y="869" width="0.0144%" height="15" fill="rgb(212,10,48)" fg:x="12583" fg:w="5"/><text x="36.4060%" y="879.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u64 (5 samples, 0.01%)</title><rect x="36.1560%" y="853" width="0.0144%" height="15" fill="rgb(254,118,45)" fg:x="12583" fg:w="5"/><text x="36.4060%" y="863.50"></text></g><g><title>bcs::de::Deserializer::parse_u64 (5 samples, 0.01%)</title><rect x="36.1560%" y="837" width="0.0144%" height="15" fill="rgb(228,6,45)" fg:x="12583" fg:w="5"/><text x="36.4060%" y="847.50"></text></g><g><title>bcs::de::Deserializer::fill_slice (5 samples, 0.01%)</title><rect x="36.1560%" y="821" width="0.0144%" height="15" fill="rgb(241,18,35)" fg:x="12583" fg:w="5"/><text x="36.4060%" y="831.50"></text></g><g><title>bcs::de::Deserializer::next (5 samples, 0.01%)</title><rect x="36.1560%" y="805" width="0.0144%" height="15" fill="rgb(227,214,53)" fg:x="12583" fg:w="5"/><text x="36.4060%" y="815.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (5 samples, 0.01%)</title><rect x="36.1560%" y="789" width="0.0144%" height="15" fill="rgb(224,107,51)" fg:x="12583" fg:w="5"/><text x="36.4060%" y="799.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (5 samples, 0.01%)</title><rect x="36.1560%" y="773" width="0.0144%" height="15" fill="rgb(248,60,28)" fg:x="12583" fg:w="5"/><text x="36.4060%" y="783.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (5 samples, 0.01%)</title><rect x="36.1560%" y="757" width="0.0144%" height="15" fill="rgb(249,101,23)" fg:x="12583" fg:w="5"/><text x="36.4060%" y="767.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (5 samples, 0.01%)</title><rect x="36.1560%" y="741" width="0.0144%" height="15" fill="rgb(228,51,19)" fg:x="12583" fg:w="5"/><text x="36.4060%" y="751.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (5 samples, 0.01%)</title><rect x="36.1560%" y="725" width="0.0144%" height="15" fill="rgb(213,20,6)" fg:x="12583" fg:w="5"/><text x="36.4060%" y="735.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (57 samples, 0.16%)</title><rect x="36.0267%" y="997" width="0.1638%" height="15" fill="rgb(212,124,10)" fg:x="12538" fg:w="57"/><text x="36.2767%" y="1007.50"></text></g><g><title>bcs::de::from_bytes_seed (57 samples, 0.16%)</title><rect x="36.0267%" y="981" width="0.1638%" height="15" fill="rgb(248,3,40)" fg:x="12538" fg:w="57"/><text x="36.2767%" y="991.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (54 samples, 0.16%)</title><rect x="36.0353%" y="965" width="0.1552%" height="15" fill="rgb(223,178,23)" fg:x="12541" fg:w="54"/><text x="36.2853%" y="975.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (54 samples, 0.16%)</title><rect x="36.0353%" y="949" width="0.1552%" height="15" fill="rgb(240,132,45)" fg:x="12541" fg:w="54"/><text x="36.2853%" y="959.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (54 samples, 0.16%)</title><rect x="36.0353%" y="933" width="0.1552%" height="15" fill="rgb(245,164,36)" fg:x="12541" fg:w="54"/><text x="36.2853%" y="943.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (54 samples, 0.16%)</title><rect x="36.0353%" y="917" width="0.1552%" height="15" fill="rgb(231,188,53)" fg:x="12541" fg:w="54"/><text x="36.2853%" y="927.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (54 samples, 0.16%)</title><rect x="36.0353%" y="901" width="0.1552%" height="15" fill="rgb(237,198,39)" fg:x="12541" fg:w="54"/><text x="36.2853%" y="911.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (7 samples, 0.02%)</title><rect x="36.1703%" y="885" width="0.0201%" height="15" fill="rgb(223,120,35)" fg:x="12588" fg:w="7"/><text x="36.4203%" y="895.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::load_resource (147 samples, 0.42%)</title><rect x="35.7738%" y="1029" width="0.4224%" height="15" fill="rgb(253,107,49)" fg:x="12450" fg:w="147"/><text x="36.0238%" y="1039.50"></text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_resource (147 samples, 0.42%)</title><rect x="35.7738%" y="1013" width="0.4224%" height="15" fill="rgb(216,44,31)" fg:x="12450" fg:w="147"/><text x="36.0238%" y="1023.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::borrow_global (148 samples, 0.43%)</title><rect x="35.7738%" y="1045" width="0.4253%" height="15" fill="rgb(253,87,21)" fg:x="12450" fg:w="148"/><text x="36.0238%" y="1055.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop_as (8 samples, 0.02%)</title><rect x="36.2019%" y="1045" width="0.0230%" height="15" fill="rgb(226,18,2)" fg:x="12599" fg:w="8"/><text x="36.4519%" y="1055.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::push (5 samples, 0.01%)</title><rect x="36.2249%" y="1045" width="0.0144%" height="15" fill="rgb(216,8,46)" fg:x="12607" fg:w="5"/><text x="36.4749%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (5 samples, 0.01%)</title><rect x="36.2249%" y="1029" width="0.0144%" height="15" fill="rgb(226,140,39)" fg:x="12607" fg:w="5"/><text x="36.4749%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (4 samples, 0.01%)</title><rect x="36.2278%" y="1013" width="0.0115%" height="15" fill="rgb(221,194,54)" fg:x="12608" fg:w="4"/><text x="36.4778%" y="1023.50"></text></g><g><title>move_vm_runtime::loader::Resolver::field_offset (7 samples, 0.02%)</title><rect x="36.2422%" y="1045" width="0.0201%" height="15" fill="rgb(213,92,11)" fg:x="12613" fg:w="7"/><text x="36.4922%" y="1055.50"></text></g><g><title>move_vm_types::values::values_impl::Value::constant_sig_token_to_layout (4 samples, 0.01%)</title><rect x="36.2881%" y="1029" width="0.0115%" height="15" fill="rgb(229,162,46)" fg:x="12629" fg:w="4"/><text x="36.5381%" y="1039.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (5 samples, 0.01%)</title><rect x="36.3226%" y="757" width="0.0144%" height="15" fill="rgb(214,111,36)" fg:x="12641" fg:w="5"/><text x="36.5726%" y="767.50"></text></g><g><title>&lt;&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (15 samples, 0.04%)</title><rect x="36.3054%" y="933" width="0.0431%" height="15" fill="rgb(207,6,21)" fg:x="12635" fg:w="15"/><text x="36.5554%" y="943.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for [T (15 samples, 0.04%)</title><rect x="36.3054%" y="917" width="0.0431%" height="15" fill="rgb(213,127,38)" fg:x="12635" fg:w="15"/><text x="36.5554%" y="927.50"></text></g><g><title> 32]&gt;::deserialize (15 samples, 0.04%)</title><rect x="36.3054%" y="901" width="0.0431%" height="15" fill="rgb(238,118,32)" fg:x="12635" fg:w="15"/><text x="36.5554%" y="911.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (15 samples, 0.04%)</title><rect x="36.3054%" y="885" width="0.0431%" height="15" fill="rgb(240,139,39)" fg:x="12635" fg:w="15"/><text x="36.5554%" y="895.50"></text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T (15 samples, 0.04%)</title><rect x="36.3054%" y="869" width="0.0431%" height="15" fill="rgb(235,10,37)" fg:x="12635" fg:w="15"/><text x="36.5554%" y="879.50"></text></g><g><title> 32]&gt; as serde::de::Visitor&gt;::visit_seq (15 samples, 0.04%)</title><rect x="36.3054%" y="853" width="0.0431%" height="15" fill="rgb(249,171,38)" fg:x="12635" fg:w="15"/><text x="36.5554%" y="863.50"></text></g><g><title>serde::de::SeqAccess::next_element (9 samples, 0.03%)</title><rect x="36.3226%" y="837" width="0.0259%" height="15" fill="rgb(242,144,32)" fg:x="12641" fg:w="9"/><text x="36.5726%" y="847.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (9 samples, 0.03%)</title><rect x="36.3226%" y="821" width="0.0259%" height="15" fill="rgb(217,117,21)" fg:x="12641" fg:w="9"/><text x="36.5726%" y="831.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (9 samples, 0.03%)</title><rect x="36.3226%" y="805" width="0.0259%" height="15" fill="rgb(249,87,1)" fg:x="12641" fg:w="9"/><text x="36.5726%" y="815.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (9 samples, 0.03%)</title><rect x="36.3226%" y="789" width="0.0259%" height="15" fill="rgb(248,196,48)" fg:x="12641" fg:w="9"/><text x="36.5726%" y="799.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u8 (9 samples, 0.03%)</title><rect x="36.3226%" y="773" width="0.0259%" height="15" fill="rgb(251,206,33)" fg:x="12641" fg:w="9"/><text x="36.5726%" y="783.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (19 samples, 0.05%)</title><rect x="36.2996%" y="997" width="0.0546%" height="15" fill="rgb(232,141,28)" fg:x="12633" fg:w="19"/><text x="36.5496%" y="1007.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize (18 samples, 0.05%)</title><rect x="36.3025%" y="981" width="0.0517%" height="15" fill="rgb(209,167,14)" fg:x="12634" fg:w="18"/><text x="36.5525%" y="991.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize (18 samples, 0.05%)</title><rect x="36.3025%" y="965" width="0.0517%" height="15" fill="rgb(225,11,50)" fg:x="12634" fg:w="18"/><text x="36.5525%" y="975.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (18 samples, 0.05%)</title><rect x="36.3025%" y="949" width="0.0517%" height="15" fill="rgb(209,50,20)" fg:x="12634" fg:w="18"/><text x="36.5525%" y="959.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::execute_code (269 samples, 0.77%)</title><rect x="35.5928%" y="1077" width="0.7729%" height="15" fill="rgb(212,17,46)" fg:x="12387" fg:w="269"/><text x="35.8428%" y="1087.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::execute_code_impl (269 samples, 0.77%)</title><rect x="35.5928%" y="1061" width="0.7729%" height="15" fill="rgb(216,101,39)" fg:x="12387" fg:w="269"/><text x="35.8428%" y="1071.50"></text></g><g><title>move_vm_types::values::values_impl::Value::deserialize_constant (29 samples, 0.08%)</title><rect x="36.2824%" y="1045" width="0.0833%" height="15" fill="rgb(212,228,48)" fg:x="12627" fg:w="29"/><text x="36.5324%" y="1055.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (23 samples, 0.07%)</title><rect x="36.2996%" y="1029" width="0.0661%" height="15" fill="rgb(250,6,50)" fg:x="12633" fg:w="23"/><text x="36.5496%" y="1039.50"></text></g><g><title>bcs::de::from_bytes_seed (23 samples, 0.07%)</title><rect x="36.2996%" y="1013" width="0.0661%" height="15" fill="rgb(250,160,48)" fg:x="12633" fg:w="23"/><text x="36.5496%" y="1023.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (4 samples, 0.01%)</title><rect x="36.3542%" y="997" width="0.0115%" height="15" fill="rgb(244,216,33)" fg:x="12652" fg:w="4"/><text x="36.6042%" y="1007.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::entrypoint (288 samples, 0.83%)</title><rect x="35.5554%" y="1109" width="0.8275%" height="15" fill="rgb(207,157,5)" fg:x="12374" fg:w="288"/><text x="35.8054%" y="1119.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::execute_main (288 samples, 0.83%)</title><rect x="35.5554%" y="1093" width="0.8275%" height="15" fill="rgb(228,199,8)" fg:x="12374" fg:w="288"/><text x="35.8054%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4 samples, 0.01%)</title><rect x="36.3830%" y="1093" width="0.0115%" height="15" fill="rgb(227,80,20)" fg:x="12662" fg:w="4"/><text x="36.6330%" y="1103.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (4 samples, 0.01%)</title><rect x="36.3830%" y="1077" width="0.0115%" height="15" fill="rgb(222,9,33)" fg:x="12662" fg:w="4"/><text x="36.6330%" y="1087.50"></text></g><g><title>core::iter::adapters::try_process (4 samples, 0.01%)</title><rect x="36.3830%" y="1061" width="0.0115%" height="15" fill="rgb(239,44,28)" fg:x="12662" fg:w="4"/><text x="36.6330%" y="1071.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (4 samples, 0.01%)</title><rect x="36.3830%" y="1045" width="0.0115%" height="15" fill="rgb(249,187,43)" fg:x="12662" fg:w="4"/><text x="36.6330%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4 samples, 0.01%)</title><rect x="36.3830%" y="1029" width="0.0115%" height="15" fill="rgb(216,141,28)" fg:x="12662" fg:w="4"/><text x="36.6330%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4 samples, 0.01%)</title><rect x="36.3830%" y="1013" width="0.0115%" height="15" fill="rgb(230,154,53)" fg:x="12662" fg:w="4"/><text x="36.6330%" y="1023.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (4 samples, 0.01%)</title><rect x="36.3830%" y="997" width="0.0115%" height="15" fill="rgb(227,82,4)" fg:x="12662" fg:w="4"/><text x="36.6330%" y="1007.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::deserialize_args (5 samples, 0.01%)</title><rect x="36.3830%" y="1109" width="0.0144%" height="15" fill="rgb(220,107,16)" fg:x="12662" fg:w="5"/><text x="36.6330%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.04%)</title><rect x="36.4031%" y="965" width="0.0374%" height="15" fill="rgb(207,187,2)" fg:x="12669" fg:w="13"/><text x="36.6531%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (13 samples, 0.04%)</title><rect x="36.4031%" y="949" width="0.0374%" height="15" fill="rgb(210,162,52)" fg:x="12669" fg:w="13"/><text x="36.6531%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (13 samples, 0.04%)</title><rect x="36.4031%" y="933" width="0.0374%" height="15" fill="rgb(217,216,49)" fg:x="12669" fg:w="13"/><text x="36.6531%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (13 samples, 0.04%)</title><rect x="36.4031%" y="917" width="0.0374%" height="15" fill="rgb(218,146,49)" fg:x="12669" fg:w="13"/><text x="36.6531%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (13 samples, 0.04%)</title><rect x="36.4031%" y="901" width="0.0374%" height="15" fill="rgb(216,55,40)" fg:x="12669" fg:w="13"/><text x="36.6531%" y="911.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (13 samples, 0.04%)</title><rect x="36.4031%" y="885" width="0.0374%" height="15" fill="rgb(208,196,21)" fg:x="12669" fg:w="13"/><text x="36.6531%" y="895.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::serialize_return_values::{{closure}} (13 samples, 0.04%)</title><rect x="36.4031%" y="869" width="0.0374%" height="15" fill="rgb(242,117,42)" fg:x="12669" fg:w="13"/><text x="36.6531%" y="879.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::serialize_return_value (13 samples, 0.04%)</title><rect x="36.4031%" y="853" width="0.0374%" height="15" fill="rgb(210,11,23)" fg:x="12669" fg:w="13"/><text x="36.6531%" y="863.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_serialize (5 samples, 0.01%)</title><rect x="36.4261%" y="837" width="0.0144%" height="15" fill="rgb(217,110,2)" fg:x="12677" fg:w="5"/><text x="36.6761%" y="847.50"></text></g><g><title>bcs::ser::to_bytes (4 samples, 0.01%)</title><rect x="36.4289%" y="821" width="0.0115%" height="15" fill="rgb(229,77,54)" fg:x="12678" fg:w="4"/><text x="36.6789%" y="831.50"></text></g><g><title>bcs::ser::serialize_into (4 samples, 0.01%)</title><rect x="36.4289%" y="805" width="0.0115%" height="15" fill="rgb(218,53,16)" fg:x="12678" fg:w="4"/><text x="36.6789%" y="815.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::ValueImpl&gt; as serde::ser::Serialize&gt;::serialize (4 samples, 0.01%)</title><rect x="36.4289%" y="789" width="0.0115%" height="15" fill="rgb(215,38,13)" fg:x="12678" fg:w="4"/><text x="36.6789%" y="799.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::serialize_return_values (17 samples, 0.05%)</title><rect x="36.3973%" y="1109" width="0.0488%" height="15" fill="rgb(235,42,18)" fg:x="12667" fg:w="17"/><text x="36.6473%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (17 samples, 0.05%)</title><rect x="36.3973%" y="1093" width="0.0488%" height="15" fill="rgb(219,66,54)" fg:x="12667" fg:w="17"/><text x="36.6473%" y="1103.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (17 samples, 0.05%)</title><rect x="36.3973%" y="1077" width="0.0488%" height="15" fill="rgb(222,205,4)" fg:x="12667" fg:w="17"/><text x="36.6473%" y="1087.50"></text></g><g><title>core::iter::adapters::try_process (17 samples, 0.05%)</title><rect x="36.3973%" y="1061" width="0.0488%" height="15" fill="rgb(227,213,46)" fg:x="12667" fg:w="17"/><text x="36.6473%" y="1071.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (17 samples, 0.05%)</title><rect x="36.3973%" y="1045" width="0.0488%" height="15" fill="rgb(250,145,42)" fg:x="12667" fg:w="17"/><text x="36.6473%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (17 samples, 0.05%)</title><rect x="36.3973%" y="1029" width="0.0488%" height="15" fill="rgb(219,15,2)" fg:x="12667" fg:w="17"/><text x="36.6473%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (17 samples, 0.05%)</title><rect x="36.3973%" y="1013" width="0.0488%" height="15" fill="rgb(231,181,52)" fg:x="12667" fg:w="17"/><text x="36.6473%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (17 samples, 0.05%)</title><rect x="36.3973%" y="997" width="0.0488%" height="15" fill="rgb(235,1,42)" fg:x="12667" fg:w="17"/><text x="36.6473%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (15 samples, 0.04%)</title><rect x="36.4031%" y="981" width="0.0431%" height="15" fill="rgb(249,88,27)" fg:x="12669" fg:w="15"/><text x="36.6531%" y="991.50"></text></g><g><title>aptos_block_executor::evm_context_loader::ContextView&lt;S&gt;::view_framework (480 samples, 1.38%)</title><rect x="35.0698%" y="1173" width="1.3792%" height="15" fill="rgb(235,145,16)" fg:x="12205" fg:w="480"/><text x="35.3198%" y="1183.50"></text></g><g><title>move_vm_runtime::session::Session&lt;S&gt;::execute_function_bypass_visibility (373 samples, 1.07%)</title><rect x="35.3773%" y="1157" width="1.0718%" height="15" fill="rgb(237,114,19)" fg:x="12312" fg:w="373"/><text x="35.6273%" y="1167.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function (373 samples, 1.07%)</title><rect x="35.3773%" y="1141" width="1.0718%" height="15" fill="rgb(238,51,50)" fg:x="12312" fg:w="373"/><text x="35.6273%" y="1151.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function_impl (334 samples, 0.96%)</title><rect x="35.4893%" y="1125" width="0.9597%" height="15" fill="rgb(205,194,25)" fg:x="12351" fg:w="334"/><text x="35.7393%" y="1135.50"></text></g><g><title>&lt;aptos_block_executor::evm_context_loader::ContextView&lt;S&gt; as aptos_evm::context::ContextReader&gt;::get_block_height (490 samples, 1.41%)</title><rect x="35.0641%" y="1189" width="1.4080%" height="15" fill="rgb(215,203,17)" fg:x="12203" fg:w="490"/><text x="35.3141%" y="1199.50"></text></g><g><title>aptos_block_executor::evm_context_loader::convert_to_u64 (8 samples, 0.02%)</title><rect x="36.4491%" y="1173" width="0.0230%" height="15" fill="rgb(233,112,49)" fg:x="12685" fg:w="8"/><text x="36.6991%" y="1183.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (21 samples, 0.06%)</title><rect x="36.5036%" y="997" width="0.0603%" height="15" fill="rgb(241,130,26)" fg:x="12704" fg:w="21"/><text x="36.7536%" y="1007.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (21 samples, 0.06%)</title><rect x="36.5036%" y="981" width="0.0603%" height="15" fill="rgb(252,223,19)" fg:x="12704" fg:w="21"/><text x="36.7536%" y="991.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (21 samples, 0.06%)</title><rect x="36.5036%" y="965" width="0.0603%" height="15" fill="rgb(211,95,25)" fg:x="12704" fg:w="21"/><text x="36.7536%" y="975.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (21 samples, 0.06%)</title><rect x="36.5036%" y="949" width="0.0603%" height="15" fill="rgb(251,182,27)" fg:x="12704" fg:w="21"/><text x="36.7536%" y="959.50"></text></g><g><title>aptos_block_executor::move_vm_ext::session::SessionId::as_uuid (23 samples, 0.07%)</title><rect x="36.5036%" y="1109" width="0.0661%" height="15" fill="rgb(238,24,4)" fg:x="12704" fg:w="23"/><text x="36.7536%" y="1119.50"></text></g><g><title>&lt;aptos_block_executor::move_vm_ext::session::SessionId as aptos_crypto::hash::CryptoHash&gt;::hash (23 samples, 0.07%)</title><rect x="36.5036%" y="1093" width="0.0661%" height="15" fill="rgb(224,220,25)" fg:x="12704" fg:w="23"/><text x="36.7536%" y="1103.50"></text></g><g><title>&lt;aptos_block_executor::move_vm_ext::session::SessionIdHasher as aptos_crypto::hash::CryptoHasher&gt;::finish (23 samples, 0.07%)</title><rect x="36.5036%" y="1077" width="0.0661%" height="15" fill="rgb(239,133,26)" fg:x="12704" fg:w="23"/><text x="36.7536%" y="1087.50"></text></g><g><title>aptos_crypto::hash::DefaultHasher::finish (23 samples, 0.07%)</title><rect x="36.5036%" y="1061" width="0.0661%" height="15" fill="rgb(211,94,48)" fg:x="12704" fg:w="23"/><text x="36.7536%" y="1071.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (23 samples, 0.07%)</title><rect x="36.5036%" y="1045" width="0.0661%" height="15" fill="rgb(239,87,6)" fg:x="12704" fg:w="23"/><text x="36.7536%" y="1055.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (23 samples, 0.07%)</title><rect x="36.5036%" y="1029" width="0.0661%" height="15" fill="rgb(227,62,0)" fg:x="12704" fg:w="23"/><text x="36.7536%" y="1039.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (23 samples, 0.07%)</title><rect x="36.5036%" y="1013" width="0.0661%" height="15" fill="rgb(211,226,4)" fg:x="12704" fg:w="23"/><text x="36.7536%" y="1023.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (5 samples, 0.01%)</title><rect x="36.5697%" y="1093" width="0.0144%" height="15" fill="rgb(253,38,52)" fg:x="12727" fg:w="5"/><text x="36.8197%" y="1103.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.01%)</title><rect x="36.5841%" y="1061" width="0.0115%" height="15" fill="rgb(229,126,40)" fg:x="12732" fg:w="4"/><text x="36.8341%" y="1071.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.01%)</title><rect x="36.5841%" y="1045" width="0.0115%" height="15" fill="rgb(229,165,44)" fg:x="12732" fg:w="4"/><text x="36.8341%" y="1055.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (4 samples, 0.01%)</title><rect x="36.5841%" y="1029" width="0.0115%" height="15" fill="rgb(247,95,47)" fg:x="12732" fg:w="4"/><text x="36.8341%" y="1039.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4 samples, 0.01%)</title><rect x="36.5841%" y="1013" width="0.0115%" height="15" fill="rgb(216,140,30)" fg:x="12732" fg:w="4"/><text x="36.8341%" y="1023.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4 samples, 0.01%)</title><rect x="36.5841%" y="997" width="0.0115%" height="15" fill="rgb(246,214,8)" fg:x="12732" fg:w="4"/><text x="36.8341%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (4 samples, 0.01%)</title><rect x="36.5985%" y="997" width="0.0115%" height="15" fill="rgb(227,224,15)" fg:x="12737" fg:w="4"/><text x="36.8485%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (6 samples, 0.02%)</title><rect x="36.5956%" y="1061" width="0.0172%" height="15" fill="rgb(233,175,4)" fg:x="12736" fg:w="6"/><text x="36.8456%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (6 samples, 0.02%)</title><rect x="36.5956%" y="1045" width="0.0172%" height="15" fill="rgb(221,66,45)" fg:x="12736" fg:w="6"/><text x="36.8456%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.01%)</title><rect x="36.5985%" y="1029" width="0.0144%" height="15" fill="rgb(221,178,18)" fg:x="12737" fg:w="5"/><text x="36.8485%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (5 samples, 0.01%)</title><rect x="36.5985%" y="1013" width="0.0144%" height="15" fill="rgb(213,81,29)" fg:x="12737" fg:w="5"/><text x="36.8485%" y="1023.50"></text></g><g><title>aptos_block_executor::aptos_vm_impl::AptosVMImpl::new_session (42 samples, 0.12%)</title><rect x="36.5008%" y="1157" width="0.1207%" height="15" fill="rgb(220,89,49)" fg:x="12703" fg:w="42"/><text x="36.7508%" y="1167.50"></text></g><g><title>aptos_block_executor::move_vm_ext::vm::MoveVmExt::new_session (42 samples, 0.12%)</title><rect x="36.5008%" y="1141" width="0.1207%" height="15" fill="rgb(227,60,33)" fg:x="12703" fg:w="42"/><text x="36.7508%" y="1151.50"></text></g><g><title>aptos_block_executor::move_vm_ext::vm::MoveVmExt::new_session_inner (42 samples, 0.12%)</title><rect x="36.5008%" y="1125" width="0.1207%" height="15" fill="rgb(205,113,12)" fg:x="12703" fg:w="42"/><text x="36.7508%" y="1135.50"></text></g><g><title>move_vm_runtime::native_extensions::NativeContextExtensions::add (18 samples, 0.05%)</title><rect x="36.5697%" y="1109" width="0.0517%" height="15" fill="rgb(211,32,1)" fg:x="12727" fg:w="18"/><text x="36.8197%" y="1119.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (13 samples, 0.04%)</title><rect x="36.5841%" y="1093" width="0.0374%" height="15" fill="rgb(246,2,12)" fg:x="12732" fg:w="13"/><text x="36.8341%" y="1103.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (13 samples, 0.04%)</title><rect x="36.5841%" y="1077" width="0.0374%" height="15" fill="rgb(243,37,27)" fg:x="12732" fg:w="13"/><text x="36.8341%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;aptos_block_executor::data_cache::StorageAdapter&lt;aptos_block_executor::state_view::DbStateView&gt;&gt;&gt; (9 samples, 0.03%)</title><rect x="36.6243%" y="1125" width="0.0259%" height="15" fill="rgb(248,211,31)" fg:x="12746" fg:w="9"/><text x="36.8743%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;move_core_types::account_address::AccountAddress,move_vm_runtime::data_cache::AccountDataCache&gt;&gt; (9 samples, 0.03%)</title><rect x="36.6243%" y="1109" width="0.0259%" height="15" fill="rgb(242,146,47)" fg:x="12746" fg:w="9"/><text x="36.8743%" y="1119.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.03%)</title><rect x="36.6243%" y="1093" width="0.0259%" height="15" fill="rgb(206,70,20)" fg:x="12746" fg:w="9"/><text x="36.8743%" y="1103.50"></text></g><g><title>core::mem::drop (9 samples, 0.03%)</title><rect x="36.6243%" y="1077" width="0.0259%" height="15" fill="rgb(215,10,51)" fg:x="12746" fg:w="9"/><text x="36.8743%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;move_core_types::account_address::AccountAddress,move_vm_runtime::data_cache::AccountDataCache&gt;&gt; (9 samples, 0.03%)</title><rect x="36.6243%" y="1061" width="0.0259%" height="15" fill="rgb(243,178,53)" fg:x="12746" fg:w="9"/><text x="36.8743%" y="1071.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.03%)</title><rect x="36.6243%" y="1045" width="0.0259%" height="15" fill="rgb(233,221,20)" fg:x="12746" fg:w="9"/><text x="36.8743%" y="1055.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (7 samples, 0.02%)</title><rect x="36.6301%" y="1029" width="0.0201%" height="15" fill="rgb(218,95,35)" fg:x="12748" fg:w="7"/><text x="36.8801%" y="1039.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (7 samples, 0.02%)</title><rect x="36.6301%" y="1013" width="0.0201%" height="15" fill="rgb(229,13,5)" fg:x="12748" fg:w="7"/><text x="36.8801%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::data_cache::AccountDataCache&gt; (7 samples, 0.02%)</title><rect x="36.6301%" y="997" width="0.0201%" height="15" fill="rgb(252,164,30)" fg:x="12748" fg:w="7"/><text x="36.8801%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;move_vm_types::loaded_data::runtime_types::Type,(move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::GlobalValue)&gt;&gt; (7 samples, 0.02%)</title><rect x="36.6301%" y="981" width="0.0201%" height="15" fill="rgb(232,68,36)" fg:x="12748" fg:w="7"/><text x="36.8801%" y="991.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.02%)</title><rect x="36.6301%" y="965" width="0.0201%" height="15" fill="rgb(219,59,54)" fg:x="12748" fg:w="7"/><text x="36.8801%" y="975.50"></text></g><g><title>core::mem::drop (6 samples, 0.02%)</title><rect x="36.6330%" y="949" width="0.0172%" height="15" fill="rgb(250,92,33)" fg:x="12749" fg:w="6"/><text x="36.8830%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;move_vm_types::loaded_data::runtime_types::Type,(move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::GlobalValue)&gt;&gt; (6 samples, 0.02%)</title><rect x="36.6330%" y="933" width="0.0172%" height="15" fill="rgb(229,162,54)" fg:x="12749" fg:w="6"/><text x="36.8830%" y="943.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="36.6330%" y="917" width="0.0172%" height="15" fill="rgb(244,114,52)" fg:x="12749" fg:w="6"/><text x="36.8830%" y="927.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (4 samples, 0.01%)</title><rect x="36.6387%" y="901" width="0.0115%" height="15" fill="rgb(212,211,43)" fg:x="12751" fg:w="4"/><text x="36.8887%" y="911.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (4 samples, 0.01%)</title><rect x="36.6387%" y="885" width="0.0115%" height="15" fill="rgb(226,147,8)" fg:x="12751" fg:w="4"/><text x="36.8887%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_block_executor::move_vm_ext::session::SessionExt&lt;aptos_block_executor::data_cache::StorageAdapter&lt;aptos_block_executor::state_view::DbStateView&gt;&gt;&gt; (21 samples, 0.06%)</title><rect x="36.6243%" y="1157" width="0.0603%" height="15" fill="rgb(226,23,13)" fg:x="12746" fg:w="21"/><text x="36.8743%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::session::Session&lt;aptos_block_executor::data_cache::StorageAdapter&lt;aptos_block_executor::state_view::DbStateView&gt;&gt;&gt; (21 samples, 0.06%)</title><rect x="36.6243%" y="1141" width="0.0603%" height="15" fill="rgb(240,63,4)" fg:x="12746" fg:w="21"/><text x="36.8743%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::native_extensions::NativeContextExtensions&gt; (12 samples, 0.03%)</title><rect x="36.6502%" y="1125" width="0.0345%" height="15" fill="rgb(221,1,32)" fg:x="12755" fg:w="12"/><text x="36.9002%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn better_any::Tid&gt;&gt;&gt; (12 samples, 0.03%)</title><rect x="36.6502%" y="1109" width="0.0345%" height="15" fill="rgb(242,117,10)" fg:x="12755" fg:w="12"/><text x="36.9002%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;core::any::TypeId,alloc::boxed::Box&lt;dyn better_any::Tid&gt;,std::hash::random::RandomState&gt;&gt; (12 samples, 0.03%)</title><rect x="36.6502%" y="1093" width="0.0345%" height="15" fill="rgb(249,172,44)" fg:x="12755" fg:w="12"/><text x="36.9002%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(core::any::TypeId,alloc::boxed::Box&lt;dyn better_any::Tid&gt;)&gt;&gt; (12 samples, 0.03%)</title><rect x="36.6502%" y="1077" width="0.0345%" height="15" fill="rgb(244,46,45)" fg:x="12755" fg:w="12"/><text x="36.9002%" y="1087.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.03%)</title><rect x="36.6502%" y="1061" width="0.0345%" height="15" fill="rgb(206,43,17)" fg:x="12755" fg:w="12"/><text x="36.9002%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (12 samples, 0.03%)</title><rect x="36.6502%" y="1045" width="0.0345%" height="15" fill="rgb(239,218,39)" fg:x="12755" fg:w="12"/><text x="36.9002%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (12 samples, 0.03%)</title><rect x="36.6502%" y="1029" width="0.0345%" height="15" fill="rgb(208,169,54)" fg:x="12755" fg:w="12"/><text x="36.9002%" y="1039.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (7 samples, 0.02%)</title><rect x="36.6646%" y="1013" width="0.0201%" height="15" fill="rgb(247,25,42)" fg:x="12760" fg:w="7"/><text x="36.9146%" y="1023.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (7 samples, 0.02%)</title><rect x="36.6646%" y="997" width="0.0201%" height="15" fill="rgb(226,23,31)" fg:x="12760" fg:w="7"/><text x="36.9146%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;(core::any::TypeId,alloc::boxed::Box&lt;dyn better_any::Tid&gt;)&gt; (7 samples, 0.02%)</title><rect x="36.6646%" y="981" width="0.0201%" height="15" fill="rgb(247,16,28)" fg:x="12760" fg:w="7"/><text x="36.9146%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn better_any::Tid&gt;&gt; (7 samples, 0.02%)</title><rect x="36.6646%" y="965" width="0.0201%" height="15" fill="rgb(231,147,38)" fg:x="12760" fg:w="7"/><text x="36.9146%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (6 samples, 0.02%)</title><rect x="36.7134%" y="1109" width="0.0172%" height="15" fill="rgb(253,81,48)" fg:x="12777" fg:w="6"/><text x="36.9634%" y="1119.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (6 samples, 0.02%)</title><rect x="36.7134%" y="1093" width="0.0172%" height="15" fill="rgb(249,222,43)" fg:x="12777" fg:w="6"/><text x="36.9634%" y="1103.50"></text></g><g><title>core::iter::adapters::try_process (6 samples, 0.02%)</title><rect x="36.7134%" y="1077" width="0.0172%" height="15" fill="rgb(221,3,27)" fg:x="12777" fg:w="6"/><text x="36.9634%" y="1087.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (6 samples, 0.02%)</title><rect x="36.7134%" y="1061" width="0.0172%" height="15" fill="rgb(228,180,5)" fg:x="12777" fg:w="6"/><text x="36.9634%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (6 samples, 0.02%)</title><rect x="36.7134%" y="1045" width="0.0172%" height="15" fill="rgb(227,131,42)" fg:x="12777" fg:w="6"/><text x="36.9634%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (6 samples, 0.02%)</title><rect x="36.7134%" y="1029" width="0.0172%" height="15" fill="rgb(212,3,39)" fg:x="12777" fg:w="6"/><text x="36.9634%" y="1039.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.01%)</title><rect x="36.7393%" y="997" width="0.0115%" height="15" fill="rgb(226,45,5)" fg:x="12786" fg:w="4"/><text x="36.9893%" y="1007.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.01%)</title><rect x="36.7393%" y="981" width="0.0115%" height="15" fill="rgb(215,167,45)" fg:x="12786" fg:w="4"/><text x="36.9893%" y="991.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module (12 samples, 0.03%)</title><rect x="36.7306%" y="1109" width="0.0345%" height="15" fill="rgb(250,218,53)" fg:x="12783" fg:w="12"/><text x="36.9806%" y="1119.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module_internal (11 samples, 0.03%)</title><rect x="36.7335%" y="1093" width="0.0316%" height="15" fill="rgb(207,140,0)" fg:x="12784" fg:w="11"/><text x="36.9835%" y="1103.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::module_at (9 samples, 0.03%)</title><rect x="36.7393%" y="1077" width="0.0259%" height="15" fill="rgb(238,133,51)" fg:x="12786" fg:w="9"/><text x="36.9893%" y="1087.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (9 samples, 0.03%)</title><rect x="36.7393%" y="1061" width="0.0259%" height="15" fill="rgb(218,203,53)" fg:x="12786" fg:w="9"/><text x="36.9893%" y="1071.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (9 samples, 0.03%)</title><rect x="36.7393%" y="1045" width="0.0259%" height="15" fill="rgb(226,184,25)" fg:x="12786" fg:w="9"/><text x="36.9893%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (9 samples, 0.03%)</title><rect x="36.7393%" y="1029" width="0.0259%" height="15" fill="rgb(231,121,21)" fg:x="12786" fg:w="9"/><text x="36.9893%" y="1039.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (9 samples, 0.03%)</title><rect x="36.7393%" y="1013" width="0.0259%" height="15" fill="rgb(251,14,34)" fg:x="12786" fg:w="9"/><text x="36.9893%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (5 samples, 0.01%)</title><rect x="36.7508%" y="997" width="0.0144%" height="15" fill="rgb(249,193,11)" fg:x="12790" fg:w="5"/><text x="37.0008%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5 samples, 0.01%)</title><rect x="36.7508%" y="981" width="0.0144%" height="15" fill="rgb(220,172,37)" fg:x="12790" fg:w="5"/><text x="37.0008%" y="991.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (5 samples, 0.01%)</title><rect x="36.7508%" y="965" width="0.0144%" height="15" fill="rgb(231,229,43)" fg:x="12790" fg:w="5"/><text x="37.0008%" y="975.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="36.7508%" y="949" width="0.0144%" height="15" fill="rgb(250,161,5)" fg:x="12790" fg:w="5"/><text x="37.0008%" y="959.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (5 samples, 0.01%)</title><rect x="36.7508%" y="933" width="0.0144%" height="15" fill="rgb(218,225,18)" fg:x="12790" fg:w="5"/><text x="37.0008%" y="943.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_function (22 samples, 0.06%)</title><rect x="36.7105%" y="1125" width="0.0632%" height="15" fill="rgb(245,45,42)" fg:x="12776" fg:w="22"/><text x="36.9605%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4 samples, 0.01%)</title><rect x="36.7795%" y="1109" width="0.0115%" height="15" fill="rgb(211,115,1)" fg:x="12800" fg:w="4"/><text x="37.0295%" y="1119.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (4 samples, 0.01%)</title><rect x="36.7795%" y="1093" width="0.0115%" height="15" fill="rgb(248,133,52)" fg:x="12800" fg:w="4"/><text x="37.0295%" y="1103.50"></text></g><g><title>core::iter::adapters::try_process (4 samples, 0.01%)</title><rect x="36.7795%" y="1077" width="0.0115%" height="15" fill="rgb(238,100,21)" fg:x="12800" fg:w="4"/><text x="37.0295%" y="1087.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (4 samples, 0.01%)</title><rect x="36.7795%" y="1061" width="0.0115%" height="15" fill="rgb(247,144,11)" fg:x="12800" fg:w="4"/><text x="37.0295%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4 samples, 0.01%)</title><rect x="36.7795%" y="1045" width="0.0115%" height="15" fill="rgb(206,164,16)" fg:x="12800" fg:w="4"/><text x="37.0295%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4 samples, 0.01%)</title><rect x="36.7795%" y="1029" width="0.0115%" height="15" fill="rgb(222,34,3)" fg:x="12800" fg:w="4"/><text x="37.0295%" y="1039.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (4 samples, 0.01%)</title><rect x="36.7795%" y="1013" width="0.0115%" height="15" fill="rgb(248,82,4)" fg:x="12800" fg:w="4"/><text x="37.0295%" y="1023.50"></text></g><g><title>alloc::vec::in_place_collect::from_iter_in_place (4 samples, 0.01%)</title><rect x="36.7795%" y="997" width="0.0115%" height="15" fill="rgb(228,81,46)" fg:x="12800" fg:w="4"/><text x="37.0295%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::loader::Resolver&gt; (12 samples, 0.03%)</title><rect x="36.8025%" y="1077" width="0.0345%" height="15" fill="rgb(227,67,47)" fg:x="12808" fg:w="12"/><text x="37.0525%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::loader::BinaryType&gt; (12 samples, 0.03%)</title><rect x="36.8025%" y="1061" width="0.0345%" height="15" fill="rgb(215,93,53)" fg:x="12808" fg:w="12"/><text x="37.0525%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;move_vm_runtime::loader::Module&gt;&gt; (12 samples, 0.03%)</title><rect x="36.8025%" y="1045" width="0.0345%" height="15" fill="rgb(248,194,39)" fg:x="12808" fg:w="12"/><text x="37.0525%" y="1055.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.03%)</title><rect x="36.8025%" y="1029" width="0.0345%" height="15" fill="rgb(215,5,19)" fg:x="12808" fg:w="12"/><text x="37.0525%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (12 samples, 0.03%)</title><rect x="36.8025%" y="1013" width="0.0345%" height="15" fill="rgb(226,215,51)" fg:x="12808" fg:w="12"/><text x="37.0525%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_sub (12 samples, 0.03%)</title><rect x="36.8025%" y="997" width="0.0345%" height="15" fill="rgb(225,56,26)" fg:x="12808" fg:w="12"/><text x="37.0525%" y="1007.50"></text></g><g><title>move_vm_runtime::interpreter::CallStack::push (4 samples, 0.01%)</title><rect x="36.8398%" y="1077" width="0.0115%" height="15" fill="rgb(222,75,29)" fg:x="12821" fg:w="4"/><text x="37.0898%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 0.01%)</title><rect x="36.8398%" y="1061" width="0.0115%" height="15" fill="rgb(236,139,6)" fg:x="12821" fg:w="4"/><text x="37.0898%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (4 samples, 0.01%)</title><rect x="36.8398%" y="1045" width="0.0115%" height="15" fill="rgb(223,137,36)" fg:x="12821" fg:w="4"/><text x="37.0898%" y="1055.50"></text></g><g><title>move_vm_runtime::loader::Resolver::get_field_type (4 samples, 0.01%)</title><rect x="36.9232%" y="1029" width="0.0115%" height="15" fill="rgb(226,99,2)" fg:x="12850" fg:w="4"/><text x="37.1732%" y="1039.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::post_execution_type_stack_transition (20 samples, 0.06%)</title><rect x="36.8887%" y="1045" width="0.0575%" height="15" fill="rgb(206,133,23)" fg:x="12838" fg:w="20"/><text x="37.1387%" y="1055.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop_int::{{closure}} (5 samples, 0.01%)</title><rect x="36.9519%" y="1013" width="0.0144%" height="15" fill="rgb(243,173,15)" fg:x="12860" fg:w="5"/><text x="37.2019%" y="1023.50"></text></g><g><title>core::ops::function::FnOnce::call_once (5 samples, 0.01%)</title><rect x="36.9519%" y="997" width="0.0144%" height="15" fill="rgb(228,69,28)" fg:x="12860" fg:w="5"/><text x="37.2019%" y="1007.50"></text></g><g><title>move_vm_types::values::values_impl::IntegerValue::div_checked (5 samples, 0.01%)</title><rect x="36.9519%" y="981" width="0.0144%" height="15" fill="rgb(212,51,22)" fg:x="12860" fg:w="5"/><text x="37.2019%" y="991.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop_int (9 samples, 0.03%)</title><rect x="36.9519%" y="1045" width="0.0259%" height="15" fill="rgb(227,113,0)" fg:x="12860" fg:w="9"/><text x="37.2019%" y="1055.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop (9 samples, 0.03%)</title><rect x="36.9519%" y="1029" width="0.0259%" height="15" fill="rgb(252,84,27)" fg:x="12860" fg:w="9"/><text x="37.2019%" y="1039.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop_as (4 samples, 0.01%)</title><rect x="36.9663%" y="1013" width="0.0115%" height="15" fill="rgb(223,145,39)" fg:x="12865" fg:w="4"/><text x="37.2163%" y="1023.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.01%)</title><rect x="36.9893%" y="837" width="0.0115%" height="15" fill="rgb(239,219,30)" fg:x="12873" fg:w="4"/><text x="37.2393%" y="847.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.01%)</title><rect x="36.9893%" y="821" width="0.0115%" height="15" fill="rgb(224,196,39)" fg:x="12873" fg:w="4"/><text x="37.2393%" y="831.50"></text></g><g><title>aptos_block_executor::data_cache::StorageAdapter&lt;S&gt;::get (9 samples, 0.03%)</title><rect x="36.9835%" y="981" width="0.0259%" height="15" fill="rgb(205,35,43)" fg:x="12871" fg:w="9"/><text x="37.2335%" y="991.50"></text></g><g><title>&lt;aptos_block_executor::view::LatestView&lt;T,S&gt; as aptos_state_view::TStateView&gt;::get_state_value (9 samples, 0.03%)</title><rect x="36.9835%" y="965" width="0.0259%" height="15" fill="rgb(228,201,21)" fg:x="12871" fg:w="9"/><text x="37.2335%" y="975.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (7 samples, 0.02%)</title><rect x="36.9893%" y="949" width="0.0201%" height="15" fill="rgb(237,118,16)" fg:x="12873" fg:w="7"/><text x="37.2393%" y="959.50"></text></g><g><title>&lt;aptos_block_executor::view::LatestView&lt;T,S&gt; as aptos_state_view::TStateView&gt;::get_state_value::{{closure}} (7 samples, 0.02%)</title><rect x="36.9893%" y="933" width="0.0201%" height="15" fill="rgb(241,17,19)" fg:x="12873" fg:w="7"/><text x="37.2393%" y="943.50"></text></g><g><title>&lt;R as aptos_state_view::TStateView&gt;::get_state_value (7 samples, 0.02%)</title><rect x="36.9893%" y="917" width="0.0201%" height="15" fill="rgb(214,10,25)" fg:x="12873" fg:w="7"/><text x="37.2393%" y="927.50"></text></g><g><title>&lt;aptos_block_executor::cached_state_view::CachedStateView as aptos_state_view::TStateView&gt;::get_state_value (7 samples, 0.02%)</title><rect x="36.9893%" y="901" width="0.0201%" height="15" fill="rgb(238,37,29)" fg:x="12873" fg:w="7"/><text x="37.2393%" y="911.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (7 samples, 0.02%)</title><rect x="36.9893%" y="885" width="0.0201%" height="15" fill="rgb(253,83,25)" fg:x="12873" fg:w="7"/><text x="37.2393%" y="895.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (7 samples, 0.02%)</title><rect x="36.9893%" y="869" width="0.0201%" height="15" fill="rgb(234,192,12)" fg:x="12873" fg:w="7"/><text x="37.2393%" y="879.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (7 samples, 0.02%)</title><rect x="36.9893%" y="853" width="0.0201%" height="15" fill="rgb(241,216,45)" fg:x="12873" fg:w="7"/><text x="37.2393%" y="863.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.01%)</title><rect x="37.0151%" y="597" width="0.0144%" height="15" fill="rgb(242,22,33)" fg:x="12882" fg:w="5"/><text x="37.2651%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (5 samples, 0.01%)</title><rect x="37.0151%" y="581" width="0.0144%" height="15" fill="rgb(231,105,49)" fg:x="12882" fg:w="5"/><text x="37.2651%" y="591.50"></text></g><g><title>alloc::alloc::Global::grow_impl (5 samples, 0.01%)</title><rect x="37.0151%" y="565" width="0.0144%" height="15" fill="rgb(218,204,15)" fg:x="12882" fg:w="5"/><text x="37.2651%" y="575.50"></text></g><g><title>alloc::alloc::realloc (5 samples, 0.01%)</title><rect x="37.0151%" y="549" width="0.0144%" height="15" fill="rgb(235,138,41)" fg:x="12882" fg:w="5"/><text x="37.2651%" y="559.50"></text></g><g><title>rallocx (4 samples, 0.01%)</title><rect x="37.0180%" y="533" width="0.0115%" height="15" fill="rgb(246,0,9)" fg:x="12883" fg:w="4"/><text x="37.2680%" y="543.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (6 samples, 0.02%)</title><rect x="37.0151%" y="837" width="0.0172%" height="15" fill="rgb(210,74,4)" fg:x="12882" fg:w="6"/><text x="37.2651%" y="847.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (6 samples, 0.02%)</title><rect x="37.0151%" y="821" width="0.0172%" height="15" fill="rgb(250,60,41)" fg:x="12882" fg:w="6"/><text x="37.2651%" y="831.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (6 samples, 0.02%)</title><rect x="37.0151%" y="805" width="0.0172%" height="15" fill="rgb(220,115,12)" fg:x="12882" fg:w="6"/><text x="37.2651%" y="815.50"></text></g><g><title> 32]&gt;::serialize (6 samples, 0.02%)</title><rect x="37.0151%" y="789" width="0.0172%" height="15" fill="rgb(237,100,13)" fg:x="12882" fg:w="6"/><text x="37.2651%" y="799.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (6 samples, 0.02%)</title><rect x="37.0151%" y="773" width="0.0172%" height="15" fill="rgb(213,55,26)" fg:x="12882" fg:w="6"/><text x="37.2651%" y="783.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (6 samples, 0.02%)</title><rect x="37.0151%" y="757" width="0.0172%" height="15" fill="rgb(216,17,4)" fg:x="12882" fg:w="6"/><text x="37.2651%" y="767.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (6 samples, 0.02%)</title><rect x="37.0151%" y="741" width="0.0172%" height="15" fill="rgb(220,153,47)" fg:x="12882" fg:w="6"/><text x="37.2651%" y="751.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (6 samples, 0.02%)</title><rect x="37.0151%" y="725" width="0.0172%" height="15" fill="rgb(215,131,9)" fg:x="12882" fg:w="6"/><text x="37.2651%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (6 samples, 0.02%)</title><rect x="37.0151%" y="709" width="0.0172%" height="15" fill="rgb(233,46,42)" fg:x="12882" fg:w="6"/><text x="37.2651%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (6 samples, 0.02%)</title><rect x="37.0151%" y="693" width="0.0172%" height="15" fill="rgb(226,86,7)" fg:x="12882" fg:w="6"/><text x="37.2651%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (6 samples, 0.02%)</title><rect x="37.0151%" y="677" width="0.0172%" height="15" fill="rgb(239,226,21)" fg:x="12882" fg:w="6"/><text x="37.2651%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (6 samples, 0.02%)</title><rect x="37.0151%" y="661" width="0.0172%" height="15" fill="rgb(244,137,22)" fg:x="12882" fg:w="6"/><text x="37.2651%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.02%)</title><rect x="37.0151%" y="645" width="0.0172%" height="15" fill="rgb(211,139,35)" fg:x="12882" fg:w="6"/><text x="37.2651%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.02%)</title><rect x="37.0151%" y="629" width="0.0172%" height="15" fill="rgb(214,62,50)" fg:x="12882" fg:w="6"/><text x="37.2651%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 0.02%)</title><rect x="37.0151%" y="613" width="0.0172%" height="15" fill="rgb(212,113,44)" fg:x="12882" fg:w="6"/><text x="37.2651%" y="623.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_path_vec (12 samples, 0.03%)</title><rect x="37.0094%" y="949" width="0.0345%" height="15" fill="rgb(226,150,43)" fg:x="12880" fg:w="12"/><text x="37.2594%" y="959.50"></text></g><g><title>bcs::ser::to_bytes (12 samples, 0.03%)</title><rect x="37.0094%" y="933" width="0.0345%" height="15" fill="rgb(250,71,37)" fg:x="12880" fg:w="12"/><text x="37.2594%" y="943.50"></text></g><g><title>bcs::ser::serialize_into (12 samples, 0.03%)</title><rect x="37.0094%" y="917" width="0.0345%" height="15" fill="rgb(219,76,19)" fg:x="12880" fg:w="12"/><text x="37.2594%" y="927.50"></text></g><g><title>aptos_types::access_path::_::&lt;impl serde::ser::Serialize for aptos_types::access_path::Path&gt;::serialize (12 samples, 0.03%)</title><rect x="37.0094%" y="901" width="0.0345%" height="15" fill="rgb(250,39,11)" fg:x="12880" fg:w="12"/><text x="37.2594%" y="911.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (10 samples, 0.03%)</title><rect x="37.0151%" y="885" width="0.0287%" height="15" fill="rgb(230,64,31)" fg:x="12882" fg:w="10"/><text x="37.2651%" y="895.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::StructTag&gt;::serialize (10 samples, 0.03%)</title><rect x="37.0151%" y="869" width="0.0287%" height="15" fill="rgb(208,222,23)" fg:x="12882" fg:w="10"/><text x="37.2651%" y="879.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (10 samples, 0.03%)</title><rect x="37.0151%" y="853" width="0.0287%" height="15" fill="rgb(227,125,18)" fg:x="12882" fg:w="10"/><text x="37.2651%" y="863.50"></text></g><g><title>&lt;aptos_block_executor::data_cache::StorageAdapter&lt;S&gt; as move_core_types::resolver::ResourceResolver&gt;::get_resource (23 samples, 0.07%)</title><rect x="36.9806%" y="997" width="0.0661%" height="15" fill="rgb(234,210,9)" fg:x="12870" fg:w="23"/><text x="37.2306%" y="1007.50"></text></g><g><title>aptos_block_executor::data_cache::create_access_path (13 samples, 0.04%)</title><rect x="37.0094%" y="981" width="0.0374%" height="15" fill="rgb(217,127,24)" fg:x="12880" fg:w="13"/><text x="37.2594%" y="991.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_access_path (13 samples, 0.04%)</title><rect x="37.0094%" y="965" width="0.0374%" height="15" fill="rgb(239,141,48)" fg:x="12880" fg:w="13"/><text x="37.2594%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_core_types::language_storage::StructTag&gt;&gt; (4 samples, 0.01%)</title><rect x="37.0496%" y="997" width="0.0115%" height="15" fill="rgb(227,109,8)" fg:x="12894" fg:w="4"/><text x="37.2996%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::StructTag&gt; (4 samples, 0.01%)</title><rect x="37.0496%" y="981" width="0.0115%" height="15" fill="rgb(235,184,23)" fg:x="12894" fg:w="4"/><text x="37.2996%" y="991.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout (7 samples, 0.02%)</title><rect x="37.0697%" y="997" width="0.0201%" height="15" fill="rgb(227,226,48)" fg:x="12901" fg:w="7"/><text x="37.3197%" y="1007.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout_impl (7 samples, 0.02%)</title><rect x="37.0697%" y="981" width="0.0201%" height="15" fill="rgb(206,150,11)" fg:x="12901" fg:w="7"/><text x="37.3197%" y="991.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_layout (7 samples, 0.02%)</title><rect x="37.0697%" y="965" width="0.0201%" height="15" fill="rgb(254,2,33)" fg:x="12901" fg:w="7"/><text x="37.3197%" y="975.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (5 samples, 0.01%)</title><rect x="37.0898%" y="965" width="0.0144%" height="15" fill="rgb(243,160,20)" fg:x="12908" fg:w="5"/><text x="37.3398%" y="975.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag (9 samples, 0.03%)</title><rect x="37.0898%" y="997" width="0.0259%" height="15" fill="rgb(218,208,30)" fg:x="12908" fg:w="9"/><text x="37.3398%" y="1007.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag_impl (9 samples, 0.03%)</title><rect x="37.0898%" y="981" width="0.0259%" height="15" fill="rgb(224,120,49)" fg:x="12908" fg:w="9"/><text x="37.3398%" y="991.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_tag (4 samples, 0.01%)</title><rect x="37.1042%" y="965" width="0.0115%" height="15" fill="rgb(246,12,2)" fg:x="12913" fg:w="4"/><text x="37.3542%" y="975.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (4 samples, 0.01%)</title><rect x="37.1186%" y="933" width="0.0115%" height="15" fill="rgb(236,117,3)" fg:x="12918" fg:w="4"/><text x="37.3686%" y="943.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (4 samples, 0.01%)</title><rect x="37.1186%" y="917" width="0.0115%" height="15" fill="rgb(216,128,52)" fg:x="12918" fg:w="4"/><text x="37.3686%" y="927.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (6 samples, 0.02%)</title><rect x="37.1186%" y="949" width="0.0172%" height="15" fill="rgb(246,145,19)" fg:x="12918" fg:w="6"/><text x="37.3686%" y="959.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::load_resource (56 samples, 0.16%)</title><rect x="36.9778%" y="1029" width="0.1609%" height="15" fill="rgb(222,11,46)" fg:x="12869" fg:w="56"/><text x="37.2278%" y="1039.50"></text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_resource (55 samples, 0.16%)</title><rect x="36.9806%" y="1013" width="0.1580%" height="15" fill="rgb(245,82,36)" fg:x="12870" fg:w="55"/><text x="37.2306%" y="1023.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (7 samples, 0.02%)</title><rect x="37.1186%" y="997" width="0.0201%" height="15" fill="rgb(250,73,51)" fg:x="12918" fg:w="7"/><text x="37.3686%" y="1007.50"></text></g><g><title>bcs::de::from_bytes_seed (7 samples, 0.02%)</title><rect x="37.1186%" y="981" width="0.0201%" height="15" fill="rgb(221,189,23)" fg:x="12918" fg:w="7"/><text x="37.3686%" y="991.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (7 samples, 0.02%)</title><rect x="37.1186%" y="965" width="0.0201%" height="15" fill="rgb(210,33,7)" fg:x="12918" fg:w="7"/><text x="37.3686%" y="975.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::borrow_global (58 samples, 0.17%)</title><rect x="36.9778%" y="1045" width="0.1667%" height="15" fill="rgb(210,107,22)" fg:x="12869" fg:w="58"/><text x="37.2278%" y="1055.50"></text></g><g><title>bcs::de::from_bytes_seed (12 samples, 0.03%)</title><rect x="37.1703%" y="1013" width="0.0345%" height="15" fill="rgb(222,116,37)" fg:x="12936" fg:w="12"/><text x="37.4203%" y="1023.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (10 samples, 0.03%)</title><rect x="37.1760%" y="997" width="0.0287%" height="15" fill="rgb(254,17,48)" fg:x="12938" fg:w="10"/><text x="37.4260%" y="1007.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize (10 samples, 0.03%)</title><rect x="37.1760%" y="981" width="0.0287%" height="15" fill="rgb(224,36,32)" fg:x="12938" fg:w="10"/><text x="37.4260%" y="991.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize (10 samples, 0.03%)</title><rect x="37.1760%" y="965" width="0.0287%" height="15" fill="rgb(232,90,46)" fg:x="12938" fg:w="10"/><text x="37.4260%" y="975.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (10 samples, 0.03%)</title><rect x="37.1760%" y="949" width="0.0287%" height="15" fill="rgb(241,66,40)" fg:x="12938" fg:w="10"/><text x="37.4260%" y="959.50"></text></g><g><title>&lt;&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (10 samples, 0.03%)</title><rect x="37.1760%" y="933" width="0.0287%" height="15" fill="rgb(249,184,29)" fg:x="12938" fg:w="10"/><text x="37.4260%" y="943.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for [T (10 samples, 0.03%)</title><rect x="37.1760%" y="917" width="0.0287%" height="15" fill="rgb(231,181,1)" fg:x="12938" fg:w="10"/><text x="37.4260%" y="927.50"></text></g><g><title> 32]&gt;::deserialize (10 samples, 0.03%)</title><rect x="37.1760%" y="901" width="0.0287%" height="15" fill="rgb(224,94,2)" fg:x="12938" fg:w="10"/><text x="37.4260%" y="911.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (10 samples, 0.03%)</title><rect x="37.1760%" y="885" width="0.0287%" height="15" fill="rgb(229,170,15)" fg:x="12938" fg:w="10"/><text x="37.4260%" y="895.50"></text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T (10 samples, 0.03%)</title><rect x="37.1760%" y="869" width="0.0287%" height="15" fill="rgb(240,127,35)" fg:x="12938" fg:w="10"/><text x="37.4260%" y="879.50"></text></g><g><title> 32]&gt; as serde::de::Visitor&gt;::visit_seq (10 samples, 0.03%)</title><rect x="37.1760%" y="853" width="0.0287%" height="15" fill="rgb(248,196,34)" fg:x="12938" fg:w="10"/><text x="37.4260%" y="863.50"></text></g><g><title>serde::de::SeqAccess::next_element (8 samples, 0.02%)</title><rect x="37.1818%" y="837" width="0.0230%" height="15" fill="rgb(236,137,7)" fg:x="12940" fg:w="8"/><text x="37.4318%" y="847.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (8 samples, 0.02%)</title><rect x="37.1818%" y="821" width="0.0230%" height="15" fill="rgb(235,127,16)" fg:x="12940" fg:w="8"/><text x="37.4318%" y="831.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (8 samples, 0.02%)</title><rect x="37.1818%" y="805" width="0.0230%" height="15" fill="rgb(250,192,54)" fg:x="12940" fg:w="8"/><text x="37.4318%" y="815.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (8 samples, 0.02%)</title><rect x="37.1818%" y="789" width="0.0230%" height="15" fill="rgb(218,98,20)" fg:x="12940" fg:w="8"/><text x="37.4318%" y="799.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u8 (8 samples, 0.02%)</title><rect x="37.1818%" y="773" width="0.0230%" height="15" fill="rgb(230,176,47)" fg:x="12940" fg:w="8"/><text x="37.4318%" y="783.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::execute_code (125 samples, 0.36%)</title><rect x="36.8513%" y="1077" width="0.3592%" height="15" fill="rgb(244,2,33)" fg:x="12825" fg:w="125"/><text x="37.1013%" y="1087.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::execute_code_impl (125 samples, 0.36%)</title><rect x="36.8513%" y="1061" width="0.3592%" height="15" fill="rgb(231,100,17)" fg:x="12825" fg:w="125"/><text x="37.1013%" y="1071.50"></text></g><g><title>move_vm_types::values::values_impl::Value::deserialize_constant (16 samples, 0.05%)</title><rect x="37.1645%" y="1045" width="0.0460%" height="15" fill="rgb(245,23,12)" fg:x="12934" fg:w="16"/><text x="37.4145%" y="1055.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (14 samples, 0.04%)</title><rect x="37.1703%" y="1029" width="0.0402%" height="15" fill="rgb(249,55,22)" fg:x="12936" fg:w="14"/><text x="37.4203%" y="1039.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::resolver (7 samples, 0.02%)</title><rect x="37.2105%" y="1077" width="0.0201%" height="15" fill="rgb(207,134,9)" fg:x="12950" fg:w="7"/><text x="37.4605%" y="1087.50"></text></g><g><title>move_vm_runtime::loader::Function::get_resolver (7 samples, 0.02%)</title><rect x="37.2105%" y="1061" width="0.0201%" height="15" fill="rgb(218,134,0)" fg:x="12950" fg:w="7"/><text x="37.4605%" y="1071.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_module (7 samples, 0.02%)</title><rect x="37.2105%" y="1045" width="0.0201%" height="15" fill="rgb(213,212,33)" fg:x="12950" fg:w="7"/><text x="37.4605%" y="1055.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (7 samples, 0.02%)</title><rect x="37.2105%" y="1029" width="0.0201%" height="15" fill="rgb(252,106,18)" fg:x="12950" fg:w="7"/><text x="37.4605%" y="1039.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (7 samples, 0.02%)</title><rect x="37.2105%" y="1013" width="0.0201%" height="15" fill="rgb(208,126,42)" fg:x="12950" fg:w="7"/><text x="37.4605%" y="1023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (7 samples, 0.02%)</title><rect x="37.2105%" y="997" width="0.0201%" height="15" fill="rgb(246,175,29)" fg:x="12950" fg:w="7"/><text x="37.4605%" y="1007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (7 samples, 0.02%)</title><rect x="37.2105%" y="981" width="0.0201%" height="15" fill="rgb(215,13,50)" fg:x="12950" fg:w="7"/><text x="37.4605%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (5 samples, 0.01%)</title><rect x="37.2163%" y="965" width="0.0144%" height="15" fill="rgb(216,172,15)" fg:x="12952" fg:w="5"/><text x="37.4663%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5 samples, 0.01%)</title><rect x="37.2163%" y="949" width="0.0144%" height="15" fill="rgb(212,103,13)" fg:x="12952" fg:w="5"/><text x="37.4663%" y="959.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (5 samples, 0.01%)</title><rect x="37.2163%" y="933" width="0.0144%" height="15" fill="rgb(231,171,36)" fg:x="12952" fg:w="5"/><text x="37.4663%" y="943.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (5 samples, 0.01%)</title><rect x="37.2163%" y="917" width="0.0144%" height="15" fill="rgb(250,123,20)" fg:x="12952" fg:w="5"/><text x="37.4663%" y="927.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (5 samples, 0.01%)</title><rect x="37.2163%" y="901" width="0.0144%" height="15" fill="rgb(212,53,50)" fg:x="12952" fg:w="5"/><text x="37.4663%" y="911.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::make_call_frame (6 samples, 0.02%)</title><rect x="37.2364%" y="1077" width="0.0172%" height="15" fill="rgb(243,54,12)" fg:x="12959" fg:w="6"/><text x="37.4864%" y="1087.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::entrypoint (168 samples, 0.48%)</title><rect x="36.7939%" y="1109" width="0.4827%" height="15" fill="rgb(234,101,34)" fg:x="12805" fg:w="168"/><text x="37.0439%" y="1119.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::execute_main (168 samples, 0.48%)</title><rect x="36.7939%" y="1093" width="0.4827%" height="15" fill="rgb(254,67,22)" fg:x="12805" fg:w="168"/><text x="37.0439%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="37.2852%" y="965" width="0.0115%" height="15" fill="rgb(250,35,47)" fg:x="12976" fg:w="4"/><text x="37.5352%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (4 samples, 0.01%)</title><rect x="37.2852%" y="949" width="0.0115%" height="15" fill="rgb(226,126,38)" fg:x="12976" fg:w="4"/><text x="37.5352%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.01%)</title><rect x="37.2852%" y="933" width="0.0115%" height="15" fill="rgb(216,138,53)" fg:x="12976" fg:w="4"/><text x="37.5352%" y="943.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::serialize_return_values (7 samples, 0.02%)</title><rect x="37.2823%" y="1109" width="0.0201%" height="15" fill="rgb(246,199,43)" fg:x="12975" fg:w="7"/><text x="37.5323%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (7 samples, 0.02%)</title><rect x="37.2823%" y="1093" width="0.0201%" height="15" fill="rgb(232,125,11)" fg:x="12975" fg:w="7"/><text x="37.5323%" y="1103.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (7 samples, 0.02%)</title><rect x="37.2823%" y="1077" width="0.0201%" height="15" fill="rgb(218,219,45)" fg:x="12975" fg:w="7"/><text x="37.5323%" y="1087.50"></text></g><g><title>core::iter::adapters::try_process (7 samples, 0.02%)</title><rect x="37.2823%" y="1061" width="0.0201%" height="15" fill="rgb(216,102,54)" fg:x="12975" fg:w="7"/><text x="37.5323%" y="1071.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (7 samples, 0.02%)</title><rect x="37.2823%" y="1045" width="0.0201%" height="15" fill="rgb(250,228,7)" fg:x="12975" fg:w="7"/><text x="37.5323%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (7 samples, 0.02%)</title><rect x="37.2823%" y="1029" width="0.0201%" height="15" fill="rgb(226,125,25)" fg:x="12975" fg:w="7"/><text x="37.5323%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (7 samples, 0.02%)</title><rect x="37.2823%" y="1013" width="0.0201%" height="15" fill="rgb(224,165,27)" fg:x="12975" fg:w="7"/><text x="37.5323%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 0.02%)</title><rect x="37.2823%" y="997" width="0.0201%" height="15" fill="rgb(233,86,3)" fg:x="12975" fg:w="7"/><text x="37.5323%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (7 samples, 0.02%)</title><rect x="37.2823%" y="981" width="0.0201%" height="15" fill="rgb(228,116,20)" fg:x="12975" fg:w="7"/><text x="37.5323%" y="991.50"></text></g><g><title>aptos_block_executor::evm_context_loader::ContextView&lt;S&gt;::view_framework (286 samples, 0.82%)</title><rect x="36.4835%" y="1173" width="0.8218%" height="15" fill="rgb(209,192,17)" fg:x="12697" fg:w="286"/><text x="36.7335%" y="1183.50"></text></g><g><title>move_vm_runtime::session::Session&lt;S&gt;::execute_function_bypass_visibility (213 samples, 0.61%)</title><rect x="36.6933%" y="1157" width="0.6120%" height="15" fill="rgb(224,88,34)" fg:x="12770" fg:w="213"/><text x="36.9433%" y="1167.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function (213 samples, 0.61%)</title><rect x="36.6933%" y="1141" width="0.6120%" height="15" fill="rgb(233,38,6)" fg:x="12770" fg:w="213"/><text x="36.9433%" y="1151.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function_impl (185 samples, 0.53%)</title><rect x="36.7737%" y="1125" width="0.5316%" height="15" fill="rgb(212,59,30)" fg:x="12798" fg:w="185"/><text x="37.0237%" y="1135.50"></text></g><g><title>&lt;aptos_block_executor::evm_context_loader::ContextView&lt;S&gt; as aptos_evm::context::ContextReader&gt;::get_timestamp (291 samples, 0.84%)</title><rect x="36.4720%" y="1189" width="0.8362%" height="15" fill="rgb(213,80,3)" fg:x="12693" fg:w="291"/><text x="36.7220%" y="1199.50"></text></g><g><title>aptos_evm::machine::EvmMachine::make_context (784 samples, 2.25%)</title><rect x="35.0641%" y="1221" width="2.2527%" height="15" fill="rgb(251,178,7)" fg:x="12203" fg:w="784"/><text x="35.3141%" y="1231.50">a..</text></g><g><title>aptos_evm::context::EvmContext::make_for_new_block (784 samples, 2.25%)</title><rect x="35.0641%" y="1205" width="2.2527%" height="15" fill="rgb(213,154,26)" fg:x="12203" fg:w="784"/><text x="35.3141%" y="1215.50">a..</text></g><g><title>aptos_evm::make_executor (4 samples, 0.01%)</title><rect x="37.3168%" y="1221" width="0.0115%" height="15" fill="rgb(238,165,49)" fg:x="12987" fg:w="4"/><text x="37.5668%" y="1231.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (8 samples, 0.02%)</title><rect x="37.3369%" y="1205" width="0.0230%" height="15" fill="rgb(248,91,46)" fg:x="12994" fg:w="8"/><text x="37.5869%" y="1215.50"></text></g><g><title>&lt;aptos_types::transaction::TransactionStatus as core::convert::From&lt;move_core_types::vm_status::VMStatus&gt;&gt;::from (6 samples, 0.02%)</title><rect x="37.3427%" y="1189" width="0.0172%" height="15" fill="rgb(244,21,52)" fg:x="12996" fg:w="6"/><text x="37.5927%" y="1199.50"></text></g><g><title>aptos_evm::outcome::convert_exeuction_outcome (15 samples, 0.04%)</title><rect x="37.3283%" y="1221" width="0.0431%" height="15" fill="rgb(247,122,20)" fg:x="12991" fg:w="15"/><text x="37.5783%" y="1231.50"></text></g><g><title>aptos_evm::outcome::&lt;impl core::convert::Into&lt;aptos_evm::outcome::ConvertedOutcome&gt; for &amp;cfx_evm::execution::executed::ExecutionOutcome&gt;::into (4 samples, 0.01%)</title><rect x="37.3599%" y="1205" width="0.0115%" height="15" fill="rgb(218,27,9)" fg:x="13002" fg:w="4"/><text x="37.6099%" y="1215.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.01%)</title><rect x="37.4260%" y="965" width="0.0115%" height="15" fill="rgb(246,7,6)" fg:x="13025" fg:w="4"/><text x="37.6760%" y="975.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.01%)</title><rect x="37.4260%" y="949" width="0.0115%" height="15" fill="rgb(227,135,54)" fg:x="13025" fg:w="4"/><text x="37.6760%" y="959.50"></text></g><g><title>&lt;R as aptos_state_view::TStateView&gt;::get_state_value (13 samples, 0.04%)</title><rect x="37.4145%" y="1109" width="0.0374%" height="15" fill="rgb(247,14,11)" fg:x="13021" fg:w="13"/><text x="37.6645%" y="1119.50"></text></g><g><title>&lt;aptos_block_executor::view::LatestView&lt;T,S&gt; as aptos_state_view::TStateView&gt;::get_state_value (13 samples, 0.04%)</title><rect x="37.4145%" y="1093" width="0.0374%" height="15" fill="rgb(206,149,34)" fg:x="13021" fg:w="13"/><text x="37.6645%" y="1103.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (11 samples, 0.03%)</title><rect x="37.4203%" y="1077" width="0.0316%" height="15" fill="rgb(227,228,4)" fg:x="13023" fg:w="11"/><text x="37.6703%" y="1087.50"></text></g><g><title>&lt;aptos_block_executor::view::LatestView&lt;T,S&gt; as aptos_state_view::TStateView&gt;::get_state_value::{{closure}} (11 samples, 0.03%)</title><rect x="37.4203%" y="1061" width="0.0316%" height="15" fill="rgb(238,218,28)" fg:x="13023" fg:w="11"/><text x="37.6703%" y="1071.50"></text></g><g><title>&lt;R as aptos_state_view::TStateView&gt;::get_state_value (11 samples, 0.03%)</title><rect x="37.4203%" y="1045" width="0.0316%" height="15" fill="rgb(252,86,40)" fg:x="13023" fg:w="11"/><text x="37.6703%" y="1055.50"></text></g><g><title>&lt;aptos_block_executor::cached_state_view::CachedStateView as aptos_state_view::TStateView&gt;::get_state_value (9 samples, 0.03%)</title><rect x="37.4260%" y="1029" width="0.0259%" height="15" fill="rgb(251,225,11)" fg:x="13025" fg:w="9"/><text x="37.6760%" y="1039.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (9 samples, 0.03%)</title><rect x="37.4260%" y="1013" width="0.0259%" height="15" fill="rgb(206,46,49)" fg:x="13025" fg:w="9"/><text x="37.6760%" y="1023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (9 samples, 0.03%)</title><rect x="37.4260%" y="997" width="0.0259%" height="15" fill="rgb(245,128,24)" fg:x="13025" fg:w="9"/><text x="37.6760%" y="1007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (9 samples, 0.03%)</title><rect x="37.4260%" y="981" width="0.0259%" height="15" fill="rgb(219,177,34)" fg:x="13025" fg:w="9"/><text x="37.6760%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (5 samples, 0.01%)</title><rect x="37.4375%" y="965" width="0.0144%" height="15" fill="rgb(218,60,48)" fg:x="13029" fg:w="5"/><text x="37.6875%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5 samples, 0.01%)</title><rect x="37.4375%" y="949" width="0.0144%" height="15" fill="rgb(221,11,5)" fg:x="13029" fg:w="5"/><text x="37.6875%" y="959.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (5 samples, 0.01%)</title><rect x="37.4375%" y="933" width="0.0144%" height="15" fill="rgb(220,148,13)" fg:x="13029" fg:w="5"/><text x="37.6875%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (5 samples, 0.01%)</title><rect x="37.4375%" y="917" width="0.0144%" height="15" fill="rgb(210,16,3)" fg:x="13029" fg:w="5"/><text x="37.6875%" y="927.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (5 samples, 0.01%)</title><rect x="37.4375%" y="901" width="0.0144%" height="15" fill="rgb(236,80,2)" fg:x="13029" fg:w="5"/><text x="37.6875%" y="911.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (5 samples, 0.01%)</title><rect x="37.4375%" y="885" width="0.0144%" height="15" fill="rgb(239,129,19)" fg:x="13029" fg:w="5"/><text x="37.6875%" y="895.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (5 samples, 0.01%)</title><rect x="37.4375%" y="869" width="0.0144%" height="15" fill="rgb(220,106,35)" fg:x="13029" fg:w="5"/><text x="37.6875%" y="879.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::cmp::PartialEq&gt;::eq (5 samples, 0.01%)</title><rect x="37.4375%" y="853" width="0.0144%" height="15" fill="rgb(252,139,45)" fg:x="13029" fg:w="5"/><text x="37.6875%" y="863.50"></text></g><g><title>aptos_types::access_path::_::&lt;impl serde::ser::Serialize for aptos_types::access_path::EvmPath&gt;::serialize (8 samples, 0.02%)</title><rect x="37.4547%" y="981" width="0.0230%" height="15" fill="rgb(229,8,36)" fg:x="13035" fg:w="8"/><text x="37.7047%" y="991.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (8 samples, 0.02%)</title><rect x="37.4547%" y="965" width="0.0230%" height="15" fill="rgb(230,126,33)" fg:x="13035" fg:w="8"/><text x="37.7047%" y="975.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (5 samples, 0.01%)</title><rect x="37.4634%" y="949" width="0.0144%" height="15" fill="rgb(239,140,21)" fg:x="13038" fg:w="5"/><text x="37.7134%" y="959.50"></text></g><g><title>serde::ser::Serializer::collect_seq (5 samples, 0.01%)</title><rect x="37.4634%" y="933" width="0.0144%" height="15" fill="rgb(254,104,9)" fg:x="13038" fg:w="5"/><text x="37.7134%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (5 samples, 0.01%)</title><rect x="37.4634%" y="917" width="0.0144%" height="15" fill="rgb(239,52,14)" fg:x="13038" fg:w="5"/><text x="37.7134%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.01%)</title><rect x="37.4634%" y="901" width="0.0144%" height="15" fill="rgb(208,227,44)" fg:x="13038" fg:w="5"/><text x="37.7134%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (5 samples, 0.01%)</title><rect x="37.4634%" y="885" width="0.0144%" height="15" fill="rgb(246,18,19)" fg:x="13038" fg:w="5"/><text x="37.7134%" y="895.50"></text></g><g><title>serde::ser::Serializer::collect_seq::{{closure}} (5 samples, 0.01%)</title><rect x="37.4634%" y="869" width="0.0144%" height="15" fill="rgb(235,228,25)" fg:x="13038" fg:w="5"/><text x="37.7134%" y="879.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeSeq&gt;::serialize_element (5 samples, 0.01%)</title><rect x="37.4634%" y="853" width="0.0144%" height="15" fill="rgb(240,156,20)" fg:x="13038" fg:w="5"/><text x="37.7134%" y="863.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.01%)</title><rect x="37.4634%" y="837" width="0.0144%" height="15" fill="rgb(224,8,20)" fg:x="13038" fg:w="5"/><text x="37.7134%" y="847.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (5 samples, 0.01%)</title><rect x="37.4634%" y="821" width="0.0144%" height="15" fill="rgb(214,12,52)" fg:x="13038" fg:w="5"/><text x="37.7134%" y="831.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (5 samples, 0.01%)</title><rect x="37.4634%" y="805" width="0.0144%" height="15" fill="rgb(211,220,47)" fg:x="13038" fg:w="5"/><text x="37.7134%" y="815.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (5 samples, 0.01%)</title><rect x="37.4634%" y="789" width="0.0144%" height="15" fill="rgb(250,173,5)" fg:x="13038" fg:w="5"/><text x="37.7134%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (5 samples, 0.01%)</title><rect x="37.4634%" y="773" width="0.0144%" height="15" fill="rgb(250,125,52)" fg:x="13038" fg:w="5"/><text x="37.7134%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (5 samples, 0.01%)</title><rect x="37.4634%" y="757" width="0.0144%" height="15" fill="rgb(209,133,18)" fg:x="13038" fg:w="5"/><text x="37.7134%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (5 samples, 0.01%)</title><rect x="37.4634%" y="741" width="0.0144%" height="15" fill="rgb(216,173,22)" fg:x="13038" fg:w="5"/><text x="37.7134%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (5 samples, 0.01%)</title><rect x="37.4634%" y="725" width="0.0144%" height="15" fill="rgb(205,3,22)" fg:x="13038" fg:w="5"/><text x="37.7134%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5 samples, 0.01%)</title><rect x="37.4634%" y="709" width="0.0144%" height="15" fill="rgb(248,22,20)" fg:x="13038" fg:w="5"/><text x="37.7134%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.01%)</title><rect x="37.4634%" y="693" width="0.0144%" height="15" fill="rgb(233,6,29)" fg:x="13038" fg:w="5"/><text x="37.7134%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.01%)</title><rect x="37.4634%" y="677" width="0.0144%" height="15" fill="rgb(240,22,54)" fg:x="13038" fg:w="5"/><text x="37.7134%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.01%)</title><rect x="37.4662%" y="661" width="0.0115%" height="15" fill="rgb(231,133,32)" fg:x="13039" fg:w="4"/><text x="37.7162%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (4 samples, 0.01%)</title><rect x="37.4662%" y="645" width="0.0115%" height="15" fill="rgb(248,193,4)" fg:x="13039" fg:w="4"/><text x="37.7162%" y="655.50"></text></g><g><title>alloc::alloc::Global::grow_impl (4 samples, 0.01%)</title><rect x="37.4662%" y="629" width="0.0115%" height="15" fill="rgb(211,178,46)" fg:x="13039" fg:w="4"/><text x="37.7162%" y="639.50"></text></g><g><title>alloc::alloc::realloc (4 samples, 0.01%)</title><rect x="37.4662%" y="613" width="0.0115%" height="15" fill="rgb(224,5,42)" fg:x="13039" fg:w="4"/><text x="37.7162%" y="623.50"></text></g><g><title>rallocx (4 samples, 0.01%)</title><rect x="37.4662%" y="597" width="0.0115%" height="15" fill="rgb(239,176,25)" fg:x="13039" fg:w="4"/><text x="37.7162%" y="607.50"></text></g><g><title>&lt;cfx_storage::StorageKeyWrapper&lt;T,Key&gt; as cfx_storage::StorageTrait&gt;::get (24 samples, 0.07%)</title><rect x="37.4145%" y="1141" width="0.0690%" height="15" fill="rgb(245,187,50)" fg:x="13021" fg:w="24"/><text x="37.6645%" y="1151.50"></text></g><g><title>&lt;&amp;mut aptos_evm::state::ViewWrapper&lt;S&gt; as cfx_storage::StorageTrait&gt;::get (24 samples, 0.07%)</title><rect x="37.4145%" y="1125" width="0.0690%" height="15" fill="rgb(248,24,15)" fg:x="13021" fg:w="24"/><text x="37.6645%" y="1135.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (11 samples, 0.03%)</title><rect x="37.4519%" y="1109" width="0.0316%" height="15" fill="rgb(205,166,13)" fg:x="13034" fg:w="11"/><text x="37.7019%" y="1119.50"></text></g><g><title>aptos_evm::storage_key::&lt;impl core::convert::From&lt;aptos_evm::storage_key::StorageKey&gt; for aptos_types::state_store::state_key::StateKey&gt;::from (11 samples, 0.03%)</title><rect x="37.4519%" y="1093" width="0.0316%" height="15" fill="rgb(208,114,23)" fg:x="13034" fg:w="11"/><text x="37.7019%" y="1103.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (11 samples, 0.03%)</title><rect x="37.4519%" y="1077" width="0.0316%" height="15" fill="rgb(239,127,18)" fg:x="13034" fg:w="11"/><text x="37.7019%" y="1087.50"></text></g><g><title>aptos_evm::storage_key::&lt;impl core::convert::From&lt;aptos_evm::storage_key::StorageKey&gt; for aptos_types::access_path::AccessPath&gt;::from (11 samples, 0.03%)</title><rect x="37.4519%" y="1061" width="0.0316%" height="15" fill="rgb(219,154,28)" fg:x="13034" fg:w="11"/><text x="37.7019%" y="1071.50"></text></g><g><title>bcs::ser::to_bytes (10 samples, 0.03%)</title><rect x="37.4547%" y="1045" width="0.0287%" height="15" fill="rgb(225,157,23)" fg:x="13035" fg:w="10"/><text x="37.7047%" y="1055.50"></text></g><g><title>bcs::ser::serialize_into (10 samples, 0.03%)</title><rect x="37.4547%" y="1029" width="0.0287%" height="15" fill="rgb(219,8,6)" fg:x="13035" fg:w="10"/><text x="37.7047%" y="1039.50"></text></g><g><title>aptos_types::access_path::_::&lt;impl serde::ser::Serialize for aptos_types::access_path::Path&gt;::serialize (10 samples, 0.03%)</title><rect x="37.4547%" y="1013" width="0.0287%" height="15" fill="rgb(212,47,6)" fg:x="13035" fg:w="10"/><text x="37.7047%" y="1023.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (10 samples, 0.03%)</title><rect x="37.4547%" y="997" width="0.0287%" height="15" fill="rgb(224,190,4)" fg:x="13035" fg:w="10"/><text x="37.7047%" y="1007.50"></text></g><g><title>aptos_evm::state::EvmState::new_with_move_vm (40 samples, 0.11%)</title><rect x="37.3714%" y="1221" width="0.1149%" height="15" fill="rgb(239,183,29)" fg:x="13006" fg:w="40"/><text x="37.6214%" y="1231.50"></text></g><g><title>cfx_evm::state::State::new_with_move_vm (39 samples, 0.11%)</title><rect x="37.3743%" y="1205" width="0.1121%" height="15" fill="rgb(213,57,7)" fg:x="13007" fg:w="39"/><text x="37.6243%" y="1215.50"></text></g><g><title>cfx_statedb::statedb_ext::StateDbExt::get_total_issued_tokens (37 samples, 0.11%)</title><rect x="37.3800%" y="1189" width="0.1063%" height="15" fill="rgb(216,148,1)" fg:x="13009" fg:w="37"/><text x="37.6300%" y="1199.50"></text></g><g><title>cfx_statedb::statedb_ext::StateDbExt::get (28 samples, 0.08%)</title><rect x="37.4059%" y="1173" width="0.0805%" height="15" fill="rgb(236,182,29)" fg:x="13018" fg:w="28"/><text x="37.6559%" y="1183.50"></text></g><g><title>&lt;cfx_statedb::impls::StateDb as cfx_statedb::StateDbTrait&gt;::get_raw (28 samples, 0.08%)</title><rect x="37.4059%" y="1157" width="0.0805%" height="15" fill="rgb(244,120,48)" fg:x="13018" fg:w="28"/><text x="37.6559%" y="1167.50"></text></g><g><title>&lt;std::collections::hash::map::Drain&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.02%)</title><rect x="37.4864%" y="1061" width="0.0172%" height="15" fill="rgb(206,71,34)" fg:x="13046" fg:w="6"/><text x="37.7364%" y="1071.50"></text></g><g><title>&lt;hashbrown::map::Drain&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.02%)</title><rect x="37.4864%" y="1045" width="0.0172%" height="15" fill="rgb(242,32,6)" fg:x="13046" fg:w="6"/><text x="37.7364%" y="1055.50"></text></g><g><title>&lt;hashbrown::raw::RawDrain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.02%)</title><rect x="37.4864%" y="1029" width="0.0172%" height="15" fill="rgb(241,35,3)" fg:x="13046" fg:w="6"/><text x="37.7364%" y="1039.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.02%)</title><rect x="37.4864%" y="1013" width="0.0172%" height="15" fill="rgb(222,62,19)" fg:x="13046" fg:w="6"/><text x="37.7364%" y="1023.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (4 samples, 0.01%)</title><rect x="37.5208%" y="981" width="0.0115%" height="15" fill="rgb(223,110,41)" fg:x="13058" fg:w="4"/><text x="37.7708%" y="991.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (4 samples, 0.01%)</title><rect x="37.5208%" y="965" width="0.0115%" height="15" fill="rgb(208,224,4)" fg:x="13058" fg:w="4"/><text x="37.7708%" y="975.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (4 samples, 0.01%)</title><rect x="37.5208%" y="949" width="0.0115%" height="15" fill="rgb(241,137,19)" fg:x="13058" fg:w="4"/><text x="37.7708%" y="959.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (4 samples, 0.01%)</title><rect x="37.5208%" y="933" width="0.0115%" height="15" fill="rgb(244,24,17)" fg:x="13058" fg:w="4"/><text x="37.7708%" y="943.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::hash::Hash&gt;::hash (8 samples, 0.02%)</title><rect x="37.5352%" y="805" width="0.0230%" height="15" fill="rgb(245,178,49)" fg:x="13063" fg:w="8"/><text x="37.7852%" y="815.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (8 samples, 0.02%)</title><rect x="37.5352%" y="789" width="0.0230%" height="15" fill="rgb(219,160,38)" fg:x="13063" fg:w="8"/><text x="37.7852%" y="799.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T (8 samples, 0.02%)</title><rect x="37.5352%" y="773" width="0.0230%" height="15" fill="rgb(228,137,14)" fg:x="13063" fg:w="8"/><text x="37.7852%" y="783.50"></text></g><g><title> N]&gt;::hash (8 samples, 0.02%)</title><rect x="37.5352%" y="757" width="0.0230%" height="15" fill="rgb(237,134,11)" fg:x="13063" fg:w="8"/><text x="37.7852%" y="767.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (8 samples, 0.02%)</title><rect x="37.5352%" y="741" width="0.0230%" height="15" fill="rgb(211,126,44)" fg:x="13063" fg:w="8"/><text x="37.7852%" y="751.50"></text></g><g><title>core::hash::Hasher::write_length_prefix (8 samples, 0.02%)</title><rect x="37.5352%" y="725" width="0.0230%" height="15" fill="rgb(226,171,33)" fg:x="13063" fg:w="8"/><text x="37.7852%" y="735.50"></text></g><g><title>core::hash::Hasher::write_usize (8 samples, 0.02%)</title><rect x="37.5352%" y="709" width="0.0230%" height="15" fill="rgb(253,99,13)" fg:x="13063" fg:w="8"/><text x="37.7852%" y="719.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (8 samples, 0.02%)</title><rect x="37.5352%" y="693" width="0.0230%" height="15" fill="rgb(244,48,7)" fg:x="13063" fg:w="8"/><text x="37.7852%" y="703.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (8 samples, 0.02%)</title><rect x="37.5352%" y="677" width="0.0230%" height="15" fill="rgb(244,217,54)" fg:x="13063" fg:w="8"/><text x="37.7852%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8 samples, 0.02%)</title><rect x="37.5352%" y="661" width="0.0230%" height="15" fill="rgb(224,15,18)" fg:x="13063" fg:w="8"/><text x="37.7852%" y="671.50"></text></g><g><title>hashbrown::map::make_hash (17 samples, 0.05%)</title><rect x="37.5323%" y="869" width="0.0488%" height="15" fill="rgb(244,99,12)" fg:x="13062" fg:w="17"/><text x="37.7823%" y="879.50"></text></g><g><title>core::hash::BuildHasher::hash_one (17 samples, 0.05%)</title><rect x="37.5323%" y="853" width="0.0488%" height="15" fill="rgb(233,226,8)" fg:x="13062" fg:w="17"/><text x="37.7823%" y="863.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (16 samples, 0.05%)</title><rect x="37.5352%" y="837" width="0.0460%" height="15" fill="rgb(229,211,3)" fg:x="13063" fg:w="16"/><text x="37.7852%" y="847.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (16 samples, 0.05%)</title><rect x="37.5352%" y="821" width="0.0460%" height="15" fill="rgb(216,140,21)" fg:x="13063" fg:w="16"/><text x="37.7852%" y="831.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8 samples, 0.02%)</title><rect x="37.5582%" y="805" width="0.0230%" height="15" fill="rgb(234,122,30)" fg:x="13071" fg:w="8"/><text x="37.8082%" y="815.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (8 samples, 0.02%)</title><rect x="37.5582%" y="789" width="0.0230%" height="15" fill="rgb(236,25,46)" fg:x="13071" fg:w="8"/><text x="37.8082%" y="799.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (8 samples, 0.02%)</title><rect x="37.5582%" y="773" width="0.0230%" height="15" fill="rgb(217,52,54)" fg:x="13071" fg:w="8"/><text x="37.8082%" y="783.50"></text></g><g><title>&lt;R as aptos_state_view::TStateView&gt;::get_state_value (37 samples, 0.11%)</title><rect x="37.5208%" y="1013" width="0.1063%" height="15" fill="rgb(222,29,26)" fg:x="13058" fg:w="37"/><text x="37.7708%" y="1023.50"></text></g><g><title>&lt;aptos_block_executor::view::LatestView&lt;T,S&gt; as aptos_state_view::TStateView&gt;::get_state_value (37 samples, 0.11%)</title><rect x="37.5208%" y="997" width="0.1063%" height="15" fill="rgb(216,177,29)" fg:x="13058" fg:w="37"/><text x="37.7708%" y="1007.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (33 samples, 0.09%)</title><rect x="37.5323%" y="981" width="0.0948%" height="15" fill="rgb(247,136,51)" fg:x="13062" fg:w="33"/><text x="37.7823%" y="991.50"></text></g><g><title>&lt;aptos_block_executor::view::LatestView&lt;T,S&gt; as aptos_state_view::TStateView&gt;::get_state_value::{{closure}} (33 samples, 0.09%)</title><rect x="37.5323%" y="965" width="0.0948%" height="15" fill="rgb(231,47,47)" fg:x="13062" fg:w="33"/><text x="37.7823%" y="975.50"></text></g><g><title>&lt;R as aptos_state_view::TStateView&gt;::get_state_value (33 samples, 0.09%)</title><rect x="37.5323%" y="949" width="0.0948%" height="15" fill="rgb(211,192,36)" fg:x="13062" fg:w="33"/><text x="37.7823%" y="959.50"></text></g><g><title>&lt;aptos_block_executor::cached_state_view::CachedStateView as aptos_state_view::TStateView&gt;::get_state_value (33 samples, 0.09%)</title><rect x="37.5323%" y="933" width="0.0948%" height="15" fill="rgb(229,156,32)" fg:x="13062" fg:w="33"/><text x="37.7823%" y="943.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (33 samples, 0.09%)</title><rect x="37.5323%" y="917" width="0.0948%" height="15" fill="rgb(248,213,20)" fg:x="13062" fg:w="33"/><text x="37.7823%" y="927.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (33 samples, 0.09%)</title><rect x="37.5323%" y="901" width="0.0948%" height="15" fill="rgb(217,64,7)" fg:x="13062" fg:w="33"/><text x="37.7823%" y="911.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (33 samples, 0.09%)</title><rect x="37.5323%" y="885" width="0.0948%" height="15" fill="rgb(232,142,8)" fg:x="13062" fg:w="33"/><text x="37.7823%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (16 samples, 0.05%)</title><rect x="37.5812%" y="869" width="0.0460%" height="15" fill="rgb(224,92,44)" fg:x="13079" fg:w="16"/><text x="37.8312%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (16 samples, 0.05%)</title><rect x="37.5812%" y="853" width="0.0460%" height="15" fill="rgb(214,169,17)" fg:x="13079" fg:w="16"/><text x="37.8312%" y="863.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (16 samples, 0.05%)</title><rect x="37.5812%" y="837" width="0.0460%" height="15" fill="rgb(210,59,37)" fg:x="13079" fg:w="16"/><text x="37.8312%" y="847.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (16 samples, 0.05%)</title><rect x="37.5812%" y="821" width="0.0460%" height="15" fill="rgb(214,116,48)" fg:x="13079" fg:w="16"/><text x="37.8312%" y="831.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (16 samples, 0.05%)</title><rect x="37.5812%" y="805" width="0.0460%" height="15" fill="rgb(244,191,6)" fg:x="13079" fg:w="16"/><text x="37.8312%" y="815.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (16 samples, 0.05%)</title><rect x="37.5812%" y="789" width="0.0460%" height="15" fill="rgb(241,50,52)" fg:x="13079" fg:w="16"/><text x="37.8312%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (4 samples, 0.01%)</title><rect x="37.6588%" y="629" width="0.0115%" height="15" fill="rgb(236,75,39)" fg:x="13106" fg:w="4"/><text x="37.9088%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.01%)</title><rect x="37.6588%" y="613" width="0.0115%" height="15" fill="rgb(236,99,0)" fg:x="13106" fg:w="4"/><text x="37.9088%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.01%)</title><rect x="37.6588%" y="597" width="0.0115%" height="15" fill="rgb(207,202,15)" fg:x="13106" fg:w="4"/><text x="37.9088%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.01%)</title><rect x="37.6588%" y="581" width="0.0115%" height="15" fill="rgb(233,207,14)" fg:x="13106" fg:w="4"/><text x="37.9088%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.01%)</title><rect x="37.6588%" y="565" width="0.0115%" height="15" fill="rgb(226,27,51)" fg:x="13106" fg:w="4"/><text x="37.9088%" y="575.50"></text></g><g><title>aptos_types::access_path::_::&lt;impl serde::ser::Serialize for aptos_types::access_path::EvmPath&gt;::serialize (11 samples, 0.03%)</title><rect x="37.6473%" y="885" width="0.0316%" height="15" fill="rgb(206,104,42)" fg:x="13102" fg:w="11"/><text x="37.8973%" y="895.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (7 samples, 0.02%)</title><rect x="37.6588%" y="869" width="0.0201%" height="15" fill="rgb(212,225,4)" fg:x="13106" fg:w="7"/><text x="37.9088%" y="879.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (7 samples, 0.02%)</title><rect x="37.6588%" y="853" width="0.0201%" height="15" fill="rgb(233,96,42)" fg:x="13106" fg:w="7"/><text x="37.9088%" y="863.50"></text></g><g><title>serde::ser::Serializer::collect_seq (7 samples, 0.02%)</title><rect x="37.6588%" y="837" width="0.0201%" height="15" fill="rgb(229,21,32)" fg:x="13106" fg:w="7"/><text x="37.9088%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (7 samples, 0.02%)</title><rect x="37.6588%" y="821" width="0.0201%" height="15" fill="rgb(226,216,24)" fg:x="13106" fg:w="7"/><text x="37.9088%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (7 samples, 0.02%)</title><rect x="37.6588%" y="805" width="0.0201%" height="15" fill="rgb(221,163,17)" fg:x="13106" fg:w="7"/><text x="37.9088%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (7 samples, 0.02%)</title><rect x="37.6588%" y="789" width="0.0201%" height="15" fill="rgb(216,216,42)" fg:x="13106" fg:w="7"/><text x="37.9088%" y="799.50"></text></g><g><title>serde::ser::Serializer::collect_seq::{{closure}} (7 samples, 0.02%)</title><rect x="37.6588%" y="773" width="0.0201%" height="15" fill="rgb(240,118,7)" fg:x="13106" fg:w="7"/><text x="37.9088%" y="783.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeSeq&gt;::serialize_element (7 samples, 0.02%)</title><rect x="37.6588%" y="757" width="0.0201%" height="15" fill="rgb(221,67,37)" fg:x="13106" fg:w="7"/><text x="37.9088%" y="767.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.02%)</title><rect x="37.6588%" y="741" width="0.0201%" height="15" fill="rgb(241,32,44)" fg:x="13106" fg:w="7"/><text x="37.9088%" y="751.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (7 samples, 0.02%)</title><rect x="37.6588%" y="725" width="0.0201%" height="15" fill="rgb(235,204,43)" fg:x="13106" fg:w="7"/><text x="37.9088%" y="735.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (7 samples, 0.02%)</title><rect x="37.6588%" y="709" width="0.0201%" height="15" fill="rgb(213,116,10)" fg:x="13106" fg:w="7"/><text x="37.9088%" y="719.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (7 samples, 0.02%)</title><rect x="37.6588%" y="693" width="0.0201%" height="15" fill="rgb(239,15,48)" fg:x="13106" fg:w="7"/><text x="37.9088%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (7 samples, 0.02%)</title><rect x="37.6588%" y="677" width="0.0201%" height="15" fill="rgb(207,123,36)" fg:x="13106" fg:w="7"/><text x="37.9088%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (7 samples, 0.02%)</title><rect x="37.6588%" y="661" width="0.0201%" height="15" fill="rgb(209,103,30)" fg:x="13106" fg:w="7"/><text x="37.9088%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (7 samples, 0.02%)</title><rect x="37.6588%" y="645" width="0.0201%" height="15" fill="rgb(238,100,19)" fg:x="13106" fg:w="7"/><text x="37.9088%" y="655.50"></text></g><g><title>bcs::ser::to_bytes (18 samples, 0.05%)</title><rect x="37.6300%" y="949" width="0.0517%" height="15" fill="rgb(244,30,14)" fg:x="13096" fg:w="18"/><text x="37.8800%" y="959.50"></text></g><g><title>bcs::ser::serialize_into (18 samples, 0.05%)</title><rect x="37.6300%" y="933" width="0.0517%" height="15" fill="rgb(249,174,6)" fg:x="13096" fg:w="18"/><text x="37.8800%" y="943.50"></text></g><g><title>aptos_types::access_path::_::&lt;impl serde::ser::Serialize for aptos_types::access_path::Path&gt;::serialize (18 samples, 0.05%)</title><rect x="37.6300%" y="917" width="0.0517%" height="15" fill="rgb(235,213,41)" fg:x="13096" fg:w="18"/><text x="37.8800%" y="927.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (12 samples, 0.03%)</title><rect x="37.6473%" y="901" width="0.0345%" height="15" fill="rgb(213,118,6)" fg:x="13102" fg:w="12"/><text x="37.8973%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::access_path::Path&gt; (4 samples, 0.01%)</title><rect x="37.6817%" y="949" width="0.0115%" height="15" fill="rgb(235,44,51)" fg:x="13114" fg:w="4"/><text x="37.9317%" y="959.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (24 samples, 0.07%)</title><rect x="37.6271%" y="1013" width="0.0690%" height="15" fill="rgb(217,9,53)" fg:x="13095" fg:w="24"/><text x="37.8771%" y="1023.50"></text></g><g><title>aptos_evm::storage_key::&lt;impl core::convert::From&lt;aptos_evm::storage_key::StorageKey&gt; for aptos_types::state_store::state_key::StateKey&gt;::from (23 samples, 0.07%)</title><rect x="37.6300%" y="997" width="0.0661%" height="15" fill="rgb(237,172,34)" fg:x="13096" fg:w="23"/><text x="37.8800%" y="1007.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (23 samples, 0.07%)</title><rect x="37.6300%" y="981" width="0.0661%" height="15" fill="rgb(206,206,11)" fg:x="13096" fg:w="23"/><text x="37.8800%" y="991.50"></text></g><g><title>aptos_evm::storage_key::&lt;impl core::convert::From&lt;aptos_evm::storage_key::StorageKey&gt; for aptos_types::access_path::AccessPath&gt;::from (23 samples, 0.07%)</title><rect x="37.6300%" y="965" width="0.0661%" height="15" fill="rgb(214,149,29)" fg:x="13096" fg:w="23"/><text x="37.8800%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (74 samples, 0.21%)</title><rect x="37.4864%" y="1141" width="0.2126%" height="15" fill="rgb(208,123,3)" fg:x="13046" fg:w="74"/><text x="37.7364%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (74 samples, 0.21%)</title><rect x="37.4864%" y="1125" width="0.2126%" height="15" fill="rgb(229,126,4)" fg:x="13046" fg:w="74"/><text x="37.7364%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (74 samples, 0.21%)</title><rect x="37.4864%" y="1109" width="0.2126%" height="15" fill="rgb(222,92,36)" fg:x="13046" fg:w="74"/><text x="37.7364%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (74 samples, 0.21%)</title><rect x="37.4864%" y="1093" width="0.2126%" height="15" fill="rgb(216,39,41)" fg:x="13046" fg:w="74"/><text x="37.7364%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (74 samples, 0.21%)</title><rect x="37.4864%" y="1077" width="0.2126%" height="15" fill="rgb(253,127,28)" fg:x="13046" fg:w="74"/><text x="37.7364%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (68 samples, 0.20%)</title><rect x="37.5036%" y="1061" width="0.1954%" height="15" fill="rgb(249,152,51)" fg:x="13052" fg:w="68"/><text x="37.7536%" y="1071.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (68 samples, 0.20%)</title><rect x="37.5036%" y="1045" width="0.1954%" height="15" fill="rgb(209,123,42)" fg:x="13052" fg:w="68"/><text x="37.7536%" y="1055.50"></text></g><g><title>aptos_evm::state::ViewWrapper&lt;S&gt;::drain::{{closure}} (68 samples, 0.20%)</title><rect x="37.5036%" y="1029" width="0.1954%" height="15" fill="rgb(241,118,22)" fg:x="13052" fg:w="68"/><text x="37.7536%" y="1039.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (6 samples, 0.02%)</title><rect x="37.6990%" y="1013" width="0.0172%" height="15" fill="rgb(208,25,7)" fg:x="13120" fg:w="6"/><text x="37.9490%" y="1023.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (6 samples, 0.02%)</title><rect x="37.6990%" y="997" width="0.0172%" height="15" fill="rgb(243,144,39)" fg:x="13120" fg:w="6"/><text x="37.9490%" y="1007.50"></text></g><g><title>&lt;R as aptos_state_view::TStateView&gt;::get_state_value (13 samples, 0.04%)</title><rect x="37.6990%" y="1045" width="0.0374%" height="15" fill="rgb(250,50,5)" fg:x="13120" fg:w="13"/><text x="37.9490%" y="1055.50"></text></g><g><title>&lt;aptos_block_executor::view::LatestView&lt;T,S&gt; as aptos_state_view::TStateView&gt;::get_state_value (13 samples, 0.04%)</title><rect x="37.6990%" y="1029" width="0.0374%" height="15" fill="rgb(207,67,11)" fg:x="13120" fg:w="13"/><text x="37.9490%" y="1039.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (7 samples, 0.02%)</title><rect x="37.7162%" y="1013" width="0.0201%" height="15" fill="rgb(245,204,40)" fg:x="13126" fg:w="7"/><text x="37.9662%" y="1023.50"></text></g><g><title>&lt;aptos_block_executor::view::LatestView&lt;T,S&gt; as aptos_state_view::TStateView&gt;::get_state_value::{{closure}} (7 samples, 0.02%)</title><rect x="37.7162%" y="997" width="0.0201%" height="15" fill="rgb(238,228,24)" fg:x="13126" fg:w="7"/><text x="37.9662%" y="1007.50"></text></g><g><title>&lt;aptos_types::write_set::WriteOp as aptos_types::write_set::TransactionWrite&gt;::extract_raw_bytes (6 samples, 0.02%)</title><rect x="37.7191%" y="981" width="0.0172%" height="15" fill="rgb(217,116,22)" fg:x="13127" fg:w="6"/><text x="37.9691%" y="991.50"></text></g><g><title>aptos_types::transaction::eth_address_to_aptos_address (5 samples, 0.01%)</title><rect x="37.7450%" y="981" width="0.0144%" height="15" fill="rgb(234,98,12)" fg:x="13136" fg:w="5"/><text x="37.9950%" y="991.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (12 samples, 0.03%)</title><rect x="37.7363%" y="1045" width="0.0345%" height="15" fill="rgb(242,170,50)" fg:x="13133" fg:w="12"/><text x="37.9863%" y="1055.50"></text></g><g><title>aptos_evm::storage_key::&lt;impl core::convert::From&lt;aptos_evm::storage_key::StorageKey&gt; for aptos_types::state_store::state_key::StateKey&gt;::from (12 samples, 0.03%)</title><rect x="37.7363%" y="1029" width="0.0345%" height="15" fill="rgb(235,7,5)" fg:x="13133" fg:w="12"/><text x="37.9863%" y="1039.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (11 samples, 0.03%)</title><rect x="37.7392%" y="1013" width="0.0316%" height="15" fill="rgb(241,114,28)" fg:x="13134" fg:w="11"/><text x="37.9892%" y="1023.50"></text></g><g><title>aptos_evm::storage_key::&lt;impl core::convert::From&lt;aptos_evm::storage_key::StorageKey&gt; for aptos_types::access_path::AccessPath&gt;::from (10 samples, 0.03%)</title><rect x="37.7421%" y="997" width="0.0287%" height="15" fill="rgb(246,112,42)" fg:x="13135" fg:w="10"/><text x="37.9921%" y="1007.50"></text></g><g><title>bcs::ser::to_bytes (4 samples, 0.01%)</title><rect x="37.7593%" y="981" width="0.0115%" height="15" fill="rgb(248,228,14)" fg:x="13141" fg:w="4"/><text x="38.0093%" y="991.50"></text></g><g><title>bcs::ser::serialize_into (4 samples, 0.01%)</title><rect x="37.7593%" y="965" width="0.0115%" height="15" fill="rgb(208,133,18)" fg:x="13141" fg:w="4"/><text x="38.0093%" y="975.50"></text></g><g><title>aptos_types::access_path::_::&lt;impl serde::ser::Serialize for aptos_types::access_path::Path&gt;::serialize (4 samples, 0.01%)</title><rect x="37.7593%" y="949" width="0.0115%" height="15" fill="rgb(207,35,49)" fg:x="13141" fg:w="4"/><text x="38.0093%" y="959.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (4 samples, 0.01%)</title><rect x="37.7593%" y="933" width="0.0115%" height="15" fill="rgb(205,68,36)" fg:x="13141" fg:w="4"/><text x="38.0093%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.08%)</title><rect x="37.6990%" y="1141" width="0.0833%" height="15" fill="rgb(245,62,40)" fg:x="13120" fg:w="29"/><text x="37.9490%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (29 samples, 0.08%)</title><rect x="37.6990%" y="1125" width="0.0833%" height="15" fill="rgb(228,27,24)" fg:x="13120" fg:w="29"/><text x="37.9490%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (29 samples, 0.08%)</title><rect x="37.6990%" y="1109" width="0.0833%" height="15" fill="rgb(253,19,12)" fg:x="13120" fg:w="29"/><text x="37.9490%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (29 samples, 0.08%)</title><rect x="37.6990%" y="1093" width="0.0833%" height="15" fill="rgb(232,28,20)" fg:x="13120" fg:w="29"/><text x="37.9490%" y="1103.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (29 samples, 0.08%)</title><rect x="37.6990%" y="1077" width="0.0833%" height="15" fill="rgb(218,35,51)" fg:x="13120" fg:w="29"/><text x="37.9490%" y="1087.50"></text></g><g><title>aptos_evm::state::ViewWrapper&lt;S&gt;::drain::{{closure}} (29 samples, 0.08%)</title><rect x="37.6990%" y="1061" width="0.0833%" height="15" fill="rgb(212,90,40)" fg:x="13120" fg:w="29"/><text x="37.9490%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (4 samples, 0.01%)</title><rect x="37.7708%" y="1045" width="0.0115%" height="15" fill="rgb(220,172,12)" fg:x="13145" fg:w="4"/><text x="38.0208%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (4 samples, 0.01%)</title><rect x="37.7708%" y="1029" width="0.0115%" height="15" fill="rgb(226,159,20)" fg:x="13145" fg:w="4"/><text x="38.0208%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (4 samples, 0.01%)</title><rect x="37.7708%" y="1013" width="0.0115%" height="15" fill="rgb(234,205,16)" fg:x="13145" fg:w="4"/><text x="38.0208%" y="1023.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="37.7708%" y="997" width="0.0115%" height="15" fill="rgb(207,9,39)" fg:x="13145" fg:w="4"/><text x="38.0208%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.01%)</title><rect x="37.7708%" y="981" width="0.0115%" height="15" fill="rgb(249,143,15)" fg:x="13145" fg:w="4"/><text x="38.0208%" y="991.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.01%)</title><rect x="37.7708%" y="965" width="0.0115%" height="15" fill="rgb(253,133,29)" fg:x="13145" fg:w="4"/><text x="38.0208%" y="975.50"></text></g><g><title>sdallocx (4 samples, 0.01%)</title><rect x="37.7708%" y="949" width="0.0115%" height="15" fill="rgb(221,187,0)" fg:x="13145" fg:w="4"/><text x="38.0208%" y="959.50"></text></g><g><title>isfree (4 samples, 0.01%)</title><rect x="37.7708%" y="933" width="0.0115%" height="15" fill="rgb(205,204,26)" fg:x="13145" fg:w="4"/><text x="38.0208%" y="943.50"></text></g><g><title>isdalloct (4 samples, 0.01%)</title><rect x="37.7708%" y="917" width="0.0115%" height="15" fill="rgb(224,68,54)" fg:x="13145" fg:w="4"/><text x="38.0208%" y="927.50"></text></g><g><title>arena_sdalloc (4 samples, 0.01%)</title><rect x="37.7708%" y="901" width="0.0115%" height="15" fill="rgb(209,67,4)" fg:x="13145" fg:w="4"/><text x="38.0208%" y="911.50"></text></g><g><title>tcache_dalloc_large (4 samples, 0.01%)</title><rect x="37.7708%" y="885" width="0.0115%" height="15" fill="rgb(228,229,18)" fg:x="13145" fg:w="4"/><text x="38.0208%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (106 samples, 0.30%)</title><rect x="37.4864%" y="1205" width="0.3046%" height="15" fill="rgb(231,89,13)" fg:x="13046" fg:w="106"/><text x="37.7364%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (106 samples, 0.30%)</title><rect x="37.4864%" y="1189" width="0.3046%" height="15" fill="rgb(210,182,18)" fg:x="13046" fg:w="106"/><text x="37.7364%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (106 samples, 0.30%)</title><rect x="37.4864%" y="1173" width="0.3046%" height="15" fill="rgb(240,105,2)" fg:x="13046" fg:w="106"/><text x="37.7364%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (106 samples, 0.30%)</title><rect x="37.4864%" y="1157" width="0.3046%" height="15" fill="rgb(207,170,50)" fg:x="13046" fg:w="106"/><text x="37.7364%" y="1167.50"></text></g><g><title>aptos_evm::state::ViewWrapper&lt;S&gt;::drain (107 samples, 0.31%)</title><rect x="37.4864%" y="1221" width="0.3075%" height="15" fill="rgb(232,133,24)" fg:x="13046" fg:w="107"/><text x="37.7364%" y="1231.50"></text></g><g><title>&lt;alloc::collections::btree::dedup_sorted_iter::DedupSortedIter&lt;K,V,I&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.02%)</title><rect x="37.8053%" y="1141" width="0.0172%" height="15" fill="rgb(235,166,27)" fg:x="13157" fg:w="6"/><text x="38.0553%" y="1151.50"></text></g><g><title>core::cmp::PartialEq::ne (6 samples, 0.02%)</title><rect x="37.8053%" y="1125" width="0.0172%" height="15" fill="rgb(209,19,13)" fg:x="13157" fg:w="6"/><text x="38.0553%" y="1135.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::cmp::PartialEq&gt;::eq (6 samples, 0.02%)</title><rect x="37.8053%" y="1109" width="0.0172%" height="15" fill="rgb(226,79,39)" fg:x="13157" fg:w="6"/><text x="38.0553%" y="1119.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (6 samples, 0.02%)</title><rect x="37.8053%" y="1093" width="0.0172%" height="15" fill="rgb(222,163,10)" fg:x="13157" fg:w="6"/><text x="38.0553%" y="1103.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::cmp::PartialEq&gt;::eq (6 samples, 0.02%)</title><rect x="37.8053%" y="1077" width="0.0172%" height="15" fill="rgb(214,44,19)" fg:x="13157" fg:w="6"/><text x="38.0553%" y="1087.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::cmp::PartialEq&gt;::eq (6 samples, 0.02%)</title><rect x="37.8053%" y="1061" width="0.0172%" height="15" fill="rgb(210,217,13)" fg:x="13157" fg:w="6"/><text x="38.0553%" y="1071.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[U (6 samples, 0.02%)</title><rect x="37.8053%" y="1045" width="0.0172%" height="15" fill="rgb(237,61,54)" fg:x="13157" fg:w="6"/><text x="38.0553%" y="1055.50"></text></g><g><title> N]&gt; for [T (6 samples, 0.02%)</title><rect x="37.8053%" y="1029" width="0.0172%" height="15" fill="rgb(226,184,24)" fg:x="13157" fg:w="6"/><text x="38.0553%" y="1039.50"></text></g><g><title> N]&gt;::eq (6 samples, 0.02%)</title><rect x="37.8053%" y="1013" width="0.0172%" height="15" fill="rgb(223,226,4)" fg:x="13157" fg:w="6"/><text x="38.0553%" y="1023.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (6 samples, 0.02%)</title><rect x="37.8053%" y="997" width="0.0172%" height="15" fill="rgb(210,26,41)" fg:x="13157" fg:w="6"/><text x="38.0553%" y="1007.50"></text></g><g><title>alloc::collections::btree::append::&lt;impl alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::bulk_push (13 samples, 0.04%)</title><rect x="37.7938%" y="1157" width="0.0374%" height="15" fill="rgb(220,221,6)" fg:x="13153" fg:w="13"/><text x="38.0438%" y="1167.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::bulk_build_from_sorted_iter (14 samples, 0.04%)</title><rect x="37.7938%" y="1173" width="0.0402%" height="15" fill="rgb(225,89,49)" fg:x="13153" fg:w="14"/><text x="38.0438%" y="1183.50"></text></g><g><title>aptos_types::write_set::WriteSetMut::new (26 samples, 0.07%)</title><rect x="37.7938%" y="1221" width="0.0747%" height="15" fill="rgb(218,70,45)" fg:x="13153" fg:w="26"/><text x="38.0438%" y="1231.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (26 samples, 0.07%)</title><rect x="37.7938%" y="1205" width="0.0747%" height="15" fill="rgb(238,166,21)" fg:x="13153" fg:w="26"/><text x="38.0438%" y="1215.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (26 samples, 0.07%)</title><rect x="37.7938%" y="1189" width="0.0747%" height="15" fill="rgb(224,141,44)" fg:x="13153" fg:w="26"/><text x="38.0438%" y="1199.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by (12 samples, 0.03%)</title><rect x="37.8340%" y="1173" width="0.0345%" height="15" fill="rgb(230,12,49)" fg:x="13167" fg:w="12"/><text x="38.0840%" y="1183.50"></text></g><g><title>alloc::slice::stable_sort (12 samples, 0.03%)</title><rect x="37.8340%" y="1157" width="0.0345%" height="15" fill="rgb(212,174,12)" fg:x="13167" fg:w="12"/><text x="38.0840%" y="1167.50"></text></g><g><title>core::slice::sort::insertion_sort_shift_left (12 samples, 0.03%)</title><rect x="37.8340%" y="1141" width="0.0345%" height="15" fill="rgb(246,67,9)" fg:x="13167" fg:w="12"/><text x="38.0840%" y="1151.50"></text></g><g><title>core::slice::sort::insert_tail (6 samples, 0.02%)</title><rect x="37.8513%" y="1125" width="0.0172%" height="15" fill="rgb(239,35,23)" fg:x="13173" fg:w="6"/><text x="38.1013%" y="1135.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by::{{closure}} (6 samples, 0.02%)</title><rect x="37.8513%" y="1109" width="0.0172%" height="15" fill="rgb(211,167,0)" fg:x="13173" fg:w="6"/><text x="38.1013%" y="1119.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter::{{closure}} (6 samples, 0.02%)</title><rect x="37.8513%" y="1093" width="0.0172%" height="15" fill="rgb(225,119,45)" fg:x="13173" fg:w="6"/><text x="38.1013%" y="1103.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::cmp::Ord&gt;::cmp (6 samples, 0.02%)</title><rect x="37.8513%" y="1077" width="0.0172%" height="15" fill="rgb(210,162,6)" fg:x="13173" fg:w="6"/><text x="38.1013%" y="1087.50"></text></g><g><title>_rjem_je_arena_ralloc_no_move (4 samples, 0.01%)</title><rect x="37.9547%" y="885" width="0.0115%" height="15" fill="rgb(208,118,35)" fg:x="13209" fg:w="4"/><text x="38.2047%" y="895.50"></text></g><g><title>iralloct (7 samples, 0.02%)</title><rect x="37.9547%" y="917" width="0.0201%" height="15" fill="rgb(239,4,53)" fg:x="13209" fg:w="7"/><text x="38.2047%" y="927.50"></text></g><g><title>_rjem_je_arena_ralloc (7 samples, 0.02%)</title><rect x="37.9547%" y="901" width="0.0201%" height="15" fill="rgb(213,130,21)" fg:x="13209" fg:w="7"/><text x="38.2047%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (11 samples, 0.03%)</title><rect x="37.9518%" y="981" width="0.0316%" height="15" fill="rgb(235,148,0)" fg:x="13208" fg:w="11"/><text x="38.2018%" y="991.50"></text></g><g><title>alloc::alloc::Global::grow_impl (11 samples, 0.03%)</title><rect x="37.9518%" y="965" width="0.0316%" height="15" fill="rgb(244,224,18)" fg:x="13208" fg:w="11"/><text x="38.2018%" y="975.50"></text></g><g><title>alloc::alloc::realloc (11 samples, 0.03%)</title><rect x="37.9518%" y="949" width="0.0316%" height="15" fill="rgb(211,214,4)" fg:x="13208" fg:w="11"/><text x="38.2018%" y="959.50"></text></g><g><title>rallocx (10 samples, 0.03%)</title><rect x="37.9547%" y="933" width="0.0287%" height="15" fill="rgb(206,119,25)" fg:x="13209" fg:w="10"/><text x="38.2047%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as cfx_evm::evm::interpreter::memory::Memory&gt;::expand (16 samples, 0.05%)</title><rect x="37.9490%" y="1125" width="0.0460%" height="15" fill="rgb(243,93,47)" fg:x="13207" fg:w="16"/><text x="38.1990%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as cfx_evm::evm::interpreter::memory::Memory&gt;::resize (16 samples, 0.05%)</title><rect x="37.9490%" y="1109" width="0.0460%" height="15" fill="rgb(224,194,6)" fg:x="13207" fg:w="16"/><text x="38.1990%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (16 samples, 0.05%)</title><rect x="37.9490%" y="1093" width="0.0460%" height="15" fill="rgb(243,229,6)" fg:x="13207" fg:w="16"/><text x="38.1990%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (16 samples, 0.05%)</title><rect x="37.9490%" y="1077" width="0.0460%" height="15" fill="rgb(207,23,50)" fg:x="13207" fg:w="16"/><text x="38.1990%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (16 samples, 0.05%)</title><rect x="37.9490%" y="1061" width="0.0460%" height="15" fill="rgb(253,192,32)" fg:x="13207" fg:w="16"/><text x="38.1990%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (16 samples, 0.05%)</title><rect x="37.9490%" y="1045" width="0.0460%" height="15" fill="rgb(213,21,6)" fg:x="13207" fg:w="16"/><text x="38.1990%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (16 samples, 0.05%)</title><rect x="37.9490%" y="1029" width="0.0460%" height="15" fill="rgb(243,151,13)" fg:x="13207" fg:w="16"/><text x="38.1990%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (15 samples, 0.04%)</title><rect x="37.9518%" y="1013" width="0.0431%" height="15" fill="rgb(233,165,41)" fg:x="13208" fg:w="15"/><text x="38.2018%" y="1023.50"></text></g><g><title>alloc::raw_vec::finish_grow (15 samples, 0.04%)</title><rect x="37.9518%" y="997" width="0.0431%" height="15" fill="rgb(246,176,45)" fg:x="13208" fg:w="15"/><text x="38.2018%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (6 samples, 0.02%)</title><rect x="37.9949%" y="1125" width="0.0172%" height="15" fill="rgb(217,170,52)" fg:x="13223" fg:w="6"/><text x="38.2449%" y="1135.50"></text></g><g><title>cfx_evm::evm::instructions::Instruction::from_u8 (12 samples, 0.03%)</title><rect x="38.0122%" y="1125" width="0.0345%" height="15" fill="rgb(214,203,54)" fg:x="13229" fg:w="12"/><text x="38.2622%" y="1135.50"></text></g><g><title>cfx_evm::evm::instructions::Instruction::info (33 samples, 0.09%)</title><rect x="38.0467%" y="1125" width="0.0948%" height="15" fill="rgb(248,215,49)" fg:x="13241" fg:w="33"/><text x="38.2967%" y="1135.50"></text></g><g><title>&lt;cfx_evm::evm::instructions::INSTRUCTIONS as core::ops::deref::Deref&gt;::deref (33 samples, 0.09%)</title><rect x="38.0467%" y="1109" width="0.0948%" height="15" fill="rgb(208,46,10)" fg:x="13241" fg:w="33"/><text x="38.2967%" y="1119.50"></text></g><g><title>&lt;cfx_evm::evm::instructions::INSTRUCTIONS as core::ops::deref::Deref&gt;::deref::__stability (33 samples, 0.09%)</title><rect x="38.0467%" y="1093" width="0.0948%" height="15" fill="rgb(254,5,31)" fg:x="13241" fg:w="33"/><text x="38.2967%" y="1103.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get (33 samples, 0.09%)</title><rect x="38.0467%" y="1077" width="0.0948%" height="15" fill="rgb(222,104,33)" fg:x="13241" fg:w="33"/><text x="38.2967%" y="1087.50"></text></g><g><title>spin::once::Once&lt;T&gt;::call_once (33 samples, 0.09%)</title><rect x="38.0467%" y="1061" width="0.0948%" height="15" fill="rgb(248,49,16)" fg:x="13241" fg:w="33"/><text x="38.2967%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as cfx_evm::evm::interpreter::memory::Memory&gt;::write (4 samples, 0.01%)</title><rect x="38.6817%" y="1109" width="0.0115%" height="15" fill="rgb(232,198,41)" fg:x="13462" fg:w="4"/><text x="38.9317%" y="1119.50"></text></g><g><title>primitive_types::U256::to_big_endian (4 samples, 0.01%)</title><rect x="38.6817%" y="1093" width="0.0115%" height="15" fill="rgb(214,125,3)" fg:x="13462" fg:w="4"/><text x="38.9317%" y="1103.50"></text></g><g><title>&lt;byteorder::BigEndian as byteorder::ByteOrder&gt;::write_u64 (4 samples, 0.01%)</title><rect x="38.6817%" y="1077" width="0.0115%" height="15" fill="rgb(229,220,28)" fg:x="13462" fg:w="4"/><text x="38.9317%" y="1087.50"></text></g><g><title>core::num::&lt;impl u64&gt;::to_be (4 samples, 0.01%)</title><rect x="38.6817%" y="1061" width="0.0115%" height="15" fill="rgb(222,64,37)" fg:x="13462" fg:w="4"/><text x="38.9317%" y="1071.50"></text></g><g><title>core::num::&lt;impl u64&gt;::swap_bytes (4 samples, 0.01%)</title><rect x="38.6817%" y="1045" width="0.0115%" height="15" fill="rgb(249,184,13)" fg:x="13462" fg:w="4"/><text x="38.9317%" y="1055.50"></text></g><g><title>cfx_evm::internal_contract::components::contract::InternalContractTrait::code (4 samples, 0.01%)</title><rect x="38.7219%" y="1093" width="0.0115%" height="15" fill="rgb(252,176,6)" fg:x="13476" fg:w="4"/><text x="38.9719%" y="1103.50"></text></g><g><title>&lt;cfx_evm::call_create_frame::context::Context as cfx_evm::vm::context::Context&gt;::call (16 samples, 0.05%)</title><rect x="38.7018%" y="1109" width="0.0460%" height="15" fill="rgb(228,153,7)" fg:x="13469" fg:w="16"/><text x="38.9518%" y="1119.50"></text></g><g><title>&lt;cfx_evm::evm::interpreter::stack::VecStack&lt;S&gt; as cfx_evm::evm::interpreter::stack::Stack&lt;S&gt;&gt;::pop_back (46 samples, 0.13%)</title><rect x="38.7593%" y="1109" width="0.1322%" height="15" fill="rgb(242,193,5)" fg:x="13489" fg:w="46"/><text x="39.0093%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (46 samples, 0.13%)</title><rect x="38.7593%" y="1093" width="0.1322%" height="15" fill="rgb(232,140,9)" fg:x="13489" fg:w="46"/><text x="39.0093%" y="1103.50"></text></g><g><title>core::ptr::read (46 samples, 0.13%)</title><rect x="38.7593%" y="1077" width="0.1322%" height="15" fill="rgb(213,222,16)" fg:x="13489" fg:w="46"/><text x="39.0093%" y="1087.50"></text></g><g><title>cfx_evm::evm::interpreter::CodeReader::read (55 samples, 0.16%)</title><rect x="38.9029%" y="1109" width="0.1580%" height="15" fill="rgb(222,75,50)" fg:x="13539" fg:w="55"/><text x="39.1529%" y="1119.50"></text></g><g><title>&lt;primitive_types::U256 as core::convert::From&lt;&amp;[u8]&gt;&gt;::from (45 samples, 0.13%)</title><rect x="38.9317%" y="1093" width="0.1293%" height="15" fill="rgb(205,180,2)" fg:x="13549" fg:w="45"/><text x="39.1817%" y="1103.50"></text></g><g><title>primitive_types::U256::from_big_endian (45 samples, 0.13%)</title><rect x="38.9317%" y="1077" width="0.1293%" height="15" fill="rgb(216,34,7)" fg:x="13549" fg:w="45"/><text x="39.1817%" y="1087.50"></text></g><g><title>&lt;byteorder::BigEndian as byteorder::ByteOrder&gt;::read_u64 (45 samples, 0.13%)</title><rect x="38.9317%" y="1061" width="0.1293%" height="15" fill="rgb(253,16,32)" fg:x="13549" fg:w="45"/><text x="39.1817%" y="1071.50"></text></g><g><title>core::num::&lt;impl u64&gt;::from_be_bytes (45 samples, 0.13%)</title><rect x="38.9317%" y="1045" width="0.1293%" height="15" fill="rgb(208,97,28)" fg:x="13549" fg:w="45"/><text x="39.1817%" y="1055.50"></text></g><g><title>core::num::&lt;impl u64&gt;::from_be (45 samples, 0.13%)</title><rect x="38.9317%" y="1029" width="0.1293%" height="15" fill="rgb(225,92,11)" fg:x="13549" fg:w="45"/><text x="39.1817%" y="1039.50"></text></g><g><title>core::num::&lt;impl u64&gt;::swap_bytes (45 samples, 0.13%)</title><rect x="38.9317%" y="1013" width="0.1293%" height="15" fill="rgb(243,38,12)" fg:x="13549" fg:w="45"/><text x="39.1817%" y="1023.50"></text></g><g><title>cfx_evm::evm::interpreter::Interpreter&lt;Cost&gt;::exec_instruction (327 samples, 0.94%)</title><rect x="38.1415%" y="1125" width="0.9396%" height="15" fill="rgb(208,139,16)" fg:x="13274" fg:w="327"/><text x="38.3915%" y="1135.50"></text></g><g><title>cfx_evm::evm::interpreter::Interpreter&lt;Cost&gt;::verify_instruction (11 samples, 0.03%)</title><rect x="39.0811%" y="1125" width="0.0316%" height="15" fill="rgb(227,24,9)" fg:x="13601" fg:w="11"/><text x="39.3311%" y="1135.50"></text></g><g><title>&lt;cfx_evm::call_create_frame::context::Context as cfx_evm::vm::context::Context&gt;::spec (11 samples, 0.03%)</title><rect x="39.0811%" y="1109" width="0.0316%" height="15" fill="rgb(206,62,11)" fg:x="13601" fg:w="11"/><text x="39.3311%" y="1119.50"></text></g><g><title>&lt;R as aptos_state_view::TStateView&gt;::get_state_value (8 samples, 0.02%)</title><rect x="39.5811%" y="997" width="0.0230%" height="15" fill="rgb(228,134,27)" fg:x="13775" fg:w="8"/><text x="39.8311%" y="1007.50"></text></g><g><title>&lt;aptos_block_executor::view::LatestView&lt;T,S&gt; as aptos_state_view::TStateView&gt;::get_state_value (6 samples, 0.02%)</title><rect x="39.5868%" y="981" width="0.0172%" height="15" fill="rgb(205,55,33)" fg:x="13777" fg:w="6"/><text x="39.8368%" y="991.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (6 samples, 0.02%)</title><rect x="39.5868%" y="965" width="0.0172%" height="15" fill="rgb(243,75,43)" fg:x="13777" fg:w="6"/><text x="39.8368%" y="975.50"></text></g><g><title>&lt;aptos_block_executor::view::LatestView&lt;T,S&gt; as aptos_state_view::TStateView&gt;::get_state_value::{{closure}} (6 samples, 0.02%)</title><rect x="39.5868%" y="949" width="0.0172%" height="15" fill="rgb(223,27,42)" fg:x="13777" fg:w="6"/><text x="39.8368%" y="959.50"></text></g><g><title>&lt;R as aptos_state_view::TStateView&gt;::get_state_value (6 samples, 0.02%)</title><rect x="39.5868%" y="933" width="0.0172%" height="15" fill="rgb(232,189,33)" fg:x="13777" fg:w="6"/><text x="39.8368%" y="943.50"></text></g><g><title>&lt;aptos_block_executor::cached_state_view::CachedStateView as aptos_state_view::TStateView&gt;::get_state_value (6 samples, 0.02%)</title><rect x="39.5868%" y="917" width="0.0172%" height="15" fill="rgb(210,9,39)" fg:x="13777" fg:w="6"/><text x="39.8368%" y="927.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (5 samples, 0.01%)</title><rect x="39.5897%" y="901" width="0.0144%" height="15" fill="rgb(242,85,26)" fg:x="13778" fg:w="5"/><text x="39.8397%" y="911.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (5 samples, 0.01%)</title><rect x="39.5897%" y="885" width="0.0144%" height="15" fill="rgb(248,44,4)" fg:x="13778" fg:w="5"/><text x="39.8397%" y="895.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (5 samples, 0.01%)</title><rect x="39.5897%" y="869" width="0.0144%" height="15" fill="rgb(250,96,46)" fg:x="13778" fg:w="5"/><text x="39.8397%" y="879.50"></text></g><g><title>cfx_statedb::statedb_ext::StateDbExt::get_account (14 samples, 0.04%)</title><rect x="39.5753%" y="1061" width="0.0402%" height="15" fill="rgb(229,116,26)" fg:x="13773" fg:w="14"/><text x="39.8253%" y="1071.50"></text></g><g><title>&lt;cfx_statedb::impls::StateDb as cfx_statedb::StateDbTrait&gt;::get_raw (13 samples, 0.04%)</title><rect x="39.5782%" y="1045" width="0.0374%" height="15" fill="rgb(246,94,34)" fg:x="13774" fg:w="13"/><text x="39.8282%" y="1055.50"></text></g><g><title>&lt;cfx_storage::StorageKeyWrapper&lt;T,Key&gt; as cfx_storage::StorageTrait&gt;::get (12 samples, 0.03%)</title><rect x="39.5811%" y="1029" width="0.0345%" height="15" fill="rgb(251,73,21)" fg:x="13775" fg:w="12"/><text x="39.8311%" y="1039.50"></text></g><g><title>&lt;&amp;mut aptos_evm::state::ViewWrapper&lt;S&gt; as cfx_storage::StorageTrait&gt;::get (12 samples, 0.03%)</title><rect x="39.5811%" y="1013" width="0.0345%" height="15" fill="rgb(254,121,25)" fg:x="13775" fg:w="12"/><text x="39.8311%" y="1023.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (4 samples, 0.01%)</title><rect x="39.6040%" y="997" width="0.0115%" height="15" fill="rgb(215,161,49)" fg:x="13783" fg:w="4"/><text x="39.8540%" y="1007.50"></text></g><g><title>aptos_evm::storage_key::&lt;impl core::convert::From&lt;aptos_evm::storage_key::StorageKey&gt; for aptos_types::state_store::state_key::StateKey&gt;::from (4 samples, 0.01%)</title><rect x="39.6040%" y="981" width="0.0115%" height="15" fill="rgb(221,43,13)" fg:x="13783" fg:w="4"/><text x="39.8540%" y="991.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (4 samples, 0.01%)</title><rect x="39.6040%" y="965" width="0.0115%" height="15" fill="rgb(249,5,37)" fg:x="13783" fg:w="4"/><text x="39.8540%" y="975.50"></text></g><g><title>aptos_evm::storage_key::&lt;impl core::convert::From&lt;aptos_evm::storage_key::StorageKey&gt; for aptos_types::access_path::AccessPath&gt;::from (4 samples, 0.01%)</title><rect x="39.6040%" y="949" width="0.0115%" height="15" fill="rgb(226,25,44)" fg:x="13783" fg:w="4"/><text x="39.8540%" y="959.50"></text></g><g><title>&lt;cfx_evm::call_create_frame::context::Context as cfx_evm::vm::context::Context&gt;::exists_and_not_null (27 samples, 0.08%)</title><rect x="39.5466%" y="1109" width="0.0776%" height="15" fill="rgb(238,189,16)" fg:x="13763" fg:w="27"/><text x="39.7966%" y="1119.50"></text></g><g><title>&lt;cfx_evm::state::State as cfx_state::state_trait::StateOpsTrait&gt;::exists_and_not_null (26 samples, 0.07%)</title><rect x="39.5495%" y="1093" width="0.0747%" height="15" fill="rgb(251,186,8)" fg:x="13764" fg:w="26"/><text x="39.7995%" y="1103.50"></text></g><g><title>cfx_evm::state::State::ensure_account_loaded (20 samples, 0.06%)</title><rect x="39.5667%" y="1077" width="0.0575%" height="15" fill="rgb(254,34,31)" fg:x="13770" fg:w="20"/><text x="39.8167%" y="1087.50"></text></g><g><title>&lt;cfx_evm::call_create_frame::context::Context as cfx_evm::vm::context::Context&gt;::spec (8 samples, 0.02%)</title><rect x="39.6242%" y="1109" width="0.0230%" height="15" fill="rgb(225,215,27)" fg:x="13790" fg:w="8"/><text x="39.8742%" y="1119.50"></text></g><g><title>cfx_evm::evm::interpreter::gasometer::Gasometer&lt;Gas&gt;::requirements (204 samples, 0.59%)</title><rect x="39.1127%" y="1125" width="0.5862%" height="15" fill="rgb(221,192,48)" fg:x="13612" fg:w="204"/><text x="39.3627%" y="1135.50"></text></g><g><title>cfx_evm::evm::interpreter::u256_to_address (16 samples, 0.05%)</title><rect x="39.6529%" y="1109" width="0.0460%" height="15" fill="rgb(219,137,20)" fg:x="13800" fg:w="16"/><text x="39.9029%" y="1119.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::fmt::Debug&gt;::fmt (9 samples, 0.03%)</title><rect x="39.7104%" y="1093" width="0.0259%" height="15" fill="rgb(219,84,11)" fg:x="13820" fg:w="9"/><text x="39.9604%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (89 samples, 0.26%)</title><rect x="39.7362%" y="1093" width="0.2557%" height="15" fill="rgb(224,10,23)" fg:x="13829" fg:w="89"/><text x="39.9862%" y="1103.50"></text></g><g><title>bit_set::BitSet::with_capacity (6 samples, 0.02%)</title><rect x="39.9977%" y="1093" width="0.0172%" height="15" fill="rgb(248,22,39)" fg:x="13920" fg:w="6"/><text x="40.2477%" y="1103.50"></text></g><g><title>bit_vec::BitVec::from_elem (6 samples, 0.02%)</title><rect x="39.9977%" y="1077" width="0.0172%" height="15" fill="rgb(212,154,20)" fg:x="13920" fg:w="6"/><text x="40.2477%" y="1087.50"></text></g><g><title>alloc::vec::from_elem (6 samples, 0.02%)</title><rect x="39.9977%" y="1061" width="0.0172%" height="15" fill="rgb(236,199,50)" fg:x="13920" fg:w="6"/><text x="40.2477%" y="1071.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (6 samples, 0.02%)</title><rect x="39.9977%" y="1045" width="0.0172%" height="15" fill="rgb(211,9,17)" fg:x="13920" fg:w="6"/><text x="40.2477%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_zeroed_in (6 samples, 0.02%)</title><rect x="39.9977%" y="1029" width="0.0172%" height="15" fill="rgb(243,216,36)" fg:x="13920" fg:w="6"/><text x="40.2477%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (6 samples, 0.02%)</title><rect x="39.9977%" y="1013" width="0.0172%" height="15" fill="rgb(250,2,10)" fg:x="13920" fg:w="6"/><text x="40.2477%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate_zeroed (6 samples, 0.02%)</title><rect x="39.9977%" y="997" width="0.0172%" height="15" fill="rgb(226,50,48)" fg:x="13920" fg:w="6"/><text x="40.2477%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.02%)</title><rect x="39.9977%" y="981" width="0.0172%" height="15" fill="rgb(243,81,16)" fg:x="13920" fg:w="6"/><text x="40.2477%" y="991.50"></text></g><g><title>alloc::alloc::alloc_zeroed (6 samples, 0.02%)</title><rect x="39.9977%" y="965" width="0.0172%" height="15" fill="rgb(250,14,2)" fg:x="13920" fg:w="6"/><text x="40.2477%" y="975.50"></text></g><g><title>calloc (5 samples, 0.01%)</title><rect x="40.0006%" y="949" width="0.0144%" height="15" fill="rgb(233,135,29)" fg:x="13921" fg:w="5"/><text x="40.2506%" y="959.50"></text></g><g><title>imalloc (5 samples, 0.01%)</title><rect x="40.0006%" y="933" width="0.0144%" height="15" fill="rgb(224,64,43)" fg:x="13921" fg:w="5"/><text x="40.2506%" y="943.50"></text></g><g><title>imalloc_body (5 samples, 0.01%)</title><rect x="40.0006%" y="917" width="0.0144%" height="15" fill="rgb(238,84,13)" fg:x="13921" fg:w="5"/><text x="40.2506%" y="927.50"></text></g><g><title>sz_index2size (5 samples, 0.01%)</title><rect x="40.0006%" y="901" width="0.0144%" height="15" fill="rgb(253,48,26)" fg:x="13921" fg:w="5"/><text x="40.2506%" y="911.50"></text></g><g><title>sz_index2size_lookup (5 samples, 0.01%)</title><rect x="40.0006%" y="885" width="0.0144%" height="15" fill="rgb(205,223,31)" fg:x="13921" fg:w="5"/><text x="40.2506%" y="895.50"></text></g><g><title>bit_set::BitSet&lt;B&gt;::insert (160 samples, 0.46%)</title><rect x="40.0149%" y="1093" width="0.4597%" height="15" fill="rgb(221,41,32)" fg:x="13926" fg:w="160"/><text x="40.2649%" y="1103.50"></text></g><g><title>bit_set::BitSet&lt;B&gt;::contains (160 samples, 0.46%)</title><rect x="40.0149%" y="1077" width="0.4597%" height="15" fill="rgb(213,158,31)" fg:x="13926" fg:w="160"/><text x="40.2649%" y="1087.50"></text></g><g><title>bit_vec::BitVec&lt;B&gt;::len (160 samples, 0.46%)</title><rect x="40.0149%" y="1061" width="0.4597%" height="15" fill="rgb(245,126,43)" fg:x="13926" fg:w="160"/><text x="40.2649%" y="1071.50"></text></g><g><title>cfx_evm::evm::instructions::Instruction::from_u8 (1,520 samples, 4.37%)</title><rect x="40.4747%" y="1093" width="4.3676%" height="15" fill="rgb(227,7,22)" fg:x="14086" fg:w="1520"/><text x="40.7247%" y="1103.50">cfx_e..</text></g><g><title>cfx_evm::evm::interpreter::shared_cache::SharedCache::find_jump_and_sub_destinations (2,463 samples, 7.08%)</title><rect x="39.7104%" y="1109" width="7.0772%" height="15" fill="rgb(252,90,44)" fg:x="13820" fg:w="2463"/><text x="39.9604%" y="1119.50">cfx_evm::..</text></g><g><title>cfx_evm::evm::instructions::Instruction::push_bytes (677 samples, 1.95%)</title><rect x="44.8423%" y="1093" width="1.9453%" height="15" fill="rgb(253,91,0)" fg:x="15606" fg:w="677"/><text x="45.0923%" y="1103.50">c..</text></g><g><title>hashbrown::map::make_hash (4 samples, 0.01%)</title><rect x="46.7875%" y="1029" width="0.0115%" height="15" fill="rgb(252,175,49)" fg:x="16283" fg:w="4"/><text x="47.0375%" y="1039.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.01%)</title><rect x="46.7875%" y="1013" width="0.0115%" height="15" fill="rgb(246,150,1)" fg:x="16283" fg:w="4"/><text x="47.0375%" y="1023.50"></text></g><g><title>lru_cache::LruCache&lt;K,V,S&gt;::insert (8 samples, 0.02%)</title><rect x="46.7875%" y="1093" width="0.0230%" height="15" fill="rgb(241,192,25)" fg:x="16283" fg:w="8"/><text x="47.0375%" y="1103.50"></text></g><g><title>linked_hash_map::LinkedHashMap&lt;K,V,S&gt;::insert (8 samples, 0.02%)</title><rect x="46.7875%" y="1077" width="0.0230%" height="15" fill="rgb(239,187,11)" fg:x="16283" fg:w="8"/><text x="47.0375%" y="1087.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (8 samples, 0.02%)</title><rect x="46.7875%" y="1061" width="0.0230%" height="15" fill="rgb(218,202,51)" fg:x="16283" fg:w="8"/><text x="47.0375%" y="1071.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8 samples, 0.02%)</title><rect x="46.7875%" y="1045" width="0.0230%" height="15" fill="rgb(225,176,8)" fg:x="16283" fg:w="8"/><text x="47.0375%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (4 samples, 0.01%)</title><rect x="46.7990%" y="1029" width="0.0115%" height="15" fill="rgb(219,122,41)" fg:x="16287" fg:w="4"/><text x="47.0490%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (4 samples, 0.01%)</title><rect x="46.7990%" y="1013" width="0.0115%" height="15" fill="rgb(248,140,20)" fg:x="16287" fg:w="4"/><text x="47.0490%" y="1023.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (4 samples, 0.01%)</title><rect x="46.7990%" y="997" width="0.0115%" height="15" fill="rgb(245,41,37)" fg:x="16287" fg:w="4"/><text x="47.0490%" y="1007.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (4 samples, 0.01%)</title><rect x="46.7990%" y="981" width="0.0115%" height="15" fill="rgb(235,82,39)" fg:x="16287" fg:w="4"/><text x="47.0490%" y="991.50"></text></g><g><title>lru_cache::LruCache&lt;K,V,S&gt;::remove_lru (4 samples, 0.01%)</title><rect x="46.8105%" y="1093" width="0.0115%" height="15" fill="rgb(230,108,42)" fg:x="16291" fg:w="4"/><text x="47.0605%" y="1103.50"></text></g><g><title>linked_hash_map::LinkedHashMap&lt;K,V,S&gt;::pop_front (4 samples, 0.01%)</title><rect x="46.8105%" y="1077" width="0.0115%" height="15" fill="rgb(215,150,50)" fg:x="16291" fg:w="4"/><text x="47.0605%" y="1087.50"></text></g><g><title>cfx_evm::evm::interpreter::shared_cache::SharedCache::jump_and_sub_destinations (2,483 samples, 7.13%)</title><rect x="39.6989%" y="1125" width="7.1346%" height="15" fill="rgb(233,212,5)" fg:x="13816" fg:w="2483"/><text x="39.9489%" y="1135.50">cfx_evm::e..</text></g><g><title>memory_cache::MemoryLruCache&lt;K,V&gt;::insert (16 samples, 0.05%)</title><rect x="46.7875%" y="1109" width="0.0460%" height="15" fill="rgb(245,80,22)" fg:x="16283" fg:w="16"/><text x="47.0375%" y="1119.50"></text></g><g><title>memory_cache::MemoryLruCache&lt;K,V&gt;::heap_size_of (4 samples, 0.01%)</title><rect x="46.8220%" y="1093" width="0.0115%" height="15" fill="rgb(238,129,16)" fg:x="16295" fg:w="4"/><text x="47.0720%" y="1103.50"></text></g><g><title>&lt;cfx_evm::evm::interpreter::shared_cache::CacheItem as malloc_size_of::MallocSizeOf&gt;::size_of (4 samples, 0.01%)</title><rect x="46.8220%" y="1077" width="0.0115%" height="15" fill="rgb(240,19,0)" fg:x="16295" fg:w="4"/><text x="47.0720%" y="1087.50"></text></g><g><title>&lt;cfx_evm::evm::interpreter::shared_cache::Bits as malloc_size_of::MallocSizeOf&gt;::size_of (4 samples, 0.01%)</title><rect x="46.8220%" y="1061" width="0.0115%" height="15" fill="rgb(232,42,35)" fg:x="16295" fg:w="4"/><text x="47.0720%" y="1071.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (306 samples, 0.88%)</title><rect x="46.8335%" y="1125" width="0.8793%" height="15" fill="rgb(223,130,24)" fg:x="16299" fg:w="306"/><text x="47.0835%" y="1135.50"></text></g><g><title>core::mem::replace (306 samples, 0.88%)</title><rect x="46.8335%" y="1109" width="0.8793%" height="15" fill="rgb(237,16,22)" fg:x="16299" fg:w="306"/><text x="47.0835%" y="1119.50"></text></g><g><title>core::ptr::write (306 samples, 0.88%)</title><rect x="46.8335%" y="1093" width="0.8793%" height="15" fill="rgb(248,192,20)" fg:x="16299" fg:w="306"/><text x="47.0835%" y="1103.50"></text></g><g><title>&lt;cfx_evm::evm::interpreter::Interpreter&lt;Cost&gt; as cfx_evm::vm::Exec&gt;::exec (3,408 samples, 9.79%)</title><rect x="37.9231%" y="1173" width="9.7925%" height="15" fill="rgb(233,167,2)" fg:x="13198" fg:w="3408"/><text x="38.1731%" y="1183.50">&lt;cfx_evm::evm:..</text></g><g><title>cfx_evm::evm::interpreter::Interpreter&lt;Cost&gt;::step (3,408 samples, 9.79%)</title><rect x="37.9231%" y="1157" width="9.7925%" height="15" fill="rgb(252,71,44)" fg:x="13198" fg:w="3408"/><text x="38.1731%" y="1167.50">cfx_evm::evm::..</text></g><g><title>cfx_evm::evm::interpreter::Interpreter&lt;Cost&gt;::step_inner (3,408 samples, 9.79%)</title><rect x="37.9231%" y="1141" width="9.7925%" height="15" fill="rgb(238,37,47)" fg:x="13198" fg:w="3408"/><text x="38.1731%" y="1151.50">cfx_evm::evm::..</text></g><g><title>&lt;cfx_evm::state::State as cfx_state::state_trait::CheckpointTrait&gt;::checkpoint (11 samples, 0.03%)</title><rect x="47.7156%" y="1173" width="0.0316%" height="15" fill="rgb(214,202,54)" fg:x="16606" fg:w="11"/><text x="47.9656%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (6 samples, 0.02%)</title><rect x="47.7300%" y="1157" width="0.0172%" height="15" fill="rgb(254,165,40)" fg:x="16611" fg:w="6"/><text x="47.9800%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (6 samples, 0.02%)</title><rect x="47.7300%" y="1141" width="0.0172%" height="15" fill="rgb(246,173,38)" fg:x="16611" fg:w="6"/><text x="47.9800%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 0.02%)</title><rect x="47.7300%" y="1125" width="0.0172%" height="15" fill="rgb(215,3,27)" fg:x="16611" fg:w="6"/><text x="47.9800%" y="1135.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.01%)</title><rect x="47.7358%" y="1109" width="0.0115%" height="15" fill="rgb(239,169,51)" fg:x="16613" fg:w="4"/><text x="47.9858%" y="1119.50"></text></g><g><title>cfx_evm::call_create_frame::frame::CallCreateFrame::process_output (7 samples, 0.02%)</title><rect x="47.7473%" y="1173" width="0.0201%" height="15" fill="rgb(212,5,25)" fg:x="16617" fg:w="7"/><text x="47.9973%" y="1183.50"></text></g><g><title>&lt;cfx_evm::state::State as cfx_state::state_trait::StateOpsTrait&gt;::exists (5 samples, 0.01%)</title><rect x="47.7731%" y="1125" width="0.0144%" height="15" fill="rgb(243,45,17)" fg:x="16626" fg:w="5"/><text x="48.0231%" y="1135.50"></text></g><g><title>cfx_evm::state::State::ensure_account_loaded (5 samples, 0.01%)</title><rect x="47.7731%" y="1109" width="0.0144%" height="15" fill="rgb(242,97,9)" fg:x="16626" fg:w="5"/><text x="48.0231%" y="1119.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (5 samples, 0.01%)</title><rect x="47.7731%" y="1093" width="0.0144%" height="15" fill="rgb(228,71,31)" fg:x="16626" fg:w="5"/><text x="48.0231%" y="1103.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (5 samples, 0.01%)</title><rect x="47.7731%" y="1077" width="0.0144%" height="15" fill="rgb(252,184,16)" fg:x="16626" fg:w="5"/><text x="48.0231%" y="1087.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (5 samples, 0.01%)</title><rect x="47.7731%" y="1061" width="0.0144%" height="15" fill="rgb(236,169,46)" fg:x="16626" fg:w="5"/><text x="48.0231%" y="1071.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert_with (6 samples, 0.02%)</title><rect x="47.7875%" y="1093" width="0.0172%" height="15" fill="rgb(207,17,47)" fg:x="16631" fg:w="6"/><text x="48.0375%" y="1103.50"></text></g><g><title>cfx_evm::state::State::require_or_set::{{closure}} (6 samples, 0.02%)</title><rect x="47.7875%" y="1077" width="0.0172%" height="15" fill="rgb(206,201,28)" fg:x="16631" fg:w="6"/><text x="48.0375%" y="1087.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (6 samples, 0.02%)</title><rect x="47.7875%" y="1061" width="0.0172%" height="15" fill="rgb(224,184,23)" fg:x="16631" fg:w="6"/><text x="48.0375%" y="1071.50"></text></g><g><title>core::ops::function::FnOnce::call_once (6 samples, 0.02%)</title><rect x="47.7875%" y="1045" width="0.0172%" height="15" fill="rgb(208,139,48)" fg:x="16631" fg:w="6"/><text x="48.0375%" y="1055.50"></text></g><g><title>cfx_evm::state::account_entry::AccountEntry::clone_dirty (6 samples, 0.02%)</title><rect x="47.7875%" y="1029" width="0.0172%" height="15" fill="rgb(208,130,10)" fg:x="16631" fg:w="6"/><text x="48.0375%" y="1039.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (6 samples, 0.02%)</title><rect x="47.7875%" y="1013" width="0.0172%" height="15" fill="rgb(211,213,45)" fg:x="16631" fg:w="6"/><text x="48.0375%" y="1023.50"></text></g><g><title>core::ops::function::FnOnce::call_once (6 samples, 0.02%)</title><rect x="47.7875%" y="997" width="0.0172%" height="15" fill="rgb(235,100,30)" fg:x="16631" fg:w="6"/><text x="48.0375%" y="1007.50"></text></g><g><title>cfx_evm::state::account_entry::OverlayAccount::clone_dirty (6 samples, 0.02%)</title><rect x="47.7875%" y="981" width="0.0172%" height="15" fill="rgb(206,144,31)" fg:x="16631" fg:w="6"/><text x="48.0375%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;std::collections::hash::map::HashMap&lt;alloc::vec::Vec&lt;u8&gt;,primitive_types::U256&gt;&gt;&gt; (5 samples, 0.01%)</title><rect x="47.7904%" y="965" width="0.0144%" height="15" fill="rgb(224,200,26)" fg:x="16632" fg:w="5"/><text x="48.0404%" y="975.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="47.7904%" y="949" width="0.0144%" height="15" fill="rgb(247,104,53)" fg:x="16632" fg:w="5"/><text x="48.0404%" y="959.50"></text></g><g><title>sdallocx (4 samples, 0.01%)</title><rect x="47.7932%" y="933" width="0.0115%" height="15" fill="rgb(220,14,17)" fg:x="16633" fg:w="4"/><text x="48.0432%" y="943.50"></text></g><g><title>isfree (4 samples, 0.01%)</title><rect x="47.7932%" y="917" width="0.0115%" height="15" fill="rgb(230,140,40)" fg:x="16633" fg:w="4"/><text x="48.0432%" y="927.50"></text></g><g><title>&lt;cfx_evm::state::State as cfx_state::state_trait::StateOpsTrait&gt;::add_balance (28 samples, 0.08%)</title><rect x="47.7674%" y="1141" width="0.0805%" height="15" fill="rgb(229,2,41)" fg:x="16624" fg:w="28"/><text x="48.0174%" y="1151.50"></text></g><g><title>cfx_evm::state::State::require_or_new_basic_account (21 samples, 0.06%)</title><rect x="47.7875%" y="1125" width="0.0603%" height="15" fill="rgb(232,89,16)" fg:x="16631" fg:w="21"/><text x="48.0375%" y="1135.50"></text></g><g><title>cfx_evm::state::State::require_or_set (21 samples, 0.06%)</title><rect x="47.7875%" y="1109" width="0.0603%" height="15" fill="rgb(247,59,52)" fg:x="16631" fg:w="21"/><text x="48.0375%" y="1119.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (15 samples, 0.04%)</title><rect x="47.8047%" y="1093" width="0.0431%" height="15" fill="rgb(226,110,21)" fg:x="16637" fg:w="15"/><text x="48.0547%" y="1103.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (15 samples, 0.04%)</title><rect x="47.8047%" y="1077" width="0.0431%" height="15" fill="rgb(224,176,43)" fg:x="16637" fg:w="15"/><text x="48.0547%" y="1087.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (15 samples, 0.04%)</title><rect x="47.8047%" y="1061" width="0.0431%" height="15" fill="rgb(221,73,6)" fg:x="16637" fg:w="15"/><text x="48.0547%" y="1071.50"></text></g><g><title>hashbrown::map::make_hash (15 samples, 0.04%)</title><rect x="47.8047%" y="1045" width="0.0431%" height="15" fill="rgb(232,78,19)" fg:x="16637" fg:w="15"/><text x="48.0547%" y="1055.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert_with (6 samples, 0.02%)</title><rect x="47.8536%" y="1093" width="0.0172%" height="15" fill="rgb(233,112,48)" fg:x="16654" fg:w="6"/><text x="48.1036%" y="1103.50"></text></g><g><title>cfx_evm::state::State::require_or_set::{{closure}} (6 samples, 0.02%)</title><rect x="47.8536%" y="1077" width="0.0172%" height="15" fill="rgb(243,131,47)" fg:x="16654" fg:w="6"/><text x="48.1036%" y="1087.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (6 samples, 0.02%)</title><rect x="47.8536%" y="1061" width="0.0172%" height="15" fill="rgb(226,51,1)" fg:x="16654" fg:w="6"/><text x="48.1036%" y="1071.50"></text></g><g><title>core::ops::function::FnOnce::call_once (6 samples, 0.02%)</title><rect x="47.8536%" y="1045" width="0.0172%" height="15" fill="rgb(247,58,7)" fg:x="16654" fg:w="6"/><text x="48.1036%" y="1055.50"></text></g><g><title>cfx_evm::state::account_entry::AccountEntry::clone_dirty (6 samples, 0.02%)</title><rect x="47.8536%" y="1029" width="0.0172%" height="15" fill="rgb(209,7,32)" fg:x="16654" fg:w="6"/><text x="48.1036%" y="1039.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (6 samples, 0.02%)</title><rect x="47.8536%" y="1013" width="0.0172%" height="15" fill="rgb(209,39,41)" fg:x="16654" fg:w="6"/><text x="48.1036%" y="1023.50"></text></g><g><title>core::ops::function::FnOnce::call_once (6 samples, 0.02%)</title><rect x="47.8536%" y="997" width="0.0172%" height="15" fill="rgb(226,182,46)" fg:x="16654" fg:w="6"/><text x="48.1036%" y="1007.50"></text></g><g><title>cfx_evm::state::account_entry::OverlayAccount::clone_dirty (6 samples, 0.02%)</title><rect x="47.8536%" y="981" width="0.0172%" height="15" fill="rgb(230,219,10)" fg:x="16654" fg:w="6"/><text x="48.1036%" y="991.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (5 samples, 0.01%)</title><rect x="47.8708%" y="1093" width="0.0144%" height="15" fill="rgb(227,175,30)" fg:x="16660" fg:w="5"/><text x="48.1208%" y="1103.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (5 samples, 0.01%)</title><rect x="47.8708%" y="1077" width="0.0144%" height="15" fill="rgb(217,2,50)" fg:x="16660" fg:w="5"/><text x="48.1208%" y="1087.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (5 samples, 0.01%)</title><rect x="47.8708%" y="1061" width="0.0144%" height="15" fill="rgb(229,160,0)" fg:x="16660" fg:w="5"/><text x="48.1208%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (5 samples, 0.01%)</title><rect x="47.8708%" y="1045" width="0.0144%" height="15" fill="rgb(207,78,37)" fg:x="16660" fg:w="5"/><text x="48.1208%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.01%)</title><rect x="47.8708%" y="1029" width="0.0144%" height="15" fill="rgb(225,57,0)" fg:x="16660" fg:w="5"/><text x="48.1208%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (5 samples, 0.01%)</title><rect x="47.8708%" y="1013" width="0.0144%" height="15" fill="rgb(232,154,2)" fg:x="16660" fg:w="5"/><text x="48.1208%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (5 samples, 0.01%)</title><rect x="47.8708%" y="997" width="0.0144%" height="15" fill="rgb(241,212,25)" fg:x="16660" fg:w="5"/><text x="48.1208%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize (5 samples, 0.01%)</title><rect x="47.8708%" y="981" width="0.0144%" height="15" fill="rgb(226,69,20)" fg:x="16660" fg:w="5"/><text x="48.1208%" y="991.50"></text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (5 samples, 0.01%)</title><rect x="47.8708%" y="965" width="0.0144%" height="15" fill="rgb(247,184,54)" fg:x="16660" fg:w="5"/><text x="48.1208%" y="975.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (5 samples, 0.01%)</title><rect x="47.8708%" y="949" width="0.0144%" height="15" fill="rgb(210,145,0)" fg:x="16660" fg:w="5"/><text x="48.1208%" y="959.50"></text></g><g><title>cfx_evm::state::State::require_exists (13 samples, 0.04%)</title><rect x="47.8536%" y="1125" width="0.0374%" height="15" fill="rgb(253,82,12)" fg:x="16654" fg:w="13"/><text x="48.1036%" y="1135.50"></text></g><g><title>cfx_evm::state::State::require_or_set (13 samples, 0.04%)</title><rect x="47.8536%" y="1109" width="0.0374%" height="15" fill="rgb(245,42,11)" fg:x="16654" fg:w="13"/><text x="48.1036%" y="1119.50"></text></g><g><title>cfx_evm::call_create_frame::frame::CallCreateFrame::transfer_exec_balance (47 samples, 0.14%)</title><rect x="47.7674%" y="1173" width="0.1350%" height="15" fill="rgb(219,147,32)" fg:x="16624" fg:w="47"/><text x="48.0174%" y="1183.50"></text></g><g><title>&lt;cfx_evm::state::State as cfx_state::state_trait::StateOpsTrait&gt;::transfer_balance (47 samples, 0.14%)</title><rect x="47.7674%" y="1157" width="0.1350%" height="15" fill="rgb(246,12,7)" fg:x="16624" fg:w="47"/><text x="48.0174%" y="1167.50"></text></g><g><title>&lt;cfx_evm::state::State as cfx_state::state_trait::StateOpsTrait&gt;::sub_balance (19 samples, 0.05%)</title><rect x="47.8478%" y="1141" width="0.0546%" height="15" fill="rgb(243,50,9)" fg:x="16652" fg:w="19"/><text x="48.0978%" y="1151.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (4 samples, 0.01%)</title><rect x="47.8909%" y="1125" width="0.0115%" height="15" fill="rgb(219,149,6)" fg:x="16667" fg:w="4"/><text x="48.1409%" y="1135.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (4 samples, 0.01%)</title><rect x="47.8909%" y="1109" width="0.0115%" height="15" fill="rgb(241,51,42)" fg:x="16667" fg:w="4"/><text x="48.1409%" y="1119.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.01%)</title><rect x="47.8909%" y="1093" width="0.0115%" height="15" fill="rgb(226,128,27)" fg:x="16667" fg:w="4"/><text x="48.1409%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (5 samples, 0.01%)</title><rect x="47.9053%" y="1157" width="0.0144%" height="15" fill="rgb(244,144,4)" fg:x="16672" fg:w="5"/><text x="48.1553%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (5 samples, 0.01%)</title><rect x="47.9053%" y="1141" width="0.0144%" height="15" fill="rgb(221,4,13)" fg:x="16672" fg:w="5"/><text x="48.1553%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.01%)</title><rect x="47.9053%" y="1125" width="0.0144%" height="15" fill="rgb(208,170,28)" fg:x="16672" fg:w="5"/><text x="48.1553%" y="1135.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.01%)</title><rect x="47.9053%" y="1109" width="0.0144%" height="15" fill="rgb(226,131,13)" fg:x="16672" fg:w="5"/><text x="48.1553%" y="1119.50"></text></g><g><title>cfx_evm::state::substate::FrameStackInfo::push (12 samples, 0.03%)</title><rect x="47.9024%" y="1173" width="0.0345%" height="15" fill="rgb(215,72,41)" fg:x="16671" fg:w="12"/><text x="48.1524%" y="1183.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (6 samples, 0.02%)</title><rect x="47.9197%" y="1157" width="0.0172%" height="15" fill="rgb(243,108,20)" fg:x="16677" fg:w="6"/><text x="48.1697%" y="1167.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (6 samples, 0.02%)</title><rect x="47.9197%" y="1141" width="0.0172%" height="15" fill="rgb(230,189,17)" fg:x="16677" fg:w="6"/><text x="48.1697%" y="1151.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (6 samples, 0.02%)</title><rect x="47.9197%" y="1125" width="0.0172%" height="15" fill="rgb(220,50,17)" fg:x="16677" fg:w="6"/><text x="48.1697%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (6 samples, 0.02%)</title><rect x="47.9197%" y="1109" width="0.0172%" height="15" fill="rgb(248,152,48)" fg:x="16677" fg:w="6"/><text x="48.1697%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (6 samples, 0.02%)</title><rect x="47.9197%" y="1093" width="0.0172%" height="15" fill="rgb(244,91,11)" fg:x="16677" fg:w="6"/><text x="48.1697%" y="1103.50"></text></g><g><title>cfx_evm::call_create_frame::frame::CallCreateFrame::exec (3,511 samples, 10.09%)</title><rect x="37.8771%" y="1189" width="10.0885%" height="15" fill="rgb(220,157,5)" fg:x="13182" fg:w="3511"/><text x="38.1271%" y="1199.50">cfx_evm::call_c..</text></g><g><title>cfx_evm::vm_factory::VmFactory::create (10 samples, 0.03%)</title><rect x="47.9369%" y="1173" width="0.0287%" height="15" fill="rgb(253,137,8)" fg:x="16683" fg:w="10"/><text x="48.1869%" y="1183.50"></text></g><g><title>cfx_evm::evm::factory::Factory::create (10 samples, 0.03%)</title><rect x="47.9369%" y="1157" width="0.0287%" height="15" fill="rgb(217,137,51)" fg:x="16683" fg:w="10"/><text x="48.1869%" y="1167.50"></text></g><g><title>cfx_evm::evm::interpreter::Interpreter&lt;Cost&gt;::new (8 samples, 0.02%)</title><rect x="47.9426%" y="1141" width="0.0230%" height="15" fill="rgb(218,209,53)" fg:x="16685" fg:w="8"/><text x="48.1926%" y="1151.50"></text></g><g><title>cfx_evm::evm::interpreter::stack::VecStack&lt;S&gt;::with_capacity (4 samples, 0.01%)</title><rect x="47.9541%" y="1125" width="0.0115%" height="15" fill="rgb(249,137,25)" fg:x="16689" fg:w="4"/><text x="48.2041%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="47.9541%" y="1109" width="0.0115%" height="15" fill="rgb(239,155,26)" fg:x="16689" fg:w="4"/><text x="48.2041%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.01%)</title><rect x="47.9541%" y="1093" width="0.0115%" height="15" fill="rgb(227,85,46)" fg:x="16689" fg:w="4"/><text x="48.2041%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.01%)</title><rect x="47.9541%" y="1077" width="0.0115%" height="15" fill="rgb(251,107,43)" fg:x="16689" fg:w="4"/><text x="48.2041%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (4 samples, 0.01%)</title><rect x="47.9541%" y="1061" width="0.0115%" height="15" fill="rgb(234,170,33)" fg:x="16689" fg:w="4"/><text x="48.2041%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.01%)</title><rect x="47.9541%" y="1045" width="0.0115%" height="15" fill="rgb(206,29,35)" fg:x="16689" fg:w="4"/><text x="48.2041%" y="1055.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.01%)</title><rect x="47.9541%" y="1029" width="0.0115%" height="15" fill="rgb(227,138,25)" fg:x="16689" fg:w="4"/><text x="48.2041%" y="1039.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.01%)</title><rect x="47.9541%" y="1013" width="0.0115%" height="15" fill="rgb(249,131,35)" fg:x="16689" fg:w="4"/><text x="48.2041%" y="1023.50"></text></g><g><title>mallocx (4 samples, 0.01%)</title><rect x="47.9541%" y="997" width="0.0115%" height="15" fill="rgb(239,6,40)" fg:x="16689" fg:w="4"/><text x="48.2041%" y="1007.50"></text></g><g><title>imalloc (4 samples, 0.01%)</title><rect x="47.9541%" y="981" width="0.0115%" height="15" fill="rgb(246,136,47)" fg:x="16689" fg:w="4"/><text x="48.2041%" y="991.50"></text></g><g><title>imalloc_body (4 samples, 0.01%)</title><rect x="47.9541%" y="965" width="0.0115%" height="15" fill="rgb(253,58,26)" fg:x="16689" fg:w="4"/><text x="48.2041%" y="975.50"></text></g><g><title>imalloc_no_sample (4 samples, 0.01%)</title><rect x="47.9541%" y="949" width="0.0115%" height="15" fill="rgb(237,141,10)" fg:x="16689" fg:w="4"/><text x="48.2041%" y="959.50"></text></g><g><title>iallocztm (4 samples, 0.01%)</title><rect x="47.9541%" y="933" width="0.0115%" height="15" fill="rgb(234,156,12)" fg:x="16689" fg:w="4"/><text x="48.2041%" y="943.50"></text></g><g><title>arena_malloc (4 samples, 0.01%)</title><rect x="47.9541%" y="917" width="0.0115%" height="15" fill="rgb(243,224,36)" fg:x="16689" fg:w="4"/><text x="48.2041%" y="927.50"></text></g><g><title>tcache_alloc_large (4 samples, 0.01%)</title><rect x="47.9541%" y="901" width="0.0115%" height="15" fill="rgb(205,229,51)" fg:x="16689" fg:w="4"/><text x="48.2041%" y="911.50"></text></g><g><title>cache_bin_alloc_easy (4 samples, 0.01%)</title><rect x="47.9541%" y="885" width="0.0115%" height="15" fill="rgb(223,189,4)" fg:x="16689" fg:w="4"/><text x="48.2041%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (22 samples, 0.06%)</title><rect x="48.1524%" y="725" width="0.0632%" height="15" fill="rgb(249,167,54)" fg:x="16758" fg:w="22"/><text x="48.4024%" y="735.50"></text></g><g><title>alloc::alloc::Global::grow_impl (22 samples, 0.06%)</title><rect x="48.1524%" y="709" width="0.0632%" height="15" fill="rgb(218,34,28)" fg:x="16758" fg:w="22"/><text x="48.4024%" y="719.50"></text></g><g><title>alloc::alloc::realloc (22 samples, 0.06%)</title><rect x="48.1524%" y="693" width="0.0632%" height="15" fill="rgb(232,109,42)" fg:x="16758" fg:w="22"/><text x="48.4024%" y="703.50"></text></g><g><title>rallocx (20 samples, 0.06%)</title><rect x="48.1582%" y="677" width="0.0575%" height="15" fill="rgb(248,214,46)" fg:x="16760" fg:w="20"/><text x="48.4082%" y="687.50"></text></g><g><title>iralloct (8 samples, 0.02%)</title><rect x="48.1926%" y="661" width="0.0230%" height="15" fill="rgb(244,216,40)" fg:x="16772" fg:w="8"/><text x="48.4426%" y="671.50"></text></g><g><title>_rjem_je_arena_ralloc (8 samples, 0.02%)</title><rect x="48.1926%" y="645" width="0.0230%" height="15" fill="rgb(231,226,31)" fg:x="16772" fg:w="8"/><text x="48.4426%" y="655.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (39 samples, 0.11%)</title><rect x="48.1064%" y="981" width="0.1121%" height="15" fill="rgb(238,38,43)" fg:x="16742" fg:w="39"/><text x="48.3564%" y="991.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (39 samples, 0.11%)</title><rect x="48.1064%" y="965" width="0.1121%" height="15" fill="rgb(208,88,43)" fg:x="16742" fg:w="39"/><text x="48.3564%" y="975.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (39 samples, 0.11%)</title><rect x="48.1064%" y="949" width="0.1121%" height="15" fill="rgb(205,136,37)" fg:x="16742" fg:w="39"/><text x="48.3564%" y="959.50"></text></g><g><title> 32]&gt;::serialize (39 samples, 0.11%)</title><rect x="48.1064%" y="933" width="0.1121%" height="15" fill="rgb(237,34,14)" fg:x="16742" fg:w="39"/><text x="48.3564%" y="943.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (27 samples, 0.08%)</title><rect x="48.1409%" y="917" width="0.0776%" height="15" fill="rgb(236,193,44)" fg:x="16754" fg:w="27"/><text x="48.3909%" y="927.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (27 samples, 0.08%)</title><rect x="48.1409%" y="901" width="0.0776%" height="15" fill="rgb(231,48,10)" fg:x="16754" fg:w="27"/><text x="48.3909%" y="911.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (27 samples, 0.08%)</title><rect x="48.1409%" y="885" width="0.0776%" height="15" fill="rgb(213,141,34)" fg:x="16754" fg:w="27"/><text x="48.3909%" y="895.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (27 samples, 0.08%)</title><rect x="48.1409%" y="869" width="0.0776%" height="15" fill="rgb(249,130,34)" fg:x="16754" fg:w="27"/><text x="48.3909%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (27 samples, 0.08%)</title><rect x="48.1409%" y="853" width="0.0776%" height="15" fill="rgb(219,42,41)" fg:x="16754" fg:w="27"/><text x="48.3909%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (27 samples, 0.08%)</title><rect x="48.1409%" y="837" width="0.0776%" height="15" fill="rgb(224,100,54)" fg:x="16754" fg:w="27"/><text x="48.3909%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (27 samples, 0.08%)</title><rect x="48.1409%" y="821" width="0.0776%" height="15" fill="rgb(229,200,27)" fg:x="16754" fg:w="27"/><text x="48.3909%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (27 samples, 0.08%)</title><rect x="48.1409%" y="805" width="0.0776%" height="15" fill="rgb(217,118,10)" fg:x="16754" fg:w="27"/><text x="48.3909%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (27 samples, 0.08%)</title><rect x="48.1409%" y="789" width="0.0776%" height="15" fill="rgb(206,22,3)" fg:x="16754" fg:w="27"/><text x="48.3909%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (27 samples, 0.08%)</title><rect x="48.1409%" y="773" width="0.0776%" height="15" fill="rgb(232,163,46)" fg:x="16754" fg:w="27"/><text x="48.3909%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (23 samples, 0.07%)</title><rect x="48.1524%" y="757" width="0.0661%" height="15" fill="rgb(206,95,13)" fg:x="16758" fg:w="23"/><text x="48.4024%" y="767.50"></text></g><g><title>alloc::raw_vec::finish_grow (23 samples, 0.07%)</title><rect x="48.1524%" y="741" width="0.0661%" height="15" fill="rgb(253,154,18)" fg:x="16758" fg:w="23"/><text x="48.4024%" y="751.50"></text></g><g><title>bcs::ser::to_bytes (45 samples, 0.13%)</title><rect x="48.1064%" y="1013" width="0.1293%" height="15" fill="rgb(219,32,23)" fg:x="16742" fg:w="45"/><text x="48.3564%" y="1023.50"></text></g><g><title>bcs::ser::serialize_into (45 samples, 0.13%)</title><rect x="48.1064%" y="997" width="0.1293%" height="15" fill="rgb(230,191,45)" fg:x="16742" fg:w="45"/><text x="48.3564%" y="1007.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u64&gt;::serialize (6 samples, 0.02%)</title><rect x="48.2185%" y="981" width="0.0172%" height="15" fill="rgb(229,64,36)" fg:x="16781" fg:w="6"/><text x="48.4685%" y="991.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u64 (6 samples, 0.02%)</title><rect x="48.2185%" y="965" width="0.0172%" height="15" fill="rgb(205,129,25)" fg:x="16781" fg:w="6"/><text x="48.4685%" y="975.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (6 samples, 0.02%)</title><rect x="48.2185%" y="949" width="0.0172%" height="15" fill="rgb(254,112,7)" fg:x="16781" fg:w="6"/><text x="48.4685%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (6 samples, 0.02%)</title><rect x="48.2185%" y="933" width="0.0172%" height="15" fill="rgb(226,53,48)" fg:x="16781" fg:w="6"/><text x="48.4685%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (6 samples, 0.02%)</title><rect x="48.2185%" y="917" width="0.0172%" height="15" fill="rgb(214,153,38)" fg:x="16781" fg:w="6"/><text x="48.4685%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (6 samples, 0.02%)</title><rect x="48.2185%" y="901" width="0.0172%" height="15" fill="rgb(243,101,7)" fg:x="16781" fg:w="6"/><text x="48.4685%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (6 samples, 0.02%)</title><rect x="48.2185%" y="885" width="0.0172%" height="15" fill="rgb(240,140,22)" fg:x="16781" fg:w="6"/><text x="48.4685%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.02%)</title><rect x="48.2185%" y="869" width="0.0172%" height="15" fill="rgb(235,114,2)" fg:x="16781" fg:w="6"/><text x="48.4685%" y="879.50"></text></g><g><title>move_core_types::identifier::is_valid (7 samples, 0.02%)</title><rect x="48.2472%" y="1013" width="0.0201%" height="15" fill="rgb(242,59,12)" fg:x="16791" fg:w="7"/><text x="48.4972%" y="1023.50"></text></g><g><title>move_bytecode_verifier::script_signature::verify_module_function_signature_by_name (8 samples, 0.02%)</title><rect x="48.3047%" y="981" width="0.0230%" height="15" fill="rgb(252,134,9)" fg:x="16811" fg:w="8"/><text x="48.5547%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (8 samples, 0.02%)</title><rect x="48.3047%" y="965" width="0.0230%" height="15" fill="rgb(236,4,44)" fg:x="16811" fg:w="8"/><text x="48.5547%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (8 samples, 0.02%)</title><rect x="48.3047%" y="949" width="0.0230%" height="15" fill="rgb(254,172,41)" fg:x="16811" fg:w="8"/><text x="48.5547%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (8 samples, 0.02%)</title><rect x="48.3047%" y="933" width="0.0230%" height="15" fill="rgb(244,63,20)" fg:x="16811" fg:w="8"/><text x="48.5547%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (8 samples, 0.02%)</title><rect x="48.3047%" y="917" width="0.0230%" height="15" fill="rgb(250,73,31)" fg:x="16811" fg:w="8"/><text x="48.5547%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (8 samples, 0.02%)</title><rect x="48.3047%" y="901" width="0.0230%" height="15" fill="rgb(241,38,36)" fg:x="16811" fg:w="8"/><text x="48.5547%" y="911.50"></text></g><g><title>move_bytecode_verifier::script_signature::verify_module_function_signature_by_name::{{closure}} (8 samples, 0.02%)</title><rect x="48.3047%" y="885" width="0.0230%" height="15" fill="rgb(245,211,2)" fg:x="16811" fg:w="8"/><text x="48.5547%" y="895.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (8 samples, 0.02%)</title><rect x="48.3047%" y="869" width="0.0230%" height="15" fill="rgb(206,120,28)" fg:x="16811" fg:w="8"/><text x="48.5547%" y="879.50"></text></g><g><title>&lt;move_core_types::identifier::IdentStr as core::cmp::PartialEq&gt;::eq (8 samples, 0.02%)</title><rect x="48.3047%" y="853" width="0.0230%" height="15" fill="rgb(211,59,34)" fg:x="16811" fg:w="8"/><text x="48.5547%" y="863.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (8 samples, 0.02%)</title><rect x="48.3047%" y="837" width="0.0230%" height="15" fill="rgb(233,168,5)" fg:x="16811" fg:w="8"/><text x="48.5547%" y="847.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (8 samples, 0.02%)</title><rect x="48.3047%" y="821" width="0.0230%" height="15" fill="rgb(234,33,13)" fg:x="16811" fg:w="8"/><text x="48.5547%" y="831.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (8 samples, 0.02%)</title><rect x="48.3047%" y="805" width="0.0230%" height="15" fill="rgb(231,150,26)" fg:x="16811" fg:w="8"/><text x="48.5547%" y="815.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (8 samples, 0.02%)</title><rect x="48.3047%" y="789" width="0.0230%" height="15" fill="rgb(217,191,4)" fg:x="16811" fg:w="8"/><text x="48.5547%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.02%)</title><rect x="48.3478%" y="805" width="0.0172%" height="15" fill="rgb(246,198,38)" fg:x="16826" fg:w="6"/><text x="48.5978%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (6 samples, 0.02%)</title><rect x="48.3478%" y="789" width="0.0172%" height="15" fill="rgb(245,64,37)" fg:x="16826" fg:w="6"/><text x="48.5978%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.02%)</title><rect x="48.3478%" y="773" width="0.0172%" height="15" fill="rgb(250,30,36)" fg:x="16826" fg:w="6"/><text x="48.5978%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.02%)</title><rect x="48.3478%" y="757" width="0.0172%" height="15" fill="rgb(217,86,53)" fg:x="16826" fg:w="6"/><text x="48.5978%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (6 samples, 0.02%)</title><rect x="48.3478%" y="741" width="0.0172%" height="15" fill="rgb(228,157,16)" fg:x="16826" fg:w="6"/><text x="48.5978%" y="751.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (6 samples, 0.02%)</title><rect x="48.3478%" y="725" width="0.0172%" height="15" fill="rgb(217,59,31)" fg:x="16826" fg:w="6"/><text x="48.5978%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::{{closure}} (6 samples, 0.02%)</title><rect x="48.3478%" y="709" width="0.0172%" height="15" fill="rgb(237,138,41)" fg:x="16826" fg:w="6"/><text x="48.5978%" y="719.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (6 samples, 0.02%)</title><rect x="48.3478%" y="693" width="0.0172%" height="15" fill="rgb(227,91,49)" fg:x="16826" fg:w="6"/><text x="48.5978%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (7 samples, 0.02%)</title><rect x="48.3478%" y="837" width="0.0201%" height="15" fill="rgb(247,21,44)" fg:x="16826" fg:w="7"/><text x="48.5978%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (7 samples, 0.02%)</title><rect x="48.3478%" y="821" width="0.0201%" height="15" fill="rgb(219,210,51)" fg:x="16826" fg:w="7"/><text x="48.5978%" y="831.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (5 samples, 0.01%)</title><rect x="48.3708%" y="693" width="0.0144%" height="15" fill="rgb(209,140,6)" fg:x="16834" fg:w="5"/><text x="48.6208%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.03%)</title><rect x="48.3679%" y="837" width="0.0259%" height="15" fill="rgb(221,188,24)" fg:x="16833" fg:w="9"/><text x="48.6179%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (9 samples, 0.03%)</title><rect x="48.3679%" y="821" width="0.0259%" height="15" fill="rgb(232,154,20)" fg:x="16833" fg:w="9"/><text x="48.6179%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (9 samples, 0.03%)</title><rect x="48.3679%" y="805" width="0.0259%" height="15" fill="rgb(244,137,50)" fg:x="16833" fg:w="9"/><text x="48.6179%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (9 samples, 0.03%)</title><rect x="48.3679%" y="789" width="0.0259%" height="15" fill="rgb(225,185,43)" fg:x="16833" fg:w="9"/><text x="48.6179%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (9 samples, 0.03%)</title><rect x="48.3679%" y="773" width="0.0259%" height="15" fill="rgb(213,205,38)" fg:x="16833" fg:w="9"/><text x="48.6179%" y="783.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (9 samples, 0.03%)</title><rect x="48.3679%" y="757" width="0.0259%" height="15" fill="rgb(236,73,12)" fg:x="16833" fg:w="9"/><text x="48.6179%" y="767.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_function::{{closure}} (9 samples, 0.03%)</title><rect x="48.3679%" y="741" width="0.0259%" height="15" fill="rgb(235,219,13)" fg:x="16833" fg:w="9"/><text x="48.6179%" y="751.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::make_type (9 samples, 0.03%)</title><rect x="48.3679%" y="725" width="0.0259%" height="15" fill="rgb(218,59,36)" fg:x="16833" fg:w="9"/><text x="48.6179%" y="735.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::make_type_internal (8 samples, 0.02%)</title><rect x="48.3708%" y="709" width="0.0230%" height="15" fill="rgb(205,110,39)" fg:x="16834" fg:w="8"/><text x="48.6208%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (23 samples, 0.07%)</title><rect x="48.3306%" y="965" width="0.0661%" height="15" fill="rgb(218,206,42)" fg:x="16820" fg:w="23"/><text x="48.5806%" y="975.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (23 samples, 0.07%)</title><rect x="48.3306%" y="949" width="0.0661%" height="15" fill="rgb(248,125,24)" fg:x="16820" fg:w="23"/><text x="48.5806%" y="959.50"></text></g><g><title>core::iter::adapters::try_process (23 samples, 0.07%)</title><rect x="48.3306%" y="933" width="0.0661%" height="15" fill="rgb(242,28,27)" fg:x="16820" fg:w="23"/><text x="48.5806%" y="943.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (20 samples, 0.06%)</title><rect x="48.3392%" y="917" width="0.0575%" height="15" fill="rgb(216,228,15)" fg:x="16823" fg:w="20"/><text x="48.5892%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (20 samples, 0.06%)</title><rect x="48.3392%" y="901" width="0.0575%" height="15" fill="rgb(235,116,46)" fg:x="16823" fg:w="20"/><text x="48.5892%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (20 samples, 0.06%)</title><rect x="48.3392%" y="885" width="0.0575%" height="15" fill="rgb(224,18,32)" fg:x="16823" fg:w="20"/><text x="48.5892%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (18 samples, 0.05%)</title><rect x="48.3449%" y="869" width="0.0517%" height="15" fill="rgb(252,5,12)" fg:x="16825" fg:w="18"/><text x="48.5949%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (17 samples, 0.05%)</title><rect x="48.3478%" y="853" width="0.0488%" height="15" fill="rgb(251,36,5)" fg:x="16826" fg:w="17"/><text x="48.5978%" y="863.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (8 samples, 0.02%)</title><rect x="48.4254%" y="917" width="0.0230%" height="15" fill="rgb(217,53,14)" fg:x="16853" fg:w="8"/><text x="48.6754%" y="927.50"></text></g><g><title>core::ops::function::FnOnce::call_once (8 samples, 0.02%)</title><rect x="48.4254%" y="901" width="0.0230%" height="15" fill="rgb(215,86,45)" fg:x="16853" fg:w="8"/><text x="48.6754%" y="911.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.02%)</title><rect x="48.4254%" y="885" width="0.0230%" height="15" fill="rgb(242,169,11)" fg:x="16853" fg:w="8"/><text x="48.6754%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (8 samples, 0.02%)</title><rect x="48.4254%" y="869" width="0.0230%" height="15" fill="rgb(211,213,45)" fg:x="16853" fg:w="8"/><text x="48.6754%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_add (8 samples, 0.02%)</title><rect x="48.4254%" y="853" width="0.0230%" height="15" fill="rgb(205,88,11)" fg:x="16853" fg:w="8"/><text x="48.6754%" y="863.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module (25 samples, 0.07%)</title><rect x="48.4053%" y="965" width="0.0718%" height="15" fill="rgb(252,69,26)" fg:x="16846" fg:w="25"/><text x="48.6553%" y="975.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module_internal (21 samples, 0.06%)</title><rect x="48.4168%" y="949" width="0.0603%" height="15" fill="rgb(246,123,37)" fg:x="16850" fg:w="21"/><text x="48.6668%" y="959.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::module_at (18 samples, 0.05%)</title><rect x="48.4254%" y="933" width="0.0517%" height="15" fill="rgb(212,205,5)" fg:x="16853" fg:w="18"/><text x="48.6754%" y="943.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (10 samples, 0.03%)</title><rect x="48.4484%" y="917" width="0.0287%" height="15" fill="rgb(253,148,0)" fg:x="16861" fg:w="10"/><text x="48.6984%" y="927.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (10 samples, 0.03%)</title><rect x="48.4484%" y="901" width="0.0287%" height="15" fill="rgb(239,22,4)" fg:x="16861" fg:w="10"/><text x="48.6984%" y="911.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (10 samples, 0.03%)</title><rect x="48.4484%" y="885" width="0.0287%" height="15" fill="rgb(226,26,53)" fg:x="16861" fg:w="10"/><text x="48.6984%" y="895.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (10 samples, 0.03%)</title><rect x="48.4484%" y="869" width="0.0287%" height="15" fill="rgb(225,229,45)" fg:x="16861" fg:w="10"/><text x="48.6984%" y="879.50"></text></g><g><title>hashbrown::map::make_hash (10 samples, 0.03%)</title><rect x="48.4484%" y="853" width="0.0287%" height="15" fill="rgb(220,60,37)" fg:x="16861" fg:w="10"/><text x="48.6984%" y="863.50"></text></g><g><title>core::hash::BuildHasher::hash_one (10 samples, 0.03%)</title><rect x="48.4484%" y="837" width="0.0287%" height="15" fill="rgb(217,180,35)" fg:x="16861" fg:w="10"/><text x="48.6984%" y="847.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (10 samples, 0.03%)</title><rect x="48.4484%" y="821" width="0.0287%" height="15" fill="rgb(229,7,53)" fg:x="16861" fg:w="10"/><text x="48.6984%" y="831.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::hash::Hash&gt;::hash (10 samples, 0.03%)</title><rect x="48.4484%" y="805" width="0.0287%" height="15" fill="rgb(254,137,3)" fg:x="16861" fg:w="10"/><text x="48.6984%" y="815.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::hash::Hash&gt;::hash (7 samples, 0.02%)</title><rect x="48.4570%" y="789" width="0.0201%" height="15" fill="rgb(215,140,41)" fg:x="16864" fg:w="7"/><text x="48.7070%" y="799.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (7 samples, 0.02%)</title><rect x="48.4570%" y="773" width="0.0201%" height="15" fill="rgb(250,80,15)" fg:x="16864" fg:w="7"/><text x="48.7070%" y="783.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (7 samples, 0.02%)</title><rect x="48.4570%" y="757" width="0.0201%" height="15" fill="rgb(252,191,6)" fg:x="16864" fg:w="7"/><text x="48.7070%" y="767.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write_str (7 samples, 0.02%)</title><rect x="48.4570%" y="741" width="0.0201%" height="15" fill="rgb(246,217,18)" fg:x="16864" fg:w="7"/><text x="48.7070%" y="751.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (7 samples, 0.02%)</title><rect x="48.4570%" y="725" width="0.0201%" height="15" fill="rgb(223,93,7)" fg:x="16864" fg:w="7"/><text x="48.7070%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (7 samples, 0.02%)</title><rect x="48.4570%" y="709" width="0.0201%" height="15" fill="rgb(225,55,52)" fg:x="16864" fg:w="7"/><text x="48.7070%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.02%)</title><rect x="48.4570%" y="693" width="0.0201%" height="15" fill="rgb(240,31,24)" fg:x="16864" fg:w="7"/><text x="48.7070%" y="703.50"></text></g><g><title>core::hash::sip::u8to64_le (7 samples, 0.02%)</title><rect x="48.4570%" y="677" width="0.0201%" height="15" fill="rgb(205,56,52)" fg:x="16864" fg:w="7"/><text x="48.7070%" y="687.50"></text></g><g><title>hashbrown::map::make_hash (6 samples, 0.02%)</title><rect x="48.4915%" y="885" width="0.0172%" height="15" fill="rgb(246,146,12)" fg:x="16876" fg:w="6"/><text x="48.7415%" y="895.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5 samples, 0.01%)</title><rect x="48.4943%" y="869" width="0.0144%" height="15" fill="rgb(239,84,36)" fg:x="16877" fg:w="5"/><text x="48.7443%" y="879.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_function (68 samples, 0.20%)</title><rect x="48.3277%" y="981" width="0.1954%" height="15" fill="rgb(207,41,40)" fg:x="16819" fg:w="68"/><text x="48.5777%" y="991.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::resolve_function_by_name (14 samples, 0.04%)</title><rect x="48.4828%" y="965" width="0.0402%" height="15" fill="rgb(241,179,25)" fg:x="16873" fg:w="14"/><text x="48.7328%" y="975.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (11 samples, 0.03%)</title><rect x="48.4915%" y="949" width="0.0316%" height="15" fill="rgb(210,0,34)" fg:x="16876" fg:w="11"/><text x="48.7415%" y="959.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (11 samples, 0.03%)</title><rect x="48.4915%" y="933" width="0.0316%" height="15" fill="rgb(225,217,29)" fg:x="16876" fg:w="11"/><text x="48.7415%" y="943.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (11 samples, 0.03%)</title><rect x="48.4915%" y="917" width="0.0316%" height="15" fill="rgb(216,191,38)" fg:x="16876" fg:w="11"/><text x="48.7415%" y="927.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (11 samples, 0.03%)</title><rect x="48.4915%" y="901" width="0.0316%" height="15" fill="rgb(232,140,52)" fg:x="16876" fg:w="11"/><text x="48.7415%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (5 samples, 0.01%)</title><rect x="48.5087%" y="885" width="0.0144%" height="15" fill="rgb(223,158,51)" fg:x="16882" fg:w="5"/><text x="48.7587%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5 samples, 0.01%)</title><rect x="48.5087%" y="869" width="0.0144%" height="15" fill="rgb(235,29,51)" fg:x="16882" fg:w="5"/><text x="48.7587%" y="879.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (5 samples, 0.01%)</title><rect x="48.5087%" y="853" width="0.0144%" height="15" fill="rgb(215,181,18)" fg:x="16882" fg:w="5"/><text x="48.7587%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (5 samples, 0.01%)</title><rect x="48.5087%" y="837" width="0.0144%" height="15" fill="rgb(227,125,34)" fg:x="16882" fg:w="5"/><text x="48.7587%" y="847.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (5 samples, 0.01%)</title><rect x="48.5087%" y="821" width="0.0144%" height="15" fill="rgb(230,197,49)" fg:x="16882" fg:w="5"/><text x="48.7587%" y="831.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (5 samples, 0.01%)</title><rect x="48.5087%" y="805" width="0.0144%" height="15" fill="rgb(239,141,16)" fg:x="16882" fg:w="5"/><text x="48.7587%" y="815.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (5 samples, 0.01%)</title><rect x="48.5087%" y="789" width="0.0144%" height="15" fill="rgb(225,105,43)" fg:x="16882" fg:w="5"/><text x="48.7587%" y="799.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::cmp::PartialEq&gt;::eq (5 samples, 0.01%)</title><rect x="48.5087%" y="773" width="0.0144%" height="15" fill="rgb(214,131,14)" fg:x="16882" fg:w="5"/><text x="48.7587%" y="783.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::cmp::PartialEq&gt;::eq (5 samples, 0.01%)</title><rect x="48.5087%" y="757" width="0.0144%" height="15" fill="rgb(229,177,11)" fg:x="16882" fg:w="5"/><text x="48.7587%" y="767.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[U (5 samples, 0.01%)</title><rect x="48.5087%" y="741" width="0.0144%" height="15" fill="rgb(231,180,14)" fg:x="16882" fg:w="5"/><text x="48.7587%" y="751.50"></text></g><g><title> N]&gt; for [T (5 samples, 0.01%)</title><rect x="48.5087%" y="725" width="0.0144%" height="15" fill="rgb(232,88,2)" fg:x="16882" fg:w="5"/><text x="48.7587%" y="735.50"></text></g><g><title> N]&gt;::eq (5 samples, 0.01%)</title><rect x="48.5087%" y="709" width="0.0144%" height="15" fill="rgb(205,220,8)" fg:x="16882" fg:w="5"/><text x="48.7587%" y="719.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (5 samples, 0.01%)</title><rect x="48.5087%" y="693" width="0.0144%" height="15" fill="rgb(225,23,53)" fg:x="16882" fg:w="5"/><text x="48.7587%" y="703.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (15 samples, 0.04%)</title><rect x="48.5719%" y="741" width="0.0431%" height="15" fill="rgb(213,62,29)" fg:x="16904" fg:w="15"/><text x="48.8219%" y="751.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (15 samples, 0.04%)</title><rect x="48.5719%" y="725" width="0.0431%" height="15" fill="rgb(227,75,7)" fg:x="16904" fg:w="15"/><text x="48.8219%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (33 samples, 0.09%)</title><rect x="48.5231%" y="965" width="0.0948%" height="15" fill="rgb(207,105,14)" fg:x="16887" fg:w="33"/><text x="48.7731%" y="975.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (31 samples, 0.09%)</title><rect x="48.5288%" y="949" width="0.0891%" height="15" fill="rgb(245,62,29)" fg:x="16889" fg:w="31"/><text x="48.7788%" y="959.50"></text></g><g><title>core::iter::adapters::try_process (31 samples, 0.09%)</title><rect x="48.5288%" y="933" width="0.0891%" height="15" fill="rgb(236,202,4)" fg:x="16889" fg:w="31"/><text x="48.7788%" y="943.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (27 samples, 0.08%)</title><rect x="48.5403%" y="917" width="0.0776%" height="15" fill="rgb(250,67,1)" fg:x="16893" fg:w="27"/><text x="48.7903%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (27 samples, 0.08%)</title><rect x="48.5403%" y="901" width="0.0776%" height="15" fill="rgb(253,115,44)" fg:x="16893" fg:w="27"/><text x="48.7903%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (27 samples, 0.08%)</title><rect x="48.5403%" y="885" width="0.0776%" height="15" fill="rgb(251,139,18)" fg:x="16893" fg:w="27"/><text x="48.7903%" y="895.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (27 samples, 0.08%)</title><rect x="48.5403%" y="869" width="0.0776%" height="15" fill="rgb(218,22,32)" fg:x="16893" fg:w="27"/><text x="48.7903%" y="879.50"></text></g><g><title>alloc::vec::in_place_collect::from_iter_in_place (25 samples, 0.07%)</title><rect x="48.5461%" y="853" width="0.0718%" height="15" fill="rgb(243,53,5)" fg:x="16895" fg:w="25"/><text x="48.7961%" y="863.50"></text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (22 samples, 0.06%)</title><rect x="48.5547%" y="837" width="0.0632%" height="15" fill="rgb(227,56,16)" fg:x="16898" fg:w="22"/><text x="48.8047%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (22 samples, 0.06%)</title><rect x="48.5547%" y="821" width="0.0632%" height="15" fill="rgb(245,53,0)" fg:x="16898" fg:w="22"/><text x="48.8047%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (19 samples, 0.05%)</title><rect x="48.5633%" y="805" width="0.0546%" height="15" fill="rgb(216,170,35)" fg:x="16901" fg:w="19"/><text x="48.8133%" y="815.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (19 samples, 0.05%)</title><rect x="48.5633%" y="789" width="0.0546%" height="15" fill="rgb(211,200,8)" fg:x="16901" fg:w="19"/><text x="48.8133%" y="799.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (19 samples, 0.05%)</title><rect x="48.5633%" y="773" width="0.0546%" height="15" fill="rgb(228,204,44)" fg:x="16901" fg:w="19"/><text x="48.8133%" y="783.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function_impl::{{closure}} (19 samples, 0.05%)</title><rect x="48.5633%" y="757" width="0.0546%" height="15" fill="rgb(214,121,17)" fg:x="16901" fg:w="19"/><text x="48.8133%" y="767.50"></text></g><g><title>core::mem::drop (7 samples, 0.02%)</title><rect x="48.6179%" y="965" width="0.0201%" height="15" fill="rgb(233,64,38)" fg:x="16920" fg:w="7"/><text x="48.8679%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Locals&gt; (7 samples, 0.02%)</title><rect x="48.6179%" y="949" width="0.0201%" height="15" fill="rgb(253,54,19)" fg:x="16920" fg:w="7"/><text x="48.8679%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (7 samples, 0.02%)</title><rect x="48.6179%" y="933" width="0.0201%" height="15" fill="rgb(253,94,18)" fg:x="16920" fg:w="7"/><text x="48.8679%" y="943.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.02%)</title><rect x="48.6179%" y="917" width="0.0201%" height="15" fill="rgb(227,57,52)" fg:x="16920" fg:w="7"/><text x="48.8679%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (5 samples, 0.01%)</title><rect x="48.6236%" y="901" width="0.0144%" height="15" fill="rgb(230,228,50)" fg:x="16922" fg:w="5"/><text x="48.8736%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (5 samples, 0.01%)</title><rect x="48.6236%" y="885" width="0.0144%" height="15" fill="rgb(217,205,27)" fg:x="16922" fg:w="5"/><text x="48.8736%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (5 samples, 0.01%)</title><rect x="48.6236%" y="869" width="0.0144%" height="15" fill="rgb(252,71,50)" fg:x="16922" fg:w="5"/><text x="48.8736%" y="879.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="48.7070%" y="789" width="0.0115%" height="15" fill="rgb(209,86,4)" fg:x="16951" fg:w="4"/><text x="48.9570%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (4 samples, 0.01%)</title><rect x="48.7070%" y="773" width="0.0115%" height="15" fill="rgb(229,94,0)" fg:x="16951" fg:w="4"/><text x="48.9570%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (4 samples, 0.01%)</title><rect x="48.7070%" y="757" width="0.0115%" height="15" fill="rgb(252,223,21)" fg:x="16951" fg:w="4"/><text x="48.9570%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (4 samples, 0.01%)</title><rect x="48.7070%" y="741" width="0.0115%" height="15" fill="rgb(230,210,4)" fg:x="16951" fg:w="4"/><text x="48.9570%" y="751.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (7 samples, 0.02%)</title><rect x="48.7041%" y="885" width="0.0201%" height="15" fill="rgb(240,149,38)" fg:x="16950" fg:w="7"/><text x="48.9541%" y="895.50"></text></g><g><title>&lt;aptos_gas::gas_meter::AptosGasMeter as move_vm_types::gas::GasMeter&gt;::charge_drop_frame::{{closure}} (7 samples, 0.02%)</title><rect x="48.7041%" y="869" width="0.0201%" height="15" fill="rgb(254,105,20)" fg:x="16950" fg:w="7"/><text x="48.9541%" y="879.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_heap_size (7 samples, 0.02%)</title><rect x="48.7041%" y="853" width="0.0201%" height="15" fill="rgb(253,87,46)" fg:x="16950" fg:w="7"/><text x="48.9541%" y="863.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_value_size (6 samples, 0.02%)</title><rect x="48.7070%" y="837" width="0.0172%" height="15" fill="rgb(253,116,33)" fg:x="16951" fg:w="6"/><text x="48.9570%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Value&gt; (6 samples, 0.02%)</title><rect x="48.7070%" y="821" width="0.0172%" height="15" fill="rgb(229,198,5)" fg:x="16951" fg:w="6"/><text x="48.9570%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::ValueImpl&gt; (6 samples, 0.02%)</title><rect x="48.7070%" y="805" width="0.0172%" height="15" fill="rgb(242,38,37)" fg:x="16951" fg:w="6"/><text x="48.9570%" y="815.50"></text></g><g><title>&lt;aptos_gas::gas_meter::AptosGasMeter as move_vm_types::gas::GasMeter&gt;::charge_drop_frame (15 samples, 0.04%)</title><rect x="48.7041%" y="933" width="0.0431%" height="15" fill="rgb(242,69,53)" fg:x="16950" fg:w="15"/><text x="48.9541%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (15 samples, 0.04%)</title><rect x="48.7041%" y="917" width="0.0431%" height="15" fill="rgb(249,80,16)" fg:x="16950" fg:w="15"/><text x="48.9541%" y="927.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (15 samples, 0.04%)</title><rect x="48.7041%" y="901" width="0.0431%" height="15" fill="rgb(206,128,11)" fg:x="16950" fg:w="15"/><text x="48.9541%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(usize,move_vm_types::values::values_impl::Value)&gt;&gt; (8 samples, 0.02%)</title><rect x="48.7242%" y="885" width="0.0230%" height="15" fill="rgb(212,35,20)" fg:x="16957" fg:w="8"/><text x="48.9742%" y="895.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.02%)</title><rect x="48.7242%" y="869" width="0.0230%" height="15" fill="rgb(236,79,13)" fg:x="16957" fg:w="8"/><text x="48.9742%" y="879.50"></text></g><g><title>__rust_dealloc (5 samples, 0.01%)</title><rect x="48.7472%" y="933" width="0.0144%" height="15" fill="rgb(233,123,3)" fg:x="16965" fg:w="5"/><text x="48.9972%" y="943.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="48.8190%" y="837" width="0.0115%" height="15" fill="rgb(214,93,52)" fg:x="16990" fg:w="4"/><text x="49.0690%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.01%)</title><rect x="48.8190%" y="821" width="0.0115%" height="15" fill="rgb(251,37,40)" fg:x="16990" fg:w="4"/><text x="49.0690%" y="831.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.01%)</title><rect x="48.8190%" y="805" width="0.0115%" height="15" fill="rgb(227,80,54)" fg:x="16990" fg:w="4"/><text x="49.0690%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (30 samples, 0.09%)</title><rect x="48.8190%" y="853" width="0.0862%" height="15" fill="rgb(254,48,11)" fg:x="16990" fg:w="30"/><text x="49.0690%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (21 samples, 0.06%)</title><rect x="48.8449%" y="837" width="0.0603%" height="15" fill="rgb(235,193,26)" fg:x="16999" fg:w="21"/><text x="49.0949%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (61 samples, 0.18%)</title><rect x="48.7932%" y="901" width="0.1753%" height="15" fill="rgb(229,99,21)" fg:x="16981" fg:w="61"/><text x="49.0432%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::loaded_data::runtime_types::Type]&gt; (61 samples, 0.18%)</title><rect x="48.7932%" y="885" width="0.1753%" height="15" fill="rgb(211,140,41)" fg:x="16981" fg:w="61"/><text x="49.0432%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (52 samples, 0.15%)</title><rect x="48.8190%" y="869" width="0.1494%" height="15" fill="rgb(240,227,30)" fg:x="16990" fg:w="52"/><text x="49.0690%" y="879.50"></text></g><g><title>sdallocx (20 samples, 0.06%)</title><rect x="48.9110%" y="853" width="0.0575%" height="15" fill="rgb(215,224,45)" fg:x="17022" fg:w="20"/><text x="49.1610%" y="863.50"></text></g><g><title>isfree (20 samples, 0.06%)</title><rect x="48.9110%" y="837" width="0.0575%" height="15" fill="rgb(206,123,31)" fg:x="17022" fg:w="20"/><text x="49.1610%" y="847.50"></text></g><g><title>isdalloct (20 samples, 0.06%)</title><rect x="48.9110%" y="821" width="0.0575%" height="15" fill="rgb(210,138,16)" fg:x="17022" fg:w="20"/><text x="49.1610%" y="831.50"></text></g><g><title>arena_sdalloc (20 samples, 0.06%)</title><rect x="48.9110%" y="805" width="0.0575%" height="15" fill="rgb(228,57,28)" fg:x="17022" fg:w="20"/><text x="49.1610%" y="815.50"></text></g><g><title>__rust_dealloc (5 samples, 0.01%)</title><rect x="48.9685%" y="837" width="0.0144%" height="15" fill="rgb(242,170,10)" fg:x="17042" fg:w="5"/><text x="49.2185%" y="847.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (5 samples, 0.01%)</title><rect x="48.9685%" y="821" width="0.0144%" height="15" fill="rgb(228,214,39)" fg:x="17042" fg:w="5"/><text x="49.2185%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (96 samples, 0.28%)</title><rect x="48.7932%" y="917" width="0.2758%" height="15" fill="rgb(218,179,33)" fg:x="16981" fg:w="96"/><text x="49.0432%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (35 samples, 0.10%)</title><rect x="48.9685%" y="901" width="0.1006%" height="15" fill="rgb(235,193,39)" fg:x="17042" fg:w="35"/><text x="49.2185%" y="911.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 0.10%)</title><rect x="48.9685%" y="885" width="0.1006%" height="15" fill="rgb(219,221,36)" fg:x="17042" fg:w="35"/><text x="49.2185%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (35 samples, 0.10%)</title><rect x="48.9685%" y="869" width="0.1006%" height="15" fill="rgb(248,218,19)" fg:x="17042" fg:w="35"/><text x="49.2185%" y="879.50"></text></g><g><title>alloc::alloc::dealloc (35 samples, 0.10%)</title><rect x="48.9685%" y="853" width="0.1006%" height="15" fill="rgb(205,50,9)" fg:x="17042" fg:w="35"/><text x="49.2185%" y="863.50"></text></g><g><title>sdallocx (30 samples, 0.09%)</title><rect x="48.9828%" y="837" width="0.0862%" height="15" fill="rgb(238,81,28)" fg:x="17047" fg:w="30"/><text x="49.2328%" y="847.50"></text></g><g><title>isfree (30 samples, 0.09%)</title><rect x="48.9828%" y="821" width="0.0862%" height="15" fill="rgb(235,110,19)" fg:x="17047" fg:w="30"/><text x="49.2328%" y="831.50"></text></g><g><title>isdalloct (30 samples, 0.09%)</title><rect x="48.9828%" y="805" width="0.0862%" height="15" fill="rgb(214,7,14)" fg:x="17047" fg:w="30"/><text x="49.2328%" y="815.50"></text></g><g><title>arena_sdalloc (30 samples, 0.09%)</title><rect x="48.9828%" y="789" width="0.0862%" height="15" fill="rgb(211,77,3)" fg:x="17047" fg:w="30"/><text x="49.2328%" y="799.50"></text></g><g><title>sz_size2index (30 samples, 0.09%)</title><rect x="48.9828%" y="773" width="0.0862%" height="15" fill="rgb(229,5,9)" fg:x="17047" fg:w="30"/><text x="49.2328%" y="783.50"></text></g><g><title>sz_size2index_lookup (30 samples, 0.09%)</title><rect x="48.9828%" y="757" width="0.0862%" height="15" fill="rgb(225,90,11)" fg:x="17047" fg:w="30"/><text x="49.2328%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (5 samples, 0.01%)</title><rect x="49.0748%" y="805" width="0.0144%" height="15" fill="rgb(242,56,8)" fg:x="17079" fg:w="5"/><text x="49.3248%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (5 samples, 0.01%)</title><rect x="49.0748%" y="789" width="0.0144%" height="15" fill="rgb(249,212,39)" fg:x="17079" fg:w="5"/><text x="49.3248%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.02%)</title><rect x="49.0748%" y="821" width="0.0201%" height="15" fill="rgb(236,90,9)" fg:x="17079" fg:w="7"/><text x="49.3248%" y="831.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.07%)</title><rect x="49.0748%" y="885" width="0.0718%" height="15" fill="rgb(206,88,35)" fg:x="17079" fg:w="25"/><text x="49.3248%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (25 samples, 0.07%)</title><rect x="49.0748%" y="869" width="0.0718%" height="15" fill="rgb(205,126,30)" fg:x="17079" fg:w="25"/><text x="49.3248%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (25 samples, 0.07%)</title><rect x="49.0748%" y="853" width="0.0718%" height="15" fill="rgb(230,176,12)" fg:x="17079" fg:w="25"/><text x="49.3248%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (25 samples, 0.07%)</title><rect x="49.0748%" y="837" width="0.0718%" height="15" fill="rgb(243,19,9)" fg:x="17079" fg:w="25"/><text x="49.3248%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (18 samples, 0.05%)</title><rect x="49.0949%" y="821" width="0.0517%" height="15" fill="rgb(245,171,17)" fg:x="17086" fg:w="18"/><text x="49.3449%" y="831.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.05%)</title><rect x="49.0949%" y="805" width="0.0517%" height="15" fill="rgb(227,52,21)" fg:x="17086" fg:w="18"/><text x="49.3449%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (18 samples, 0.05%)</title><rect x="49.0949%" y="789" width="0.0517%" height="15" fill="rgb(238,69,14)" fg:x="17086" fg:w="18"/><text x="49.3449%" y="799.50"></text></g><g><title>alloc::alloc::dealloc (18 samples, 0.05%)</title><rect x="49.0949%" y="773" width="0.0517%" height="15" fill="rgb(241,156,39)" fg:x="17086" fg:w="18"/><text x="49.3449%" y="783.50"></text></g><g><title>sdallocx (15 samples, 0.04%)</title><rect x="49.1035%" y="757" width="0.0431%" height="15" fill="rgb(212,227,28)" fg:x="17089" fg:w="15"/><text x="49.3535%" y="767.50"></text></g><g><title>isfree (15 samples, 0.04%)</title><rect x="49.1035%" y="741" width="0.0431%" height="15" fill="rgb(209,118,27)" fg:x="17089" fg:w="15"/><text x="49.3535%" y="751.50"></text></g><g><title>isdalloct (15 samples, 0.04%)</title><rect x="49.1035%" y="725" width="0.0431%" height="15" fill="rgb(226,102,5)" fg:x="17089" fg:w="15"/><text x="49.3535%" y="735.50"></text></g><g><title>arena_sdalloc (15 samples, 0.04%)</title><rect x="49.1035%" y="709" width="0.0431%" height="15" fill="rgb(223,34,3)" fg:x="17089" fg:w="15"/><text x="49.3535%" y="719.50"></text></g><g><title>tcache_dalloc_small (15 samples, 0.04%)</title><rect x="49.1035%" y="693" width="0.0431%" height="15" fill="rgb(221,81,38)" fg:x="17089" fg:w="15"/><text x="49.3535%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::interpreter::Frame&gt; (136 samples, 0.39%)</title><rect x="48.7673%" y="933" width="0.3908%" height="15" fill="rgb(236,219,28)" fg:x="16972" fg:w="136"/><text x="49.0173%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Locals&gt; (31 samples, 0.09%)</title><rect x="49.0690%" y="917" width="0.0891%" height="15" fill="rgb(213,200,14)" fg:x="17077" fg:w="31"/><text x="49.3190%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (31 samples, 0.09%)</title><rect x="49.0690%" y="901" width="0.0891%" height="15" fill="rgb(240,33,19)" fg:x="17077" fg:w="31"/><text x="49.3190%" y="911.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (6 samples, 0.02%)</title><rect x="49.1811%" y="741" width="0.0172%" height="15" fill="rgb(233,113,27)" fg:x="17116" fg:w="6"/><text x="49.4311%" y="751.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (6 samples, 0.02%)</title><rect x="49.1811%" y="725" width="0.0172%" height="15" fill="rgb(220,221,18)" fg:x="17116" fg:w="6"/><text x="49.4311%" y="735.50"></text></g><g><title>arena_decay_tick (4 samples, 0.01%)</title><rect x="49.1868%" y="709" width="0.0115%" height="15" fill="rgb(238,92,8)" fg:x="17118" fg:w="4"/><text x="49.4368%" y="719.50"></text></g><g><title>arena_decay_ticks (4 samples, 0.01%)</title><rect x="49.1868%" y="693" width="0.0115%" height="15" fill="rgb(222,164,16)" fg:x="17118" fg:w="4"/><text x="49.4368%" y="703.50"></text></g><g><title>arena_ind_get (4 samples, 0.01%)</title><rect x="49.1868%" y="677" width="0.0115%" height="15" fill="rgb(241,119,3)" fg:x="17118" fg:w="4"/><text x="49.4368%" y="687.50"></text></g><g><title>base_ind_get (4 samples, 0.01%)</title><rect x="49.1868%" y="661" width="0.0115%" height="15" fill="rgb(241,44,8)" fg:x="17118" fg:w="4"/><text x="49.4368%" y="671.50"></text></g><g><title>move_vm_runtime::interpreter::CallStack::push (12 samples, 0.03%)</title><rect x="49.1667%" y="933" width="0.0345%" height="15" fill="rgb(230,36,40)" fg:x="17111" fg:w="12"/><text x="49.4167%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (10 samples, 0.03%)</title><rect x="49.1725%" y="917" width="0.0287%" height="15" fill="rgb(243,16,36)" fg:x="17113" fg:w="10"/><text x="49.4225%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (10 samples, 0.03%)</title><rect x="49.1725%" y="901" width="0.0287%" height="15" fill="rgb(231,4,26)" fg:x="17113" fg:w="10"/><text x="49.4225%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (10 samples, 0.03%)</title><rect x="49.1725%" y="885" width="0.0287%" height="15" fill="rgb(240,9,31)" fg:x="17113" fg:w="10"/><text x="49.4225%" y="895.50"></text></g><g><title>alloc::raw_vec::finish_grow (9 samples, 0.03%)</title><rect x="49.1753%" y="869" width="0.0259%" height="15" fill="rgb(207,173,15)" fg:x="17114" fg:w="9"/><text x="49.4253%" y="879.50"></text></g><g><title>mallocx (7 samples, 0.02%)</title><rect x="49.1811%" y="853" width="0.0201%" height="15" fill="rgb(224,192,53)" fg:x="17116" fg:w="7"/><text x="49.4311%" y="863.50"></text></g><g><title>imalloc (7 samples, 0.02%)</title><rect x="49.1811%" y="837" width="0.0201%" height="15" fill="rgb(223,67,28)" fg:x="17116" fg:w="7"/><text x="49.4311%" y="847.50"></text></g><g><title>imalloc_body (7 samples, 0.02%)</title><rect x="49.1811%" y="821" width="0.0201%" height="15" fill="rgb(211,20,47)" fg:x="17116" fg:w="7"/><text x="49.4311%" y="831.50"></text></g><g><title>imalloc_no_sample (7 samples, 0.02%)</title><rect x="49.1811%" y="805" width="0.0201%" height="15" fill="rgb(240,228,2)" fg:x="17116" fg:w="7"/><text x="49.4311%" y="815.50"></text></g><g><title>iallocztm (7 samples, 0.02%)</title><rect x="49.1811%" y="789" width="0.0201%" height="15" fill="rgb(248,151,12)" fg:x="17116" fg:w="7"/><text x="49.4311%" y="799.50"></text></g><g><title>arena_malloc (7 samples, 0.02%)</title><rect x="49.1811%" y="773" width="0.0201%" height="15" fill="rgb(244,8,39)" fg:x="17116" fg:w="7"/><text x="49.4311%" y="783.50"></text></g><g><title>tcache_alloc_small (7 samples, 0.02%)</title><rect x="49.1811%" y="757" width="0.0201%" height="15" fill="rgb(222,26,8)" fg:x="17116" fg:w="7"/><text x="49.4311%" y="767.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (117 samples, 0.34%)</title><rect x="49.2012%" y="917" width="0.3362%" height="15" fill="rgb(213,106,44)" fg:x="17123" fg:w="117"/><text x="49.4512%" y="927.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="49.7529%" y="901" width="0.0144%" height="15" fill="rgb(214,129,20)" fg:x="17315" fg:w="5"/><text x="50.0029%" y="911.50"></text></g><g><title>&lt;aptos_gas::gas_meter::AptosGasMeter as move_vm_types::gas::GasMeter&gt;::charge_copy_loc (7 samples, 0.02%)</title><rect x="49.7673%" y="901" width="0.0201%" height="15" fill="rgb(212,32,13)" fg:x="17320" fg:w="7"/><text x="50.0173%" y="911.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_value_size_stack_and_heap (7 samples, 0.02%)</title><rect x="49.7673%" y="885" width="0.0201%" height="15" fill="rgb(208,168,33)" fg:x="17320" fg:w="7"/><text x="50.0173%" y="895.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_value_size (5 samples, 0.01%)</title><rect x="49.7730%" y="869" width="0.0144%" height="15" fill="rgb(231,207,8)" fg:x="17322" fg:w="5"/><text x="50.0230%" y="879.50"></text></g><g><title>&lt;&amp;T as move_vm_types::views::ValueView&gt;::visit (5 samples, 0.01%)</title><rect x="49.7730%" y="853" width="0.0144%" height="15" fill="rgb(235,219,23)" fg:x="17322" fg:w="5"/><text x="50.0230%" y="863.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::views::ValueView&gt;::visit (5 samples, 0.01%)</title><rect x="49.7730%" y="837" width="0.0144%" height="15" fill="rgb(226,216,26)" fg:x="17322" fg:w="5"/><text x="50.0230%" y="847.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::ValueImpl as move_vm_types::views::ValueView&gt;::visit (5 samples, 0.01%)</title><rect x="49.7730%" y="821" width="0.0144%" height="15" fill="rgb(239,137,16)" fg:x="17322" fg:w="5"/><text x="50.0230%" y="831.50"></text></g><g><title>move_vm_types::values::values_impl::ValueImpl::visit_impl (5 samples, 0.01%)</title><rect x="49.7730%" y="805" width="0.0144%" height="15" fill="rgb(207,12,36)" fg:x="17322" fg:w="5"/><text x="50.0230%" y="815.50"></text></g><g><title>&lt;aptos_gas::gas_meter::AptosGasMeter as move_vm_types::gas::GasMeter&gt;::charge_eq (4 samples, 0.01%)</title><rect x="49.7874%" y="901" width="0.0115%" height="15" fill="rgb(210,214,24)" fg:x="17327" fg:w="4"/><text x="50.0374%" y="911.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_value_size_dereferenced (4 samples, 0.01%)</title><rect x="49.7874%" y="885" width="0.0115%" height="15" fill="rgb(206,56,30)" fg:x="17327" fg:w="4"/><text x="50.0374%" y="895.50"></text></g><g><title>&lt;&amp;T as move_vm_types::views::ValueView&gt;::visit (4 samples, 0.01%)</title><rect x="49.7874%" y="869" width="0.0115%" height="15" fill="rgb(228,143,26)" fg:x="17327" fg:w="4"/><text x="50.0374%" y="879.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::views::ValueView&gt;::visit (4 samples, 0.01%)</title><rect x="49.7874%" y="853" width="0.0115%" height="15" fill="rgb(216,218,46)" fg:x="17327" fg:w="4"/><text x="50.0374%" y="863.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::ValueImpl as move_vm_types::views::ValueView&gt;::visit (4 samples, 0.01%)</title><rect x="49.7874%" y="837" width="0.0115%" height="15" fill="rgb(206,6,19)" fg:x="17327" fg:w="4"/><text x="50.0374%" y="847.50"></text></g><g><title>move_vm_types::values::values_impl::ValueImpl::visit_impl (4 samples, 0.01%)</title><rect x="49.7874%" y="821" width="0.0115%" height="15" fill="rgb(239,177,51)" fg:x="17327" fg:w="4"/><text x="50.0374%" y="831.50"></text></g><g><title>&lt;aptos_gas::misc::DerefVisitor&lt;V&gt; as move_vm_types::views::ValueVisitor&gt;::visit_u64 (4 samples, 0.01%)</title><rect x="49.7874%" y="805" width="0.0115%" height="15" fill="rgb(216,55,25)" fg:x="17327" fg:w="4"/><text x="50.0374%" y="815.50"></text></g><g><title>&lt;aptos_gas::misc::AbstractValueSizeVisitor as move_vm_types::views::ValueVisitor&gt;::visit_u64 (4 samples, 0.01%)</title><rect x="49.7874%" y="789" width="0.0115%" height="15" fill="rgb(231,163,29)" fg:x="17327" fg:w="4"/><text x="50.0374%" y="799.50"></text></g><g><title>&lt;move_core_types::gas_algebra::GasQuantity&lt;U&gt; as core::ops::arith::AddAssign&gt;::add_assign (4 samples, 0.01%)</title><rect x="49.7874%" y="773" width="0.0115%" height="15" fill="rgb(232,149,50)" fg:x="17327" fg:w="4"/><text x="50.0374%" y="783.50"></text></g><g><title>&lt;move_core_types::gas_algebra::GasQuantity&lt;U&gt; as core::ops::arith::Add&gt;::add (4 samples, 0.01%)</title><rect x="49.7874%" y="757" width="0.0115%" height="15" fill="rgb(223,142,48)" fg:x="17327" fg:w="4"/><text x="50.0374%" y="767.50"></text></g><g><title>core::num::&lt;impl u64&gt;::saturating_add (4 samples, 0.01%)</title><rect x="49.7874%" y="741" width="0.0115%" height="15" fill="rgb(245,83,23)" fg:x="17327" fg:w="4"/><text x="50.0374%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (10 samples, 0.03%)</title><rect x="49.7989%" y="805" width="0.0287%" height="15" fill="rgb(224,63,2)" fg:x="17331" fg:w="10"/><text x="50.0489%" y="815.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (10 samples, 0.03%)</title><rect x="49.7989%" y="789" width="0.0287%" height="15" fill="rgb(218,65,53)" fg:x="17331" fg:w="10"/><text x="50.0489%" y="799.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (10 samples, 0.03%)</title><rect x="49.7989%" y="773" width="0.0287%" height="15" fill="rgb(221,84,29)" fg:x="17331" fg:w="10"/><text x="50.0489%" y="783.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_stack_size (15 samples, 0.04%)</title><rect x="49.7989%" y="869" width="0.0431%" height="15" fill="rgb(234,0,32)" fg:x="17331" fg:w="15"/><text x="50.0489%" y="879.50"></text></g><g><title>&lt;&amp;T as move_vm_types::views::ValueView&gt;::visit (15 samples, 0.04%)</title><rect x="49.7989%" y="853" width="0.0431%" height="15" fill="rgb(206,20,16)" fg:x="17331" fg:w="15"/><text x="50.0489%" y="863.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Reference::value_view::ValueBehindRef as move_vm_types::views::ValueView&gt;::visit (15 samples, 0.04%)</title><rect x="49.7989%" y="837" width="0.0431%" height="15" fill="rgb(244,172,18)" fg:x="17331" fg:w="15"/><text x="50.0489%" y="847.50"></text></g><g><title>move_vm_types::values::values_impl::Container::visit_indexed (15 samples, 0.04%)</title><rect x="49.7989%" y="821" width="0.0431%" height="15" fill="rgb(254,133,1)" fg:x="17331" fg:w="15"/><text x="50.0489%" y="831.50"></text></g><g><title>move_vm_types::values::values_impl::ValueImpl::visit_impl (5 samples, 0.01%)</title><rect x="49.8276%" y="805" width="0.0144%" height="15" fill="rgb(222,206,41)" fg:x="17341" fg:w="5"/><text x="50.0776%" y="815.50"></text></g><g><title>&lt;aptos_gas::gas_meter::AptosGasMeter as move_vm_types::gas::GasMeter&gt;::charge_read_ref (21 samples, 0.06%)</title><rect x="49.7989%" y="901" width="0.0603%" height="15" fill="rgb(212,3,42)" fg:x="17331" fg:w="21"/><text x="50.0489%" y="911.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_value_size_stack_and_heap (21 samples, 0.06%)</title><rect x="49.7989%" y="885" width="0.0603%" height="15" fill="rgb(241,11,4)" fg:x="17331" fg:w="21"/><text x="50.0489%" y="895.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_value_size (6 samples, 0.02%)</title><rect x="49.8420%" y="869" width="0.0172%" height="15" fill="rgb(205,19,26)" fg:x="17346" fg:w="6"/><text x="50.0920%" y="879.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Reference::value_view::ValueBehindRef as move_vm_types::views::ValueView&gt;::visit (6 samples, 0.02%)</title><rect x="49.8420%" y="853" width="0.0172%" height="15" fill="rgb(210,179,32)" fg:x="17346" fg:w="6"/><text x="50.0920%" y="863.50"></text></g><g><title>move_vm_types::values::values_impl::Container::visit_indexed (6 samples, 0.02%)</title><rect x="49.8420%" y="837" width="0.0172%" height="15" fill="rgb(227,116,49)" fg:x="17346" fg:w="6"/><text x="50.0920%" y="847.50"></text></g><g><title>move_vm_types::values::values_impl::ValueImpl::visit_impl (6 samples, 0.02%)</title><rect x="49.8420%" y="821" width="0.0172%" height="15" fill="rgb(211,146,6)" fg:x="17346" fg:w="6"/><text x="50.0920%" y="831.50"></text></g><g><title>&lt;aptos_gas::misc::AbstractValueSizeVisitor as move_vm_types::views::ValueVisitor&gt;::visit_u64 (6 samples, 0.02%)</title><rect x="49.8420%" y="805" width="0.0172%" height="15" fill="rgb(219,44,39)" fg:x="17346" fg:w="6"/><text x="50.0920%" y="815.50"></text></g><g><title>&lt;aptos_gas::gas_meter::AptosGasMeter as move_vm_types::gas::GasMeter&gt;::charge_write_ref (11 samples, 0.03%)</title><rect x="49.8592%" y="901" width="0.0316%" height="15" fill="rgb(234,128,11)" fg:x="17352" fg:w="11"/><text x="50.1092%" y="911.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_heap_size (11 samples, 0.03%)</title><rect x="49.8592%" y="885" width="0.0316%" height="15" fill="rgb(220,183,53)" fg:x="17352" fg:w="11"/><text x="50.1092%" y="895.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_value_size (11 samples, 0.03%)</title><rect x="49.8592%" y="869" width="0.0316%" height="15" fill="rgb(213,219,32)" fg:x="17352" fg:w="11"/><text x="50.1092%" y="879.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Reference::value_view::ValueBehindRef as move_vm_types::views::ValueView&gt;::visit (11 samples, 0.03%)</title><rect x="49.8592%" y="853" width="0.0316%" height="15" fill="rgb(232,156,16)" fg:x="17352" fg:w="11"/><text x="50.1092%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;alloc::vec::into_iter::IntoIter&lt;move_vm_types::values::values_impl::ValueImpl&gt;,move_vm_types::values::values_impl::Value&gt;&gt; (6 samples, 0.02%)</title><rect x="49.8966%" y="901" width="0.0172%" height="15" fill="rgb(246,135,34)" fg:x="17365" fg:w="6"/><text x="50.1466%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (6 samples, 0.02%)</title><rect x="49.8966%" y="885" width="0.0172%" height="15" fill="rgb(241,99,0)" fg:x="17365" fg:w="6"/><text x="50.1466%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (9 samples, 0.03%)</title><rect x="49.9138%" y="901" width="0.0259%" height="15" fill="rgb(222,103,45)" fg:x="17371" fg:w="9"/><text x="50.1638%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.02%)</title><rect x="50.5373%" y="885" width="0.0201%" height="15" fill="rgb(212,57,4)" fg:x="17588" fg:w="7"/><text x="50.7873%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (7 samples, 0.02%)</title><rect x="50.5373%" y="869" width="0.0201%" height="15" fill="rgb(215,68,47)" fg:x="17588" fg:w="7"/><text x="50.7873%" y="879.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (10 samples, 0.03%)</title><rect x="50.6465%" y="757" width="0.0287%" height="15" fill="rgb(230,84,2)" fg:x="17626" fg:w="10"/><text x="50.8965%" y="767.50"></text></g><g><title>__rust_alloc (7 samples, 0.02%)</title><rect x="50.6752%" y="661" width="0.0201%" height="15" fill="rgb(220,102,14)" fg:x="17636" fg:w="7"/><text x="50.9252%" y="671.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (5 samples, 0.01%)</title><rect x="50.6810%" y="645" width="0.0144%" height="15" fill="rgb(240,10,32)" fg:x="17638" fg:w="5"/><text x="50.9310%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (59 samples, 0.17%)</title><rect x="50.5661%" y="821" width="0.1695%" height="15" fill="rgb(215,47,27)" fg:x="17598" fg:w="59"/><text x="50.8161%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (34 samples, 0.10%)</title><rect x="50.6379%" y="805" width="0.0977%" height="15" fill="rgb(233,188,43)" fg:x="17623" fg:w="34"/><text x="50.8879%" y="815.50"></text></g><g><title>alloc::slice::hack::to_vec (34 samples, 0.10%)</title><rect x="50.6379%" y="789" width="0.0977%" height="15" fill="rgb(253,190,1)" fg:x="17623" fg:w="34"/><text x="50.8879%" y="799.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (34 samples, 0.10%)</title><rect x="50.6379%" y="773" width="0.0977%" height="15" fill="rgb(206,114,52)" fg:x="17623" fg:w="34"/><text x="50.8879%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (21 samples, 0.06%)</title><rect x="50.6752%" y="757" width="0.0603%" height="15" fill="rgb(233,120,37)" fg:x="17636" fg:w="21"/><text x="50.9252%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (21 samples, 0.06%)</title><rect x="50.6752%" y="741" width="0.0603%" height="15" fill="rgb(214,52,39)" fg:x="17636" fg:w="21"/><text x="50.9252%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (21 samples, 0.06%)</title><rect x="50.6752%" y="725" width="0.0603%" height="15" fill="rgb(223,80,29)" fg:x="17636" fg:w="21"/><text x="50.9252%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (21 samples, 0.06%)</title><rect x="50.6752%" y="709" width="0.0603%" height="15" fill="rgb(230,101,40)" fg:x="17636" fg:w="21"/><text x="50.9252%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (21 samples, 0.06%)</title><rect x="50.6752%" y="693" width="0.0603%" height="15" fill="rgb(219,211,8)" fg:x="17636" fg:w="21"/><text x="50.9252%" y="703.50"></text></g><g><title>alloc::alloc::alloc (21 samples, 0.06%)</title><rect x="50.6752%" y="677" width="0.0603%" height="15" fill="rgb(252,126,28)" fg:x="17636" fg:w="21"/><text x="50.9252%" y="687.50"></text></g><g><title>mallocx (14 samples, 0.04%)</title><rect x="50.6954%" y="661" width="0.0402%" height="15" fill="rgb(215,56,38)" fg:x="17643" fg:w="14"/><text x="50.9454%" y="671.50"></text></g><g><title>imalloc (14 samples, 0.04%)</title><rect x="50.6954%" y="645" width="0.0402%" height="15" fill="rgb(249,55,44)" fg:x="17643" fg:w="14"/><text x="50.9454%" y="655.50"></text></g><g><title>imalloc_body (14 samples, 0.04%)</title><rect x="50.6954%" y="629" width="0.0402%" height="15" fill="rgb(220,221,32)" fg:x="17643" fg:w="14"/><text x="50.9454%" y="639.50"></text></g><g><title>sz_index2size (13 samples, 0.04%)</title><rect x="50.6982%" y="613" width="0.0374%" height="15" fill="rgb(212,216,41)" fg:x="17644" fg:w="13"/><text x="50.9482%" y="623.50"></text></g><g><title>sz_index2size_lookup (13 samples, 0.04%)</title><rect x="50.6982%" y="597" width="0.0374%" height="15" fill="rgb(228,213,43)" fg:x="17644" fg:w="13"/><text x="50.9482%" y="607.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (67 samples, 0.19%)</title><rect x="50.5574%" y="837" width="0.1925%" height="15" fill="rgb(211,31,26)" fg:x="17595" fg:w="67"/><text x="50.8074%" y="847.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::CachedStructIndex as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="50.7356%" y="821" width="0.0144%" height="15" fill="rgb(229,202,19)" fg:x="17657" fg:w="5"/><text x="50.9856%" y="831.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (112 samples, 0.32%)</title><rect x="50.5574%" y="853" width="0.3218%" height="15" fill="rgb(229,105,46)" fg:x="17595" fg:w="112"/><text x="50.8074%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (45 samples, 0.13%)</title><rect x="50.7500%" y="837" width="0.1293%" height="15" fill="rgb(235,108,1)" fg:x="17662" fg:w="45"/><text x="51.0000%" y="847.50"></text></g><g><title>core::ptr::write (45 samples, 0.13%)</title><rect x="50.7500%" y="821" width="0.1293%" height="15" fill="rgb(245,111,35)" fg:x="17662" fg:w="45"/><text x="51.0000%" y="831.50"></text></g><g><title>__rust_alloc (5 samples, 0.01%)</title><rect x="50.8850%" y="773" width="0.0144%" height="15" fill="rgb(219,185,31)" fg:x="17709" fg:w="5"/><text x="51.1350%" y="783.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (4 samples, 0.01%)</title><rect x="50.8879%" y="757" width="0.0115%" height="15" fill="rgb(214,4,43)" fg:x="17710" fg:w="4"/><text x="51.1379%" y="767.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (138 samples, 0.40%)</title><rect x="50.5574%" y="869" width="0.3965%" height="15" fill="rgb(235,227,40)" fg:x="17595" fg:w="138"/><text x="50.8074%" y="879.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (26 samples, 0.07%)</title><rect x="50.8793%" y="853" width="0.0747%" height="15" fill="rgb(230,88,30)" fg:x="17707" fg:w="26"/><text x="51.1293%" y="863.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (26 samples, 0.07%)</title><rect x="50.8793%" y="837" width="0.0747%" height="15" fill="rgb(216,217,1)" fg:x="17707" fg:w="26"/><text x="51.1293%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (26 samples, 0.07%)</title><rect x="50.8793%" y="821" width="0.0747%" height="15" fill="rgb(248,139,50)" fg:x="17707" fg:w="26"/><text x="51.1293%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (26 samples, 0.07%)</title><rect x="50.8793%" y="805" width="0.0747%" height="15" fill="rgb(233,1,21)" fg:x="17707" fg:w="26"/><text x="51.1293%" y="815.50"></text></g><g><title>alloc::alloc::alloc (26 samples, 0.07%)</title><rect x="50.8793%" y="789" width="0.0747%" height="15" fill="rgb(215,183,12)" fg:x="17707" fg:w="26"/><text x="51.1293%" y="799.50"></text></g><g><title>mallocx (19 samples, 0.05%)</title><rect x="50.8994%" y="773" width="0.0546%" height="15" fill="rgb(229,104,42)" fg:x="17714" fg:w="19"/><text x="51.1494%" y="783.50"></text></g><g><title>imalloc (19 samples, 0.05%)</title><rect x="50.8994%" y="757" width="0.0546%" height="15" fill="rgb(243,34,48)" fg:x="17714" fg:w="19"/><text x="51.1494%" y="767.50"></text></g><g><title>imalloc_body (19 samples, 0.05%)</title><rect x="50.8994%" y="741" width="0.0546%" height="15" fill="rgb(239,11,44)" fg:x="17714" fg:w="19"/><text x="51.1494%" y="751.50"></text></g><g><title>imalloc_no_sample (19 samples, 0.05%)</title><rect x="50.8994%" y="725" width="0.0546%" height="15" fill="rgb(231,98,35)" fg:x="17714" fg:w="19"/><text x="51.1494%" y="735.50"></text></g><g><title>iallocztm (19 samples, 0.05%)</title><rect x="50.8994%" y="709" width="0.0546%" height="15" fill="rgb(233,28,25)" fg:x="17714" fg:w="19"/><text x="51.1494%" y="719.50"></text></g><g><title>arena_malloc (19 samples, 0.05%)</title><rect x="50.8994%" y="693" width="0.0546%" height="15" fill="rgb(234,123,11)" fg:x="17714" fg:w="19"/><text x="51.1494%" y="703.50"></text></g><g><title>tcache_alloc_small (19 samples, 0.05%)</title><rect x="50.8994%" y="677" width="0.0546%" height="15" fill="rgb(220,69,3)" fg:x="17714" fg:w="19"/><text x="51.1494%" y="687.50"></text></g><g><title>cache_bin_alloc_easy (19 samples, 0.05%)</title><rect x="50.8994%" y="661" width="0.0546%" height="15" fill="rgb(214,64,36)" fg:x="17714" fg:w="19"/><text x="51.1494%" y="671.50"></text></g><g><title>__rust_alloc (4 samples, 0.01%)</title><rect x="50.9540%" y="709" width="0.0115%" height="15" fill="rgb(211,138,32)" fg:x="17733" fg:w="4"/><text x="51.2040%" y="719.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (4 samples, 0.01%)</title><rect x="50.9540%" y="693" width="0.0115%" height="15" fill="rgb(213,118,47)" fg:x="17733" fg:w="4"/><text x="51.2040%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (8 samples, 0.02%)</title><rect x="50.9540%" y="805" width="0.0230%" height="15" fill="rgb(243,124,49)" fg:x="17733" fg:w="8"/><text x="51.2040%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (8 samples, 0.02%)</title><rect x="50.9540%" y="789" width="0.0230%" height="15" fill="rgb(221,30,28)" fg:x="17733" fg:w="8"/><text x="51.2040%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (8 samples, 0.02%)</title><rect x="50.9540%" y="773" width="0.0230%" height="15" fill="rgb(246,37,13)" fg:x="17733" fg:w="8"/><text x="51.2040%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.02%)</title><rect x="50.9540%" y="757" width="0.0230%" height="15" fill="rgb(249,66,14)" fg:x="17733" fg:w="8"/><text x="51.2040%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.02%)</title><rect x="50.9540%" y="741" width="0.0230%" height="15" fill="rgb(213,166,5)" fg:x="17733" fg:w="8"/><text x="51.2040%" y="751.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.02%)</title><rect x="50.9540%" y="725" width="0.0230%" height="15" fill="rgb(221,66,24)" fg:x="17733" fg:w="8"/><text x="51.2040%" y="735.50"></text></g><g><title>mallocx (4 samples, 0.01%)</title><rect x="50.9655%" y="709" width="0.0115%" height="15" fill="rgb(210,132,17)" fg:x="17737" fg:w="4"/><text x="51.2155%" y="719.50"></text></g><g><title>imalloc (4 samples, 0.01%)</title><rect x="50.9655%" y="693" width="0.0115%" height="15" fill="rgb(243,202,5)" fg:x="17737" fg:w="4"/><text x="51.2155%" y="703.50"></text></g><g><title>imalloc_body (4 samples, 0.01%)</title><rect x="50.9655%" y="677" width="0.0115%" height="15" fill="rgb(233,70,48)" fg:x="17737" fg:w="4"/><text x="51.2155%" y="687.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (148 samples, 0.43%)</title><rect x="50.5574%" y="885" width="0.4253%" height="15" fill="rgb(238,41,26)" fg:x="17595" fg:w="148"/><text x="50.8074%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (10 samples, 0.03%)</title><rect x="50.9540%" y="869" width="0.0287%" height="15" fill="rgb(241,19,31)" fg:x="17733" fg:w="10"/><text x="51.2040%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (10 samples, 0.03%)</title><rect x="50.9540%" y="853" width="0.0287%" height="15" fill="rgb(214,76,10)" fg:x="17733" fg:w="10"/><text x="51.2040%" y="863.50"></text></g><g><title>alloc::slice::hack::to_vec (10 samples, 0.03%)</title><rect x="50.9540%" y="837" width="0.0287%" height="15" fill="rgb(254,202,22)" fg:x="17733" fg:w="10"/><text x="51.2040%" y="847.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (10 samples, 0.03%)</title><rect x="50.9540%" y="821" width="0.0287%" height="15" fill="rgb(214,72,24)" fg:x="17733" fg:w="10"/><text x="51.2040%" y="831.50"></text></g><g><title>__rust_dealloc (17 samples, 0.05%)</title><rect x="50.9827%" y="885" width="0.0488%" height="15" fill="rgb(221,92,46)" fg:x="17743" fg:w="17"/><text x="51.2327%" y="895.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (17 samples, 0.05%)</title><rect x="50.9827%" y="869" width="0.0488%" height="15" fill="rgb(246,13,50)" fg:x="17743" fg:w="17"/><text x="51.2327%" y="879.50"></text></g><g><title>jemallocator::layout_to_flags (4 samples, 0.01%)</title><rect x="51.0201%" y="853" width="0.0115%" height="15" fill="rgb(240,165,38)" fg:x="17756" fg:w="4"/><text x="51.2701%" y="863.50"></text></g><g><title>__rust_alloc (6 samples, 0.02%)</title><rect x="51.0718%" y="805" width="0.0172%" height="15" fill="rgb(241,24,51)" fg:x="17774" fg:w="6"/><text x="51.3218%" y="815.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (6 samples, 0.02%)</title><rect x="51.0718%" y="789" width="0.0172%" height="15" fill="rgb(227,51,44)" fg:x="17774" fg:w="6"/><text x="51.3218%" y="799.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (4 samples, 0.01%)</title><rect x="51.0890%" y="693" width="0.0115%" height="15" fill="rgb(231,121,3)" fg:x="17780" fg:w="4"/><text x="51.3390%" y="703.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (4 samples, 0.01%)</title><rect x="51.0890%" y="677" width="0.0115%" height="15" fill="rgb(245,3,41)" fg:x="17780" fg:w="4"/><text x="51.3390%" y="687.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (37 samples, 0.11%)</title><rect x="51.0402%" y="885" width="0.1063%" height="15" fill="rgb(214,13,26)" fg:x="17763" fg:w="37"/><text x="51.2902%" y="895.50"></text></g><g><title>alloc::alloc::exchange_malloc (37 samples, 0.11%)</title><rect x="51.0402%" y="869" width="0.1063%" height="15" fill="rgb(252,75,11)" fg:x="17763" fg:w="37"/><text x="51.2902%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (30 samples, 0.09%)</title><rect x="51.0603%" y="853" width="0.0862%" height="15" fill="rgb(218,226,17)" fg:x="17770" fg:w="30"/><text x="51.3103%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (30 samples, 0.09%)</title><rect x="51.0603%" y="837" width="0.0862%" height="15" fill="rgb(248,89,38)" fg:x="17770" fg:w="30"/><text x="51.3103%" y="847.50"></text></g><g><title>alloc::alloc::alloc (30 samples, 0.09%)</title><rect x="51.0603%" y="821" width="0.0862%" height="15" fill="rgb(237,73,46)" fg:x="17770" fg:w="30"/><text x="51.3103%" y="831.50"></text></g><g><title>mallocx (20 samples, 0.06%)</title><rect x="51.0890%" y="805" width="0.0575%" height="15" fill="rgb(242,78,33)" fg:x="17780" fg:w="20"/><text x="51.3390%" y="815.50"></text></g><g><title>imalloc (20 samples, 0.06%)</title><rect x="51.0890%" y="789" width="0.0575%" height="15" fill="rgb(235,60,3)" fg:x="17780" fg:w="20"/><text x="51.3390%" y="799.50"></text></g><g><title>imalloc_body (20 samples, 0.06%)</title><rect x="51.0890%" y="773" width="0.0575%" height="15" fill="rgb(216,172,19)" fg:x="17780" fg:w="20"/><text x="51.3390%" y="783.50"></text></g><g><title>imalloc_no_sample (20 samples, 0.06%)</title><rect x="51.0890%" y="757" width="0.0575%" height="15" fill="rgb(227,6,42)" fg:x="17780" fg:w="20"/><text x="51.3390%" y="767.50"></text></g><g><title>iallocztm (20 samples, 0.06%)</title><rect x="51.0890%" y="741" width="0.0575%" height="15" fill="rgb(223,207,42)" fg:x="17780" fg:w="20"/><text x="51.3390%" y="751.50"></text></g><g><title>arena_malloc (20 samples, 0.06%)</title><rect x="51.0890%" y="725" width="0.0575%" height="15" fill="rgb(246,138,30)" fg:x="17780" fg:w="20"/><text x="51.3390%" y="735.50"></text></g><g><title>tcache_alloc_small (20 samples, 0.06%)</title><rect x="51.0890%" y="709" width="0.0575%" height="15" fill="rgb(251,199,47)" fg:x="17780" fg:w="20"/><text x="51.3390%" y="719.50"></text></g><g><title>cache_bin_alloc_easy (16 samples, 0.05%)</title><rect x="51.1005%" y="693" width="0.0460%" height="15" fill="rgb(228,218,44)" fg:x="17784" fg:w="16"/><text x="51.3505%" y="703.50"></text></g><g><title>core::cmp::PartialEq::ne (4 samples, 0.01%)</title><rect x="51.1465%" y="885" width="0.0115%" height="15" fill="rgb(220,68,6)" fg:x="17800" fg:w="4"/><text x="51.3965%" y="895.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::cmp::PartialEq&gt;::eq (4 samples, 0.01%)</title><rect x="51.1465%" y="869" width="0.0115%" height="15" fill="rgb(240,60,26)" fg:x="17800" fg:w="4"/><text x="51.3965%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (6 samples, 0.02%)</title><rect x="51.1580%" y="885" width="0.0172%" height="15" fill="rgb(211,200,19)" fg:x="17804" fg:w="6"/><text x="51.4080%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (4 samples, 0.01%)</title><rect x="51.1637%" y="869" width="0.0115%" height="15" fill="rgb(242,145,30)" fg:x="17806" fg:w="4"/><text x="51.4137%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::zip::Zip&lt;alloc::vec::into_iter::IntoIter&lt;move_vm_types::loaded_data::runtime_types::Type&gt;,core::slice::iter::Iter&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt;&gt; (10 samples, 0.03%)</title><rect x="51.1752%" y="885" width="0.0287%" height="15" fill="rgb(225,64,13)" fg:x="17810" fg:w="10"/><text x="51.4252%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (10 samples, 0.03%)</title><rect x="51.1752%" y="869" width="0.0287%" height="15" fill="rgb(218,103,35)" fg:x="17810" fg:w="10"/><text x="51.4252%" y="879.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.03%)</title><rect x="51.1752%" y="853" width="0.0287%" height="15" fill="rgb(216,93,46)" fg:x="17810" fg:w="10"/><text x="51.4252%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::loaded_data::runtime_types::Type]&gt; (10 samples, 0.03%)</title><rect x="51.1752%" y="837" width="0.0287%" height="15" fill="rgb(225,159,27)" fg:x="17810" fg:w="10"/><text x="51.4252%" y="847.50"></text></g><g><title>__rust_dealloc (7 samples, 0.02%)</title><rect x="51.2471%" y="853" width="0.0201%" height="15" fill="rgb(225,204,11)" fg:x="17835" fg:w="7"/><text x="51.4971%" y="863.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (6 samples, 0.02%)</title><rect x="51.2499%" y="837" width="0.0172%" height="15" fill="rgb(205,56,4)" fg:x="17836" fg:w="6"/><text x="51.4999%" y="847.50"></text></g><g><title>jemallocator::layout_to_flags (4 samples, 0.01%)</title><rect x="51.2557%" y="821" width="0.0115%" height="15" fill="rgb(206,6,35)" fg:x="17838" fg:w="4"/><text x="51.5057%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (22 samples, 0.06%)</title><rect x="51.2672%" y="853" width="0.0632%" height="15" fill="rgb(247,73,52)" fg:x="17842" fg:w="22"/><text x="51.5172%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (8 samples, 0.02%)</title><rect x="51.3074%" y="837" width="0.0230%" height="15" fill="rgb(246,97,4)" fg:x="17856" fg:w="8"/><text x="51.5574%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.02%)</title><rect x="51.3103%" y="821" width="0.0201%" height="15" fill="rgb(212,37,15)" fg:x="17857" fg:w="7"/><text x="51.5603%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (51 samples, 0.15%)</title><rect x="51.2471%" y="869" width="0.1465%" height="15" fill="rgb(208,130,40)" fg:x="17835" fg:w="51"/><text x="51.4971%" y="879.50"></text></g><g><title>sdallocx (22 samples, 0.06%)</title><rect x="51.3304%" y="853" width="0.0632%" height="15" fill="rgb(236,55,29)" fg:x="17864" fg:w="22"/><text x="51.5804%" y="863.50"></text></g><g><title>isfree (22 samples, 0.06%)</title><rect x="51.3304%" y="837" width="0.0632%" height="15" fill="rgb(209,156,45)" fg:x="17864" fg:w="22"/><text x="51.5804%" y="847.50"></text></g><g><title>isdalloct (22 samples, 0.06%)</title><rect x="51.3304%" y="821" width="0.0632%" height="15" fill="rgb(249,107,4)" fg:x="17864" fg:w="22"/><text x="51.5804%" y="831.50"></text></g><g><title>arena_sdalloc (22 samples, 0.06%)</title><rect x="51.3304%" y="805" width="0.0632%" height="15" fill="rgb(227,7,13)" fg:x="17864" fg:w="22"/><text x="51.5804%" y="815.50"></text></g><g><title>sz_size2index (22 samples, 0.06%)</title><rect x="51.3304%" y="789" width="0.0632%" height="15" fill="rgb(250,129,14)" fg:x="17864" fg:w="22"/><text x="51.5804%" y="799.50"></text></g><g><title>sz_size2index_lookup (22 samples, 0.06%)</title><rect x="51.3304%" y="773" width="0.0632%" height="15" fill="rgb(229,92,13)" fg:x="17864" fg:w="22"/><text x="51.5804%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (67 samples, 0.19%)</title><rect x="51.2040%" y="885" width="0.1925%" height="15" fill="rgb(245,98,39)" fg:x="17820" fg:w="67"/><text x="51.4540%" y="895.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop_ty (11 samples, 0.03%)</title><rect x="51.3965%" y="885" width="0.0316%" height="15" fill="rgb(234,135,48)" fg:x="17887" fg:w="11"/><text x="51.6465%" y="895.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::push_ty (84 samples, 0.24%)</title><rect x="51.4310%" y="885" width="0.2414%" height="15" fill="rgb(230,98,28)" fg:x="17899" fg:w="84"/><text x="51.6810%" y="895.50"></text></g><g><title>move_vm_runtime::interpreter::check_ability (5 samples, 0.01%)</title><rect x="51.6723%" y="885" width="0.0144%" height="15" fill="rgb(223,121,0)" fg:x="17983" fg:w="5"/><text x="51.9223%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.02%)</title><rect x="51.7786%" y="741" width="0.0201%" height="15" fill="rgb(234,173,33)" fg:x="18020" fg:w="7"/><text x="52.0286%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (7 samples, 0.02%)</title><rect x="51.7786%" y="725" width="0.0201%" height="15" fill="rgb(245,47,8)" fg:x="18020" fg:w="7"/><text x="52.0286%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (7 samples, 0.02%)</title><rect x="51.7786%" y="709" width="0.0201%" height="15" fill="rgb(205,17,20)" fg:x="18020" fg:w="7"/><text x="52.0286%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (7 samples, 0.02%)</title><rect x="51.7786%" y="693" width="0.0201%" height="15" fill="rgb(232,151,16)" fg:x="18020" fg:w="7"/><text x="52.0286%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (7 samples, 0.02%)</title><rect x="51.7786%" y="677" width="0.0201%" height="15" fill="rgb(208,30,32)" fg:x="18020" fg:w="7"/><text x="52.0286%" y="687.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (7 samples, 0.02%)</title><rect x="51.7786%" y="661" width="0.0201%" height="15" fill="rgb(254,26,3)" fg:x="18020" fg:w="7"/><text x="52.0286%" y="671.50"></text></g><g><title>move_vm_runtime::loader::Loader::abilities::{{closure}} (6 samples, 0.02%)</title><rect x="51.7815%" y="645" width="0.0172%" height="15" fill="rgb(240,177,30)" fg:x="18021" fg:w="6"/><text x="52.0315%" y="655.50"></text></g><g><title>move_vm_runtime::loader::Loader::abilities (6 samples, 0.02%)</title><rect x="51.7815%" y="629" width="0.0172%" height="15" fill="rgb(248,76,44)" fg:x="18021" fg:w="6"/><text x="52.0315%" y="639.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (6 samples, 0.02%)</title><rect x="51.7815%" y="613" width="0.0172%" height="15" fill="rgb(241,186,54)" fg:x="18021" fg:w="6"/><text x="52.0315%" y="623.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (6 samples, 0.02%)</title><rect x="51.7815%" y="597" width="0.0172%" height="15" fill="rgb(249,171,29)" fg:x="18021" fg:w="6"/><text x="52.0315%" y="607.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (6 samples, 0.02%)</title><rect x="51.7815%" y="581" width="0.0172%" height="15" fill="rgb(237,151,44)" fg:x="18021" fg:w="6"/><text x="52.0315%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (6 samples, 0.02%)</title><rect x="51.7815%" y="565" width="0.0172%" height="15" fill="rgb(228,174,30)" fg:x="18021" fg:w="6"/><text x="52.0315%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (6 samples, 0.02%)</title><rect x="51.7815%" y="549" width="0.0172%" height="15" fill="rgb(252,14,37)" fg:x="18021" fg:w="6"/><text x="52.0315%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (9 samples, 0.03%)</title><rect x="51.7786%" y="869" width="0.0259%" height="15" fill="rgb(207,111,40)" fg:x="18020" fg:w="9"/><text x="52.0286%" y="879.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (9 samples, 0.03%)</title><rect x="51.7786%" y="853" width="0.0259%" height="15" fill="rgb(248,171,54)" fg:x="18020" fg:w="9"/><text x="52.0286%" y="863.50"></text></g><g><title>core::iter::adapters::try_process (9 samples, 0.03%)</title><rect x="51.7786%" y="837" width="0.0259%" height="15" fill="rgb(211,127,2)" fg:x="18020" fg:w="9"/><text x="52.0286%" y="847.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (9 samples, 0.03%)</title><rect x="51.7786%" y="821" width="0.0259%" height="15" fill="rgb(236,87,47)" fg:x="18020" fg:w="9"/><text x="52.0286%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (9 samples, 0.03%)</title><rect x="51.7786%" y="805" width="0.0259%" height="15" fill="rgb(223,190,45)" fg:x="18020" fg:w="9"/><text x="52.0286%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (9 samples, 0.03%)</title><rect x="51.7786%" y="789" width="0.0259%" height="15" fill="rgb(215,5,16)" fg:x="18020" fg:w="9"/><text x="52.0286%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.03%)</title><rect x="51.7786%" y="773" width="0.0259%" height="15" fill="rgb(252,82,33)" fg:x="18020" fg:w="9"/><text x="52.0286%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (9 samples, 0.03%)</title><rect x="51.7786%" y="757" width="0.0259%" height="15" fill="rgb(247,213,44)" fg:x="18020" fg:w="9"/><text x="52.0286%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::get_unchecked (5 samples, 0.01%)</title><rect x="51.8045%" y="789" width="0.0144%" height="15" fill="rgb(205,196,44)" fg:x="18029" fg:w="5"/><text x="52.0545%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::__iterator_get_unchecked (5 samples, 0.01%)</title><rect x="51.8045%" y="773" width="0.0144%" height="15" fill="rgb(237,96,54)" fg:x="18029" fg:w="5"/><text x="52.0545%" y="783.50"></text></g><g><title>move_vm_runtime::loader::Loader::abilities::{{closure}} (5 samples, 0.01%)</title><rect x="51.8045%" y="757" width="0.0144%" height="15" fill="rgb(230,113,34)" fg:x="18029" fg:w="5"/><text x="52.0545%" y="767.50"></text></g><g><title>move_vm_runtime::loader::Loader::abilities (48 samples, 0.14%)</title><rect x="51.6867%" y="885" width="0.1379%" height="15" fill="rgb(221,224,12)" fg:x="17988" fg:w="48"/><text x="51.9367%" y="895.50"></text></g><g><title>move_binary_format::file_format::AbilitySet::polymorphic_abilities (7 samples, 0.02%)</title><rect x="51.8045%" y="869" width="0.0201%" height="15" fill="rgb(219,112,44)" fg:x="18029" fg:w="7"/><text x="52.0545%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.02%)</title><rect x="51.8045%" y="853" width="0.0201%" height="15" fill="rgb(210,31,13)" fg:x="18029" fg:w="7"/><text x="52.0545%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.02%)</title><rect x="51.8045%" y="837" width="0.0201%" height="15" fill="rgb(230,25,16)" fg:x="18029" fg:w="7"/><text x="52.0545%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.02%)</title><rect x="51.8045%" y="821" width="0.0201%" height="15" fill="rgb(246,108,53)" fg:x="18029" fg:w="7"/><text x="52.0545%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::fold (7 samples, 0.02%)</title><rect x="51.8045%" y="805" width="0.0201%" height="15" fill="rgb(241,172,50)" fg:x="18029" fg:w="7"/><text x="52.0545%" y="815.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (35 samples, 0.10%)</title><rect x="51.8706%" y="773" width="0.1006%" height="15" fill="rgb(235,141,10)" fg:x="18052" fg:w="35"/><text x="52.1206%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::{{closure}} (35 samples, 0.10%)</title><rect x="51.9798%" y="645" width="0.1006%" height="15" fill="rgb(220,174,43)" fg:x="18090" fg:w="35"/><text x="52.2298%" y="655.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (35 samples, 0.10%)</title><rect x="51.9798%" y="629" width="0.1006%" height="15" fill="rgb(215,181,40)" fg:x="18090" fg:w="35"/><text x="52.2298%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (94 samples, 0.27%)</title><rect x="51.9798%" y="741" width="0.2701%" height="15" fill="rgb(230,97,2)" fg:x="18090" fg:w="94"/><text x="52.2298%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (94 samples, 0.27%)</title><rect x="51.9798%" y="725" width="0.2701%" height="15" fill="rgb(211,25,27)" fg:x="18090" fg:w="94"/><text x="52.2298%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (94 samples, 0.27%)</title><rect x="51.9798%" y="709" width="0.2701%" height="15" fill="rgb(230,87,26)" fg:x="18090" fg:w="94"/><text x="52.2298%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (94 samples, 0.27%)</title><rect x="51.9798%" y="693" width="0.2701%" height="15" fill="rgb(227,160,17)" fg:x="18090" fg:w="94"/><text x="52.2298%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (94 samples, 0.27%)</title><rect x="51.9798%" y="677" width="0.2701%" height="15" fill="rgb(244,85,34)" fg:x="18090" fg:w="94"/><text x="52.2298%" y="687.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (94 samples, 0.27%)</title><rect x="51.9798%" y="661" width="0.2701%" height="15" fill="rgb(207,70,0)" fg:x="18090" fg:w="94"/><text x="52.2298%" y="671.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_layout::{{closure}} (59 samples, 0.17%)</title><rect x="52.0803%" y="645" width="0.1695%" height="15" fill="rgb(223,129,7)" fg:x="18125" fg:w="59"/><text x="52.3303%" y="655.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (59 samples, 0.17%)</title><rect x="52.0803%" y="629" width="0.1695%" height="15" fill="rgb(246,105,7)" fg:x="18125" fg:w="59"/><text x="52.3303%" y="639.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (54 samples, 0.16%)</title><rect x="52.0947%" y="613" width="0.1552%" height="15" fill="rgb(215,154,42)" fg:x="18130" fg:w="54"/><text x="52.3447%" y="623.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst::{{closure}} (7 samples, 0.02%)</title><rect x="52.2298%" y="597" width="0.0201%" height="15" fill="rgb(220,215,30)" fg:x="18177" fg:w="7"/><text x="52.4798%" y="607.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::clone_impl (7 samples, 0.02%)</title><rect x="52.2298%" y="581" width="0.0201%" height="15" fill="rgb(228,81,51)" fg:x="18177" fg:w="7"/><text x="52.4798%" y="591.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (7 samples, 0.02%)</title><rect x="52.2298%" y="565" width="0.0201%" height="15" fill="rgb(247,71,54)" fg:x="18177" fg:w="7"/><text x="52.4798%" y="575.50"></text></g><g><title>__rust_alloc (9 samples, 0.03%)</title><rect x="52.2556%" y="629" width="0.0259%" height="15" fill="rgb(234,176,34)" fg:x="18186" fg:w="9"/><text x="52.5056%" y="639.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (9 samples, 0.03%)</title><rect x="52.2556%" y="613" width="0.0259%" height="15" fill="rgb(241,103,54)" fg:x="18186" fg:w="9"/><text x="52.5056%" y="623.50"></text></g><g><title>move_vm_runtime::loader::Resolver::field_instantiation_to_struct (162 samples, 0.47%)</title><rect x="51.8361%" y="885" width="0.4655%" height="15" fill="rgb(228,22,34)" fg:x="18040" fg:w="162"/><text x="52.0861%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (151 samples, 0.43%)</title><rect x="51.8677%" y="869" width="0.4339%" height="15" fill="rgb(241,179,48)" fg:x="18051" fg:w="151"/><text x="52.1177%" y="879.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (151 samples, 0.43%)</title><rect x="51.8677%" y="853" width="0.4339%" height="15" fill="rgb(235,167,37)" fg:x="18051" fg:w="151"/><text x="52.1177%" y="863.50"></text></g><g><title>core::iter::adapters::try_process (150 samples, 0.43%)</title><rect x="51.8706%" y="837" width="0.4310%" height="15" fill="rgb(213,109,30)" fg:x="18052" fg:w="150"/><text x="52.1206%" y="847.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (150 samples, 0.43%)</title><rect x="51.8706%" y="821" width="0.4310%" height="15" fill="rgb(222,172,16)" fg:x="18052" fg:w="150"/><text x="52.1206%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (150 samples, 0.43%)</title><rect x="51.8706%" y="805" width="0.4310%" height="15" fill="rgb(233,192,5)" fg:x="18052" fg:w="150"/><text x="52.1206%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (150 samples, 0.43%)</title><rect x="51.8706%" y="789" width="0.4310%" height="15" fill="rgb(247,189,41)" fg:x="18052" fg:w="150"/><text x="52.1206%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (115 samples, 0.33%)</title><rect x="51.9712%" y="773" width="0.3304%" height="15" fill="rgb(218,134,47)" fg:x="18087" fg:w="115"/><text x="52.2212%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (112 samples, 0.32%)</title><rect x="51.9798%" y="757" width="0.3218%" height="15" fill="rgb(216,29,3)" fg:x="18090" fg:w="112"/><text x="52.2298%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (18 samples, 0.05%)</title><rect x="52.2499%" y="741" width="0.0517%" height="15" fill="rgb(246,140,12)" fg:x="18184" fg:w="18"/><text x="52.4999%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (18 samples, 0.05%)</title><rect x="52.2499%" y="725" width="0.0517%" height="15" fill="rgb(230,136,11)" fg:x="18184" fg:w="18"/><text x="52.4999%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (18 samples, 0.05%)</title><rect x="52.2499%" y="709" width="0.0517%" height="15" fill="rgb(247,22,47)" fg:x="18184" fg:w="18"/><text x="52.4999%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (18 samples, 0.05%)</title><rect x="52.2499%" y="693" width="0.0517%" height="15" fill="rgb(218,84,22)" fg:x="18184" fg:w="18"/><text x="52.4999%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (18 samples, 0.05%)</title><rect x="52.2499%" y="677" width="0.0517%" height="15" fill="rgb(216,87,39)" fg:x="18184" fg:w="18"/><text x="52.4999%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (18 samples, 0.05%)</title><rect x="52.2499%" y="661" width="0.0517%" height="15" fill="rgb(221,178,8)" fg:x="18184" fg:w="18"/><text x="52.4999%" y="671.50"></text></g><g><title>alloc::alloc::alloc (18 samples, 0.05%)</title><rect x="52.2499%" y="645" width="0.0517%" height="15" fill="rgb(230,42,11)" fg:x="18184" fg:w="18"/><text x="52.4999%" y="655.50"></text></g><g><title>mallocx (7 samples, 0.02%)</title><rect x="52.2815%" y="629" width="0.0201%" height="15" fill="rgb(237,229,4)" fg:x="18195" fg:w="7"/><text x="52.5315%" y="639.50"></text></g><g><title>imalloc (7 samples, 0.02%)</title><rect x="52.2815%" y="613" width="0.0201%" height="15" fill="rgb(222,31,33)" fg:x="18195" fg:w="7"/><text x="52.5315%" y="623.50"></text></g><g><title>move_vm_runtime::loader::Resolver::get_field_type (18 samples, 0.05%)</title><rect x="52.3016%" y="885" width="0.0517%" height="15" fill="rgb(210,17,39)" fg:x="18202" fg:w="18"/><text x="52.5516%" y="895.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (11 samples, 0.03%)</title><rect x="52.3217%" y="869" width="0.0316%" height="15" fill="rgb(244,93,20)" fg:x="18209" fg:w="11"/><text x="52.5717%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="52.3389%" y="853" width="0.0144%" height="15" fill="rgb(210,40,47)" fg:x="18215" fg:w="5"/><text x="52.5889%" y="863.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (38 samples, 0.11%)</title><rect x="52.3591%" y="869" width="0.1092%" height="15" fill="rgb(239,211,47)" fg:x="18222" fg:w="38"/><text x="52.6091%" y="879.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (40 samples, 0.11%)</title><rect x="52.4682%" y="773" width="0.1149%" height="15" fill="rgb(251,223,49)" fg:x="18260" fg:w="40"/><text x="52.7182%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::{{closure}} (32 samples, 0.09%)</title><rect x="52.6177%" y="645" width="0.0919%" height="15" fill="rgb(221,149,5)" fg:x="18312" fg:w="32"/><text x="52.8677%" y="655.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (32 samples, 0.09%)</title><rect x="52.6177%" y="629" width="0.0919%" height="15" fill="rgb(219,224,51)" fg:x="18312" fg:w="32"/><text x="52.8677%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (67 samples, 0.19%)</title><rect x="52.6177%" y="741" width="0.1925%" height="15" fill="rgb(223,7,8)" fg:x="18312" fg:w="67"/><text x="52.8677%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (67 samples, 0.19%)</title><rect x="52.6177%" y="725" width="0.1925%" height="15" fill="rgb(241,217,22)" fg:x="18312" fg:w="67"/><text x="52.8677%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (67 samples, 0.19%)</title><rect x="52.6177%" y="709" width="0.1925%" height="15" fill="rgb(248,209,0)" fg:x="18312" fg:w="67"/><text x="52.8677%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (67 samples, 0.19%)</title><rect x="52.6177%" y="693" width="0.1925%" height="15" fill="rgb(217,205,4)" fg:x="18312" fg:w="67"/><text x="52.8677%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (67 samples, 0.19%)</title><rect x="52.6177%" y="677" width="0.1925%" height="15" fill="rgb(228,124,39)" fg:x="18312" fg:w="67"/><text x="52.8677%" y="687.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (67 samples, 0.19%)</title><rect x="52.6177%" y="661" width="0.1925%" height="15" fill="rgb(250,116,42)" fg:x="18312" fg:w="67"/><text x="52.8677%" y="671.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_layout::{{closure}} (35 samples, 0.10%)</title><rect x="52.7096%" y="645" width="0.1006%" height="15" fill="rgb(223,202,9)" fg:x="18344" fg:w="35"/><text x="52.9596%" y="655.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (33 samples, 0.09%)</title><rect x="52.7154%" y="629" width="0.0948%" height="15" fill="rgb(242,222,40)" fg:x="18346" fg:w="33"/><text x="52.9654%" y="639.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (31 samples, 0.09%)</title><rect x="52.7211%" y="613" width="0.0891%" height="15" fill="rgb(229,99,46)" fg:x="18348" fg:w="31"/><text x="52.9711%" y="623.50"></text></g><g><title>__rust_alloc (6 samples, 0.02%)</title><rect x="52.8131%" y="629" width="0.0172%" height="15" fill="rgb(225,56,46)" fg:x="18380" fg:w="6"/><text x="53.0631%" y="639.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (5 samples, 0.01%)</title><rect x="52.8159%" y="613" width="0.0144%" height="15" fill="rgb(227,94,5)" fg:x="18381" fg:w="5"/><text x="53.0659%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (139 samples, 0.40%)</title><rect x="52.4682%" y="869" width="0.3994%" height="15" fill="rgb(205,112,38)" fg:x="18260" fg:w="139"/><text x="52.7182%" y="879.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (139 samples, 0.40%)</title><rect x="52.4682%" y="853" width="0.3994%" height="15" fill="rgb(231,133,46)" fg:x="18260" fg:w="139"/><text x="52.7182%" y="863.50"></text></g><g><title>core::iter::adapters::try_process (139 samples, 0.40%)</title><rect x="52.4682%" y="837" width="0.3994%" height="15" fill="rgb(217,16,9)" fg:x="18260" fg:w="139"/><text x="52.7182%" y="847.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (139 samples, 0.40%)</title><rect x="52.4682%" y="821" width="0.3994%" height="15" fill="rgb(249,173,9)" fg:x="18260" fg:w="139"/><text x="52.7182%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (139 samples, 0.40%)</title><rect x="52.4682%" y="805" width="0.3994%" height="15" fill="rgb(205,163,53)" fg:x="18260" fg:w="139"/><text x="52.7182%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (139 samples, 0.40%)</title><rect x="52.4682%" y="789" width="0.3994%" height="15" fill="rgb(217,54,41)" fg:x="18260" fg:w="139"/><text x="52.7182%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (99 samples, 0.28%)</title><rect x="52.5832%" y="773" width="0.2845%" height="15" fill="rgb(228,216,12)" fg:x="18300" fg:w="99"/><text x="52.8332%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (99 samples, 0.28%)</title><rect x="52.5832%" y="757" width="0.2845%" height="15" fill="rgb(244,228,15)" fg:x="18300" fg:w="99"/><text x="52.8332%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (20 samples, 0.06%)</title><rect x="52.8102%" y="741" width="0.0575%" height="15" fill="rgb(221,176,53)" fg:x="18379" fg:w="20"/><text x="53.0602%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (20 samples, 0.06%)</title><rect x="52.8102%" y="725" width="0.0575%" height="15" fill="rgb(205,94,34)" fg:x="18379" fg:w="20"/><text x="53.0602%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (20 samples, 0.06%)</title><rect x="52.8102%" y="709" width="0.0575%" height="15" fill="rgb(213,110,48)" fg:x="18379" fg:w="20"/><text x="53.0602%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (20 samples, 0.06%)</title><rect x="52.8102%" y="693" width="0.0575%" height="15" fill="rgb(236,142,28)" fg:x="18379" fg:w="20"/><text x="53.0602%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (20 samples, 0.06%)</title><rect x="52.8102%" y="677" width="0.0575%" height="15" fill="rgb(225,135,29)" fg:x="18379" fg:w="20"/><text x="53.0602%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (20 samples, 0.06%)</title><rect x="52.8102%" y="661" width="0.0575%" height="15" fill="rgb(252,45,31)" fg:x="18379" fg:w="20"/><text x="53.0602%" y="671.50"></text></g><g><title>alloc::alloc::alloc (20 samples, 0.06%)</title><rect x="52.8102%" y="645" width="0.0575%" height="15" fill="rgb(211,187,50)" fg:x="18379" fg:w="20"/><text x="53.0602%" y="655.50"></text></g><g><title>mallocx (13 samples, 0.04%)</title><rect x="52.8303%" y="629" width="0.0374%" height="15" fill="rgb(229,109,7)" fg:x="18386" fg:w="13"/><text x="53.0803%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="52.8677%" y="853" width="0.0115%" height="15" fill="rgb(251,131,51)" fg:x="18399" fg:w="4"/><text x="53.1177%" y="863.50"></text></g><g><title>__rust_dealloc (4 samples, 0.01%)</title><rect x="52.8791%" y="789" width="0.0115%" height="15" fill="rgb(251,180,35)" fg:x="18403" fg:w="4"/><text x="53.1291%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (29 samples, 0.08%)</title><rect x="52.8677%" y="869" width="0.0833%" height="15" fill="rgb(211,46,32)" fg:x="18399" fg:w="29"/><text x="53.1177%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (25 samples, 0.07%)</title><rect x="52.8791%" y="853" width="0.0718%" height="15" fill="rgb(248,123,17)" fg:x="18403" fg:w="25"/><text x="53.1291%" y="863.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.07%)</title><rect x="52.8791%" y="837" width="0.0718%" height="15" fill="rgb(227,141,18)" fg:x="18403" fg:w="25"/><text x="53.1291%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (25 samples, 0.07%)</title><rect x="52.8791%" y="821" width="0.0718%" height="15" fill="rgb(216,102,9)" fg:x="18403" fg:w="25"/><text x="53.1291%" y="831.50"></text></g><g><title>alloc::alloc::dealloc (25 samples, 0.07%)</title><rect x="52.8791%" y="805" width="0.0718%" height="15" fill="rgb(253,47,13)" fg:x="18403" fg:w="25"/><text x="53.1291%" y="815.50"></text></g><g><title>sdallocx (21 samples, 0.06%)</title><rect x="52.8906%" y="789" width="0.0603%" height="15" fill="rgb(226,93,23)" fg:x="18407" fg:w="21"/><text x="53.1406%" y="799.50"></text></g><g><title>isfree (21 samples, 0.06%)</title><rect x="52.8906%" y="773" width="0.0603%" height="15" fill="rgb(247,104,17)" fg:x="18407" fg:w="21"/><text x="53.1406%" y="783.50"></text></g><g><title>isdalloct (21 samples, 0.06%)</title><rect x="52.8906%" y="757" width="0.0603%" height="15" fill="rgb(233,203,26)" fg:x="18407" fg:w="21"/><text x="53.1406%" y="767.50"></text></g><g><title>arena_sdalloc (21 samples, 0.06%)</title><rect x="52.8906%" y="741" width="0.0603%" height="15" fill="rgb(244,98,49)" fg:x="18407" fg:w="21"/><text x="53.1406%" y="751.50"></text></g><g><title>tcache_dalloc_small (21 samples, 0.06%)</title><rect x="52.8906%" y="725" width="0.0603%" height="15" fill="rgb(235,134,22)" fg:x="18407" fg:w="21"/><text x="53.1406%" y="735.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (15 samples, 0.04%)</title><rect x="53.0056%" y="805" width="0.0431%" height="15" fill="rgb(221,70,32)" fg:x="18447" fg:w="15"/><text x="53.2556%" y="815.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (15 samples, 0.04%)</title><rect x="53.0056%" y="789" width="0.0431%" height="15" fill="rgb(238,15,50)" fg:x="18447" fg:w="15"/><text x="53.2556%" y="799.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_generic_field (245 samples, 0.70%)</title><rect x="52.3591%" y="885" width="0.7040%" height="15" fill="rgb(215,221,48)" fg:x="18222" fg:w="245"/><text x="52.6091%" y="895.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (39 samples, 0.11%)</title><rect x="52.9510%" y="869" width="0.1121%" height="15" fill="rgb(236,73,3)" fg:x="18428" fg:w="39"/><text x="53.2010%" y="879.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (39 samples, 0.11%)</title><rect x="52.9510%" y="853" width="0.1121%" height="15" fill="rgb(250,107,11)" fg:x="18428" fg:w="39"/><text x="53.2010%" y="863.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (20 samples, 0.06%)</title><rect x="53.0056%" y="837" width="0.0575%" height="15" fill="rgb(242,39,14)" fg:x="18447" fg:w="20"/><text x="53.2556%" y="847.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst::{{closure}} (20 samples, 0.06%)</title><rect x="53.0056%" y="821" width="0.0575%" height="15" fill="rgb(248,164,37)" fg:x="18447" fg:w="20"/><text x="53.2556%" y="831.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::clone_impl (5 samples, 0.01%)</title><rect x="53.0487%" y="805" width="0.0144%" height="15" fill="rgb(217,60,12)" fg:x="18462" fg:w="5"/><text x="53.2987%" y="815.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (5 samples, 0.01%)</title><rect x="53.0487%" y="789" width="0.0144%" height="15" fill="rgb(240,125,29)" fg:x="18462" fg:w="5"/><text x="53.2987%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 0.01%)</title><rect x="53.0774%" y="741" width="0.0115%" height="15" fill="rgb(208,207,28)" fg:x="18472" fg:w="4"/><text x="53.3274%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (4 samples, 0.01%)</title><rect x="53.0774%" y="725" width="0.0115%" height="15" fill="rgb(209,159,27)" fg:x="18472" fg:w="4"/><text x="53.3274%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="53.0774%" y="709" width="0.0115%" height="15" fill="rgb(251,176,53)" fg:x="18472" fg:w="4"/><text x="53.3274%" y="719.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::make_new_frame::{{closure}} (9 samples, 0.03%)</title><rect x="53.0889%" y="645" width="0.0259%" height="15" fill="rgb(211,85,7)" fg:x="18476" fg:w="9"/><text x="53.3389%" y="655.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (8 samples, 0.02%)</title><rect x="53.0918%" y="629" width="0.0230%" height="15" fill="rgb(216,64,54)" fg:x="18477" fg:w="8"/><text x="53.3418%" y="639.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (8 samples, 0.02%)</title><rect x="53.0918%" y="613" width="0.0230%" height="15" fill="rgb(217,54,24)" fg:x="18477" fg:w="8"/><text x="53.3418%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (13 samples, 0.04%)</title><rect x="53.0889%" y="693" width="0.0374%" height="15" fill="rgb(208,206,53)" fg:x="18476" fg:w="13"/><text x="53.3389%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (13 samples, 0.04%)</title><rect x="53.0889%" y="677" width="0.0374%" height="15" fill="rgb(251,74,39)" fg:x="18476" fg:w="13"/><text x="53.3389%" y="687.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (13 samples, 0.04%)</title><rect x="53.0889%" y="661" width="0.0374%" height="15" fill="rgb(226,47,5)" fg:x="18476" fg:w="13"/><text x="53.3389%" y="671.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_layout::{{closure}} (4 samples, 0.01%)</title><rect x="53.1148%" y="645" width="0.0115%" height="15" fill="rgb(234,111,33)" fg:x="18485" fg:w="4"/><text x="53.3648%" y="655.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (4 samples, 0.01%)</title><rect x="53.1148%" y="629" width="0.0115%" height="15" fill="rgb(251,14,10)" fg:x="18485" fg:w="4"/><text x="53.3648%" y="639.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (4 samples, 0.01%)</title><rect x="53.1148%" y="613" width="0.0115%" height="15" fill="rgb(232,43,0)" fg:x="18485" fg:w="4"/><text x="53.3648%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.04%)</title><rect x="53.0889%" y="741" width="0.0402%" height="15" fill="rgb(222,68,43)" fg:x="18476" fg:w="14"/><text x="53.3389%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (14 samples, 0.04%)</title><rect x="53.0889%" y="725" width="0.0402%" height="15" fill="rgb(217,24,23)" fg:x="18476" fg:w="14"/><text x="53.3389%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (14 samples, 0.04%)</title><rect x="53.0889%" y="709" width="0.0402%" height="15" fill="rgb(229,209,14)" fg:x="18476" fg:w="14"/><text x="53.3389%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (24 samples, 0.07%)</title><rect x="53.0630%" y="869" width="0.0690%" height="15" fill="rgb(250,149,48)" fg:x="18467" fg:w="24"/><text x="53.3130%" y="879.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (24 samples, 0.07%)</title><rect x="53.0630%" y="853" width="0.0690%" height="15" fill="rgb(210,120,37)" fg:x="18467" fg:w="24"/><text x="53.3130%" y="863.50"></text></g><g><title>core::iter::adapters::try_process (24 samples, 0.07%)</title><rect x="53.0630%" y="837" width="0.0690%" height="15" fill="rgb(210,21,8)" fg:x="18467" fg:w="24"/><text x="53.3130%" y="847.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (24 samples, 0.07%)</title><rect x="53.0630%" y="821" width="0.0690%" height="15" fill="rgb(243,145,7)" fg:x="18467" fg:w="24"/><text x="53.3130%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (24 samples, 0.07%)</title><rect x="53.0630%" y="805" width="0.0690%" height="15" fill="rgb(238,178,32)" fg:x="18467" fg:w="24"/><text x="53.3130%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (24 samples, 0.07%)</title><rect x="53.0630%" y="789" width="0.0690%" height="15" fill="rgb(222,4,10)" fg:x="18467" fg:w="24"/><text x="53.3130%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (22 samples, 0.06%)</title><rect x="53.0688%" y="773" width="0.0632%" height="15" fill="rgb(239,7,37)" fg:x="18469" fg:w="22"/><text x="53.3188%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (22 samples, 0.06%)</title><rect x="53.0688%" y="757" width="0.0632%" height="15" fill="rgb(215,31,37)" fg:x="18469" fg:w="22"/><text x="53.3188%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (4 samples, 0.01%)</title><rect x="53.1320%" y="869" width="0.0115%" height="15" fill="rgb(224,83,33)" fg:x="18491" fg:w="4"/><text x="53.3820%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (4 samples, 0.01%)</title><rect x="53.1320%" y="853" width="0.0115%" height="15" fill="rgb(239,55,3)" fg:x="18491" fg:w="4"/><text x="53.3820%" y="863.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="53.1320%" y="837" width="0.0115%" height="15" fill="rgb(247,92,11)" fg:x="18491" fg:w="4"/><text x="53.3820%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.01%)</title><rect x="53.1320%" y="821" width="0.0115%" height="15" fill="rgb(239,200,7)" fg:x="18491" fg:w="4"/><text x="53.3820%" y="831.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.01%)</title><rect x="53.1320%" y="805" width="0.0115%" height="15" fill="rgb(227,115,8)" fg:x="18491" fg:w="4"/><text x="53.3820%" y="815.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_generic_struct_fields (33 samples, 0.09%)</title><rect x="53.0630%" y="885" width="0.0948%" height="15" fill="rgb(215,189,27)" fg:x="18467" fg:w="33"/><text x="53.3130%" y="895.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_struct_type (5 samples, 0.01%)</title><rect x="53.1435%" y="869" width="0.0144%" height="15" fill="rgb(251,216,39)" fg:x="18495" fg:w="5"/><text x="53.3935%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,move_vm_runtime::loader::ModuleCache&gt;&gt; (5 samples, 0.01%)</title><rect x="53.1435%" y="853" width="0.0144%" height="15" fill="rgb(207,29,47)" fg:x="18495" fg:w="5"/><text x="53.3935%" y="863.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="53.1435%" y="837" width="0.0144%" height="15" fill="rgb(210,71,34)" fg:x="18495" fg:w="5"/><text x="53.3935%" y="847.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (5 samples, 0.01%)</title><rect x="53.1435%" y="821" width="0.0144%" height="15" fill="rgb(253,217,51)" fg:x="18495" fg:w="5"/><text x="53.3935%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (5 samples, 0.01%)</title><rect x="53.1435%" y="805" width="0.0144%" height="15" fill="rgb(222,117,46)" fg:x="18495" fg:w="5"/><text x="53.3935%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_sub (5 samples, 0.01%)</title><rect x="53.1435%" y="789" width="0.0144%" height="15" fill="rgb(226,132,6)" fg:x="18495" fg:w="5"/><text x="53.3935%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.06%)</title><rect x="53.1866%" y="741" width="0.0603%" height="15" fill="rgb(254,145,51)" fg:x="18510" fg:w="21"/><text x="53.4366%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (13 samples, 0.04%)</title><rect x="53.2096%" y="725" width="0.0374%" height="15" fill="rgb(231,199,27)" fg:x="18518" fg:w="13"/><text x="53.4596%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (13 samples, 0.04%)</title><rect x="53.2096%" y="709" width="0.0374%" height="15" fill="rgb(245,158,14)" fg:x="18518" fg:w="13"/><text x="53.4596%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (13 samples, 0.04%)</title><rect x="53.2096%" y="693" width="0.0374%" height="15" fill="rgb(240,113,14)" fg:x="18518" fg:w="13"/><text x="53.4596%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (13 samples, 0.04%)</title><rect x="53.2096%" y="677" width="0.0374%" height="15" fill="rgb(210,20,13)" fg:x="18518" fg:w="13"/><text x="53.4596%" y="687.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (13 samples, 0.04%)</title><rect x="53.2096%" y="661" width="0.0374%" height="15" fill="rgb(241,144,13)" fg:x="18518" fg:w="13"/><text x="53.4596%" y="671.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_layout::{{closure}} (13 samples, 0.04%)</title><rect x="53.2096%" y="645" width="0.0374%" height="15" fill="rgb(235,43,34)" fg:x="18518" fg:w="13"/><text x="53.4596%" y="655.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (13 samples, 0.04%)</title><rect x="53.2096%" y="629" width="0.0374%" height="15" fill="rgb(208,36,20)" fg:x="18518" fg:w="13"/><text x="53.4596%" y="639.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (13 samples, 0.04%)</title><rect x="53.2096%" y="613" width="0.0374%" height="15" fill="rgb(239,204,10)" fg:x="18518" fg:w="13"/><text x="53.4596%" y="623.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst::{{closure}} (6 samples, 0.02%)</title><rect x="53.2297%" y="597" width="0.0172%" height="15" fill="rgb(217,84,43)" fg:x="18525" fg:w="6"/><text x="53.4797%" y="607.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::clone_impl (6 samples, 0.02%)</title><rect x="53.2297%" y="581" width="0.0172%" height="15" fill="rgb(241,170,50)" fg:x="18525" fg:w="6"/><text x="53.4797%" y="591.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (6 samples, 0.02%)</title><rect x="53.2297%" y="565" width="0.0172%" height="15" fill="rgb(226,205,29)" fg:x="18525" fg:w="6"/><text x="53.4797%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (36 samples, 0.10%)</title><rect x="53.1579%" y="869" width="0.1034%" height="15" fill="rgb(233,113,1)" fg:x="18500" fg:w="36"/><text x="53.4079%" y="879.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (36 samples, 0.10%)</title><rect x="53.1579%" y="853" width="0.1034%" height="15" fill="rgb(253,98,13)" fg:x="18500" fg:w="36"/><text x="53.4079%" y="863.50"></text></g><g><title>core::iter::adapters::try_process (36 samples, 0.10%)</title><rect x="53.1579%" y="837" width="0.1034%" height="15" fill="rgb(211,115,12)" fg:x="18500" fg:w="36"/><text x="53.4079%" y="847.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (28 samples, 0.08%)</title><rect x="53.1809%" y="821" width="0.0805%" height="15" fill="rgb(208,12,16)" fg:x="18508" fg:w="28"/><text x="53.4309%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (28 samples, 0.08%)</title><rect x="53.1809%" y="805" width="0.0805%" height="15" fill="rgb(237,193,54)" fg:x="18508" fg:w="28"/><text x="53.4309%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (28 samples, 0.08%)</title><rect x="53.1809%" y="789" width="0.0805%" height="15" fill="rgb(243,22,42)" fg:x="18508" fg:w="28"/><text x="53.4309%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (28 samples, 0.08%)</title><rect x="53.1809%" y="773" width="0.0805%" height="15" fill="rgb(233,151,36)" fg:x="18508" fg:w="28"/><text x="53.4309%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (28 samples, 0.08%)</title><rect x="53.1809%" y="757" width="0.0805%" height="15" fill="rgb(237,57,45)" fg:x="18508" fg:w="28"/><text x="53.4309%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (5 samples, 0.01%)</title><rect x="53.2469%" y="741" width="0.0144%" height="15" fill="rgb(221,88,17)" fg:x="18531" fg:w="5"/><text x="53.4969%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5 samples, 0.01%)</title><rect x="53.2469%" y="725" width="0.0144%" height="15" fill="rgb(230,79,15)" fg:x="18531" fg:w="5"/><text x="53.4969%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.01%)</title><rect x="53.2469%" y="709" width="0.0144%" height="15" fill="rgb(213,57,13)" fg:x="18531" fg:w="5"/><text x="53.4969%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (5 samples, 0.01%)</title><rect x="53.2469%" y="693" width="0.0144%" height="15" fill="rgb(222,116,39)" fg:x="18531" fg:w="5"/><text x="53.4969%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.01%)</title><rect x="53.2469%" y="677" width="0.0144%" height="15" fill="rgb(245,107,2)" fg:x="18531" fg:w="5"/><text x="53.4969%" y="687.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.01%)</title><rect x="53.2469%" y="661" width="0.0144%" height="15" fill="rgb(238,1,10)" fg:x="18531" fg:w="5"/><text x="53.4969%" y="671.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.01%)</title><rect x="53.2469%" y="645" width="0.0144%" height="15" fill="rgb(249,4,48)" fg:x="18531" fg:w="5"/><text x="53.4969%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::map (13 samples, 0.04%)</title><rect x="53.2613%" y="869" width="0.0374%" height="15" fill="rgb(223,151,18)" fg:x="18536" fg:w="13"/><text x="53.5113%" y="879.50"></text></g><g><title>core::iter::adapters::map::Map&lt;I,F&gt;::new (13 samples, 0.04%)</title><rect x="53.2613%" y="853" width="0.0374%" height="15" fill="rgb(227,65,43)" fg:x="18536" fg:w="13"/><text x="53.5113%" y="863.50"></text></g><g><title>alloc::alloc::exchange_malloc (6 samples, 0.02%)</title><rect x="53.2987%" y="853" width="0.0172%" height="15" fill="rgb(218,40,45)" fg:x="18549" fg:w="6"/><text x="53.5487%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.02%)</title><rect x="53.2987%" y="837" width="0.0172%" height="15" fill="rgb(252,121,31)" fg:x="18549" fg:w="6"/><text x="53.5487%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.02%)</title><rect x="53.2987%" y="821" width="0.0172%" height="15" fill="rgb(219,158,43)" fg:x="18549" fg:w="6"/><text x="53.5487%" y="831.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.02%)</title><rect x="53.2987%" y="805" width="0.0172%" height="15" fill="rgb(231,162,42)" fg:x="18549" fg:w="6"/><text x="53.5487%" y="815.50"></text></g><g><title>mallocx (4 samples, 0.01%)</title><rect x="53.3044%" y="789" width="0.0115%" height="15" fill="rgb(217,179,25)" fg:x="18551" fg:w="4"/><text x="53.5544%" y="799.50"></text></g><g><title>imalloc (4 samples, 0.01%)</title><rect x="53.3044%" y="773" width="0.0115%" height="15" fill="rgb(206,212,31)" fg:x="18551" fg:w="4"/><text x="53.5544%" y="783.50"></text></g><g><title>imalloc_body (4 samples, 0.01%)</title><rect x="53.3044%" y="757" width="0.0115%" height="15" fill="rgb(235,144,12)" fg:x="18551" fg:w="4"/><text x="53.5544%" y="767.50"></text></g><g><title>imalloc_no_sample (4 samples, 0.01%)</title><rect x="53.3044%" y="741" width="0.0115%" height="15" fill="rgb(213,51,10)" fg:x="18551" fg:w="4"/><text x="53.5544%" y="751.50"></text></g><g><title>iallocztm (4 samples, 0.01%)</title><rect x="53.3044%" y="725" width="0.0115%" height="15" fill="rgb(231,145,14)" fg:x="18551" fg:w="4"/><text x="53.5544%" y="735.50"></text></g><g><title>arena_malloc (4 samples, 0.01%)</title><rect x="53.3044%" y="709" width="0.0115%" height="15" fill="rgb(235,15,28)" fg:x="18551" fg:w="4"/><text x="53.5544%" y="719.50"></text></g><g><title>tcache_alloc_small (4 samples, 0.01%)</title><rect x="53.3044%" y="693" width="0.0115%" height="15" fill="rgb(237,206,10)" fg:x="18551" fg:w="4"/><text x="53.5544%" y="703.50"></text></g><g><title>cache_bin_alloc_easy (4 samples, 0.01%)</title><rect x="53.3044%" y="677" width="0.0115%" height="15" fill="rgb(236,227,27)" fg:x="18551" fg:w="4"/><text x="53.5544%" y="687.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_generic_type (61 samples, 0.18%)</title><rect x="53.1579%" y="885" width="0.1753%" height="15" fill="rgb(246,83,35)" fg:x="18500" fg:w="61"/><text x="53.4079%" y="895.50"></text></g><g><title>move_vm_runtime::loader::Loader::count_type_nodes (12 samples, 0.03%)</title><rect x="53.2987%" y="869" width="0.0345%" height="15" fill="rgb(220,136,24)" fg:x="18549" fg:w="12"/><text x="53.5487%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (6 samples, 0.02%)</title><rect x="53.3159%" y="853" width="0.0172%" height="15" fill="rgb(217,3,25)" fg:x="18555" fg:w="6"/><text x="53.5659%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (6 samples, 0.02%)</title><rect x="53.3159%" y="837" width="0.0172%" height="15" fill="rgb(239,24,14)" fg:x="18555" fg:w="6"/><text x="53.5659%" y="847.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="53.3159%" y="821" width="0.0172%" height="15" fill="rgb(244,16,53)" fg:x="18555" fg:w="6"/><text x="53.5659%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.02%)</title><rect x="53.3159%" y="805" width="0.0172%" height="15" fill="rgb(208,175,44)" fg:x="18555" fg:w="6"/><text x="53.5659%" y="815.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.02%)</title><rect x="53.3159%" y="789" width="0.0172%" height="15" fill="rgb(252,18,48)" fg:x="18555" fg:w="6"/><text x="53.5659%" y="799.50"></text></g><g><title>sdallocx (5 samples, 0.01%)</title><rect x="53.3188%" y="773" width="0.0144%" height="15" fill="rgb(234,199,32)" fg:x="18556" fg:w="5"/><text x="53.5688%" y="783.50"></text></g><g><title>isfree (5 samples, 0.01%)</title><rect x="53.3188%" y="757" width="0.0144%" height="15" fill="rgb(225,77,54)" fg:x="18556" fg:w="5"/><text x="53.5688%" y="767.50"></text></g><g><title>isdalloct (5 samples, 0.01%)</title><rect x="53.3188%" y="741" width="0.0144%" height="15" fill="rgb(225,42,25)" fg:x="18556" fg:w="5"/><text x="53.5688%" y="751.50"></text></g><g><title>arena_sdalloc (5 samples, 0.01%)</title><rect x="53.3188%" y="725" width="0.0144%" height="15" fill="rgb(242,227,46)" fg:x="18556" fg:w="5"/><text x="53.5688%" y="735.50"></text></g><g><title>tcache_dalloc_small (5 samples, 0.01%)</title><rect x="53.3188%" y="709" width="0.0144%" height="15" fill="rgb(246,197,35)" fg:x="18556" fg:w="5"/><text x="53.5688%" y="719.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_single_type (5 samples, 0.01%)</title><rect x="53.3331%" y="885" width="0.0144%" height="15" fill="rgb(215,159,26)" fg:x="18561" fg:w="5"/><text x="53.5831%" y="895.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::check_eq (28 samples, 0.08%)</title><rect x="53.3475%" y="885" width="0.0805%" height="15" fill="rgb(212,194,50)" fg:x="18566" fg:w="28"/><text x="53.5975%" y="895.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (20 samples, 0.06%)</title><rect x="53.3705%" y="869" width="0.0575%" height="15" fill="rgb(246,132,1)" fg:x="18574" fg:w="20"/><text x="53.6205%" y="879.50"></text></g><g><title>core::cmp::PartialEq::ne (20 samples, 0.06%)</title><rect x="53.3705%" y="853" width="0.0575%" height="15" fill="rgb(217,71,7)" fg:x="18574" fg:w="20"/><text x="53.6205%" y="863.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::cmp::PartialEq&gt;::eq (19 samples, 0.05%)</title><rect x="53.3734%" y="837" width="0.0546%" height="15" fill="rgb(252,59,32)" fg:x="18575" fg:w="19"/><text x="53.6234%" y="847.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::check_ref_eq (7 samples, 0.02%)</title><rect x="53.4280%" y="885" width="0.0201%" height="15" fill="rgb(253,204,25)" fg:x="18594" fg:w="7"/><text x="53.6780%" y="895.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::check_eq (5 samples, 0.01%)</title><rect x="53.4337%" y="869" width="0.0144%" height="15" fill="rgb(232,21,16)" fg:x="18596" fg:w="5"/><text x="53.6837%" y="879.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (5 samples, 0.01%)</title><rect x="53.4337%" y="853" width="0.0144%" height="15" fill="rgb(248,90,29)" fg:x="18596" fg:w="5"/><text x="53.6837%" y="863.50"></text></g><g><title>core::cmp::PartialEq::ne (5 samples, 0.01%)</title><rect x="53.4337%" y="837" width="0.0144%" height="15" fill="rgb(249,223,7)" fg:x="18596" fg:w="5"/><text x="53.6837%" y="847.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::cmp::PartialEq&gt;::eq (5 samples, 0.01%)</title><rect x="53.4337%" y="821" width="0.0144%" height="15" fill="rgb(231,119,42)" fg:x="18596" fg:w="5"/><text x="53.6837%" y="831.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (5 samples, 0.01%)</title><rect x="53.4337%" y="805" width="0.0144%" height="15" fill="rgb(215,41,35)" fg:x="18596" fg:w="5"/><text x="53.6837%" y="815.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (5 samples, 0.01%)</title><rect x="53.4337%" y="789" width="0.0144%" height="15" fill="rgb(220,44,45)" fg:x="18596" fg:w="5"/><text x="53.6837%" y="799.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::check_vec_ref (6 samples, 0.02%)</title><rect x="53.4481%" y="885" width="0.0172%" height="15" fill="rgb(253,197,36)" fg:x="18601" fg:w="6"/><text x="53.6981%" y="895.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::post_execution_type_stack_transition (1,279 samples, 3.68%)</title><rect x="49.9483%" y="901" width="3.6751%" height="15" fill="rgb(245,225,54)" fg:x="17383" fg:w="1279"/><text x="50.1983%" y="911.50">move..</text></g><g><title>sdallocx (55 samples, 0.16%)</title><rect x="53.4653%" y="885" width="0.1580%" height="15" fill="rgb(239,94,37)" fg:x="18607" fg:w="55"/><text x="53.7153%" y="895.50"></text></g><g><title>isfree (55 samples, 0.16%)</title><rect x="53.4653%" y="869" width="0.1580%" height="15" fill="rgb(242,217,10)" fg:x="18607" fg:w="55"/><text x="53.7153%" y="879.50"></text></g><g><title>isdalloct (55 samples, 0.16%)</title><rect x="53.4653%" y="853" width="0.1580%" height="15" fill="rgb(250,193,7)" fg:x="18607" fg:w="55"/><text x="53.7153%" y="863.50"></text></g><g><title>arena_sdalloc (55 samples, 0.16%)</title><rect x="53.4653%" y="837" width="0.1580%" height="15" fill="rgb(230,104,19)" fg:x="18607" fg:w="55"/><text x="53.7153%" y="847.50"></text></g><g><title>tcache_dalloc_small (55 samples, 0.16%)</title><rect x="53.4653%" y="821" width="0.1580%" height="15" fill="rgb(230,181,4)" fg:x="18607" fg:w="55"/><text x="53.7153%" y="831.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (7 samples, 0.02%)</title><rect x="54.0429%" y="853" width="0.0201%" height="15" fill="rgb(216,219,49)" fg:x="18808" fg:w="7"/><text x="54.2929%" y="863.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (7 samples, 0.02%)</title><rect x="54.0429%" y="837" width="0.0201%" height="15" fill="rgb(254,144,0)" fg:x="18808" fg:w="7"/><text x="54.2929%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="54.0486%" y="821" width="0.0144%" height="15" fill="rgb(205,209,38)" fg:x="18810" fg:w="5"/><text x="54.2986%" y="831.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 0.03%)</title><rect x="54.0429%" y="869" width="0.0345%" height="15" fill="rgb(240,21,42)" fg:x="18808" fg:w="12"/><text x="54.2929%" y="879.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (5 samples, 0.01%)</title><rect x="54.0630%" y="853" width="0.0144%" height="15" fill="rgb(241,132,3)" fg:x="18815" fg:w="5"/><text x="54.3130%" y="863.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (5 samples, 0.01%)</title><rect x="54.0630%" y="837" width="0.0144%" height="15" fill="rgb(225,14,2)" fg:x="18815" fg:w="5"/><text x="54.3130%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.01%)</title><rect x="54.0630%" y="821" width="0.0144%" height="15" fill="rgb(210,141,35)" fg:x="18815" fg:w="5"/><text x="54.3130%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.01%)</title><rect x="54.0630%" y="805" width="0.0144%" height="15" fill="rgb(251,14,44)" fg:x="18815" fg:w="5"/><text x="54.3130%" y="815.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.01%)</title><rect x="54.0630%" y="789" width="0.0144%" height="15" fill="rgb(247,48,18)" fg:x="18815" fg:w="5"/><text x="54.3130%" y="799.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (4 samples, 0.01%)</title><rect x="54.0774%" y="805" width="0.0115%" height="15" fill="rgb(225,0,40)" fg:x="18820" fg:w="4"/><text x="54.3274%" y="815.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (28 samples, 0.08%)</title><rect x="54.0199%" y="885" width="0.0805%" height="15" fill="rgb(221,31,33)" fg:x="18800" fg:w="28"/><text x="54.2699%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.02%)</title><rect x="54.0774%" y="869" width="0.0230%" height="15" fill="rgb(237,42,40)" fg:x="18820" fg:w="8"/><text x="54.3274%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8 samples, 0.02%)</title><rect x="54.0774%" y="853" width="0.0230%" height="15" fill="rgb(233,51,29)" fg:x="18820" fg:w="8"/><text x="54.3274%" y="863.50"></text></g><g><title>alloc::slice::hack::to_vec (8 samples, 0.02%)</title><rect x="54.0774%" y="837" width="0.0230%" height="15" fill="rgb(226,58,20)" fg:x="18820" fg:w="8"/><text x="54.3274%" y="847.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8 samples, 0.02%)</title><rect x="54.0774%" y="821" width="0.0230%" height="15" fill="rgb(208,98,7)" fg:x="18820" fg:w="8"/><text x="54.3274%" y="831.50"></text></g><g><title>__rust_dealloc (4 samples, 0.01%)</title><rect x="54.1319%" y="853" width="0.0115%" height="15" fill="rgb(228,143,44)" fg:x="18839" fg:w="4"/><text x="54.3819%" y="863.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (4 samples, 0.01%)</title><rect x="54.1319%" y="837" width="0.0115%" height="15" fill="rgb(246,55,38)" fg:x="18839" fg:w="4"/><text x="54.3819%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (21 samples, 0.06%)</title><rect x="54.1090%" y="869" width="0.0603%" height="15" fill="rgb(247,87,16)" fg:x="18831" fg:w="21"/><text x="54.3590%" y="879.50"></text></g><g><title>sdallocx (7 samples, 0.02%)</title><rect x="54.1492%" y="853" width="0.0201%" height="15" fill="rgb(234,129,42)" fg:x="18845" fg:w="7"/><text x="54.3992%" y="863.50"></text></g><g><title>isfree (7 samples, 0.02%)</title><rect x="54.1492%" y="837" width="0.0201%" height="15" fill="rgb(220,82,16)" fg:x="18845" fg:w="7"/><text x="54.3992%" y="847.50"></text></g><g><title>isdalloct (7 samples, 0.02%)</title><rect x="54.1492%" y="821" width="0.0201%" height="15" fill="rgb(211,88,4)" fg:x="18845" fg:w="7"/><text x="54.3992%" y="831.50"></text></g><g><title>arena_sdalloc (7 samples, 0.02%)</title><rect x="54.1492%" y="805" width="0.0201%" height="15" fill="rgb(248,151,21)" fg:x="18845" fg:w="7"/><text x="54.3992%" y="815.50"></text></g><g><title>tcache_dalloc_small (7 samples, 0.02%)</title><rect x="54.1492%" y="789" width="0.0201%" height="15" fill="rgb(238,163,6)" fg:x="18845" fg:w="7"/><text x="54.3992%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (23 samples, 0.07%)</title><rect x="54.1090%" y="885" width="0.0661%" height="15" fill="rgb(209,183,11)" fg:x="18831" fg:w="23"/><text x="54.3590%" y="895.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop_ty (4 samples, 0.01%)</title><rect x="54.1750%" y="885" width="0.0115%" height="15" fill="rgb(219,37,20)" fg:x="18854" fg:w="4"/><text x="54.4250%" y="895.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or_else (4 samples, 0.01%)</title><rect x="54.1750%" y="869" width="0.0115%" height="15" fill="rgb(210,158,4)" fg:x="18854" fg:w="4"/><text x="54.4250%" y="879.50"></text></g><g><title>move_vm_runtime::loader::Loader::abilities (5 samples, 0.01%)</title><rect x="54.1865%" y="885" width="0.0144%" height="15" fill="rgb(221,167,53)" fg:x="18858" fg:w="5"/><text x="54.4365%" y="895.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::check_eq (7 samples, 0.02%)</title><rect x="54.2009%" y="885" width="0.0201%" height="15" fill="rgb(237,151,45)" fg:x="18863" fg:w="7"/><text x="54.4509%" y="895.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (4 samples, 0.01%)</title><rect x="54.2095%" y="869" width="0.0115%" height="15" fill="rgb(231,39,3)" fg:x="18866" fg:w="4"/><text x="54.4595%" y="879.50"></text></g><g><title>core::cmp::PartialEq::ne (4 samples, 0.01%)</title><rect x="54.2095%" y="853" width="0.0115%" height="15" fill="rgb(212,167,28)" fg:x="18866" fg:w="4"/><text x="54.4595%" y="863.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::cmp::PartialEq&gt;::eq (4 samples, 0.01%)</title><rect x="54.2095%" y="837" width="0.0115%" height="15" fill="rgb(232,178,8)" fg:x="18866" fg:w="4"/><text x="54.4595%" y="847.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::is_invalid (19 samples, 0.05%)</title><rect x="54.2210%" y="885" width="0.0546%" height="15" fill="rgb(225,151,20)" fg:x="18870" fg:w="19"/><text x="54.4710%" y="895.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::pre_execution_type_stack_transition (231 samples, 0.66%)</title><rect x="53.6234%" y="901" width="0.6638%" height="15" fill="rgb(238,3,37)" fg:x="18662" fg:w="231"/><text x="53.8734%" y="911.50"></text></g><g><title>sdallocx (4 samples, 0.01%)</title><rect x="54.2756%" y="885" width="0.0115%" height="15" fill="rgb(251,147,42)" fg:x="18889" fg:w="4"/><text x="54.5256%" y="895.50"></text></g><g><title>isfree (4 samples, 0.01%)</title><rect x="54.2756%" y="869" width="0.0115%" height="15" fill="rgb(208,173,10)" fg:x="18889" fg:w="4"/><text x="54.5256%" y="879.50"></text></g><g><title>isdalloct (4 samples, 0.01%)</title><rect x="54.2756%" y="853" width="0.0115%" height="15" fill="rgb(246,225,4)" fg:x="18889" fg:w="4"/><text x="54.5256%" y="863.50"></text></g><g><title>arena_sdalloc (4 samples, 0.01%)</title><rect x="54.2756%" y="837" width="0.0115%" height="15" fill="rgb(248,102,6)" fg:x="18889" fg:w="4"/><text x="54.5256%" y="847.50"></text></g><g><title>tcache_dalloc_small (4 samples, 0.01%)</title><rect x="54.2756%" y="821" width="0.0115%" height="15" fill="rgb(232,6,21)" fg:x="18889" fg:w="4"/><text x="54.5256%" y="831.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop_as (5 samples, 0.01%)</title><rect x="54.2957%" y="869" width="0.0144%" height="15" fill="rgb(221,179,22)" fg:x="18896" fg:w="5"/><text x="54.5457%" y="879.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop_bool (9 samples, 0.03%)</title><rect x="54.2871%" y="901" width="0.0259%" height="15" fill="rgb(252,50,20)" fg:x="18893" fg:w="9"/><text x="54.5371%" y="911.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop (9 samples, 0.03%)</title><rect x="54.2871%" y="885" width="0.0259%" height="15" fill="rgb(222,56,38)" fg:x="18893" fg:w="9"/><text x="54.5371%" y="895.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (15 samples, 0.04%)</title><rect x="54.3245%" y="853" width="0.0431%" height="15" fill="rgb(206,193,29)" fg:x="18906" fg:w="15"/><text x="54.5745%" y="863.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop_as (22 samples, 0.06%)</title><rect x="54.3187%" y="869" width="0.0632%" height="15" fill="rgb(239,192,45)" fg:x="18904" fg:w="22"/><text x="54.5687%" y="879.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop_int (25 samples, 0.07%)</title><rect x="54.3130%" y="901" width="0.0718%" height="15" fill="rgb(254,18,36)" fg:x="18902" fg:w="25"/><text x="54.5630%" y="911.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::binop (25 samples, 0.07%)</title><rect x="54.3130%" y="885" width="0.0718%" height="15" fill="rgb(221,127,11)" fg:x="18902" fg:w="25"/><text x="54.5630%" y="895.50"></text></g><g><title>move_vm_types::values::values_impl::Container::visit_impl (4 samples, 0.01%)</title><rect x="54.4193%" y="757" width="0.0115%" height="15" fill="rgb(234,146,35)" fg:x="18939" fg:w="4"/><text x="54.6693%" y="767.50"></text></g><g><title>move_vm_types::values::values_impl::Container::visit_impl (6 samples, 0.02%)</title><rect x="54.4164%" y="773" width="0.0172%" height="15" fill="rgb(254,201,37)" fg:x="18938" fg:w="6"/><text x="54.6664%" y="783.50"></text></g><g><title>move_vm_types::values::values_impl::Container::visit_impl (10 samples, 0.03%)</title><rect x="54.4078%" y="789" width="0.0287%" height="15" fill="rgb(211,202,23)" fg:x="18935" fg:w="10"/><text x="54.6578%" y="799.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_heap_size (13 samples, 0.04%)</title><rect x="54.4078%" y="853" width="0.0374%" height="15" fill="rgb(237,91,2)" fg:x="18935" fg:w="13"/><text x="54.6578%" y="863.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_value_size (13 samples, 0.04%)</title><rect x="54.4078%" y="837" width="0.0374%" height="15" fill="rgb(226,228,36)" fg:x="18935" fg:w="13"/><text x="54.6578%" y="847.50"></text></g><g><title>&lt;&amp;T as move_vm_types::views::ValueView&gt;::visit (13 samples, 0.04%)</title><rect x="54.4078%" y="821" width="0.0374%" height="15" fill="rgb(213,63,50)" fg:x="18935" fg:w="13"/><text x="54.6578%" y="831.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::GlobalValue::view::Wrapper as move_vm_types::views::ValueView&gt;::visit (13 samples, 0.04%)</title><rect x="54.4078%" y="805" width="0.0374%" height="15" fill="rgb(235,194,19)" fg:x="18935" fg:w="13"/><text x="54.6578%" y="815.50"></text></g><g><title>&lt;aptos_gas::gas_meter::AptosGasMeter as move_vm_types::gas::GasMeter&gt;::charge_load_resource (16 samples, 0.05%)</title><rect x="54.4078%" y="869" width="0.0460%" height="15" fill="rgb(207,204,18)" fg:x="18935" fg:w="16"/><text x="54.6578%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="54.4538%" y="821" width="0.0144%" height="15" fill="rgb(248,8,7)" fg:x="18951" fg:w="5"/><text x="54.7038%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 0.01%)</title><rect x="54.4538%" y="805" width="0.0144%" height="15" fill="rgb(223,145,47)" fg:x="18951" fg:w="5"/><text x="54.7038%" y="815.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.01%)</title><rect x="54.4538%" y="789" width="0.0144%" height="15" fill="rgb(228,84,11)" fg:x="18951" fg:w="5"/><text x="54.7038%" y="799.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.01%)</title><rect x="54.4538%" y="773" width="0.0144%" height="15" fill="rgb(218,76,45)" fg:x="18951" fg:w="5"/><text x="54.7038%" y="783.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::clone::Clone&gt;::clone (8 samples, 0.02%)</title><rect x="54.4538%" y="837" width="0.0230%" height="15" fill="rgb(223,80,15)" fg:x="18951" fg:w="8"/><text x="54.7038%" y="847.50"></text></g><g><title>aptos_block_executor::data_cache::StorageAdapter&lt;S&gt;::get (14 samples, 0.04%)</title><rect x="54.4768%" y="837" width="0.0402%" height="15" fill="rgb(219,218,33)" fg:x="18959" fg:w="14"/><text x="54.7268%" y="847.50"></text></g><g><title>&lt;aptos_block_executor::view::LatestView&lt;T,S&gt; as aptos_state_view::TStateView&gt;::get_state_value (14 samples, 0.04%)</title><rect x="54.4768%" y="821" width="0.0402%" height="15" fill="rgb(208,51,11)" fg:x="18959" fg:w="14"/><text x="54.7268%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (12 samples, 0.03%)</title><rect x="54.4825%" y="805" width="0.0345%" height="15" fill="rgb(229,165,39)" fg:x="18961" fg:w="12"/><text x="54.7325%" y="815.50"></text></g><g><title>&lt;aptos_block_executor::view::LatestView&lt;T,S&gt; as aptos_state_view::TStateView&gt;::get_state_value::{{closure}} (12 samples, 0.03%)</title><rect x="54.4825%" y="789" width="0.0345%" height="15" fill="rgb(241,100,24)" fg:x="18961" fg:w="12"/><text x="54.7325%" y="799.50"></text></g><g><title>&lt;R as aptos_state_view::TStateView&gt;::get_state_value (12 samples, 0.03%)</title><rect x="54.4825%" y="773" width="0.0345%" height="15" fill="rgb(228,14,23)" fg:x="18961" fg:w="12"/><text x="54.7325%" y="783.50"></text></g><g><title>&lt;aptos_block_executor::cached_state_view::CachedStateView as aptos_state_view::TStateView&gt;::get_state_value (12 samples, 0.03%)</title><rect x="54.4825%" y="757" width="0.0345%" height="15" fill="rgb(247,116,52)" fg:x="18961" fg:w="12"/><text x="54.7325%" y="767.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (9 samples, 0.03%)</title><rect x="54.4911%" y="741" width="0.0259%" height="15" fill="rgb(216,149,33)" fg:x="18964" fg:w="9"/><text x="54.7411%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (9 samples, 0.03%)</title><rect x="54.4911%" y="725" width="0.0259%" height="15" fill="rgb(238,142,29)" fg:x="18964" fg:w="9"/><text x="54.7411%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (9 samples, 0.03%)</title><rect x="54.4911%" y="709" width="0.0259%" height="15" fill="rgb(224,83,40)" fg:x="18964" fg:w="9"/><text x="54.7411%" y="719.50"></text></g><g><title>hashbrown::map::make_hash (9 samples, 0.03%)</title><rect x="54.4911%" y="693" width="0.0259%" height="15" fill="rgb(234,165,11)" fg:x="18964" fg:w="9"/><text x="54.7411%" y="703.50"></text></g><g><title>core::hash::BuildHasher::hash_one (9 samples, 0.03%)</title><rect x="54.4911%" y="677" width="0.0259%" height="15" fill="rgb(215,96,23)" fg:x="18964" fg:w="9"/><text x="54.7411%" y="687.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (8 samples, 0.02%)</title><rect x="54.4940%" y="661" width="0.0230%" height="15" fill="rgb(233,179,26)" fg:x="18965" fg:w="8"/><text x="54.7440%" y="671.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (8 samples, 0.02%)</title><rect x="54.4940%" y="645" width="0.0230%" height="15" fill="rgb(225,129,33)" fg:x="18965" fg:w="8"/><text x="54.7440%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 0.01%)</title><rect x="54.5055%" y="629" width="0.0115%" height="15" fill="rgb(237,49,13)" fg:x="18969" fg:w="4"/><text x="54.7555%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4 samples, 0.01%)</title><rect x="54.5055%" y="613" width="0.0115%" height="15" fill="rgb(211,3,31)" fg:x="18969" fg:w="4"/><text x="54.7555%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (11 samples, 0.03%)</title><rect x="54.5256%" y="517" width="0.0316%" height="15" fill="rgb(216,152,19)" fg:x="18976" fg:w="11"/><text x="54.7756%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (11 samples, 0.03%)</title><rect x="54.5256%" y="501" width="0.0316%" height="15" fill="rgb(251,121,35)" fg:x="18976" fg:w="11"/><text x="54.7756%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (11 samples, 0.03%)</title><rect x="54.5256%" y="485" width="0.0316%" height="15" fill="rgb(210,217,47)" fg:x="18976" fg:w="11"/><text x="54.7756%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (11 samples, 0.03%)</title><rect x="54.5256%" y="469" width="0.0316%" height="15" fill="rgb(244,116,22)" fg:x="18976" fg:w="11"/><text x="54.7756%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (11 samples, 0.03%)</title><rect x="54.5256%" y="453" width="0.0316%" height="15" fill="rgb(228,17,21)" fg:x="18976" fg:w="11"/><text x="54.7756%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (11 samples, 0.03%)</title><rect x="54.5256%" y="437" width="0.0316%" height="15" fill="rgb(240,149,34)" fg:x="18976" fg:w="11"/><text x="54.7756%" y="447.50"></text></g><g><title>alloc::alloc::Global::grow_impl (11 samples, 0.03%)</title><rect x="54.5256%" y="421" width="0.0316%" height="15" fill="rgb(208,125,47)" fg:x="18976" fg:w="11"/><text x="54.7756%" y="431.50"></text></g><g><title>alloc::alloc::realloc (11 samples, 0.03%)</title><rect x="54.5256%" y="405" width="0.0316%" height="15" fill="rgb(249,186,39)" fg:x="18976" fg:w="11"/><text x="54.7756%" y="415.50"></text></g><g><title>rallocx (9 samples, 0.03%)</title><rect x="54.5313%" y="389" width="0.0259%" height="15" fill="rgb(240,220,33)" fg:x="18978" fg:w="9"/><text x="54.7813%" y="399.50"></text></g><g><title>iralloct (4 samples, 0.01%)</title><rect x="54.5457%" y="373" width="0.0115%" height="15" fill="rgb(243,110,23)" fg:x="18983" fg:w="4"/><text x="54.7957%" y="383.50"></text></g><g><title>_rjem_je_arena_ralloc (4 samples, 0.01%)</title><rect x="54.5457%" y="357" width="0.0115%" height="15" fill="rgb(219,163,46)" fg:x="18983" fg:w="4"/><text x="54.7957%" y="367.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (13 samples, 0.04%)</title><rect x="54.5256%" y="693" width="0.0374%" height="15" fill="rgb(216,126,30)" fg:x="18976" fg:w="13"/><text x="54.7756%" y="703.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (13 samples, 0.04%)</title><rect x="54.5256%" y="677" width="0.0374%" height="15" fill="rgb(208,139,11)" fg:x="18976" fg:w="13"/><text x="54.7756%" y="687.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (13 samples, 0.04%)</title><rect x="54.5256%" y="661" width="0.0374%" height="15" fill="rgb(213,118,36)" fg:x="18976" fg:w="13"/><text x="54.7756%" y="671.50"></text></g><g><title> 32]&gt;::serialize (13 samples, 0.04%)</title><rect x="54.5256%" y="645" width="0.0374%" height="15" fill="rgb(226,43,17)" fg:x="18976" fg:w="13"/><text x="54.7756%" y="655.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (13 samples, 0.04%)</title><rect x="54.5256%" y="629" width="0.0374%" height="15" fill="rgb(254,217,4)" fg:x="18976" fg:w="13"/><text x="54.7756%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (13 samples, 0.04%)</title><rect x="54.5256%" y="613" width="0.0374%" height="15" fill="rgb(210,134,47)" fg:x="18976" fg:w="13"/><text x="54.7756%" y="623.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (13 samples, 0.04%)</title><rect x="54.5256%" y="597" width="0.0374%" height="15" fill="rgb(237,24,49)" fg:x="18976" fg:w="13"/><text x="54.7756%" y="607.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (13 samples, 0.04%)</title><rect x="54.5256%" y="581" width="0.0374%" height="15" fill="rgb(251,39,46)" fg:x="18976" fg:w="13"/><text x="54.7756%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (13 samples, 0.04%)</title><rect x="54.5256%" y="565" width="0.0374%" height="15" fill="rgb(251,220,3)" fg:x="18976" fg:w="13"/><text x="54.7756%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (13 samples, 0.04%)</title><rect x="54.5256%" y="549" width="0.0374%" height="15" fill="rgb(228,105,12)" fg:x="18976" fg:w="13"/><text x="54.7756%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (13 samples, 0.04%)</title><rect x="54.5256%" y="533" width="0.0374%" height="15" fill="rgb(215,196,1)" fg:x="18976" fg:w="13"/><text x="54.7756%" y="543.50"></text></g><g><title>bcs::ser::to_bytes (27 samples, 0.08%)</title><rect x="54.5199%" y="789" width="0.0776%" height="15" fill="rgb(214,33,39)" fg:x="18974" fg:w="27"/><text x="54.7699%" y="799.50"></text></g><g><title>bcs::ser::serialize_into (27 samples, 0.08%)</title><rect x="54.5199%" y="773" width="0.0776%" height="15" fill="rgb(220,19,52)" fg:x="18974" fg:w="27"/><text x="54.7699%" y="783.50"></text></g><g><title>aptos_types::access_path::_::&lt;impl serde::ser::Serialize for aptos_types::access_path::Path&gt;::serialize (27 samples, 0.08%)</title><rect x="54.5199%" y="757" width="0.0776%" height="15" fill="rgb(221,78,38)" fg:x="18974" fg:w="27"/><text x="54.7699%" y="767.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (27 samples, 0.08%)</title><rect x="54.5199%" y="741" width="0.0776%" height="15" fill="rgb(253,30,16)" fg:x="18974" fg:w="27"/><text x="54.7699%" y="751.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::StructTag&gt;::serialize (25 samples, 0.07%)</title><rect x="54.5256%" y="725" width="0.0718%" height="15" fill="rgb(242,65,0)" fg:x="18976" fg:w="25"/><text x="54.7756%" y="735.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (25 samples, 0.07%)</title><rect x="54.5256%" y="709" width="0.0718%" height="15" fill="rgb(235,201,12)" fg:x="18976" fg:w="25"/><text x="54.7756%" y="719.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (11 samples, 0.03%)</title><rect x="54.5658%" y="693" width="0.0316%" height="15" fill="rgb(233,161,9)" fg:x="18990" fg:w="11"/><text x="54.8158%" y="703.50"></text></g><g><title>serde::ser::Serializer::collect_seq (11 samples, 0.03%)</title><rect x="54.5658%" y="677" width="0.0316%" height="15" fill="rgb(241,207,41)" fg:x="18990" fg:w="11"/><text x="54.8158%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (11 samples, 0.03%)</title><rect x="54.5658%" y="661" width="0.0316%" height="15" fill="rgb(212,69,46)" fg:x="18990" fg:w="11"/><text x="54.8158%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (11 samples, 0.03%)</title><rect x="54.5658%" y="645" width="0.0316%" height="15" fill="rgb(239,69,45)" fg:x="18990" fg:w="11"/><text x="54.8158%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (11 samples, 0.03%)</title><rect x="54.5658%" y="629" width="0.0316%" height="15" fill="rgb(242,117,48)" fg:x="18990" fg:w="11"/><text x="54.8158%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_seq::{{closure}} (11 samples, 0.03%)</title><rect x="54.5658%" y="613" width="0.0316%" height="15" fill="rgb(228,41,36)" fg:x="18990" fg:w="11"/><text x="54.8158%" y="623.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeSeq&gt;::serialize_element (11 samples, 0.03%)</title><rect x="54.5658%" y="597" width="0.0316%" height="15" fill="rgb(212,3,32)" fg:x="18990" fg:w="11"/><text x="54.8158%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (11 samples, 0.03%)</title><rect x="54.5658%" y="581" width="0.0316%" height="15" fill="rgb(233,41,49)" fg:x="18990" fg:w="11"/><text x="54.8158%" y="591.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::TypeTag&gt;::serialize (10 samples, 0.03%)</title><rect x="54.5687%" y="565" width="0.0287%" height="15" fill="rgb(252,170,49)" fg:x="18991" fg:w="10"/><text x="54.8187%" y="575.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (6 samples, 0.02%)</title><rect x="54.5802%" y="549" width="0.0172%" height="15" fill="rgb(229,53,26)" fg:x="18995" fg:w="6"/><text x="54.8302%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::boxed::Box&lt;T&gt;&gt;::serialize (6 samples, 0.02%)</title><rect x="54.5802%" y="533" width="0.0172%" height="15" fill="rgb(217,157,12)" fg:x="18995" fg:w="6"/><text x="54.8302%" y="543.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::StructTag&gt;::serialize (6 samples, 0.02%)</title><rect x="54.5802%" y="517" width="0.0172%" height="15" fill="rgb(227,17,9)" fg:x="18995" fg:w="6"/><text x="54.8302%" y="527.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.01%)</title><rect x="54.5831%" y="501" width="0.0144%" height="15" fill="rgb(218,84,12)" fg:x="18996" fg:w="5"/><text x="54.8331%" y="511.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (5 samples, 0.01%)</title><rect x="54.5831%" y="485" width="0.0144%" height="15" fill="rgb(212,79,24)" fg:x="18996" fg:w="5"/><text x="54.8331%" y="495.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (5 samples, 0.01%)</title><rect x="54.5831%" y="469" width="0.0144%" height="15" fill="rgb(217,222,37)" fg:x="18996" fg:w="5"/><text x="54.8331%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (5 samples, 0.01%)</title><rect x="54.5831%" y="453" width="0.0144%" height="15" fill="rgb(246,208,8)" fg:x="18996" fg:w="5"/><text x="54.8331%" y="463.50"></text></g><g><title> 32]&gt;::serialize (5 samples, 0.01%)</title><rect x="54.5831%" y="437" width="0.0144%" height="15" fill="rgb(244,133,10)" fg:x="18996" fg:w="5"/><text x="54.8331%" y="447.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (5 samples, 0.01%)</title><rect x="54.5831%" y="421" width="0.0144%" height="15" fill="rgb(209,219,41)" fg:x="18996" fg:w="5"/><text x="54.8331%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (4 samples, 0.01%)</title><rect x="54.5859%" y="405" width="0.0115%" height="15" fill="rgb(253,175,45)" fg:x="18997" fg:w="4"/><text x="54.8359%" y="415.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (4 samples, 0.01%)</title><rect x="54.5859%" y="389" width="0.0115%" height="15" fill="rgb(235,100,37)" fg:x="18997" fg:w="4"/><text x="54.8359%" y="399.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (4 samples, 0.01%)</title><rect x="54.5859%" y="373" width="0.0115%" height="15" fill="rgb(225,87,19)" fg:x="18997" fg:w="4"/><text x="54.8359%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (4 samples, 0.01%)</title><rect x="54.5859%" y="357" width="0.0115%" height="15" fill="rgb(217,152,17)" fg:x="18997" fg:w="4"/><text x="54.8359%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (4 samples, 0.01%)</title><rect x="54.5859%" y="341" width="0.0115%" height="15" fill="rgb(235,72,13)" fg:x="18997" fg:w="4"/><text x="54.8359%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (4 samples, 0.01%)</title><rect x="54.5859%" y="325" width="0.0115%" height="15" fill="rgb(233,140,18)" fg:x="18997" fg:w="4"/><text x="54.8359%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (4 samples, 0.01%)</title><rect x="54.5859%" y="309" width="0.0115%" height="15" fill="rgb(207,212,28)" fg:x="18997" fg:w="4"/><text x="54.8359%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.01%)</title><rect x="54.5859%" y="293" width="0.0115%" height="15" fill="rgb(220,130,25)" fg:x="18997" fg:w="4"/><text x="54.8359%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.01%)</title><rect x="54.5859%" y="277" width="0.0115%" height="15" fill="rgb(205,55,34)" fg:x="18997" fg:w="4"/><text x="54.8359%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.01%)</title><rect x="54.5859%" y="261" width="0.0115%" height="15" fill="rgb(237,54,35)" fg:x="18997" fg:w="4"/><text x="54.8359%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.01%)</title><rect x="54.5859%" y="245" width="0.0115%" height="15" fill="rgb(208,67,23)" fg:x="18997" fg:w="4"/><text x="54.8359%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (4 samples, 0.01%)</title><rect x="54.5859%" y="229" width="0.0115%" height="15" fill="rgb(206,207,50)" fg:x="18997" fg:w="4"/><text x="54.8359%" y="239.50"></text></g><g><title>alloc::alloc::Global::grow_impl (4 samples, 0.01%)</title><rect x="54.5859%" y="213" width="0.0115%" height="15" fill="rgb(213,211,42)" fg:x="18997" fg:w="4"/><text x="54.8359%" y="223.50"></text></g><g><title>alloc::alloc::realloc (4 samples, 0.01%)</title><rect x="54.5859%" y="197" width="0.0115%" height="15" fill="rgb(252,197,50)" fg:x="18997" fg:w="4"/><text x="54.8359%" y="207.50"></text></g><g><title>&lt;aptos_block_executor::data_cache::StorageAdapter&lt;S&gt; as move_core_types::resolver::ResourceResolver&gt;::get_resource (51 samples, 0.15%)</title><rect x="54.4538%" y="853" width="0.1465%" height="15" fill="rgb(251,211,41)" fg:x="18951" fg:w="51"/><text x="54.7038%" y="863.50"></text></g><g><title>aptos_block_executor::data_cache::create_access_path (29 samples, 0.08%)</title><rect x="54.5170%" y="837" width="0.0833%" height="15" fill="rgb(229,211,5)" fg:x="18973" fg:w="29"/><text x="54.7670%" y="847.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_access_path (29 samples, 0.08%)</title><rect x="54.5170%" y="821" width="0.0833%" height="15" fill="rgb(239,36,31)" fg:x="18973" fg:w="29"/><text x="54.7670%" y="831.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_path_vec (29 samples, 0.08%)</title><rect x="54.5170%" y="805" width="0.0833%" height="15" fill="rgb(248,67,31)" fg:x="18973" fg:w="29"/><text x="54.7670%" y="815.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::contains_key (6 samples, 0.02%)</title><rect x="54.6089%" y="853" width="0.0172%" height="15" fill="rgb(249,55,44)" fg:x="19005" fg:w="6"/><text x="54.8589%" y="863.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (6 samples, 0.02%)</title><rect x="54.6089%" y="837" width="0.0172%" height="15" fill="rgb(216,82,12)" fg:x="19005" fg:w="6"/><text x="54.8589%" y="847.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (6 samples, 0.02%)</title><rect x="54.6089%" y="821" width="0.0172%" height="15" fill="rgb(242,174,1)" fg:x="19005" fg:w="6"/><text x="54.8589%" y="831.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (6 samples, 0.02%)</title><rect x="54.6089%" y="805" width="0.0172%" height="15" fill="rgb(208,120,29)" fg:x="19005" fg:w="6"/><text x="54.8589%" y="815.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (6 samples, 0.02%)</title><rect x="54.6089%" y="789" width="0.0172%" height="15" fill="rgb(221,105,43)" fg:x="19005" fg:w="6"/><text x="54.8589%" y="799.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::cmp::Ord&gt;::cmp (6 samples, 0.02%)</title><rect x="54.6089%" y="773" width="0.0172%" height="15" fill="rgb(234,124,22)" fg:x="19005" fg:w="6"/><text x="54.8589%" y="783.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (4 samples, 0.01%)</title><rect x="54.6262%" y="837" width="0.0115%" height="15" fill="rgb(212,23,30)" fg:x="19011" fg:w="4"/><text x="54.8762%" y="847.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (4 samples, 0.01%)</title><rect x="54.6262%" y="821" width="0.0115%" height="15" fill="rgb(219,122,53)" fg:x="19011" fg:w="4"/><text x="54.8762%" y="831.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (4 samples, 0.01%)</title><rect x="54.6262%" y="805" width="0.0115%" height="15" fill="rgb(248,84,24)" fg:x="19011" fg:w="4"/><text x="54.8762%" y="815.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get_mut (18 samples, 0.05%)</title><rect x="54.6262%" y="853" width="0.0517%" height="15" fill="rgb(245,115,18)" fg:x="19011" fg:w="18"/><text x="54.8762%" y="863.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (14 samples, 0.04%)</title><rect x="54.6377%" y="837" width="0.0402%" height="15" fill="rgb(227,176,51)" fg:x="19015" fg:w="14"/><text x="54.8877%" y="847.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (10 samples, 0.03%)</title><rect x="54.6779%" y="853" width="0.0287%" height="15" fill="rgb(229,63,42)" fg:x="19029" fg:w="10"/><text x="54.9279%" y="863.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (7 samples, 0.02%)</title><rect x="54.6865%" y="837" width="0.0201%" height="15" fill="rgb(247,202,24)" fg:x="19032" fg:w="7"/><text x="54.9365%" y="847.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (5 samples, 0.01%)</title><rect x="54.6923%" y="821" width="0.0144%" height="15" fill="rgb(244,173,20)" fg:x="19034" fg:w="5"/><text x="54.9423%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="54.7066%" y="805" width="0.0115%" height="15" fill="rgb(242,81,47)" fg:x="19039" fg:w="4"/><text x="54.9566%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::language_storage::TypeTag]&gt; (4 samples, 0.01%)</title><rect x="54.7066%" y="789" width="0.0115%" height="15" fill="rgb(231,185,54)" fg:x="19039" fg:w="4"/><text x="54.9566%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::TypeTag&gt; (4 samples, 0.01%)</title><rect x="54.7066%" y="773" width="0.0115%" height="15" fill="rgb(243,55,32)" fg:x="19039" fg:w="4"/><text x="54.9566%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::language_storage::TypeTag&gt;&gt; (5 samples, 0.01%)</title><rect x="54.7066%" y="821" width="0.0144%" height="15" fill="rgb(208,167,19)" fg:x="19039" fg:w="5"/><text x="54.9566%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_core_types::language_storage::StructTag&gt;&gt; (7 samples, 0.02%)</title><rect x="54.7066%" y="853" width="0.0201%" height="15" fill="rgb(231,72,35)" fg:x="19039" fg:w="7"/><text x="54.9566%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::StructTag&gt; (7 samples, 0.02%)</title><rect x="54.7066%" y="837" width="0.0201%" height="15" fill="rgb(250,173,51)" fg:x="19039" fg:w="7"/><text x="54.9566%" y="847.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (8 samples, 0.02%)</title><rect x="54.7727%" y="357" width="0.0230%" height="15" fill="rgb(209,5,22)" fg:x="19062" fg:w="8"/><text x="55.0227%" y="367.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (8 samples, 0.02%)</title><rect x="54.7727%" y="341" width="0.0230%" height="15" fill="rgb(250,174,19)" fg:x="19062" fg:w="8"/><text x="55.0227%" y="351.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (6 samples, 0.02%)</title><rect x="54.7785%" y="325" width="0.0172%" height="15" fill="rgb(217,3,49)" fg:x="19064" fg:w="6"/><text x="55.0285%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.02%)</title><rect x="54.7785%" y="309" width="0.0172%" height="15" fill="rgb(218,225,5)" fg:x="19064" fg:w="6"/><text x="55.0285%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6 samples, 0.02%)</title><rect x="54.7785%" y="293" width="0.0172%" height="15" fill="rgb(236,89,11)" fg:x="19064" fg:w="6"/><text x="55.0285%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.02%)</title><rect x="54.7785%" y="277" width="0.0172%" height="15" fill="rgb(206,33,28)" fg:x="19064" fg:w="6"/><text x="55.0285%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.02%)</title><rect x="54.7785%" y="261" width="0.0172%" height="15" fill="rgb(241,56,42)" fg:x="19064" fg:w="6"/><text x="55.0285%" y="271.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (16 samples, 0.05%)</title><rect x="54.7526%" y="485" width="0.0460%" height="15" fill="rgb(222,44,11)" fg:x="19055" fg:w="16"/><text x="55.0026%" y="495.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (14 samples, 0.04%)</title><rect x="54.7583%" y="469" width="0.0402%" height="15" fill="rgb(234,111,20)" fg:x="19057" fg:w="14"/><text x="55.0083%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (14 samples, 0.04%)</title><rect x="54.7583%" y="453" width="0.0402%" height="15" fill="rgb(237,77,6)" fg:x="19057" fg:w="14"/><text x="55.0083%" y="463.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (14 samples, 0.04%)</title><rect x="54.7583%" y="437" width="0.0402%" height="15" fill="rgb(235,111,23)" fg:x="19057" fg:w="14"/><text x="55.0083%" y="447.50"></text></g><g><title>alloc::slice::hack::to_vec (14 samples, 0.04%)</title><rect x="54.7583%" y="421" width="0.0402%" height="15" fill="rgb(251,135,29)" fg:x="19057" fg:w="14"/><text x="55.0083%" y="431.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (14 samples, 0.04%)</title><rect x="54.7583%" y="405" width="0.0402%" height="15" fill="rgb(217,57,1)" fg:x="19057" fg:w="14"/><text x="55.0083%" y="415.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (13 samples, 0.04%)</title><rect x="54.7612%" y="389" width="0.0374%" height="15" fill="rgb(249,119,31)" fg:x="19058" fg:w="13"/><text x="55.0112%" y="399.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.03%)</title><rect x="54.7727%" y="373" width="0.0259%" height="15" fill="rgb(233,164,33)" fg:x="19062" fg:w="9"/><text x="55.0227%" y="383.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (22 samples, 0.06%)</title><rect x="54.7440%" y="581" width="0.0632%" height="15" fill="rgb(250,217,43)" fg:x="19052" fg:w="22"/><text x="54.9940%" y="591.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (20 samples, 0.06%)</title><rect x="54.7497%" y="565" width="0.0575%" height="15" fill="rgb(232,154,50)" fg:x="19054" fg:w="20"/><text x="54.9997%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (20 samples, 0.06%)</title><rect x="54.7497%" y="549" width="0.0575%" height="15" fill="rgb(227,190,8)" fg:x="19054" fg:w="20"/><text x="54.9997%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (19 samples, 0.05%)</title><rect x="54.7526%" y="533" width="0.0546%" height="15" fill="rgb(209,217,32)" fg:x="19055" fg:w="19"/><text x="55.0026%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (19 samples, 0.05%)</title><rect x="54.7526%" y="517" width="0.0546%" height="15" fill="rgb(243,203,50)" fg:x="19055" fg:w="19"/><text x="55.0026%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (19 samples, 0.05%)</title><rect x="54.7526%" y="501" width="0.0546%" height="15" fill="rgb(232,152,27)" fg:x="19055" fg:w="19"/><text x="55.0026%" y="511.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (23 samples, 0.07%)</title><rect x="54.7440%" y="597" width="0.0661%" height="15" fill="rgb(240,34,29)" fg:x="19052" fg:w="23"/><text x="54.9940%" y="607.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (29 samples, 0.08%)</title><rect x="54.7440%" y="629" width="0.0833%" height="15" fill="rgb(215,185,52)" fg:x="19052" fg:w="29"/><text x="54.9940%" y="639.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (29 samples, 0.08%)</title><rect x="54.7440%" y="613" width="0.0833%" height="15" fill="rgb(240,89,49)" fg:x="19052" fg:w="29"/><text x="54.9940%" y="623.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (6 samples, 0.02%)</title><rect x="54.8101%" y="597" width="0.0172%" height="15" fill="rgb(225,12,52)" fg:x="19075" fg:w="6"/><text x="55.0601%" y="607.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (6 samples, 0.02%)</title><rect x="54.8101%" y="581" width="0.0172%" height="15" fill="rgb(239,128,45)" fg:x="19075" fg:w="6"/><text x="55.0601%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.02%)</title><rect x="54.8101%" y="565" width="0.0172%" height="15" fill="rgb(211,78,47)" fg:x="19075" fg:w="6"/><text x="55.0601%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.02%)</title><rect x="54.8101%" y="549" width="0.0172%" height="15" fill="rgb(232,31,21)" fg:x="19075" fg:w="6"/><text x="55.0601%" y="559.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.02%)</title><rect x="54.8101%" y="533" width="0.0172%" height="15" fill="rgb(222,168,14)" fg:x="19075" fg:w="6"/><text x="55.0601%" y="543.50"></text></g><g><title>mallocx (4 samples, 0.01%)</title><rect x="54.8158%" y="517" width="0.0115%" height="15" fill="rgb(209,128,24)" fg:x="19077" fg:w="4"/><text x="55.0658%" y="527.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (37 samples, 0.11%)</title><rect x="54.7354%" y="725" width="0.1063%" height="15" fill="rgb(249,35,13)" fg:x="19049" fg:w="37"/><text x="54.9854%" y="735.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (34 samples, 0.10%)</title><rect x="54.7440%" y="709" width="0.0977%" height="15" fill="rgb(218,7,2)" fg:x="19052" fg:w="34"/><text x="54.9940%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (34 samples, 0.10%)</title><rect x="54.7440%" y="693" width="0.0977%" height="15" fill="rgb(238,107,27)" fg:x="19052" fg:w="34"/><text x="54.9940%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (34 samples, 0.10%)</title><rect x="54.7440%" y="677" width="0.0977%" height="15" fill="rgb(217,88,38)" fg:x="19052" fg:w="34"/><text x="54.9940%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (34 samples, 0.10%)</title><rect x="54.7440%" y="661" width="0.0977%" height="15" fill="rgb(230,207,0)" fg:x="19052" fg:w="34"/><text x="54.9940%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (34 samples, 0.10%)</title><rect x="54.7440%" y="645" width="0.0977%" height="15" fill="rgb(249,64,54)" fg:x="19052" fg:w="34"/><text x="54.9940%" y="655.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (4 samples, 0.01%)</title><rect x="54.8302%" y="629" width="0.0115%" height="15" fill="rgb(231,7,11)" fg:x="19082" fg:w="4"/><text x="55.0802%" y="639.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (41 samples, 0.12%)</title><rect x="54.7325%" y="805" width="0.1178%" height="15" fill="rgb(205,149,21)" fg:x="19048" fg:w="41"/><text x="54.9825%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (40 samples, 0.11%)</title><rect x="54.7354%" y="789" width="0.1149%" height="15" fill="rgb(215,126,34)" fg:x="19049" fg:w="40"/><text x="54.9854%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (40 samples, 0.11%)</title><rect x="54.7354%" y="773" width="0.1149%" height="15" fill="rgb(241,132,45)" fg:x="19049" fg:w="40"/><text x="54.9854%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (40 samples, 0.11%)</title><rect x="54.7354%" y="757" width="0.1149%" height="15" fill="rgb(252,69,32)" fg:x="19049" fg:w="40"/><text x="54.9854%" y="767.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (40 samples, 0.11%)</title><rect x="54.7354%" y="741" width="0.1149%" height="15" fill="rgb(232,204,19)" fg:x="19049" fg:w="40"/><text x="54.9854%" y="751.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout (46 samples, 0.13%)</title><rect x="54.7325%" y="853" width="0.1322%" height="15" fill="rgb(249,15,47)" fg:x="19048" fg:w="46"/><text x="54.9825%" y="863.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout_impl (46 samples, 0.13%)</title><rect x="54.7325%" y="837" width="0.1322%" height="15" fill="rgb(209,227,23)" fg:x="19048" fg:w="46"/><text x="54.9825%" y="847.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_layout (46 samples, 0.13%)</title><rect x="54.7325%" y="821" width="0.1322%" height="15" fill="rgb(248,92,24)" fg:x="19048" fg:w="46"/><text x="54.9825%" y="831.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (5 samples, 0.01%)</title><rect x="54.8503%" y="805" width="0.0144%" height="15" fill="rgb(247,59,2)" fg:x="19089" fg:w="5"/><text x="55.1003%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (5 samples, 0.01%)</title><rect x="54.8503%" y="789" width="0.0144%" height="15" fill="rgb(221,30,5)" fg:x="19089" fg:w="5"/><text x="55.1003%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (5 samples, 0.01%)</title><rect x="54.8503%" y="773" width="0.0144%" height="15" fill="rgb(208,108,53)" fg:x="19089" fg:w="5"/><text x="55.1003%" y="783.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::CachedStructIndex as core::cmp::PartialEq&gt;::eq (6 samples, 0.02%)</title><rect x="54.8848%" y="645" width="0.0172%" height="15" fill="rgb(211,183,26)" fg:x="19101" fg:w="6"/><text x="55.1348%" y="655.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag (16 samples, 0.05%)</title><rect x="54.8647%" y="853" width="0.0460%" height="15" fill="rgb(232,132,4)" fg:x="19094" fg:w="16"/><text x="55.1147%" y="863.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag_impl (16 samples, 0.05%)</title><rect x="54.8647%" y="837" width="0.0460%" height="15" fill="rgb(253,128,37)" fg:x="19094" fg:w="16"/><text x="55.1147%" y="847.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_tag (13 samples, 0.04%)</title><rect x="54.8733%" y="821" width="0.0374%" height="15" fill="rgb(221,58,24)" fg:x="19097" fg:w="13"/><text x="55.1233%" y="831.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (11 samples, 0.03%)</title><rect x="54.8790%" y="805" width="0.0316%" height="15" fill="rgb(230,54,45)" fg:x="19099" fg:w="11"/><text x="55.1290%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (11 samples, 0.03%)</title><rect x="54.8790%" y="789" width="0.0316%" height="15" fill="rgb(254,21,18)" fg:x="19099" fg:w="11"/><text x="55.1290%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (11 samples, 0.03%)</title><rect x="54.8790%" y="773" width="0.0316%" height="15" fill="rgb(221,108,0)" fg:x="19099" fg:w="11"/><text x="55.1290%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (9 samples, 0.03%)</title><rect x="54.8848%" y="757" width="0.0259%" height="15" fill="rgb(206,95,1)" fg:x="19101" fg:w="9"/><text x="55.1348%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (9 samples, 0.03%)</title><rect x="54.8848%" y="741" width="0.0259%" height="15" fill="rgb(237,52,5)" fg:x="19101" fg:w="9"/><text x="55.1348%" y="751.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (9 samples, 0.03%)</title><rect x="54.8848%" y="725" width="0.0259%" height="15" fill="rgb(218,150,34)" fg:x="19101" fg:w="9"/><text x="55.1348%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (9 samples, 0.03%)</title><rect x="54.8848%" y="709" width="0.0259%" height="15" fill="rgb(235,194,28)" fg:x="19101" fg:w="9"/><text x="55.1348%" y="719.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (9 samples, 0.03%)</title><rect x="54.8848%" y="693" width="0.0259%" height="15" fill="rgb(245,92,18)" fg:x="19101" fg:w="9"/><text x="55.1348%" y="703.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (9 samples, 0.03%)</title><rect x="54.8848%" y="677" width="0.0259%" height="15" fill="rgb(253,203,53)" fg:x="19101" fg:w="9"/><text x="55.1348%" y="687.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (9 samples, 0.03%)</title><rect x="54.8848%" y="661" width="0.0259%" height="15" fill="rgb(249,185,47)" fg:x="19101" fg:w="9"/><text x="55.1348%" y="671.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (24 samples, 0.07%)</title><rect x="54.9422%" y="309" width="0.0690%" height="15" fill="rgb(252,194,52)" fg:x="19121" fg:w="24"/><text x="55.1922%" y="319.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (24 samples, 0.07%)</title><rect x="54.9422%" y="293" width="0.0690%" height="15" fill="rgb(210,53,36)" fg:x="19121" fg:w="24"/><text x="55.1922%" y="303.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize (24 samples, 0.07%)</title><rect x="54.9422%" y="277" width="0.0690%" height="15" fill="rgb(237,37,25)" fg:x="19121" fg:w="24"/><text x="55.1922%" y="287.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize (24 samples, 0.07%)</title><rect x="54.9422%" y="261" width="0.0690%" height="15" fill="rgb(242,116,27)" fg:x="19121" fg:w="24"/><text x="55.1922%" y="271.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (24 samples, 0.07%)</title><rect x="54.9422%" y="245" width="0.0690%" height="15" fill="rgb(213,185,26)" fg:x="19121" fg:w="24"/><text x="55.1922%" y="255.50"></text></g><g><title>&lt;&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (23 samples, 0.07%)</title><rect x="54.9451%" y="229" width="0.0661%" height="15" fill="rgb(225,204,8)" fg:x="19122" fg:w="23"/><text x="55.1951%" y="239.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for [T (19 samples, 0.05%)</title><rect x="54.9566%" y="213" width="0.0546%" height="15" fill="rgb(254,111,37)" fg:x="19126" fg:w="19"/><text x="55.2066%" y="223.50"></text></g><g><title> 32]&gt;::deserialize (19 samples, 0.05%)</title><rect x="54.9566%" y="197" width="0.0546%" height="15" fill="rgb(242,35,9)" fg:x="19126" fg:w="19"/><text x="55.2066%" y="207.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (19 samples, 0.05%)</title><rect x="54.9566%" y="181" width="0.0546%" height="15" fill="rgb(232,138,49)" fg:x="19126" fg:w="19"/><text x="55.2066%" y="191.50"></text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T (19 samples, 0.05%)</title><rect x="54.9566%" y="165" width="0.0546%" height="15" fill="rgb(247,56,4)" fg:x="19126" fg:w="19"/><text x="55.2066%" y="175.50"></text></g><g><title> 32]&gt; as serde::de::Visitor&gt;::visit_seq (19 samples, 0.05%)</title><rect x="54.9566%" y="149" width="0.0546%" height="15" fill="rgb(226,179,17)" fg:x="19126" fg:w="19"/><text x="55.2066%" y="159.50"></text></g><g><title>serde::de::SeqAccess::next_element (12 samples, 0.03%)</title><rect x="54.9767%" y="133" width="0.0345%" height="15" fill="rgb(216,163,45)" fg:x="19133" fg:w="12"/><text x="55.2267%" y="143.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (12 samples, 0.03%)</title><rect x="54.9767%" y="117" width="0.0345%" height="15" fill="rgb(211,157,3)" fg:x="19133" fg:w="12"/><text x="55.2267%" y="127.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (12 samples, 0.03%)</title><rect x="54.9767%" y="101" width="0.0345%" height="15" fill="rgb(234,44,20)" fg:x="19133" fg:w="12"/><text x="55.2267%" y="111.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (12 samples, 0.03%)</title><rect x="54.9767%" y="85" width="0.0345%" height="15" fill="rgb(254,138,23)" fg:x="19133" fg:w="12"/><text x="55.2267%" y="95.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u8 (12 samples, 0.03%)</title><rect x="54.9767%" y="69" width="0.0345%" height="15" fill="rgb(206,119,39)" fg:x="19133" fg:w="12"/><text x="55.2267%" y="79.50"></text></g><g><title>bcs::de::Deserializer::parse_u8 (9 samples, 0.03%)</title><rect x="54.9853%" y="53" width="0.0259%" height="15" fill="rgb(231,105,52)" fg:x="19136" fg:w="9"/><text x="55.2353%" y="63.50"></text></g><g><title>bcs::de::Deserializer::next (9 samples, 0.03%)</title><rect x="54.9853%" y="37" width="0.0259%" height="15" fill="rgb(250,20,5)" fg:x="19136" fg:w="9"/><text x="55.2353%" y="47.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (28 samples, 0.08%)</title><rect x="54.9365%" y="389" width="0.0805%" height="15" fill="rgb(215,198,30)" fg:x="19119" fg:w="28"/><text x="55.1865%" y="399.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (28 samples, 0.08%)</title><rect x="54.9365%" y="373" width="0.0805%" height="15" fill="rgb(246,142,8)" fg:x="19119" fg:w="28"/><text x="55.1865%" y="383.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (28 samples, 0.08%)</title><rect x="54.9365%" y="357" width="0.0805%" height="15" fill="rgb(243,26,38)" fg:x="19119" fg:w="28"/><text x="55.1865%" y="367.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (28 samples, 0.08%)</title><rect x="54.9365%" y="341" width="0.0805%" height="15" fill="rgb(205,133,28)" fg:x="19119" fg:w="28"/><text x="55.1865%" y="351.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (28 samples, 0.08%)</title><rect x="54.9365%" y="325" width="0.0805%" height="15" fill="rgb(212,34,0)" fg:x="19119" fg:w="28"/><text x="55.1865%" y="335.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_seq (30 samples, 0.09%)</title><rect x="54.9336%" y="421" width="0.0862%" height="15" fill="rgb(251,226,22)" fg:x="19118" fg:w="30"/><text x="55.1836%" y="431.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::VectorElementVisitor as serde::de::Visitor&gt;::visit_seq (30 samples, 0.09%)</title><rect x="54.9336%" y="405" width="0.0862%" height="15" fill="rgb(252,119,9)" fg:x="19118" fg:w="30"/><text x="55.1836%" y="415.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (35 samples, 0.10%)</title><rect x="54.9336%" y="437" width="0.1006%" height="15" fill="rgb(213,150,50)" fg:x="19118" fg:w="35"/><text x="55.1836%" y="447.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (4 samples, 0.01%)</title><rect x="55.0227%" y="421" width="0.0115%" height="15" fill="rgb(212,24,39)" fg:x="19149" fg:w="4"/><text x="55.2727%" y="431.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (37 samples, 0.11%)</title><rect x="54.9336%" y="453" width="0.1063%" height="15" fill="rgb(213,46,39)" fg:x="19118" fg:w="37"/><text x="55.1836%" y="463.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (39 samples, 0.11%)</title><rect x="54.9336%" y="501" width="0.1121%" height="15" fill="rgb(239,106,12)" fg:x="19118" fg:w="39"/><text x="55.1836%" y="511.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (39 samples, 0.11%)</title><rect x="54.9336%" y="485" width="0.1121%" height="15" fill="rgb(249,229,21)" fg:x="19118" fg:w="39"/><text x="55.1836%" y="495.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (39 samples, 0.11%)</title><rect x="54.9336%" y="469" width="0.1121%" height="15" fill="rgb(212,158,3)" fg:x="19118" fg:w="39"/><text x="55.1836%" y="479.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (41 samples, 0.12%)</title><rect x="54.9308%" y="517" width="0.1178%" height="15" fill="rgb(253,26,48)" fg:x="19117" fg:w="41"/><text x="55.1808%" y="527.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (43 samples, 0.12%)</title><rect x="54.9279%" y="613" width="0.1236%" height="15" fill="rgb(238,178,20)" fg:x="19116" fg:w="43"/><text x="55.1779%" y="623.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (43 samples, 0.12%)</title><rect x="54.9279%" y="597" width="0.1236%" height="15" fill="rgb(208,86,15)" fg:x="19116" fg:w="43"/><text x="55.1779%" y="607.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (42 samples, 0.12%)</title><rect x="54.9308%" y="581" width="0.1207%" height="15" fill="rgb(239,42,53)" fg:x="19117" fg:w="42"/><text x="55.1808%" y="591.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (42 samples, 0.12%)</title><rect x="54.9308%" y="565" width="0.1207%" height="15" fill="rgb(245,226,8)" fg:x="19117" fg:w="42"/><text x="55.1808%" y="575.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (42 samples, 0.12%)</title><rect x="54.9308%" y="549" width="0.1207%" height="15" fill="rgb(216,176,32)" fg:x="19117" fg:w="42"/><text x="55.1808%" y="559.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (42 samples, 0.12%)</title><rect x="54.9308%" y="533" width="0.1207%" height="15" fill="rgb(231,186,21)" fg:x="19117" fg:w="42"/><text x="55.1808%" y="543.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_seq (44 samples, 0.13%)</title><rect x="54.9279%" y="645" width="0.1264%" height="15" fill="rgb(205,95,49)" fg:x="19116" fg:w="44"/><text x="55.1779%" y="655.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::VectorElementVisitor as serde::de::Visitor&gt;::visit_seq (44 samples, 0.13%)</title><rect x="54.9279%" y="629" width="0.1264%" height="15" fill="rgb(217,145,8)" fg:x="19116" fg:w="44"/><text x="55.1779%" y="639.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (4 samples, 0.01%)</title><rect x="55.0629%" y="517" width="0.0115%" height="15" fill="rgb(239,144,48)" fg:x="19163" fg:w="4"/><text x="55.3129%" y="527.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (55 samples, 0.16%)</title><rect x="54.9193%" y="677" width="0.1580%" height="15" fill="rgb(214,189,23)" fg:x="19113" fg:w="55"/><text x="55.1693%" y="687.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (55 samples, 0.16%)</title><rect x="54.9193%" y="661" width="0.1580%" height="15" fill="rgb(229,157,17)" fg:x="19113" fg:w="55"/><text x="55.1693%" y="671.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (6 samples, 0.02%)</title><rect x="55.0601%" y="645" width="0.0172%" height="15" fill="rgb(230,5,48)" fg:x="19162" fg:w="6"/><text x="55.3101%" y="655.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_seq (6 samples, 0.02%)</title><rect x="55.0601%" y="629" width="0.0172%" height="15" fill="rgb(224,156,48)" fg:x="19162" fg:w="6"/><text x="55.3101%" y="639.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (6 samples, 0.02%)</title><rect x="55.0601%" y="613" width="0.0172%" height="15" fill="rgb(223,14,29)" fg:x="19162" fg:w="6"/><text x="55.3101%" y="623.50"></text></g><g><title>serde::de::SeqAccess::next_element (5 samples, 0.01%)</title><rect x="55.0629%" y="597" width="0.0144%" height="15" fill="rgb(229,96,36)" fg:x="19163" fg:w="5"/><text x="55.3129%" y="607.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (5 samples, 0.01%)</title><rect x="55.0629%" y="581" width="0.0144%" height="15" fill="rgb(231,102,53)" fg:x="19163" fg:w="5"/><text x="55.3129%" y="591.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (5 samples, 0.01%)</title><rect x="55.0629%" y="565" width="0.0144%" height="15" fill="rgb(210,77,38)" fg:x="19163" fg:w="5"/><text x="55.3129%" y="575.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (5 samples, 0.01%)</title><rect x="55.0629%" y="549" width="0.0144%" height="15" fill="rgb(235,131,6)" fg:x="19163" fg:w="5"/><text x="55.3129%" y="559.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u8 (5 samples, 0.01%)</title><rect x="55.0629%" y="533" width="0.0144%" height="15" fill="rgb(252,55,38)" fg:x="19163" fg:w="5"/><text x="55.3129%" y="543.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (59 samples, 0.17%)</title><rect x="54.9193%" y="725" width="0.1695%" height="15" fill="rgb(246,38,14)" fg:x="19113" fg:w="59"/><text x="55.1693%" y="735.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (59 samples, 0.17%)</title><rect x="54.9193%" y="709" width="0.1695%" height="15" fill="rgb(242,27,5)" fg:x="19113" fg:w="59"/><text x="55.1693%" y="719.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (59 samples, 0.17%)</title><rect x="54.9193%" y="693" width="0.1695%" height="15" fill="rgb(228,65,35)" fg:x="19113" fg:w="59"/><text x="55.1693%" y="703.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (61 samples, 0.18%)</title><rect x="54.9164%" y="757" width="0.1753%" height="15" fill="rgb(245,93,11)" fg:x="19112" fg:w="61"/><text x="55.1664%" y="767.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (61 samples, 0.18%)</title><rect x="54.9164%" y="741" width="0.1753%" height="15" fill="rgb(213,1,31)" fg:x="19112" fg:w="61"/><text x="55.1664%" y="751.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (4 samples, 0.01%)</title><rect x="55.0917%" y="757" width="0.0115%" height="15" fill="rgb(237,205,14)" fg:x="19173" fg:w="4"/><text x="55.3417%" y="767.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::load_resource (248 samples, 0.71%)</title><rect x="54.3934%" y="885" width="0.7126%" height="15" fill="rgb(232,118,45)" fg:x="18930" fg:w="248"/><text x="54.6434%" y="895.50"></text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_resource (227 samples, 0.65%)</title><rect x="54.4538%" y="869" width="0.6523%" height="15" fill="rgb(218,5,6)" fg:x="18951" fg:w="227"/><text x="54.7038%" y="879.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (67 samples, 0.19%)</title><rect x="54.9135%" y="853" width="0.1925%" height="15" fill="rgb(251,87,51)" fg:x="19111" fg:w="67"/><text x="55.1635%" y="863.50"></text></g><g><title>bcs::de::from_bytes_seed (67 samples, 0.19%)</title><rect x="54.9135%" y="837" width="0.1925%" height="15" fill="rgb(207,225,20)" fg:x="19111" fg:w="67"/><text x="55.1635%" y="847.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (66 samples, 0.19%)</title><rect x="54.9164%" y="821" width="0.1896%" height="15" fill="rgb(222,78,54)" fg:x="19112" fg:w="66"/><text x="55.1664%" y="831.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (66 samples, 0.19%)</title><rect x="54.9164%" y="805" width="0.1896%" height="15" fill="rgb(232,85,16)" fg:x="19112" fg:w="66"/><text x="55.1664%" y="815.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (66 samples, 0.19%)</title><rect x="54.9164%" y="789" width="0.1896%" height="15" fill="rgb(244,25,33)" fg:x="19112" fg:w="66"/><text x="55.1664%" y="799.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (66 samples, 0.19%)</title><rect x="54.9164%" y="773" width="0.1896%" height="15" fill="rgb(233,24,36)" fg:x="19112" fg:w="66"/><text x="55.1664%" y="783.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::borrow_global (263 samples, 0.76%)</title><rect x="54.3848%" y="901" width="0.7557%" height="15" fill="rgb(253,49,54)" fg:x="18927" fg:w="263"/><text x="54.6348%" y="911.50"></text></g><g><title>move_vm_types::values::values_impl::GlobalValue::borrow_global (9 samples, 0.03%)</title><rect x="55.1146%" y="885" width="0.0259%" height="15" fill="rgb(245,12,22)" fg:x="19181" fg:w="9"/><text x="55.3646%" y="895.50"></text></g><g><title>move_vm_types::values::values_impl::Container::visit_impl (6 samples, 0.02%)</title><rect x="55.1807%" y="757" width="0.0172%" height="15" fill="rgb(253,141,28)" fg:x="19204" fg:w="6"/><text x="55.4307%" y="767.50"></text></g><g><title>move_vm_types::values::values_impl::ValueImpl::visit_impl (4 samples, 0.01%)</title><rect x="55.1865%" y="741" width="0.0115%" height="15" fill="rgb(225,207,27)" fg:x="19206" fg:w="4"/><text x="55.4365%" y="751.50"></text></g><g><title>move_vm_types::values::values_impl::Container::visit_impl (9 samples, 0.03%)</title><rect x="55.1779%" y="773" width="0.0259%" height="15" fill="rgb(220,84,2)" fg:x="19203" fg:w="9"/><text x="55.4279%" y="783.50"></text></g><g><title>move_vm_types::values::values_impl::Container::visit_impl (26 samples, 0.07%)</title><rect x="55.1520%" y="789" width="0.0747%" height="15" fill="rgb(224,37,37)" fg:x="19194" fg:w="26"/><text x="55.4020%" y="799.50"></text></g><g><title>move_vm_types::values::values_impl::ValueImpl::visit_impl (8 samples, 0.02%)</title><rect x="55.2037%" y="773" width="0.0230%" height="15" fill="rgb(220,143,18)" fg:x="19212" fg:w="8"/><text x="55.4537%" y="783.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_heap_size (32 samples, 0.09%)</title><rect x="55.1405%" y="853" width="0.0919%" height="15" fill="rgb(210,88,33)" fg:x="19190" fg:w="32"/><text x="55.3905%" y="863.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_value_size (32 samples, 0.09%)</title><rect x="55.1405%" y="837" width="0.0919%" height="15" fill="rgb(219,87,51)" fg:x="19190" fg:w="32"/><text x="55.3905%" y="847.50"></text></g><g><title>&lt;&amp;T as move_vm_types::views::ValueView&gt;::visit (32 samples, 0.09%)</title><rect x="55.1405%" y="821" width="0.0919%" height="15" fill="rgb(211,7,35)" fg:x="19190" fg:w="32"/><text x="55.3905%" y="831.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::GlobalValue::view::Wrapper as move_vm_types::views::ValueView&gt;::visit (32 samples, 0.09%)</title><rect x="55.1405%" y="805" width="0.0919%" height="15" fill="rgb(232,77,2)" fg:x="19190" fg:w="32"/><text x="55.3905%" y="815.50"></text></g><g><title>aptos_gas::transaction::storage::StoragePricing::calculate_read_gas (4 samples, 0.01%)</title><rect x="55.2325%" y="853" width="0.0115%" height="15" fill="rgb(249,94,25)" fg:x="19222" fg:w="4"/><text x="55.4825%" y="863.50"></text></g><g><title>&lt;aptos_gas::gas_meter::AptosGasMeter as move_vm_types::gas::GasMeter&gt;::charge_load_resource (37 samples, 0.11%)</title><rect x="55.1405%" y="869" width="0.1063%" height="15" fill="rgb(215,112,2)" fg:x="19190" fg:w="37"/><text x="55.3905%" y="879.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (7 samples, 0.02%)</title><rect x="55.2698%" y="725" width="0.0201%" height="15" fill="rgb(226,115,48)" fg:x="19235" fg:w="7"/><text x="55.5198%" y="735.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::clone::Clone&gt;::clone (7 samples, 0.02%)</title><rect x="55.2698%" y="709" width="0.0201%" height="15" fill="rgb(249,196,10)" fg:x="19235" fg:w="7"/><text x="55.5198%" y="719.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::clone::Clone&gt;::clone (4 samples, 0.01%)</title><rect x="55.2784%" y="693" width="0.0115%" height="15" fill="rgb(237,109,14)" fg:x="19238" fg:w="4"/><text x="55.5284%" y="703.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;str&gt; as core::clone::Clone&gt;::clone (4 samples, 0.01%)</title><rect x="55.2784%" y="677" width="0.0115%" height="15" fill="rgb(217,103,53)" fg:x="19238" fg:w="4"/><text x="55.5284%" y="687.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (4 samples, 0.01%)</title><rect x="55.2784%" y="661" width="0.0115%" height="15" fill="rgb(244,137,9)" fg:x="19238" fg:w="4"/><text x="55.5284%" y="671.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as core::convert::From&lt;&amp;[T]&gt;&gt;::from (4 samples, 0.01%)</title><rect x="55.2784%" y="645" width="0.0115%" height="15" fill="rgb(227,201,3)" fg:x="19238" fg:w="4"/><text x="55.5284%" y="655.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[T]&gt; as alloc::boxed::BoxFromSlice&lt;T&gt;&gt;::from_slice (4 samples, 0.01%)</title><rect x="55.2784%" y="629" width="0.0115%" height="15" fill="rgb(243,94,6)" fg:x="19238" fg:w="4"/><text x="55.5284%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="55.2784%" y="613" width="0.0115%" height="15" fill="rgb(235,118,5)" fg:x="19238" fg:w="4"/><text x="55.5284%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (4 samples, 0.01%)</title><rect x="55.2784%" y="597" width="0.0115%" height="15" fill="rgb(247,10,30)" fg:x="19238" fg:w="4"/><text x="55.5284%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.01%)</title><rect x="55.2784%" y="581" width="0.0115%" height="15" fill="rgb(205,26,28)" fg:x="19238" fg:w="4"/><text x="55.5284%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.01%)</title><rect x="55.2784%" y="565" width="0.0115%" height="15" fill="rgb(206,99,35)" fg:x="19238" fg:w="4"/><text x="55.5284%" y="575.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.01%)</title><rect x="55.2784%" y="549" width="0.0115%" height="15" fill="rgb(238,130,40)" fg:x="19238" fg:w="4"/><text x="55.5284%" y="559.50"></text></g><g><title>&lt;move_core_types::language_storage::TypeTag as core::clone::Clone&gt;::clone (8 samples, 0.02%)</title><rect x="55.2698%" y="757" width="0.0230%" height="15" fill="rgb(224,126,31)" fg:x="19235" fg:w="8"/><text x="55.5198%" y="767.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.02%)</title><rect x="55.2698%" y="741" width="0.0230%" height="15" fill="rgb(254,105,17)" fg:x="19235" fg:w="8"/><text x="55.5198%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (14 samples, 0.04%)</title><rect x="55.2612%" y="821" width="0.0402%" height="15" fill="rgb(216,87,36)" fg:x="19232" fg:w="14"/><text x="55.5112%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (11 samples, 0.03%)</title><rect x="55.2698%" y="805" width="0.0316%" height="15" fill="rgb(240,21,12)" fg:x="19235" fg:w="11"/><text x="55.5198%" y="815.50"></text></g><g><title>alloc::slice::hack::to_vec (11 samples, 0.03%)</title><rect x="55.2698%" y="789" width="0.0316%" height="15" fill="rgb(245,192,34)" fg:x="19235" fg:w="11"/><text x="55.5198%" y="799.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (11 samples, 0.03%)</title><rect x="55.2698%" y="773" width="0.0316%" height="15" fill="rgb(226,100,49)" fg:x="19235" fg:w="11"/><text x="55.5198%" y="783.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::clone::Clone&gt;::clone (17 samples, 0.05%)</title><rect x="55.2612%" y="837" width="0.0488%" height="15" fill="rgb(245,188,27)" fg:x="19232" fg:w="17"/><text x="55.5112%" y="847.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (4 samples, 0.01%)</title><rect x="55.3359%" y="805" width="0.0115%" height="15" fill="rgb(212,170,8)" fg:x="19258" fg:w="4"/><text x="55.5859%" y="815.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (4 samples, 0.01%)</title><rect x="55.3359%" y="789" width="0.0115%" height="15" fill="rgb(217,113,29)" fg:x="19258" fg:w="4"/><text x="55.5859%" y="799.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (4 samples, 0.01%)</title><rect x="55.3359%" y="773" width="0.0115%" height="15" fill="rgb(237,30,3)" fg:x="19258" fg:w="4"/><text x="55.5859%" y="783.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (4 samples, 0.01%)</title><rect x="55.3359%" y="757" width="0.0115%" height="15" fill="rgb(227,19,28)" fg:x="19258" fg:w="4"/><text x="55.5859%" y="767.50"></text></g><g><title>hashbrown::map::make_hash (7 samples, 0.02%)</title><rect x="55.3503%" y="693" width="0.0201%" height="15" fill="rgb(239,172,45)" fg:x="19263" fg:w="7"/><text x="55.6003%" y="703.50"></text></g><g><title>core::hash::BuildHasher::hash_one (7 samples, 0.02%)</title><rect x="55.3503%" y="677" width="0.0201%" height="15" fill="rgb(254,55,39)" fg:x="19263" fg:w="7"/><text x="55.6003%" y="687.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (6 samples, 0.02%)</title><rect x="55.3531%" y="661" width="0.0172%" height="15" fill="rgb(249,208,12)" fg:x="19264" fg:w="6"/><text x="55.6031%" y="671.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (6 samples, 0.02%)</title><rect x="55.3531%" y="645" width="0.0172%" height="15" fill="rgb(240,52,13)" fg:x="19264" fg:w="6"/><text x="55.6031%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.01%)</title><rect x="55.3560%" y="629" width="0.0144%" height="15" fill="rgb(252,149,13)" fg:x="19265" fg:w="5"/><text x="55.6060%" y="639.50"></text></g><g><title>&lt;R as aptos_state_view::TStateView&gt;::get_state_value (12 samples, 0.03%)</title><rect x="55.3503%" y="773" width="0.0345%" height="15" fill="rgb(232,81,48)" fg:x="19263" fg:w="12"/><text x="55.6003%" y="783.50"></text></g><g><title>&lt;aptos_block_executor::cached_state_view::CachedStateView as aptos_state_view::TStateView&gt;::get_state_value (12 samples, 0.03%)</title><rect x="55.3503%" y="757" width="0.0345%" height="15" fill="rgb(222,144,2)" fg:x="19263" fg:w="12"/><text x="55.6003%" y="767.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (12 samples, 0.03%)</title><rect x="55.3503%" y="741" width="0.0345%" height="15" fill="rgb(216,81,32)" fg:x="19263" fg:w="12"/><text x="55.6003%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (12 samples, 0.03%)</title><rect x="55.3503%" y="725" width="0.0345%" height="15" fill="rgb(244,78,51)" fg:x="19263" fg:w="12"/><text x="55.6003%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (12 samples, 0.03%)</title><rect x="55.3503%" y="709" width="0.0345%" height="15" fill="rgb(217,66,21)" fg:x="19263" fg:w="12"/><text x="55.6003%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (5 samples, 0.01%)</title><rect x="55.3704%" y="693" width="0.0144%" height="15" fill="rgb(247,101,42)" fg:x="19270" fg:w="5"/><text x="55.6204%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5 samples, 0.01%)</title><rect x="55.3704%" y="677" width="0.0144%" height="15" fill="rgb(227,81,39)" fg:x="19270" fg:w="5"/><text x="55.6204%" y="687.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (5 samples, 0.01%)</title><rect x="55.3704%" y="661" width="0.0144%" height="15" fill="rgb(220,223,44)" fg:x="19270" fg:w="5"/><text x="55.6204%" y="671.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (5 samples, 0.01%)</title><rect x="55.3704%" y="645" width="0.0144%" height="15" fill="rgb(205,218,2)" fg:x="19270" fg:w="5"/><text x="55.6204%" y="655.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (5 samples, 0.01%)</title><rect x="55.3704%" y="629" width="0.0144%" height="15" fill="rgb(212,207,28)" fg:x="19270" fg:w="5"/><text x="55.6204%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.01%)</title><rect x="55.3704%" y="613" width="0.0144%" height="15" fill="rgb(224,12,41)" fg:x="19270" fg:w="5"/><text x="55.6204%" y="623.50"></text></g><g><title>&lt;aptos_block_executor::view::LatestView&lt;T,S&gt; as aptos_state_view::TStateView&gt;::get_state_value (28 samples, 0.08%)</title><rect x="55.3100%" y="821" width="0.0805%" height="15" fill="rgb(216,118,12)" fg:x="19249" fg:w="28"/><text x="55.5600%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (15 samples, 0.04%)</title><rect x="55.3474%" y="805" width="0.0431%" height="15" fill="rgb(252,97,46)" fg:x="19262" fg:w="15"/><text x="55.5974%" y="815.50"></text></g><g><title>&lt;aptos_block_executor::view::LatestView&lt;T,S&gt; as aptos_state_view::TStateView&gt;::get_state_value::{{closure}} (15 samples, 0.04%)</title><rect x="55.3474%" y="789" width="0.0431%" height="15" fill="rgb(244,206,19)" fg:x="19262" fg:w="15"/><text x="55.5974%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (4 samples, 0.01%)</title><rect x="55.3905%" y="789" width="0.0115%" height="15" fill="rgb(231,84,31)" fg:x="19277" fg:w="4"/><text x="55.6405%" y="799.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::clone::Clone&gt;::clone (10 samples, 0.03%)</title><rect x="55.3905%" y="821" width="0.0287%" height="15" fill="rgb(244,133,0)" fg:x="19277" fg:w="10"/><text x="55.6405%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (10 samples, 0.03%)</title><rect x="55.3905%" y="805" width="0.0287%" height="15" fill="rgb(223,15,50)" fg:x="19277" fg:w="10"/><text x="55.6405%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6 samples, 0.02%)</title><rect x="55.4020%" y="789" width="0.0172%" height="15" fill="rgb(250,118,49)" fg:x="19281" fg:w="6"/><text x="55.6520%" y="799.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.02%)</title><rect x="55.4020%" y="773" width="0.0172%" height="15" fill="rgb(248,25,38)" fg:x="19281" fg:w="6"/><text x="55.6520%" y="783.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.02%)</title><rect x="55.4020%" y="757" width="0.0172%" height="15" fill="rgb(215,70,14)" fg:x="19281" fg:w="6"/><text x="55.6520%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.02%)</title><rect x="55.4020%" y="741" width="0.0172%" height="15" fill="rgb(215,28,15)" fg:x="19281" fg:w="6"/><text x="55.6520%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.02%)</title><rect x="55.4020%" y="725" width="0.0172%" height="15" fill="rgb(243,6,28)" fg:x="19281" fg:w="6"/><text x="55.6520%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (6 samples, 0.02%)</title><rect x="55.4020%" y="709" width="0.0172%" height="15" fill="rgb(222,130,1)" fg:x="19281" fg:w="6"/><text x="55.6520%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.02%)</title><rect x="55.4020%" y="693" width="0.0172%" height="15" fill="rgb(236,166,44)" fg:x="19281" fg:w="6"/><text x="55.6520%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.02%)</title><rect x="55.4020%" y="677" width="0.0172%" height="15" fill="rgb(221,108,14)" fg:x="19281" fg:w="6"/><text x="55.6520%" y="687.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.02%)</title><rect x="55.4020%" y="661" width="0.0172%" height="15" fill="rgb(252,3,45)" fg:x="19281" fg:w="6"/><text x="55.6520%" y="671.50"></text></g><g><title>mallocx (4 samples, 0.01%)</title><rect x="55.4077%" y="645" width="0.0115%" height="15" fill="rgb(237,68,30)" fg:x="19283" fg:w="4"/><text x="55.6577%" y="655.50"></text></g><g><title>imalloc (4 samples, 0.01%)</title><rect x="55.4077%" y="629" width="0.0115%" height="15" fill="rgb(211,79,22)" fg:x="19283" fg:w="4"/><text x="55.6577%" y="639.50"></text></g><g><title>imalloc_body (4 samples, 0.01%)</title><rect x="55.4077%" y="613" width="0.0115%" height="15" fill="rgb(252,185,21)" fg:x="19283" fg:w="4"/><text x="55.6577%" y="623.50"></text></g><g><title>aptos_block_executor::data_cache::StorageAdapter&lt;S&gt;::get (42 samples, 0.12%)</title><rect x="55.3100%" y="837" width="0.1207%" height="15" fill="rgb(225,189,26)" fg:x="19249" fg:w="42"/><text x="55.5600%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::state_store::state_key::StateKey&gt; (4 samples, 0.01%)</title><rect x="55.4192%" y="821" width="0.0115%" height="15" fill="rgb(241,30,40)" fg:x="19287" fg:w="4"/><text x="55.6692%" y="831.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="55.4192%" y="805" width="0.0115%" height="15" fill="rgb(235,215,44)" fg:x="19287" fg:w="4"/><text x="55.6692%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.01%)</title><rect x="55.4192%" y="789" width="0.0115%" height="15" fill="rgb(205,8,29)" fg:x="19287" fg:w="4"/><text x="55.6692%" y="799.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.01%)</title><rect x="55.4192%" y="773" width="0.0115%" height="15" fill="rgb(241,137,42)" fg:x="19287" fg:w="4"/><text x="55.6692%" y="783.50"></text></g><g><title>bcs::ser::Serializer&lt;W&gt;::output_variant_index (4 samples, 0.01%)</title><rect x="55.4652%" y="725" width="0.0115%" height="15" fill="rgb(237,155,2)" fg:x="19303" fg:w="4"/><text x="55.7152%" y="735.50"></text></g><g><title>bcs::ser::Serializer&lt;W&gt;::output_u32_as_uleb128 (4 samples, 0.01%)</title><rect x="55.4652%" y="709" width="0.0115%" height="15" fill="rgb(245,29,42)" fg:x="19303" fg:w="4"/><text x="55.7152%" y="719.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (4 samples, 0.01%)</title><rect x="55.4652%" y="693" width="0.0115%" height="15" fill="rgb(234,101,35)" fg:x="19303" fg:w="4"/><text x="55.7152%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (4 samples, 0.01%)</title><rect x="55.4652%" y="677" width="0.0115%" height="15" fill="rgb(228,64,37)" fg:x="19303" fg:w="4"/><text x="55.7152%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (4 samples, 0.01%)</title><rect x="55.4652%" y="661" width="0.0115%" height="15" fill="rgb(217,214,36)" fg:x="19303" fg:w="4"/><text x="55.7152%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (4 samples, 0.01%)</title><rect x="55.4652%" y="645" width="0.0115%" height="15" fill="rgb(243,70,3)" fg:x="19303" fg:w="4"/><text x="55.7152%" y="655.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (30 samples, 0.09%)</title><rect x="55.4767%" y="693" width="0.0862%" height="15" fill="rgb(253,158,52)" fg:x="19307" fg:w="30"/><text x="55.7267%" y="703.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (30 samples, 0.09%)</title><rect x="55.4767%" y="677" width="0.0862%" height="15" fill="rgb(234,111,54)" fg:x="19307" fg:w="30"/><text x="55.7267%" y="687.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (30 samples, 0.09%)</title><rect x="55.4767%" y="661" width="0.0862%" height="15" fill="rgb(217,70,32)" fg:x="19307" fg:w="30"/><text x="55.7267%" y="671.50"></text></g><g><title> 32]&gt;::serialize (30 samples, 0.09%)</title><rect x="55.4767%" y="645" width="0.0862%" height="15" fill="rgb(234,18,33)" fg:x="19307" fg:w="30"/><text x="55.7267%" y="655.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (30 samples, 0.09%)</title><rect x="55.4767%" y="629" width="0.0862%" height="15" fill="rgb(234,12,49)" fg:x="19307" fg:w="30"/><text x="55.7267%" y="639.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (30 samples, 0.09%)</title><rect x="55.4767%" y="613" width="0.0862%" height="15" fill="rgb(236,10,21)" fg:x="19307" fg:w="30"/><text x="55.7267%" y="623.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (30 samples, 0.09%)</title><rect x="55.4767%" y="597" width="0.0862%" height="15" fill="rgb(248,182,45)" fg:x="19307" fg:w="30"/><text x="55.7267%" y="607.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (30 samples, 0.09%)</title><rect x="55.4767%" y="581" width="0.0862%" height="15" fill="rgb(217,95,36)" fg:x="19307" fg:w="30"/><text x="55.7267%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (30 samples, 0.09%)</title><rect x="55.4767%" y="565" width="0.0862%" height="15" fill="rgb(212,110,31)" fg:x="19307" fg:w="30"/><text x="55.7267%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (30 samples, 0.09%)</title><rect x="55.4767%" y="549" width="0.0862%" height="15" fill="rgb(206,32,53)" fg:x="19307" fg:w="30"/><text x="55.7267%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (30 samples, 0.09%)</title><rect x="55.4767%" y="533" width="0.0862%" height="15" fill="rgb(246,141,37)" fg:x="19307" fg:w="30"/><text x="55.7267%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (30 samples, 0.09%)</title><rect x="55.4767%" y="517" width="0.0862%" height="15" fill="rgb(219,16,7)" fg:x="19307" fg:w="30"/><text x="55.7267%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (30 samples, 0.09%)</title><rect x="55.4767%" y="501" width="0.0862%" height="15" fill="rgb(230,205,45)" fg:x="19307" fg:w="30"/><text x="55.7267%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (26 samples, 0.07%)</title><rect x="55.4882%" y="485" width="0.0747%" height="15" fill="rgb(231,43,49)" fg:x="19311" fg:w="26"/><text x="55.7382%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (26 samples, 0.07%)</title><rect x="55.4882%" y="469" width="0.0747%" height="15" fill="rgb(212,106,34)" fg:x="19311" fg:w="26"/><text x="55.7382%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (25 samples, 0.07%)</title><rect x="55.4911%" y="453" width="0.0718%" height="15" fill="rgb(206,83,17)" fg:x="19312" fg:w="25"/><text x="55.7411%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (24 samples, 0.07%)</title><rect x="55.4939%" y="437" width="0.0690%" height="15" fill="rgb(244,154,49)" fg:x="19313" fg:w="24"/><text x="55.7439%" y="447.50"></text></g><g><title>alloc::alloc::Global::grow_impl (24 samples, 0.07%)</title><rect x="55.4939%" y="421" width="0.0690%" height="15" fill="rgb(244,149,49)" fg:x="19313" fg:w="24"/><text x="55.7439%" y="431.50"></text></g><g><title>alloc::alloc::realloc (24 samples, 0.07%)</title><rect x="55.4939%" y="405" width="0.0690%" height="15" fill="rgb(227,134,18)" fg:x="19313" fg:w="24"/><text x="55.7439%" y="415.50"></text></g><g><title>rallocx (21 samples, 0.06%)</title><rect x="55.5026%" y="389" width="0.0603%" height="15" fill="rgb(237,116,36)" fg:x="19316" fg:w="21"/><text x="55.7526%" y="399.50"></text></g><g><title>iralloct (13 samples, 0.04%)</title><rect x="55.5255%" y="373" width="0.0374%" height="15" fill="rgb(205,129,40)" fg:x="19324" fg:w="13"/><text x="55.7755%" y="383.50"></text></g><g><title>_rjem_je_arena_ralloc (13 samples, 0.04%)</title><rect x="55.5255%" y="357" width="0.0374%" height="15" fill="rgb(236,178,4)" fg:x="19324" fg:w="13"/><text x="55.7755%" y="367.50"></text></g><g><title>arena_ralloc_move_helper (10 samples, 0.03%)</title><rect x="55.5342%" y="341" width="0.0287%" height="15" fill="rgb(251,76,53)" fg:x="19327" fg:w="10"/><text x="55.7842%" y="351.50"></text></g><g><title>ipalloct (10 samples, 0.03%)</title><rect x="55.5342%" y="325" width="0.0287%" height="15" fill="rgb(242,92,40)" fg:x="19327" fg:w="10"/><text x="55.7842%" y="335.50"></text></g><g><title>ipallocztm (10 samples, 0.03%)</title><rect x="55.5342%" y="309" width="0.0287%" height="15" fill="rgb(209,45,30)" fg:x="19327" fg:w="10"/><text x="55.7842%" y="319.50"></text></g><g><title>_rjem_je_arena_palloc (10 samples, 0.03%)</title><rect x="55.5342%" y="293" width="0.0287%" height="15" fill="rgb(218,157,36)" fg:x="19327" fg:w="10"/><text x="55.7842%" y="303.50"></text></g><g><title>_rjem_je_arena_palloc (10 samples, 0.03%)</title><rect x="55.5342%" y="277" width="0.0287%" height="15" fill="rgb(222,186,16)" fg:x="19327" fg:w="10"/><text x="55.7842%" y="287.50"></text></g><g><title>arena_malloc (10 samples, 0.03%)</title><rect x="55.5342%" y="261" width="0.0287%" height="15" fill="rgb(254,72,35)" fg:x="19327" fg:w="10"/><text x="55.7842%" y="271.50"></text></g><g><title>tcache_alloc_small (10 samples, 0.03%)</title><rect x="55.5342%" y="245" width="0.0287%" height="15" fill="rgb(224,25,35)" fg:x="19327" fg:w="10"/><text x="55.7842%" y="255.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_seq (5 samples, 0.01%)</title><rect x="55.5715%" y="661" width="0.0144%" height="15" fill="rgb(206,135,52)" fg:x="19340" fg:w="5"/><text x="55.8215%" y="671.50"></text></g><g><title>bcs::ser::Serializer&lt;W&gt;::output_seq_len (5 samples, 0.01%)</title><rect x="55.5715%" y="645" width="0.0144%" height="15" fill="rgb(229,174,47)" fg:x="19340" fg:w="5"/><text x="55.8215%" y="655.50"></text></g><g><title>bcs::ser::Serializer&lt;W&gt;::output_u32_as_uleb128 (5 samples, 0.01%)</title><rect x="55.5715%" y="629" width="0.0144%" height="15" fill="rgb(242,184,21)" fg:x="19340" fg:w="5"/><text x="55.8215%" y="639.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (5 samples, 0.01%)</title><rect x="55.5715%" y="613" width="0.0144%" height="15" fill="rgb(213,22,45)" fg:x="19340" fg:w="5"/><text x="55.8215%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (5 samples, 0.01%)</title><rect x="55.5715%" y="597" width="0.0144%" height="15" fill="rgb(237,81,54)" fg:x="19340" fg:w="5"/><text x="55.8215%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (5 samples, 0.01%)</title><rect x="55.5715%" y="581" width="0.0144%" height="15" fill="rgb(248,177,18)" fg:x="19340" fg:w="5"/><text x="55.8215%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (5 samples, 0.01%)</title><rect x="55.5715%" y="565" width="0.0144%" height="15" fill="rgb(254,31,16)" fg:x="19340" fg:w="5"/><text x="55.8215%" y="575.50"></text></g><g><title>bcs::ser::to_bytes (52 samples, 0.15%)</title><rect x="55.4623%" y="789" width="0.1494%" height="15" fill="rgb(235,20,31)" fg:x="19302" fg:w="52"/><text x="55.7123%" y="799.50"></text></g><g><title>bcs::ser::serialize_into (51 samples, 0.15%)</title><rect x="55.4652%" y="773" width="0.1465%" height="15" fill="rgb(240,56,43)" fg:x="19303" fg:w="51"/><text x="55.7152%" y="783.50"></text></g><g><title>aptos_types::access_path::_::&lt;impl serde::ser::Serialize for aptos_types::access_path::Path&gt;::serialize (51 samples, 0.15%)</title><rect x="55.4652%" y="757" width="0.1465%" height="15" fill="rgb(237,197,51)" fg:x="19303" fg:w="51"/><text x="55.7152%" y="767.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (51 samples, 0.15%)</title><rect x="55.4652%" y="741" width="0.1465%" height="15" fill="rgb(241,162,44)" fg:x="19303" fg:w="51"/><text x="55.7152%" y="751.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::StructTag&gt;::serialize (47 samples, 0.14%)</title><rect x="55.4767%" y="725" width="0.1350%" height="15" fill="rgb(224,23,20)" fg:x="19307" fg:w="47"/><text x="55.7267%" y="735.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (47 samples, 0.14%)</title><rect x="55.4767%" y="709" width="0.1350%" height="15" fill="rgb(250,109,34)" fg:x="19307" fg:w="47"/><text x="55.7267%" y="719.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::vec::Vec&lt;T&gt;&gt;::serialize (14 samples, 0.04%)</title><rect x="55.5715%" y="693" width="0.0402%" height="15" fill="rgb(214,175,50)" fg:x="19340" fg:w="14"/><text x="55.8215%" y="703.50"></text></g><g><title>serde::ser::Serializer::collect_seq (14 samples, 0.04%)</title><rect x="55.5715%" y="677" width="0.0402%" height="15" fill="rgb(213,182,5)" fg:x="19340" fg:w="14"/><text x="55.8215%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (9 samples, 0.03%)</title><rect x="55.5859%" y="661" width="0.0259%" height="15" fill="rgb(209,199,19)" fg:x="19345" fg:w="9"/><text x="55.8359%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (9 samples, 0.03%)</title><rect x="55.5859%" y="645" width="0.0259%" height="15" fill="rgb(236,224,42)" fg:x="19345" fg:w="9"/><text x="55.8359%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (9 samples, 0.03%)</title><rect x="55.5859%" y="629" width="0.0259%" height="15" fill="rgb(246,226,29)" fg:x="19345" fg:w="9"/><text x="55.8359%" y="639.50"></text></g><g><title>serde::ser::Serializer::collect_seq::{{closure}} (9 samples, 0.03%)</title><rect x="55.5859%" y="613" width="0.0259%" height="15" fill="rgb(227,223,11)" fg:x="19345" fg:w="9"/><text x="55.8359%" y="623.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeSeq&gt;::serialize_element (9 samples, 0.03%)</title><rect x="55.5859%" y="597" width="0.0259%" height="15" fill="rgb(219,7,51)" fg:x="19345" fg:w="9"/><text x="55.8359%" y="607.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (9 samples, 0.03%)</title><rect x="55.5859%" y="581" width="0.0259%" height="15" fill="rgb(245,167,10)" fg:x="19345" fg:w="9"/><text x="55.8359%" y="591.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::TypeTag&gt;::serialize (9 samples, 0.03%)</title><rect x="55.5859%" y="565" width="0.0259%" height="15" fill="rgb(237,224,16)" fg:x="19345" fg:w="9"/><text x="55.8359%" y="575.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (6 samples, 0.02%)</title><rect x="55.5945%" y="549" width="0.0172%" height="15" fill="rgb(226,132,13)" fg:x="19348" fg:w="6"/><text x="55.8445%" y="559.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::boxed::Box&lt;T&gt;&gt;::serialize (6 samples, 0.02%)</title><rect x="55.5945%" y="533" width="0.0172%" height="15" fill="rgb(214,140,3)" fg:x="19348" fg:w="6"/><text x="55.8445%" y="543.50"></text></g><g><title>move_core_types::language_storage::_::&lt;impl serde::ser::Serialize for move_core_types::language_storage::StructTag&gt;::serialize (6 samples, 0.02%)</title><rect x="55.5945%" y="517" width="0.0172%" height="15" fill="rgb(221,177,4)" fg:x="19348" fg:w="6"/><text x="55.8445%" y="527.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.01%)</title><rect x="55.5974%" y="501" width="0.0144%" height="15" fill="rgb(238,139,3)" fg:x="19349" fg:w="5"/><text x="55.8474%" y="511.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (5 samples, 0.01%)</title><rect x="55.5974%" y="485" width="0.0144%" height="15" fill="rgb(216,17,39)" fg:x="19349" fg:w="5"/><text x="55.8474%" y="495.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (5 samples, 0.01%)</title><rect x="55.5974%" y="469" width="0.0144%" height="15" fill="rgb(238,120,9)" fg:x="19349" fg:w="5"/><text x="55.8474%" y="479.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (5 samples, 0.01%)</title><rect x="55.5974%" y="453" width="0.0144%" height="15" fill="rgb(244,92,53)" fg:x="19349" fg:w="5"/><text x="55.8474%" y="463.50"></text></g><g><title> 32]&gt;::serialize (5 samples, 0.01%)</title><rect x="55.5974%" y="437" width="0.0144%" height="15" fill="rgb(224,148,33)" fg:x="19349" fg:w="5"/><text x="55.8474%" y="447.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (4 samples, 0.01%)</title><rect x="55.6003%" y="421" width="0.0115%" height="15" fill="rgb(243,6,36)" fg:x="19350" fg:w="4"/><text x="55.8503%" y="431.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (4 samples, 0.01%)</title><rect x="55.6003%" y="405" width="0.0115%" height="15" fill="rgb(230,102,11)" fg:x="19350" fg:w="4"/><text x="55.8503%" y="415.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (4 samples, 0.01%)</title><rect x="55.6003%" y="389" width="0.0115%" height="15" fill="rgb(234,148,36)" fg:x="19350" fg:w="4"/><text x="55.8503%" y="399.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (4 samples, 0.01%)</title><rect x="55.6003%" y="373" width="0.0115%" height="15" fill="rgb(251,153,25)" fg:x="19350" fg:w="4"/><text x="55.8503%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (4 samples, 0.01%)</title><rect x="55.6003%" y="357" width="0.0115%" height="15" fill="rgb(215,129,8)" fg:x="19350" fg:w="4"/><text x="55.8503%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (4 samples, 0.01%)</title><rect x="55.6003%" y="341" width="0.0115%" height="15" fill="rgb(224,128,35)" fg:x="19350" fg:w="4"/><text x="55.8503%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (4 samples, 0.01%)</title><rect x="55.6003%" y="325" width="0.0115%" height="15" fill="rgb(237,56,52)" fg:x="19350" fg:w="4"/><text x="55.8503%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (4 samples, 0.01%)</title><rect x="55.6003%" y="309" width="0.0115%" height="15" fill="rgb(234,213,19)" fg:x="19350" fg:w="4"/><text x="55.8503%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.01%)</title><rect x="55.6003%" y="293" width="0.0115%" height="15" fill="rgb(252,82,23)" fg:x="19350" fg:w="4"/><text x="55.8503%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.01%)</title><rect x="55.6003%" y="277" width="0.0115%" height="15" fill="rgb(254,201,21)" fg:x="19350" fg:w="4"/><text x="55.8503%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.01%)</title><rect x="55.6003%" y="261" width="0.0115%" height="15" fill="rgb(250,186,11)" fg:x="19350" fg:w="4"/><text x="55.8503%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.01%)</title><rect x="55.6003%" y="245" width="0.0115%" height="15" fill="rgb(211,174,5)" fg:x="19350" fg:w="4"/><text x="55.8503%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (4 samples, 0.01%)</title><rect x="55.6003%" y="229" width="0.0115%" height="15" fill="rgb(214,121,10)" fg:x="19350" fg:w="4"/><text x="55.8503%" y="239.50"></text></g><g><title>alloc::alloc::Global::grow_impl (4 samples, 0.01%)</title><rect x="55.6003%" y="213" width="0.0115%" height="15" fill="rgb(241,66,2)" fg:x="19350" fg:w="4"/><text x="55.8503%" y="223.50"></text></g><g><title>alloc::alloc::realloc (4 samples, 0.01%)</title><rect x="55.6003%" y="197" width="0.0115%" height="15" fill="rgb(220,167,19)" fg:x="19350" fg:w="4"/><text x="55.8503%" y="207.50"></text></g><g><title>rallocx (4 samples, 0.01%)</title><rect x="55.6003%" y="181" width="0.0115%" height="15" fill="rgb(231,54,50)" fg:x="19350" fg:w="4"/><text x="55.8503%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::language_storage::TypeTag&gt;&gt; (4 samples, 0.01%)</title><rect x="55.6146%" y="757" width="0.0115%" height="15" fill="rgb(239,217,53)" fg:x="19355" fg:w="4"/><text x="55.8646%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="55.6146%" y="741" width="0.0115%" height="15" fill="rgb(248,8,0)" fg:x="19355" fg:w="4"/><text x="55.8646%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::language_storage::TypeTag]&gt; (4 samples, 0.01%)</title><rect x="55.6146%" y="725" width="0.0115%" height="15" fill="rgb(229,118,37)" fg:x="19355" fg:w="4"/><text x="55.8646%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::TypeTag&gt; (4 samples, 0.01%)</title><rect x="55.6146%" y="709" width="0.0115%" height="15" fill="rgb(253,223,43)" fg:x="19355" fg:w="4"/><text x="55.8646%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_core_types::language_storage::StructTag&gt;&gt; (4 samples, 0.01%)</title><rect x="55.6146%" y="693" width="0.0115%" height="15" fill="rgb(211,77,36)" fg:x="19355" fg:w="4"/><text x="55.8646%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::StructTag&gt; (4 samples, 0.01%)</title><rect x="55.6146%" y="677" width="0.0115%" height="15" fill="rgb(219,3,53)" fg:x="19355" fg:w="4"/><text x="55.8646%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::access_path::Path&gt; (11 samples, 0.03%)</title><rect x="55.6117%" y="789" width="0.0316%" height="15" fill="rgb(244,45,42)" fg:x="19354" fg:w="11"/><text x="55.8617%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::StructTag&gt; (10 samples, 0.03%)</title><rect x="55.6146%" y="773" width="0.0287%" height="15" fill="rgb(225,95,27)" fg:x="19355" fg:w="10"/><text x="55.8646%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::identifier::Identifier&gt; (6 samples, 0.02%)</title><rect x="55.6261%" y="757" width="0.0172%" height="15" fill="rgb(207,74,8)" fg:x="19359" fg:w="6"/><text x="55.8761%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;str&gt;&gt; (6 samples, 0.02%)</title><rect x="55.6261%" y="741" width="0.0172%" height="15" fill="rgb(243,63,36)" fg:x="19359" fg:w="6"/><text x="55.8761%" y="751.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="55.6261%" y="725" width="0.0172%" height="15" fill="rgb(211,180,12)" fg:x="19359" fg:w="6"/><text x="55.8761%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.02%)</title><rect x="55.6261%" y="709" width="0.0172%" height="15" fill="rgb(254,166,49)" fg:x="19359" fg:w="6"/><text x="55.8761%" y="719.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.02%)</title><rect x="55.6261%" y="693" width="0.0172%" height="15" fill="rgb(205,19,0)" fg:x="19359" fg:w="6"/><text x="55.8761%" y="703.50"></text></g><g><title>sdallocx (4 samples, 0.01%)</title><rect x="55.6319%" y="677" width="0.0115%" height="15" fill="rgb(224,172,32)" fg:x="19361" fg:w="4"/><text x="55.8819%" y="687.50"></text></g><g><title>aptos_block_executor::data_cache::create_access_path (76 samples, 0.22%)</title><rect x="55.4307%" y="837" width="0.2184%" height="15" fill="rgb(254,136,30)" fg:x="19291" fg:w="76"/><text x="55.6807%" y="847.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_access_path (66 samples, 0.19%)</title><rect x="55.4595%" y="821" width="0.1896%" height="15" fill="rgb(246,19,35)" fg:x="19301" fg:w="66"/><text x="55.7095%" y="831.50"></text></g><g><title>aptos_types::access_path::AccessPath::resource_path_vec (65 samples, 0.19%)</title><rect x="55.4623%" y="805" width="0.1868%" height="15" fill="rgb(219,24,36)" fg:x="19302" fg:w="65"/><text x="55.7123%" y="815.50"></text></g><g><title>&lt;aptos_block_executor::data_cache::StorageAdapter&lt;S&gt; as move_core_types::resolver::ResourceResolver&gt;::get_resource (141 samples, 0.41%)</title><rect x="55.2497%" y="853" width="0.4051%" height="15" fill="rgb(251,55,1)" fg:x="19228" fg:w="141"/><text x="55.4997%" y="863.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (7 samples, 0.02%)</title><rect x="55.6548%" y="853" width="0.0201%" height="15" fill="rgb(218,117,39)" fg:x="19369" fg:w="7"/><text x="55.9048%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.01%)</title><rect x="55.6635%" y="837" width="0.0115%" height="15" fill="rgb(248,169,11)" fg:x="19372" fg:w="4"/><text x="55.9135%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.01%)</title><rect x="55.6635%" y="821" width="0.0115%" height="15" fill="rgb(244,40,44)" fg:x="19372" fg:w="4"/><text x="55.9135%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.01%)</title><rect x="55.6635%" y="805" width="0.0115%" height="15" fill="rgb(234,62,37)" fg:x="19372" fg:w="4"/><text x="55.9135%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.01%)</title><rect x="55.6635%" y="789" width="0.0115%" height="15" fill="rgb(207,117,42)" fg:x="19372" fg:w="4"/><text x="55.9135%" y="799.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get_mut (6 samples, 0.02%)</title><rect x="55.6893%" y="853" width="0.0172%" height="15" fill="rgb(213,43,2)" fg:x="19381" fg:w="6"/><text x="55.9393%" y="863.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (6 samples, 0.02%)</title><rect x="55.6893%" y="837" width="0.0172%" height="15" fill="rgb(244,202,51)" fg:x="19381" fg:w="6"/><text x="55.9393%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::language_storage::TypeTag&gt;&gt; (6 samples, 0.02%)</title><rect x="55.7152%" y="821" width="0.0172%" height="15" fill="rgb(253,174,46)" fg:x="19390" fg:w="6"/><text x="55.9652%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_core_types::language_storage::StructTag&gt;&gt; (9 samples, 0.03%)</title><rect x="55.7123%" y="853" width="0.0259%" height="15" fill="rgb(251,23,1)" fg:x="19389" fg:w="9"/><text x="55.9623%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::language_storage::StructTag&gt; (8 samples, 0.02%)</title><rect x="55.7152%" y="837" width="0.0230%" height="15" fill="rgb(253,26,1)" fg:x="19390" fg:w="8"/><text x="55.9652%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (4 samples, 0.01%)</title><rect x="55.7382%" y="853" width="0.0115%" height="15" fill="rgb(216,89,31)" fg:x="19398" fg:w="4"/><text x="55.9882%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (4 samples, 0.01%)</title><rect x="55.7382%" y="837" width="0.0115%" height="15" fill="rgb(209,109,5)" fg:x="19398" fg:w="4"/><text x="55.9882%" y="847.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="55.7382%" y="821" width="0.0115%" height="15" fill="rgb(229,63,13)" fg:x="19398" fg:w="4"/><text x="55.9882%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.01%)</title><rect x="55.7382%" y="805" width="0.0115%" height="15" fill="rgb(238,137,54)" fg:x="19398" fg:w="4"/><text x="55.9882%" y="815.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.01%)</title><rect x="55.7382%" y="789" width="0.0115%" height="15" fill="rgb(228,1,9)" fg:x="19398" fg:w="4"/><text x="55.9882%" y="799.50"></text></g><g><title>sdallocx (4 samples, 0.01%)</title><rect x="55.7382%" y="773" width="0.0115%" height="15" fill="rgb(249,120,48)" fg:x="19398" fg:w="4"/><text x="55.9882%" y="783.50"></text></g><g><title>isfree (4 samples, 0.01%)</title><rect x="55.7382%" y="757" width="0.0115%" height="15" fill="rgb(209,72,36)" fg:x="19398" fg:w="4"/><text x="55.9882%" y="767.50"></text></g><g><title>isdalloct (4 samples, 0.01%)</title><rect x="55.7382%" y="741" width="0.0115%" height="15" fill="rgb(247,98,49)" fg:x="19398" fg:w="4"/><text x="55.9882%" y="751.50"></text></g><g><title>arena_sdalloc (4 samples, 0.01%)</title><rect x="55.7382%" y="725" width="0.0115%" height="15" fill="rgb(233,75,36)" fg:x="19398" fg:w="4"/><text x="55.9882%" y="735.50"></text></g><g><title>tcache_dalloc_small (4 samples, 0.01%)</title><rect x="55.7382%" y="709" width="0.0115%" height="15" fill="rgb(225,14,24)" fg:x="19398" fg:w="4"/><text x="55.9882%" y="719.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get_mut (13 samples, 0.04%)</title><rect x="55.7497%" y="837" width="0.0374%" height="15" fill="rgb(237,193,20)" fg:x="19402" fg:w="13"/><text x="55.9997%" y="847.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (13 samples, 0.04%)</title><rect x="55.7497%" y="821" width="0.0374%" height="15" fill="rgb(239,122,19)" fg:x="19402" fg:w="13"/><text x="55.9997%" y="831.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (13 samples, 0.04%)</title><rect x="55.7497%" y="805" width="0.0374%" height="15" fill="rgb(231,220,10)" fg:x="19402" fg:w="13"/><text x="55.9997%" y="815.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (13 samples, 0.04%)</title><rect x="55.7497%" y="789" width="0.0374%" height="15" fill="rgb(220,66,15)" fg:x="19402" fg:w="13"/><text x="55.9997%" y="799.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (13 samples, 0.04%)</title><rect x="55.7497%" y="773" width="0.0374%" height="15" fill="rgb(215,171,52)" fg:x="19402" fg:w="13"/><text x="55.9997%" y="783.50"></text></g><g><title>move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt;::get_mut_or_insert_with (16 samples, 0.05%)</title><rect x="55.7497%" y="853" width="0.0460%" height="15" fill="rgb(241,169,50)" fg:x="19402" fg:w="16"/><text x="55.9997%" y="863.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (12 samples, 0.03%)</title><rect x="55.8100%" y="709" width="0.0345%" height="15" fill="rgb(236,189,0)" fg:x="19423" fg:w="12"/><text x="56.0600%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (7 samples, 0.02%)</title><rect x="55.9077%" y="581" width="0.0201%" height="15" fill="rgb(217,147,20)" fg:x="19457" fg:w="7"/><text x="56.1577%" y="591.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (4 samples, 0.01%)</title><rect x="55.9824%" y="437" width="0.0115%" height="15" fill="rgb(206,188,39)" fg:x="19483" fg:w="4"/><text x="56.2324%" y="447.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (29 samples, 0.08%)</title><rect x="55.9278%" y="533" width="0.0833%" height="15" fill="rgb(227,118,25)" fg:x="19464" fg:w="29"/><text x="56.1778%" y="543.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (20 samples, 0.06%)</title><rect x="55.9537%" y="517" width="0.0575%" height="15" fill="rgb(248,171,40)" fg:x="19473" fg:w="20"/><text x="56.2037%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (20 samples, 0.06%)</title><rect x="55.9537%" y="501" width="0.0575%" height="15" fill="rgb(251,90,54)" fg:x="19473" fg:w="20"/><text x="56.2037%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (20 samples, 0.06%)</title><rect x="55.9537%" y="485" width="0.0575%" height="15" fill="rgb(234,11,46)" fg:x="19473" fg:w="20"/><text x="56.2037%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (20 samples, 0.06%)</title><rect x="55.9537%" y="469" width="0.0575%" height="15" fill="rgb(229,134,13)" fg:x="19473" fg:w="20"/><text x="56.2037%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (20 samples, 0.06%)</title><rect x="55.9537%" y="453" width="0.0575%" height="15" fill="rgb(223,129,3)" fg:x="19473" fg:w="20"/><text x="56.2037%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.02%)</title><rect x="55.9939%" y="437" width="0.0172%" height="15" fill="rgb(221,124,13)" fg:x="19487" fg:w="6"/><text x="56.2439%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.02%)</title><rect x="55.9939%" y="421" width="0.0172%" height="15" fill="rgb(234,3,18)" fg:x="19487" fg:w="6"/><text x="56.2439%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (6 samples, 0.02%)</title><rect x="55.9939%" y="405" width="0.0172%" height="15" fill="rgb(249,199,20)" fg:x="19487" fg:w="6"/><text x="56.2439%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.02%)</title><rect x="55.9939%" y="389" width="0.0172%" height="15" fill="rgb(224,134,6)" fg:x="19487" fg:w="6"/><text x="56.2439%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.02%)</title><rect x="55.9939%" y="373" width="0.0172%" height="15" fill="rgb(254,83,26)" fg:x="19487" fg:w="6"/><text x="56.2439%" y="383.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.02%)</title><rect x="55.9939%" y="357" width="0.0172%" height="15" fill="rgb(217,88,9)" fg:x="19487" fg:w="6"/><text x="56.2439%" y="367.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (50 samples, 0.14%)</title><rect x="55.8732%" y="629" width="0.1437%" height="15" fill="rgb(225,73,2)" fg:x="19445" fg:w="50"/><text x="56.1232%" y="639.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (38 samples, 0.11%)</title><rect x="55.9077%" y="613" width="0.1092%" height="15" fill="rgb(226,44,39)" fg:x="19457" fg:w="38"/><text x="56.1577%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (38 samples, 0.11%)</title><rect x="55.9077%" y="597" width="0.1092%" height="15" fill="rgb(228,53,17)" fg:x="19457" fg:w="38"/><text x="56.1577%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (31 samples, 0.09%)</title><rect x="55.9278%" y="581" width="0.0891%" height="15" fill="rgb(212,27,27)" fg:x="19464" fg:w="31"/><text x="56.1778%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (31 samples, 0.09%)</title><rect x="55.9278%" y="565" width="0.0891%" height="15" fill="rgb(241,50,6)" fg:x="19464" fg:w="31"/><text x="56.1778%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (31 samples, 0.09%)</title><rect x="55.9278%" y="549" width="0.0891%" height="15" fill="rgb(225,28,51)" fg:x="19464" fg:w="31"/><text x="56.1778%" y="559.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (77 samples, 0.22%)</title><rect x="55.8100%" y="725" width="0.2213%" height="15" fill="rgb(215,33,16)" fg:x="19423" fg:w="77"/><text x="56.0600%" y="735.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (65 samples, 0.19%)</title><rect x="55.8445%" y="709" width="0.1868%" height="15" fill="rgb(243,40,39)" fg:x="19435" fg:w="65"/><text x="56.0945%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (65 samples, 0.19%)</title><rect x="55.8445%" y="693" width="0.1868%" height="15" fill="rgb(225,11,42)" fg:x="19435" fg:w="65"/><text x="56.0945%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (65 samples, 0.19%)</title><rect x="55.8445%" y="677" width="0.1868%" height="15" fill="rgb(241,220,38)" fg:x="19435" fg:w="65"/><text x="56.0945%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (65 samples, 0.19%)</title><rect x="55.8445%" y="661" width="0.1868%" height="15" fill="rgb(244,52,35)" fg:x="19435" fg:w="65"/><text x="56.0945%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (65 samples, 0.19%)</title><rect x="55.8445%" y="645" width="0.1868%" height="15" fill="rgb(246,42,46)" fg:x="19435" fg:w="65"/><text x="56.0945%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5 samples, 0.01%)</title><rect x="56.0169%" y="629" width="0.0144%" height="15" fill="rgb(205,184,13)" fg:x="19495" fg:w="5"/><text x="56.2669%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.01%)</title><rect x="56.0169%" y="613" width="0.0144%" height="15" fill="rgb(209,48,36)" fg:x="19495" fg:w="5"/><text x="56.2669%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (5 samples, 0.01%)</title><rect x="56.0169%" y="597" width="0.0144%" height="15" fill="rgb(244,34,51)" fg:x="19495" fg:w="5"/><text x="56.2669%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.01%)</title><rect x="56.0169%" y="581" width="0.0144%" height="15" fill="rgb(221,107,33)" fg:x="19495" fg:w="5"/><text x="56.2669%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.01%)</title><rect x="56.0169%" y="565" width="0.0144%" height="15" fill="rgb(224,203,12)" fg:x="19495" fg:w="5"/><text x="56.2669%" y="575.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.01%)</title><rect x="56.0169%" y="549" width="0.0144%" height="15" fill="rgb(230,215,18)" fg:x="19495" fg:w="5"/><text x="56.2669%" y="559.50"></text></g><g><title>mallocx (5 samples, 0.01%)</title><rect x="56.0169%" y="533" width="0.0144%" height="15" fill="rgb(206,185,35)" fg:x="19495" fg:w="5"/><text x="56.2669%" y="543.50"></text></g><g><title>imalloc (5 samples, 0.01%)</title><rect x="56.0169%" y="517" width="0.0144%" height="15" fill="rgb(228,140,34)" fg:x="19495" fg:w="5"/><text x="56.2669%" y="527.50"></text></g><g><title>imalloc_body (5 samples, 0.01%)</title><rect x="56.0169%" y="501" width="0.0144%" height="15" fill="rgb(208,93,13)" fg:x="19495" fg:w="5"/><text x="56.2669%" y="511.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (87 samples, 0.25%)</title><rect x="55.8071%" y="805" width="0.2500%" height="15" fill="rgb(221,193,39)" fg:x="19422" fg:w="87"/><text x="56.0571%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (86 samples, 0.25%)</title><rect x="55.8100%" y="789" width="0.2471%" height="15" fill="rgb(241,132,34)" fg:x="19423" fg:w="86"/><text x="56.0600%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (86 samples, 0.25%)</title><rect x="55.8100%" y="773" width="0.2471%" height="15" fill="rgb(221,141,10)" fg:x="19423" fg:w="86"/><text x="56.0600%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (86 samples, 0.25%)</title><rect x="55.8100%" y="757" width="0.2471%" height="15" fill="rgb(226,90,31)" fg:x="19423" fg:w="86"/><text x="56.0600%" y="767.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (86 samples, 0.25%)</title><rect x="55.8100%" y="741" width="0.2471%" height="15" fill="rgb(243,75,5)" fg:x="19423" fg:w="86"/><text x="56.0600%" y="751.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (6 samples, 0.02%)</title><rect x="56.0399%" y="725" width="0.0172%" height="15" fill="rgb(227,156,21)" fg:x="19503" fg:w="6"/><text x="56.2899%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,move_vm_runtime::loader::TypeCache&gt;&gt; (12 samples, 0.03%)</title><rect x="56.0571%" y="805" width="0.0345%" height="15" fill="rgb(250,195,8)" fg:x="19509" fg:w="12"/><text x="56.3071%" y="815.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.03%)</title><rect x="56.0571%" y="789" width="0.0345%" height="15" fill="rgb(220,134,5)" fg:x="19509" fg:w="12"/><text x="56.3071%" y="799.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (12 samples, 0.03%)</title><rect x="56.0571%" y="773" width="0.0345%" height="15" fill="rgb(246,106,34)" fg:x="19509" fg:w="12"/><text x="56.3071%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (12 samples, 0.03%)</title><rect x="56.0571%" y="757" width="0.0345%" height="15" fill="rgb(205,1,4)" fg:x="19509" fg:w="12"/><text x="56.3071%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_sub (12 samples, 0.03%)</title><rect x="56.0571%" y="741" width="0.0345%" height="15" fill="rgb(224,151,29)" fg:x="19509" fg:w="12"/><text x="56.3071%" y="751.50"></text></g><g><title>hashbrown::map::make_hash (11 samples, 0.03%)</title><rect x="56.0916%" y="757" width="0.0316%" height="15" fill="rgb(251,196,0)" fg:x="19521" fg:w="11"/><text x="56.3416%" y="767.50"></text></g><g><title>core::hash::BuildHasher::hash_one (11 samples, 0.03%)</title><rect x="56.0916%" y="741" width="0.0316%" height="15" fill="rgb(212,127,0)" fg:x="19521" fg:w="11"/><text x="56.3416%" y="751.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (4 samples, 0.01%)</title><rect x="56.1117%" y="725" width="0.0115%" height="15" fill="rgb(236,71,53)" fg:x="19528" fg:w="4"/><text x="56.3617%" y="735.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout (115 samples, 0.33%)</title><rect x="55.7956%" y="853" width="0.3304%" height="15" fill="rgb(227,99,0)" fg:x="19418" fg:w="115"/><text x="56.0456%" y="863.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout_impl (115 samples, 0.33%)</title><rect x="55.7956%" y="837" width="0.3304%" height="15" fill="rgb(239,89,21)" fg:x="19418" fg:w="115"/><text x="56.0456%" y="847.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_layout (111 samples, 0.32%)</title><rect x="55.8071%" y="821" width="0.3189%" height="15" fill="rgb(243,122,19)" fg:x="19422" fg:w="111"/><text x="56.0571%" y="831.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (12 samples, 0.03%)</title><rect x="56.0916%" y="805" width="0.0345%" height="15" fill="rgb(229,192,45)" fg:x="19521" fg:w="12"/><text x="56.3416%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (12 samples, 0.03%)</title><rect x="56.0916%" y="789" width="0.0345%" height="15" fill="rgb(235,165,35)" fg:x="19521" fg:w="12"/><text x="56.3416%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (12 samples, 0.03%)</title><rect x="56.0916%" y="773" width="0.0345%" height="15" fill="rgb(253,202,0)" fg:x="19521" fg:w="12"/><text x="56.3416%" y="783.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (4 samples, 0.01%)</title><rect x="56.1261%" y="821" width="0.0115%" height="15" fill="rgb(235,51,20)" fg:x="19533" fg:w="4"/><text x="56.3761%" y="831.50"></text></g><g><title>&lt;move_core_types::language_storage::TypeTag as core::clone::Clone&gt;::clone (7 samples, 0.02%)</title><rect x="56.1376%" y="725" width="0.0201%" height="15" fill="rgb(218,95,46)" fg:x="19537" fg:w="7"/><text x="56.3876%" y="735.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (7 samples, 0.02%)</title><rect x="56.1376%" y="709" width="0.0201%" height="15" fill="rgb(212,81,10)" fg:x="19537" fg:w="7"/><text x="56.3876%" y="719.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (7 samples, 0.02%)</title><rect x="56.1376%" y="693" width="0.0201%" height="15" fill="rgb(240,59,0)" fg:x="19537" fg:w="7"/><text x="56.3876%" y="703.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::clone::Clone&gt;::clone (7 samples, 0.02%)</title><rect x="56.1376%" y="677" width="0.0201%" height="15" fill="rgb(212,191,42)" fg:x="19537" fg:w="7"/><text x="56.3876%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (10 samples, 0.03%)</title><rect x="56.1376%" y="789" width="0.0287%" height="15" fill="rgb(233,140,3)" fg:x="19537" fg:w="10"/><text x="56.3876%" y="799.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (10 samples, 0.03%)</title><rect x="56.1376%" y="773" width="0.0287%" height="15" fill="rgb(215,69,23)" fg:x="19537" fg:w="10"/><text x="56.3876%" y="783.50"></text></g><g><title>alloc::slice::hack::to_vec (10 samples, 0.03%)</title><rect x="56.1376%" y="757" width="0.0287%" height="15" fill="rgb(240,202,20)" fg:x="19537" fg:w="10"/><text x="56.3876%" y="767.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (10 samples, 0.03%)</title><rect x="56.1376%" y="741" width="0.0287%" height="15" fill="rgb(209,146,50)" fg:x="19537" fg:w="10"/><text x="56.3876%" y="751.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::clone::Clone&gt;::clone (11 samples, 0.03%)</title><rect x="56.1376%" y="805" width="0.0316%" height="15" fill="rgb(253,102,54)" fg:x="19537" fg:w="11"/><text x="56.3876%" y="815.50"></text></g><g><title>hashbrown::map::make_hash (8 samples, 0.02%)</title><rect x="56.1692%" y="757" width="0.0230%" height="15" fill="rgb(250,173,47)" fg:x="19548" fg:w="8"/><text x="56.4192%" y="767.50"></text></g><g><title>core::hash::BuildHasher::hash_one (8 samples, 0.02%)</title><rect x="56.1692%" y="741" width="0.0230%" height="15" fill="rgb(232,142,7)" fg:x="19548" fg:w="8"/><text x="56.4192%" y="751.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag (45 samples, 0.13%)</title><rect x="56.1261%" y="853" width="0.1293%" height="15" fill="rgb(230,157,47)" fg:x="19533" fg:w="45"/><text x="56.3761%" y="863.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag_impl (45 samples, 0.13%)</title><rect x="56.1261%" y="837" width="0.1293%" height="15" fill="rgb(214,177,35)" fg:x="19533" fg:w="45"/><text x="56.3761%" y="847.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_tag (41 samples, 0.12%)</title><rect x="56.1376%" y="821" width="0.1178%" height="15" fill="rgb(234,119,46)" fg:x="19537" fg:w="41"/><text x="56.3876%" y="831.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (30 samples, 0.09%)</title><rect x="56.1692%" y="805" width="0.0862%" height="15" fill="rgb(241,180,50)" fg:x="19548" fg:w="30"/><text x="56.4192%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (30 samples, 0.09%)</title><rect x="56.1692%" y="789" width="0.0862%" height="15" fill="rgb(221,54,25)" fg:x="19548" fg:w="30"/><text x="56.4192%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (30 samples, 0.09%)</title><rect x="56.1692%" y="773" width="0.0862%" height="15" fill="rgb(209,157,44)" fg:x="19548" fg:w="30"/><text x="56.4192%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (22 samples, 0.06%)</title><rect x="56.1922%" y="757" width="0.0632%" height="15" fill="rgb(246,115,41)" fg:x="19556" fg:w="22"/><text x="56.4422%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (22 samples, 0.06%)</title><rect x="56.1922%" y="741" width="0.0632%" height="15" fill="rgb(229,86,1)" fg:x="19556" fg:w="22"/><text x="56.4422%" y="751.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (22 samples, 0.06%)</title><rect x="56.1922%" y="725" width="0.0632%" height="15" fill="rgb(240,108,53)" fg:x="19556" fg:w="22"/><text x="56.4422%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (22 samples, 0.06%)</title><rect x="56.1922%" y="709" width="0.0632%" height="15" fill="rgb(227,134,2)" fg:x="19556" fg:w="22"/><text x="56.4422%" y="719.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (22 samples, 0.06%)</title><rect x="56.1922%" y="693" width="0.0632%" height="15" fill="rgb(213,129,25)" fg:x="19556" fg:w="22"/><text x="56.4422%" y="703.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (22 samples, 0.06%)</title><rect x="56.1922%" y="677" width="0.0632%" height="15" fill="rgb(226,35,21)" fg:x="19556" fg:w="22"/><text x="56.4422%" y="687.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (22 samples, 0.06%)</title><rect x="56.1922%" y="661" width="0.0632%" height="15" fill="rgb(208,129,26)" fg:x="19556" fg:w="22"/><text x="56.4422%" y="671.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (22 samples, 0.06%)</title><rect x="56.1922%" y="645" width="0.0632%" height="15" fill="rgb(224,83,6)" fg:x="19556" fg:w="22"/><text x="56.4422%" y="655.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (22 samples, 0.06%)</title><rect x="56.1922%" y="629" width="0.0632%" height="15" fill="rgb(227,52,39)" fg:x="19556" fg:w="22"/><text x="56.4422%" y="639.50"></text></g><g><title>move_vm_types::values::values_impl::GlobalValue::cached (5 samples, 0.01%)</title><rect x="56.2554%" y="853" width="0.0144%" height="15" fill="rgb(241,30,17)" fg:x="19578" fg:w="5"/><text x="56.5054%" y="863.50"></text></g><g><title>move_vm_types::values::values_impl::GlobalValueImpl::cached (5 samples, 0.01%)</title><rect x="56.2554%" y="837" width="0.0144%" height="15" fill="rgb(246,186,42)" fg:x="19578" fg:w="5"/><text x="56.5054%" y="847.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (5 samples, 0.01%)</title><rect x="56.2554%" y="821" width="0.0144%" height="15" fill="rgb(221,169,15)" fg:x="19578" fg:w="5"/><text x="56.5054%" y="831.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (5 samples, 0.01%)</title><rect x="56.2554%" y="805" width="0.0144%" height="15" fill="rgb(235,108,21)" fg:x="19578" fg:w="5"/><text x="56.5054%" y="815.50"></text></g><g><title>alloc::alloc::exchange_malloc (5 samples, 0.01%)</title><rect x="56.2554%" y="789" width="0.0144%" height="15" fill="rgb(219,148,30)" fg:x="19578" fg:w="5"/><text x="56.5054%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.01%)</title><rect x="56.2554%" y="773" width="0.0144%" height="15" fill="rgb(220,109,5)" fg:x="19578" fg:w="5"/><text x="56.5054%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.01%)</title><rect x="56.2554%" y="757" width="0.0144%" height="15" fill="rgb(213,203,48)" fg:x="19578" fg:w="5"/><text x="56.5054%" y="767.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.01%)</title><rect x="56.2554%" y="741" width="0.0144%" height="15" fill="rgb(244,71,33)" fg:x="19578" fg:w="5"/><text x="56.5054%" y="751.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (7 samples, 0.02%)</title><rect x="56.2698%" y="821" width="0.0201%" height="15" fill="rgb(209,23,2)" fg:x="19583" fg:w="7"/><text x="56.5198%" y="831.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (15 samples, 0.04%)</title><rect x="56.4537%" y="261" width="0.0431%" height="15" fill="rgb(219,97,7)" fg:x="19647" fg:w="15"/><text x="56.7037%" y="271.50"></text></g><g><title>bcs::de::Deserializer::peek (12 samples, 0.03%)</title><rect x="56.5054%" y="229" width="0.0345%" height="15" fill="rgb(216,161,23)" fg:x="19665" fg:w="12"/><text x="56.7554%" y="239.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (12 samples, 0.03%)</title><rect x="56.5054%" y="213" width="0.0345%" height="15" fill="rgb(207,45,42)" fg:x="19665" fg:w="12"/><text x="56.7554%" y="223.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize (65 samples, 0.19%)</title><rect x="56.3646%" y="485" width="0.1868%" height="15" fill="rgb(241,61,4)" fg:x="19616" fg:w="65"/><text x="56.6146%" y="495.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize (65 samples, 0.19%)</title><rect x="56.3646%" y="469" width="0.1868%" height="15" fill="rgb(236,170,1)" fg:x="19616" fg:w="65"/><text x="56.6146%" y="479.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (65 samples, 0.19%)</title><rect x="56.3646%" y="453" width="0.1868%" height="15" fill="rgb(239,72,5)" fg:x="19616" fg:w="65"/><text x="56.6146%" y="463.50"></text></g><g><title>&lt;&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (65 samples, 0.19%)</title><rect x="56.3646%" y="437" width="0.1868%" height="15" fill="rgb(214,13,50)" fg:x="19616" fg:w="65"/><text x="56.6146%" y="447.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for [T (59 samples, 0.17%)</title><rect x="56.3818%" y="421" width="0.1695%" height="15" fill="rgb(224,88,9)" fg:x="19622" fg:w="59"/><text x="56.6318%" y="431.50"></text></g><g><title> 32]&gt;::deserialize (59 samples, 0.17%)</title><rect x="56.3818%" y="405" width="0.1695%" height="15" fill="rgb(238,192,34)" fg:x="19622" fg:w="59"/><text x="56.6318%" y="415.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (59 samples, 0.17%)</title><rect x="56.3818%" y="389" width="0.1695%" height="15" fill="rgb(217,203,50)" fg:x="19622" fg:w="59"/><text x="56.6318%" y="399.50"></text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T (59 samples, 0.17%)</title><rect x="56.3818%" y="373" width="0.1695%" height="15" fill="rgb(241,123,32)" fg:x="19622" fg:w="59"/><text x="56.6318%" y="383.50"></text></g><g><title> 32]&gt; as serde::de::Visitor&gt;::visit_seq (59 samples, 0.17%)</title><rect x="56.3818%" y="357" width="0.1695%" height="15" fill="rgb(248,151,39)" fg:x="19622" fg:w="59"/><text x="56.6318%" y="367.50"></text></g><g><title>serde::de::SeqAccess::next_element (34 samples, 0.10%)</title><rect x="56.4537%" y="341" width="0.0977%" height="15" fill="rgb(208,89,6)" fg:x="19647" fg:w="34"/><text x="56.7037%" y="351.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (34 samples, 0.10%)</title><rect x="56.4537%" y="325" width="0.0977%" height="15" fill="rgb(254,43,26)" fg:x="19647" fg:w="34"/><text x="56.7037%" y="335.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (34 samples, 0.10%)</title><rect x="56.4537%" y="309" width="0.0977%" height="15" fill="rgb(216,158,13)" fg:x="19647" fg:w="34"/><text x="56.7037%" y="319.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (34 samples, 0.10%)</title><rect x="56.4537%" y="293" width="0.0977%" height="15" fill="rgb(212,47,37)" fg:x="19647" fg:w="34"/><text x="56.7037%" y="303.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u8 (34 samples, 0.10%)</title><rect x="56.4537%" y="277" width="0.0977%" height="15" fill="rgb(254,16,10)" fg:x="19647" fg:w="34"/><text x="56.7037%" y="287.50"></text></g><g><title>bcs::de::Deserializer::parse_u8 (16 samples, 0.05%)</title><rect x="56.5054%" y="261" width="0.0460%" height="15" fill="rgb(223,228,16)" fg:x="19665" fg:w="16"/><text x="56.7554%" y="271.50"></text></g><g><title>bcs::de::Deserializer::next (16 samples, 0.05%)</title><rect x="56.5054%" y="245" width="0.0460%" height="15" fill="rgb(249,108,50)" fg:x="19665" fg:w="16"/><text x="56.7554%" y="255.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (4 samples, 0.01%)</title><rect x="56.5399%" y="229" width="0.0115%" height="15" fill="rgb(208,220,5)" fg:x="19677" fg:w="4"/><text x="56.7899%" y="239.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (4 samples, 0.01%)</title><rect x="56.5399%" y="213" width="0.0115%" height="15" fill="rgb(217,89,48)" fg:x="19677" fg:w="4"/><text x="56.7899%" y="223.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (4 samples, 0.01%)</title><rect x="56.5399%" y="197" width="0.0115%" height="15" fill="rgb(212,113,41)" fg:x="19677" fg:w="4"/><text x="56.7899%" y="207.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (4 samples, 0.01%)</title><rect x="56.5399%" y="181" width="0.0115%" height="15" fill="rgb(231,127,5)" fg:x="19677" fg:w="4"/><text x="56.7899%" y="191.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (4 samples, 0.01%)</title><rect x="56.5399%" y="165" width="0.0115%" height="15" fill="rgb(217,141,17)" fg:x="19677" fg:w="4"/><text x="56.7899%" y="175.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (70 samples, 0.20%)</title><rect x="56.3531%" y="517" width="0.2011%" height="15" fill="rgb(245,125,54)" fg:x="19612" fg:w="70"/><text x="56.6031%" y="527.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (70 samples, 0.20%)</title><rect x="56.3531%" y="501" width="0.2011%" height="15" fill="rgb(248,125,3)" fg:x="19612" fg:w="70"/><text x="56.6031%" y="511.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (24 samples, 0.07%)</title><rect x="56.5542%" y="517" width="0.0690%" height="15" fill="rgb(236,119,51)" fg:x="19682" fg:w="24"/><text x="56.8042%" y="527.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (106 samples, 0.30%)</title><rect x="56.3330%" y="549" width="0.3046%" height="15" fill="rgb(239,99,8)" fg:x="19605" fg:w="106"/><text x="56.5830%" y="559.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (99 samples, 0.28%)</title><rect x="56.3531%" y="533" width="0.2845%" height="15" fill="rgb(224,228,4)" fg:x="19612" fg:w="99"/><text x="56.6031%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (5 samples, 0.01%)</title><rect x="56.6232%" y="517" width="0.0144%" height="15" fill="rgb(220,131,45)" fg:x="19706" fg:w="5"/><text x="56.8732%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (5 samples, 0.01%)</title><rect x="56.6232%" y="501" width="0.0144%" height="15" fill="rgb(215,62,5)" fg:x="19706" fg:w="5"/><text x="56.8732%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.01%)</title><rect x="56.6232%" y="485" width="0.0144%" height="15" fill="rgb(253,12,24)" fg:x="19706" fg:w="5"/><text x="56.8732%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.01%)</title><rect x="56.6232%" y="469" width="0.0144%" height="15" fill="rgb(248,120,50)" fg:x="19706" fg:w="5"/><text x="56.8732%" y="479.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (107 samples, 0.31%)</title><rect x="56.3330%" y="565" width="0.3075%" height="15" fill="rgb(245,194,10)" fg:x="19605" fg:w="107"/><text x="56.5830%" y="575.50"></text></g><g><title>move_vm_types::values::values_impl::Value::struct_ (5 samples, 0.01%)</title><rect x="56.6462%" y="565" width="0.0144%" height="15" fill="rgb(241,149,38)" fg:x="19714" fg:w="5"/><text x="56.8962%" y="575.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (5 samples, 0.01%)</title><rect x="56.6462%" y="549" width="0.0144%" height="15" fill="rgb(219,215,7)" fg:x="19714" fg:w="5"/><text x="56.8962%" y="559.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (5 samples, 0.01%)</title><rect x="56.6462%" y="533" width="0.0144%" height="15" fill="rgb(208,120,31)" fg:x="19714" fg:w="5"/><text x="56.8962%" y="543.50"></text></g><g><title>alloc::alloc::exchange_malloc (5 samples, 0.01%)</title><rect x="56.6462%" y="517" width="0.0144%" height="15" fill="rgb(244,30,8)" fg:x="19714" fg:w="5"/><text x="56.8962%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.01%)</title><rect x="56.6462%" y="501" width="0.0144%" height="15" fill="rgb(238,35,44)" fg:x="19714" fg:w="5"/><text x="56.8962%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.01%)</title><rect x="56.6462%" y="485" width="0.0144%" height="15" fill="rgb(243,218,37)" fg:x="19714" fg:w="5"/><text x="56.8962%" y="495.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.01%)</title><rect x="56.6462%" y="469" width="0.0144%" height="15" fill="rgb(218,169,10)" fg:x="19714" fg:w="5"/><text x="56.8962%" y="479.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (115 samples, 0.33%)</title><rect x="56.3330%" y="597" width="0.3304%" height="15" fill="rgb(221,144,10)" fg:x="19605" fg:w="115"/><text x="56.5830%" y="607.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (115 samples, 0.33%)</title><rect x="56.3330%" y="581" width="0.3304%" height="15" fill="rgb(226,41,38)" fg:x="19605" fg:w="115"/><text x="56.5830%" y="591.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (13 samples, 0.04%)</title><rect x="56.6634%" y="597" width="0.0374%" height="15" fill="rgb(228,3,1)" fg:x="19720" fg:w="13"/><text x="56.9134%" y="607.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (134 samples, 0.39%)</title><rect x="56.3330%" y="645" width="0.3850%" height="15" fill="rgb(209,129,12)" fg:x="19605" fg:w="134"/><text x="56.5830%" y="655.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (134 samples, 0.39%)</title><rect x="56.3330%" y="629" width="0.3850%" height="15" fill="rgb(213,136,33)" fg:x="19605" fg:w="134"/><text x="56.5830%" y="639.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (134 samples, 0.39%)</title><rect x="56.3330%" y="613" width="0.3850%" height="15" fill="rgb(209,181,29)" fg:x="19605" fg:w="134"/><text x="56.5830%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (6 samples, 0.02%)</title><rect x="56.7008%" y="597" width="0.0172%" height="15" fill="rgb(234,173,18)" fg:x="19733" fg:w="6"/><text x="56.9508%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (6 samples, 0.02%)</title><rect x="56.7008%" y="581" width="0.0172%" height="15" fill="rgb(227,73,47)" fg:x="19733" fg:w="6"/><text x="56.9508%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 0.02%)</title><rect x="56.7008%" y="565" width="0.0172%" height="15" fill="rgb(234,9,34)" fg:x="19733" fg:w="6"/><text x="56.9508%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.01%)</title><rect x="56.7036%" y="549" width="0.0144%" height="15" fill="rgb(235,172,15)" fg:x="19734" fg:w="5"/><text x="56.9536%" y="559.50"></text></g><g><title>mallocx (4 samples, 0.01%)</title><rect x="56.7065%" y="533" width="0.0115%" height="15" fill="rgb(245,61,2)" fg:x="19735" fg:w="4"/><text x="56.9565%" y="543.50"></text></g><g><title>imalloc (4 samples, 0.01%)</title><rect x="56.7065%" y="517" width="0.0115%" height="15" fill="rgb(238,39,47)" fg:x="19735" fg:w="4"/><text x="56.9565%" y="527.50"></text></g><g><title>imalloc_body (4 samples, 0.01%)</title><rect x="56.7065%" y="501" width="0.0115%" height="15" fill="rgb(234,37,24)" fg:x="19735" fg:w="4"/><text x="56.9565%" y="511.50"></text></g><g><title>imalloc_no_sample (4 samples, 0.01%)</title><rect x="56.7065%" y="485" width="0.0115%" height="15" fill="rgb(248,223,24)" fg:x="19735" fg:w="4"/><text x="56.9565%" y="495.50"></text></g><g><title>tcaches_get (4 samples, 0.01%)</title><rect x="56.7065%" y="469" width="0.0115%" height="15" fill="rgb(223,12,15)" fg:x="19735" fg:w="4"/><text x="56.9565%" y="479.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (151 samples, 0.43%)</title><rect x="56.3186%" y="677" width="0.4339%" height="15" fill="rgb(249,6,3)" fg:x="19600" fg:w="151"/><text x="56.5686%" y="687.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (151 samples, 0.43%)</title><rect x="56.3186%" y="661" width="0.4339%" height="15" fill="rgb(237,105,33)" fg:x="19600" fg:w="151"/><text x="56.5686%" y="671.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (9 samples, 0.03%)</title><rect x="56.7266%" y="645" width="0.0259%" height="15" fill="rgb(252,208,35)" fg:x="19742" fg:w="9"/><text x="56.9766%" y="655.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u64 (9 samples, 0.03%)</title><rect x="56.7266%" y="629" width="0.0259%" height="15" fill="rgb(215,181,35)" fg:x="19742" fg:w="9"/><text x="56.9766%" y="639.50"></text></g><g><title>bcs::de::Deserializer::parse_u64 (6 samples, 0.02%)</title><rect x="56.7352%" y="613" width="0.0172%" height="15" fill="rgb(246,212,3)" fg:x="19745" fg:w="6"/><text x="56.9852%" y="623.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (27 samples, 0.08%)</title><rect x="56.7525%" y="677" width="0.0776%" height="15" fill="rgb(247,156,24)" fg:x="19751" fg:w="27"/><text x="57.0025%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.02%)</title><rect x="56.8301%" y="629" width="0.0172%" height="15" fill="rgb(248,9,31)" fg:x="19778" fg:w="6"/><text x="57.0801%" y="639.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (185 samples, 0.53%)</title><rect x="56.3186%" y="709" width="0.5316%" height="15" fill="rgb(234,26,45)" fg:x="19600" fg:w="185"/><text x="56.5686%" y="719.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (185 samples, 0.53%)</title><rect x="56.3186%" y="693" width="0.5316%" height="15" fill="rgb(249,11,32)" fg:x="19600" fg:w="185"/><text x="56.5686%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (7 samples, 0.02%)</title><rect x="56.8301%" y="677" width="0.0201%" height="15" fill="rgb(249,162,33)" fg:x="19778" fg:w="7"/><text x="57.0801%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (7 samples, 0.02%)</title><rect x="56.8301%" y="661" width="0.0201%" height="15" fill="rgb(232,4,32)" fg:x="19778" fg:w="7"/><text x="57.0801%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (7 samples, 0.02%)</title><rect x="56.8301%" y="645" width="0.0201%" height="15" fill="rgb(212,5,45)" fg:x="19778" fg:w="7"/><text x="57.0801%" y="655.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (186 samples, 0.53%)</title><rect x="56.3186%" y="725" width="0.5345%" height="15" fill="rgb(227,95,13)" fg:x="19600" fg:w="186"/><text x="56.5686%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 0.01%)</title><rect x="56.8674%" y="677" width="0.0115%" height="15" fill="rgb(223,205,10)" fg:x="19791" fg:w="4"/><text x="57.1174%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (4 samples, 0.01%)</title><rect x="56.8674%" y="661" width="0.0115%" height="15" fill="rgb(222,178,8)" fg:x="19791" fg:w="4"/><text x="57.1174%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (4 samples, 0.01%)</title><rect x="56.8674%" y="645" width="0.0115%" height="15" fill="rgb(216,13,22)" fg:x="19791" fg:w="4"/><text x="57.1174%" y="655.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize (9 samples, 0.03%)</title><rect x="56.8617%" y="725" width="0.0259%" height="15" fill="rgb(240,167,12)" fg:x="19789" fg:w="9"/><text x="57.1117%" y="735.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_seq (9 samples, 0.03%)</title><rect x="56.8617%" y="709" width="0.0259%" height="15" fill="rgb(235,68,35)" fg:x="19789" fg:w="9"/><text x="57.1117%" y="719.50"></text></g><g><title>&lt;serde::de::impls::&lt;impl serde::de::Deserialize for alloc::vec::Vec&lt;T&gt;&gt;::deserialize::VecVisitor&lt;T&gt; as serde::de::Visitor&gt;::visit_seq (7 samples, 0.02%)</title><rect x="56.8674%" y="693" width="0.0201%" height="15" fill="rgb(253,40,27)" fg:x="19791" fg:w="7"/><text x="57.1174%" y="703.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (208 samples, 0.60%)</title><rect x="56.2985%" y="741" width="0.5977%" height="15" fill="rgb(214,19,28)" fg:x="19593" fg:w="208"/><text x="56.5485%" y="751.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (234 samples, 0.67%)</title><rect x="56.2985%" y="757" width="0.6724%" height="15" fill="rgb(210,167,45)" fg:x="19593" fg:w="234"/><text x="56.5485%" y="767.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (26 samples, 0.07%)</title><rect x="56.8962%" y="741" width="0.0747%" height="15" fill="rgb(232,97,40)" fg:x="19801" fg:w="26"/><text x="57.1462%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (4 samples, 0.01%)</title><rect x="56.9852%" y="693" width="0.0115%" height="15" fill="rgb(250,35,23)" fg:x="19832" fg:w="4"/><text x="57.2352%" y="703.50"></text></g><g><title>alloc::alloc::Global::grow_impl (4 samples, 0.01%)</title><rect x="56.9852%" y="677" width="0.0115%" height="15" fill="rgb(248,47,53)" fg:x="19832" fg:w="4"/><text x="57.2352%" y="687.50"></text></g><g><title>alloc::alloc::realloc (4 samples, 0.01%)</title><rect x="56.9852%" y="661" width="0.0115%" height="15" fill="rgb(226,58,50)" fg:x="19832" fg:w="4"/><text x="57.2352%" y="671.50"></text></g><g><title>rallocx (4 samples, 0.01%)</title><rect x="56.9852%" y="645" width="0.0115%" height="15" fill="rgb(217,105,26)" fg:x="19832" fg:w="4"/><text x="57.2352%" y="655.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (246 samples, 0.71%)</title><rect x="56.2985%" y="789" width="0.7069%" height="15" fill="rgb(208,64,1)" fg:x="19593" fg:w="246"/><text x="56.5485%" y="799.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::StructFieldVisitor as serde::de::Visitor&gt;::visit_seq (246 samples, 0.71%)</title><rect x="56.2985%" y="773" width="0.7069%" height="15" fill="rgb(214,80,1)" fg:x="19593" fg:w="246"/><text x="56.5485%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (12 samples, 0.03%)</title><rect x="56.9709%" y="757" width="0.0345%" height="15" fill="rgb(206,175,26)" fg:x="19827" fg:w="12"/><text x="57.2209%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (12 samples, 0.03%)</title><rect x="56.9709%" y="741" width="0.0345%" height="15" fill="rgb(235,156,37)" fg:x="19827" fg:w="12"/><text x="57.2209%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (12 samples, 0.03%)</title><rect x="56.9709%" y="725" width="0.0345%" height="15" fill="rgb(213,100,9)" fg:x="19827" fg:w="12"/><text x="57.2209%" y="735.50"></text></g><g><title>alloc::raw_vec::finish_grow (11 samples, 0.03%)</title><rect x="56.9737%" y="709" width="0.0316%" height="15" fill="rgb(241,15,13)" fg:x="19828" fg:w="11"/><text x="57.2237%" y="719.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveStructLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (249 samples, 0.72%)</title><rect x="56.2985%" y="805" width="0.7155%" height="15" fill="rgb(205,97,43)" fg:x="19593" fg:w="249"/><text x="56.5485%" y="815.50"></text></g><g><title>bcs::de::from_bytes_seed (261 samples, 0.75%)</title><rect x="56.2698%" y="837" width="0.7500%" height="15" fill="rgb(216,106,32)" fg:x="19583" fg:w="261"/><text x="56.5198%" y="847.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (254 samples, 0.73%)</title><rect x="56.2899%" y="821" width="0.7298%" height="15" fill="rgb(226,200,8)" fg:x="19590" fg:w="254"/><text x="56.5399%" y="831.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::exists (655 samples, 1.88%)</title><rect x="55.1405%" y="901" width="1.8821%" height="15" fill="rgb(244,54,29)" fg:x="19190" fg:w="655"/><text x="55.3905%" y="911.50">m..</text></g><g><title>move_vm_runtime::interpreter::Interpreter::load_resource (655 samples, 1.88%)</title><rect x="55.1405%" y="885" width="1.8821%" height="15" fill="rgb(252,169,12)" fg:x="19190" fg:w="655"/><text x="55.3905%" y="895.50">m..</text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_resource (618 samples, 1.78%)</title><rect x="55.2468%" y="869" width="1.7758%" height="15" fill="rgb(231,199,11)" fg:x="19227" fg:w="618"/><text x="55.4968%" y="879.50">&lt;..</text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (262 samples, 0.75%)</title><rect x="56.2698%" y="853" width="0.7528%" height="15" fill="rgb(233,191,18)" fg:x="19583" fg:w="262"/><text x="56.5198%" y="863.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::check_balance (24 samples, 0.07%)</title><rect x="57.0226%" y="901" width="0.0690%" height="15" fill="rgb(215,83,47)" fg:x="19845" fg:w="24"/><text x="57.2726%" y="911.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (371 samples, 1.07%)</title><rect x="57.0915%" y="885" width="1.0660%" height="15" fill="rgb(251,67,19)" fg:x="19869" fg:w="371"/><text x="57.3415%" y="895.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop (31 samples, 0.09%)</title><rect x="58.1576%" y="885" width="0.0891%" height="15" fill="rgb(240,7,20)" fg:x="20240" fg:w="31"/><text x="58.4076%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (31 samples, 0.09%)</title><rect x="58.1576%" y="869" width="0.0891%" height="15" fill="rgb(210,150,26)" fg:x="20240" fg:w="31"/><text x="58.4076%" y="879.50"></text></g><g><title>core::ptr::read (31 samples, 0.09%)</title><rect x="58.1576%" y="853" width="0.0891%" height="15" fill="rgb(228,75,42)" fg:x="20240" fg:w="31"/><text x="58.4076%" y="863.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;move_core_types::account_address::AccountAddress&gt;&gt;::cast (7 samples, 0.02%)</title><rect x="58.2553%" y="869" width="0.0201%" height="15" fill="rgb(237,134,48)" fg:x="20274" fg:w="7"/><text x="58.5053%" y="879.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;move_vm_types::values::values_impl::Reference&gt;&gt;::cast (6 samples, 0.02%)</title><rect x="58.2783%" y="869" width="0.0172%" height="15" fill="rgb(205,80,50)" fg:x="20282" fg:w="6"/><text x="58.5283%" y="879.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;move_vm_types::values::values_impl::StructRef&gt;&gt;::cast (27 samples, 0.08%)</title><rect x="58.2984%" y="869" width="0.0776%" height="15" fill="rgb(217,74,48)" fg:x="20289" fg:w="27"/><text x="58.5484%" y="879.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;move_vm_types::values::values_impl::ContainerRef&gt;&gt;::cast (10 samples, 0.03%)</title><rect x="58.3472%" y="853" width="0.0287%" height="15" fill="rgb(205,82,50)" fg:x="20306" fg:w="10"/><text x="58.5972%" y="863.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop_as (453 samples, 1.30%)</title><rect x="57.0915%" y="901" width="1.3016%" height="15" fill="rgb(228,1,33)" fg:x="19869" fg:w="453"/><text x="57.3415%" y="911.50"></text></g><g><title>move_vm_types::values::values_impl::Value::value_as (51 samples, 0.15%)</title><rect x="58.2467%" y="885" width="0.1465%" height="15" fill="rgb(214,50,23)" fg:x="20271" fg:w="51"/><text x="58.4967%" y="895.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;u64&gt;&gt;::cast (5 samples, 0.01%)</title><rect x="58.3788%" y="869" width="0.0144%" height="15" fill="rgb(210,62,9)" fg:x="20317" fg:w="5"/><text x="58.6288%" y="879.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::popn (6 samples, 0.02%)</title><rect x="58.3932%" y="901" width="0.0172%" height="15" fill="rgb(210,104,37)" fg:x="20322" fg:w="6"/><text x="58.6432%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::split_off (5 samples, 0.01%)</title><rect x="58.3961%" y="885" width="0.0144%" height="15" fill="rgb(232,104,43)" fg:x="20323" fg:w="5"/><text x="58.6461%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5 samples, 0.01%)</title><rect x="58.3961%" y="869" width="0.0144%" height="15" fill="rgb(244,52,6)" fg:x="20323" fg:w="5"/><text x="58.6461%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.01%)</title><rect x="58.3961%" y="853" width="0.0144%" height="15" fill="rgb(211,174,52)" fg:x="20323" fg:w="5"/><text x="58.6461%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (5 samples, 0.01%)</title><rect x="58.3961%" y="837" width="0.0144%" height="15" fill="rgb(229,48,4)" fg:x="20323" fg:w="5"/><text x="58.6461%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.01%)</title><rect x="58.3961%" y="821" width="0.0144%" height="15" fill="rgb(205,155,16)" fg:x="20323" fg:w="5"/><text x="58.6461%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.01%)</title><rect x="58.3961%" y="805" width="0.0144%" height="15" fill="rgb(211,141,53)" fg:x="20323" fg:w="5"/><text x="58.6461%" y="815.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.01%)</title><rect x="58.3961%" y="789" width="0.0144%" height="15" fill="rgb(240,148,11)" fg:x="20323" fg:w="5"/><text x="58.6461%" y="799.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::push (88 samples, 0.25%)</title><rect x="58.4104%" y="901" width="0.2529%" height="15" fill="rgb(214,45,23)" fg:x="20328" fg:w="88"/><text x="58.6604%" y="911.50"></text></g><g><title>move_vm_runtime::loader::Resolver::field_instantiation_offset (4 samples, 0.01%)</title><rect x="58.6748%" y="901" width="0.0115%" height="15" fill="rgb(248,74,26)" fg:x="20420" fg:w="4"/><text x="58.9248%" y="911.50"></text></g><g><title>move_vm_runtime::loader::Module::field_instantiation_offset (4 samples, 0.01%)</title><rect x="58.6748%" y="885" width="0.0115%" height="15" fill="rgb(218,121,16)" fg:x="20420" fg:w="4"/><text x="58.9248%" y="895.50"></text></g><g><title>move_vm_runtime::loader::Resolver::field_offset (6 samples, 0.02%)</title><rect x="58.6863%" y="901" width="0.0172%" height="15" fill="rgb(218,10,47)" fg:x="20424" fg:w="6"/><text x="58.9363%" y="911.50"></text></g><g><title>move_vm_runtime::loader::Resolver::get_struct_type (4 samples, 0.01%)</title><rect x="58.7035%" y="901" width="0.0115%" height="15" fill="rgb(227,99,14)" fg:x="20430" fg:w="4"/><text x="58.9535%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (7 samples, 0.02%)</title><rect x="58.7323%" y="741" width="0.0201%" height="15" fill="rgb(229,83,46)" fg:x="20440" fg:w="7"/><text x="58.9823%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (7 samples, 0.02%)</title><rect x="58.7323%" y="725" width="0.0201%" height="15" fill="rgb(228,25,1)" fg:x="20440" fg:w="7"/><text x="58.9823%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (7 samples, 0.02%)</title><rect x="58.7323%" y="709" width="0.0201%" height="15" fill="rgb(252,190,15)" fg:x="20440" fg:w="7"/><text x="58.9823%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (7 samples, 0.02%)</title><rect x="58.7323%" y="693" width="0.0201%" height="15" fill="rgb(213,103,51)" fg:x="20440" fg:w="7"/><text x="58.9823%" y="703.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (7 samples, 0.02%)</title><rect x="58.7323%" y="677" width="0.0201%" height="15" fill="rgb(220,38,44)" fg:x="20440" fg:w="7"/><text x="58.9823%" y="687.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_layout::{{closure}} (7 samples, 0.02%)</title><rect x="58.7323%" y="661" width="0.0201%" height="15" fill="rgb(210,45,26)" fg:x="20440" fg:w="7"/><text x="58.9823%" y="671.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (6 samples, 0.02%)</title><rect x="58.7351%" y="645" width="0.0172%" height="15" fill="rgb(205,95,48)" fg:x="20441" fg:w="6"/><text x="58.9851%" y="655.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (6 samples, 0.02%)</title><rect x="58.7351%" y="629" width="0.0172%" height="15" fill="rgb(225,179,37)" fg:x="20441" fg:w="6"/><text x="58.9851%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.03%)</title><rect x="58.7323%" y="757" width="0.0316%" height="15" fill="rgb(230,209,3)" fg:x="20440" fg:w="11"/><text x="58.9823%" y="767.50"></text></g><g><title>core::ops::control_flow::ControlFlow&lt;B,C&gt;::break_value (4 samples, 0.01%)</title><rect x="58.7524%" y="741" width="0.0115%" height="15" fill="rgb(248,12,46)" fg:x="20447" fg:w="4"/><text x="59.0024%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (19 samples, 0.05%)</title><rect x="58.7150%" y="885" width="0.0546%" height="15" fill="rgb(234,18,0)" fg:x="20434" fg:w="19"/><text x="58.9650%" y="895.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (19 samples, 0.05%)</title><rect x="58.7150%" y="869" width="0.0546%" height="15" fill="rgb(238,197,14)" fg:x="20434" fg:w="19"/><text x="58.9650%" y="879.50"></text></g><g><title>core::iter::adapters::try_process (19 samples, 0.05%)</title><rect x="58.7150%" y="853" width="0.0546%" height="15" fill="rgb(251,162,48)" fg:x="20434" fg:w="19"/><text x="58.9650%" y="863.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (13 samples, 0.04%)</title><rect x="58.7323%" y="837" width="0.0374%" height="15" fill="rgb(237,73,42)" fg:x="20440" fg:w="13"/><text x="58.9823%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (13 samples, 0.04%)</title><rect x="58.7323%" y="821" width="0.0374%" height="15" fill="rgb(211,108,8)" fg:x="20440" fg:w="13"/><text x="58.9823%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (13 samples, 0.04%)</title><rect x="58.7323%" y="805" width="0.0374%" height="15" fill="rgb(213,45,22)" fg:x="20440" fg:w="13"/><text x="58.9823%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (13 samples, 0.04%)</title><rect x="58.7323%" y="789" width="0.0374%" height="15" fill="rgb(252,154,5)" fg:x="20440" fg:w="13"/><text x="58.9823%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (13 samples, 0.04%)</title><rect x="58.7323%" y="773" width="0.0374%" height="15" fill="rgb(221,79,52)" fg:x="20440" fg:w="13"/><text x="58.9823%" y="783.50"></text></g><g><title>alloc::alloc::exchange_malloc (11 samples, 0.03%)</title><rect x="58.7696%" y="869" width="0.0316%" height="15" fill="rgb(229,220,36)" fg:x="20453" fg:w="11"/><text x="59.0196%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.03%)</title><rect x="58.7696%" y="853" width="0.0316%" height="15" fill="rgb(211,17,16)" fg:x="20453" fg:w="11"/><text x="59.0196%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.03%)</title><rect x="58.7696%" y="837" width="0.0316%" height="15" fill="rgb(222,55,31)" fg:x="20453" fg:w="11"/><text x="59.0196%" y="847.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.03%)</title><rect x="58.7696%" y="821" width="0.0316%" height="15" fill="rgb(221,221,31)" fg:x="20453" fg:w="11"/><text x="59.0196%" y="831.50"></text></g><g><title>mallocx (9 samples, 0.03%)</title><rect x="58.7754%" y="805" width="0.0259%" height="15" fill="rgb(227,168,26)" fg:x="20455" fg:w="9"/><text x="59.0254%" y="815.50"></text></g><g><title>imalloc (9 samples, 0.03%)</title><rect x="58.7754%" y="789" width="0.0259%" height="15" fill="rgb(224,139,9)" fg:x="20455" fg:w="9"/><text x="59.0254%" y="799.50"></text></g><g><title>imalloc_body (9 samples, 0.03%)</title><rect x="58.7754%" y="773" width="0.0259%" height="15" fill="rgb(254,172,0)" fg:x="20455" fg:w="9"/><text x="59.0254%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (17 samples, 0.05%)</title><rect x="58.8012%" y="869" width="0.0488%" height="15" fill="rgb(235,203,1)" fg:x="20464" fg:w="17"/><text x="59.0512%" y="879.50"></text></g><g><title>core::ptr::read (17 samples, 0.05%)</title><rect x="58.8012%" y="853" width="0.0488%" height="15" fill="rgb(216,205,24)" fg:x="20464" fg:w="17"/><text x="59.0512%" y="863.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_generic_type (56 samples, 0.16%)</title><rect x="58.7150%" y="901" width="0.1609%" height="15" fill="rgb(233,24,6)" fg:x="20434" fg:w="56"/><text x="58.9650%" y="911.50"></text></g><g><title>move_vm_runtime::loader::Loader::count_type_nodes (37 samples, 0.11%)</title><rect x="58.7696%" y="885" width="0.1063%" height="15" fill="rgb(244,110,9)" fg:x="20453" fg:w="37"/><text x="59.0196%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (9 samples, 0.03%)</title><rect x="58.8501%" y="869" width="0.0259%" height="15" fill="rgb(239,222,42)" fg:x="20481" fg:w="9"/><text x="59.1001%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (9 samples, 0.03%)</title><rect x="58.8501%" y="853" width="0.0259%" height="15" fill="rgb(218,145,13)" fg:x="20481" fg:w="9"/><text x="59.1001%" y="863.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.03%)</title><rect x="58.8501%" y="837" width="0.0259%" height="15" fill="rgb(207,69,11)" fg:x="20481" fg:w="9"/><text x="59.1001%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9 samples, 0.03%)</title><rect x="58.8501%" y="821" width="0.0259%" height="15" fill="rgb(220,223,22)" fg:x="20481" fg:w="9"/><text x="59.1001%" y="831.50"></text></g><g><title>alloc::alloc::dealloc (9 samples, 0.03%)</title><rect x="58.8501%" y="805" width="0.0259%" height="15" fill="rgb(245,102,5)" fg:x="20481" fg:w="9"/><text x="59.1001%" y="815.50"></text></g><g><title>sdallocx (8 samples, 0.02%)</title><rect x="58.8529%" y="789" width="0.0230%" height="15" fill="rgb(211,148,2)" fg:x="20482" fg:w="8"/><text x="59.1029%" y="799.50"></text></g><g><title>isfree (8 samples, 0.02%)</title><rect x="58.8529%" y="773" width="0.0230%" height="15" fill="rgb(241,13,44)" fg:x="20482" fg:w="8"/><text x="59.1029%" y="783.50"></text></g><g><title>isdalloct (8 samples, 0.02%)</title><rect x="58.8529%" y="757" width="0.0230%" height="15" fill="rgb(219,137,21)" fg:x="20482" fg:w="8"/><text x="59.1029%" y="767.50"></text></g><g><title>arena_sdalloc (8 samples, 0.02%)</title><rect x="58.8529%" y="741" width="0.0230%" height="15" fill="rgb(242,206,5)" fg:x="20482" fg:w="8"/><text x="59.1029%" y="751.50"></text></g><g><title>tcache_dalloc_small (8 samples, 0.02%)</title><rect x="58.8529%" y="725" width="0.0230%" height="15" fill="rgb(217,114,22)" fg:x="20482" fg:w="8"/><text x="59.1029%" y="735.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_single_type (7 samples, 0.02%)</title><rect x="58.8759%" y="901" width="0.0201%" height="15" fill="rgb(253,206,42)" fg:x="20490" fg:w="7"/><text x="59.1259%" y="911.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (4 samples, 0.01%)</title><rect x="58.8845%" y="885" width="0.0115%" height="15" fill="rgb(236,102,18)" fg:x="20493" fg:w="4"/><text x="59.1345%" y="895.50"></text></g><g><title>move_vm_runtime::tracing::trace (94 samples, 0.27%)</title><rect x="58.8960%" y="901" width="0.2701%" height="15" fill="rgb(208,59,49)" fg:x="20497" fg:w="94"/><text x="59.1460%" y="911.50"></text></g><g><title>&lt;once_cell::sync::Lazy&lt;T,F&gt; as core::ops::deref::Deref&gt;::deref (94 samples, 0.27%)</title><rect x="58.8960%" y="885" width="0.2701%" height="15" fill="rgb(215,194,28)" fg:x="20497" fg:w="94"/><text x="59.1460%" y="895.50"></text></g><g><title>once_cell::sync::Lazy&lt;T,F&gt;::force (94 samples, 0.27%)</title><rect x="58.8960%" y="869" width="0.2701%" height="15" fill="rgb(243,207,11)" fg:x="20497" fg:w="94"/><text x="59.1460%" y="879.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (94 samples, 0.27%)</title><rect x="58.8960%" y="853" width="0.2701%" height="15" fill="rgb(254,179,35)" fg:x="20497" fg:w="94"/><text x="59.1460%" y="863.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (94 samples, 0.27%)</title><rect x="58.8960%" y="837" width="0.2701%" height="15" fill="rgb(235,97,3)" fg:x="20497" fg:w="94"/><text x="59.1460%" y="847.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get (94 samples, 0.27%)</title><rect x="58.8960%" y="821" width="0.2701%" height="15" fill="rgb(215,155,33)" fg:x="20497" fg:w="94"/><text x="59.1460%" y="831.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::is_initialized (94 samples, 0.27%)</title><rect x="58.8960%" y="805" width="0.2701%" height="15" fill="rgb(223,128,12)" fg:x="20497" fg:w="94"/><text x="59.1460%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (94 samples, 0.27%)</title><rect x="58.8960%" y="789" width="0.2701%" height="15" fill="rgb(208,157,18)" fg:x="20497" fg:w="94"/><text x="59.1460%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_load (94 samples, 0.27%)</title><rect x="58.8960%" y="773" width="0.2701%" height="15" fill="rgb(249,70,54)" fg:x="20497" fg:w="94"/><text x="59.1460%" y="783.50"></text></g><g><title>move_vm_types::values::values_impl::IntegerValue::cast_u128 (5 samples, 0.01%)</title><rect x="59.1661%" y="901" width="0.0144%" height="15" fill="rgb(244,118,24)" fg:x="20591" fg:w="5"/><text x="59.4161%" y="911.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::borrow_loc (4 samples, 0.01%)</title><rect x="59.1805%" y="901" width="0.0115%" height="15" fill="rgb(211,54,0)" fg:x="20596" fg:w="4"/><text x="59.4305%" y="911.50"></text></g><g><title>move_vm_types::values::values_impl::Container::copy_by_ref (4 samples, 0.01%)</title><rect x="59.1805%" y="885" width="0.0115%" height="15" fill="rgb(245,137,45)" fg:x="20596" fg:w="4"/><text x="59.4305%" y="895.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::copy_loc (41 samples, 0.12%)</title><rect x="59.1920%" y="901" width="0.1178%" height="15" fill="rgb(232,154,31)" fg:x="20600" fg:w="41"/><text x="59.4420%" y="911.50"></text></g><g><title>move_vm_types::values::values_impl::ValueImpl::copy_value (18 samples, 0.05%)</title><rect x="59.2581%" y="885" width="0.0517%" height="15" fill="rgb(253,6,39)" fg:x="20623" fg:w="18"/><text x="59.5081%" y="895.50"></text></g><g><title>move_vm_types::values::values_impl::ContainerRef::copy_value (4 samples, 0.01%)</title><rect x="59.2983%" y="869" width="0.0115%" height="15" fill="rgb(234,183,24)" fg:x="20637" fg:w="4"/><text x="59.5483%" y="879.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::move_loc (52 samples, 0.15%)</title><rect x="59.3098%" y="901" width="0.1494%" height="15" fill="rgb(252,84,40)" fg:x="20641" fg:w="52"/><text x="59.5598%" y="911.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::swap_loc (31 samples, 0.09%)</title><rect x="59.3702%" y="885" width="0.0891%" height="15" fill="rgb(224,65,2)" fg:x="20662" fg:w="31"/><text x="59.6202%" y="895.50"></text></g><g><title>core::mem::replace (31 samples, 0.09%)</title><rect x="59.3702%" y="869" width="0.0891%" height="15" fill="rgb(229,38,24)" fg:x="20662" fg:w="31"/><text x="59.6202%" y="879.50"></text></g><g><title>core::ptr::write (31 samples, 0.09%)</title><rect x="59.3702%" y="853" width="0.0891%" height="15" fill="rgb(218,131,50)" fg:x="20662" fg:w="31"/><text x="59.6202%" y="863.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::store_loc (9 samples, 0.03%)</title><rect x="59.4592%" y="901" width="0.0259%" height="15" fill="rgb(233,106,18)" fg:x="20693" fg:w="9"/><text x="59.7092%" y="911.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::swap_loc (7 samples, 0.02%)</title><rect x="59.4650%" y="885" width="0.0201%" height="15" fill="rgb(220,216,11)" fg:x="20695" fg:w="7"/><text x="59.7150%" y="895.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow_mut (7 samples, 0.02%)</title><rect x="59.4650%" y="869" width="0.0201%" height="15" fill="rgb(251,100,45)" fg:x="20695" fg:w="7"/><text x="59.7150%" y="879.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (7 samples, 0.02%)</title><rect x="59.4650%" y="853" width="0.0201%" height="15" fill="rgb(235,143,32)" fg:x="20695" fg:w="7"/><text x="59.7150%" y="863.50"></text></g><g><title>core::cell::BorrowRefMut::new (7 samples, 0.02%)</title><rect x="59.4650%" y="837" width="0.0201%" height="15" fill="rgb(248,124,34)" fg:x="20695" fg:w="7"/><text x="59.7150%" y="847.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (12 samples, 0.03%)</title><rect x="59.4851%" y="853" width="0.0345%" height="15" fill="rgb(225,221,4)" fg:x="20702" fg:w="12"/><text x="59.7351%" y="863.50"></text></g><g><title>move_vm_types::values::values_impl::Reference::read_ref (21 samples, 0.06%)</title><rect x="59.4851%" y="901" width="0.0603%" height="15" fill="rgb(242,27,43)" fg:x="20702" fg:w="21"/><text x="59.7351%" y="911.50"></text></g><g><title>move_vm_types::values::values_impl::ReferenceImpl::read_ref (21 samples, 0.06%)</title><rect x="59.4851%" y="885" width="0.0603%" height="15" fill="rgb(227,54,8)" fg:x="20702" fg:w="21"/><text x="59.7351%" y="895.50"></text></g><g><title>move_vm_types::values::values_impl::IndexedRef::read_ref (21 samples, 0.06%)</title><rect x="59.4851%" y="869" width="0.0603%" height="15" fill="rgb(253,139,49)" fg:x="20702" fg:w="21"/><text x="59.7351%" y="879.50"></text></g><g><title>move_vm_types::values::values_impl::ValueImpl::copy_value (6 samples, 0.02%)</title><rect x="59.5282%" y="853" width="0.0172%" height="15" fill="rgb(231,26,43)" fg:x="20717" fg:w="6"/><text x="59.7782%" y="863.50"></text></g><g><title>move_vm_types::values::values_impl::Reference::write_ref (10 samples, 0.03%)</title><rect x="59.5454%" y="901" width="0.0287%" height="15" fill="rgb(207,121,39)" fg:x="20723" fg:w="10"/><text x="59.7954%" y="911.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (31 samples, 0.09%)</title><rect x="59.5799%" y="885" width="0.0891%" height="15" fill="rgb(223,101,35)" fg:x="20735" fg:w="31"/><text x="59.8299%" y="895.50"></text></g><g><title>move_vm_types::values::values_impl::ContainerRef::container (23 samples, 0.07%)</title><rect x="59.6776%" y="869" width="0.0661%" height="15" fill="rgb(232,87,23)" fg:x="20769" fg:w="23"/><text x="59.9276%" y="879.50"></text></g><g><title>move_vm_types::values::values_impl::StructRef::borrow_field (63 samples, 0.18%)</title><rect x="59.5799%" y="901" width="0.1810%" height="15" fill="rgb(225,180,29)" fg:x="20735" fg:w="63"/><text x="59.8299%" y="911.50"></text></g><g><title>move_vm_types::values::values_impl::ContainerRef::borrow_elem (32 samples, 0.09%)</title><rect x="59.6690%" y="885" width="0.0919%" height="15" fill="rgb(225,25,17)" fg:x="20766" fg:w="32"/><text x="59.9190%" y="895.50"></text></g><g><title>move_vm_types::values::values_impl::ContainerRef::copy_value (6 samples, 0.02%)</title><rect x="59.7437%" y="869" width="0.0172%" height="15" fill="rgb(223,8,52)" fg:x="20792" fg:w="6"/><text x="59.9937%" y="879.50"></text></g><g><title>move_vm_types::values::values_impl::Container::copy_by_ref (6 samples, 0.02%)</title><rect x="59.7437%" y="853" width="0.0172%" height="15" fill="rgb(246,42,21)" fg:x="20792" fg:w="6"/><text x="59.9937%" y="863.50"></text></g><g><title>move_vm_types::values::values_impl::Value::equals (4 samples, 0.01%)</title><rect x="59.7609%" y="901" width="0.0115%" height="15" fill="rgb(205,64,43)" fg:x="20798" fg:w="4"/><text x="60.0109%" y="911.50"></text></g><g><title>move_vm_types::values::values_impl::Value::struct_ (7 samples, 0.02%)</title><rect x="59.7724%" y="901" width="0.0201%" height="15" fill="rgb(221,160,13)" fg:x="20802" fg:w="7"/><text x="60.0224%" y="911.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (7 samples, 0.02%)</title><rect x="59.7724%" y="885" width="0.0201%" height="15" fill="rgb(239,58,35)" fg:x="20802" fg:w="7"/><text x="60.0224%" y="895.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::execute_code (3,689 samples, 10.60%)</title><rect x="49.2012%" y="933" width="10.6000%" height="15" fill="rgb(251,26,40)" fg:x="17123" fg:w="3689"/><text x="49.4512%" y="943.50">move_vm_runtime..</text></g><g><title>move_vm_runtime::interpreter::Frame::execute_code_impl (3,572 samples, 10.26%)</title><rect x="49.5374%" y="917" width="10.2638%" height="15" fill="rgb(247,0,4)" fg:x="17240" fg:w="3572"/><text x="49.7874%" y="927.50">move_vm_runtime..</text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (57 samples, 0.16%)</title><rect x="59.8155%" y="789" width="0.1638%" height="15" fill="rgb(218,130,10)" fg:x="20817" fg:w="57"/><text x="60.0655%" y="799.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (57 samples, 0.16%)</title><rect x="59.8155%" y="773" width="0.1638%" height="15" fill="rgb(239,32,7)" fg:x="20817" fg:w="57"/><text x="60.0655%" y="783.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (57 samples, 0.16%)</title><rect x="59.8155%" y="757" width="0.1638%" height="15" fill="rgb(210,192,24)" fg:x="20817" fg:w="57"/><text x="60.0655%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (57 samples, 0.16%)</title><rect x="59.8155%" y="741" width="0.1638%" height="15" fill="rgb(226,212,17)" fg:x="20817" fg:w="57"/><text x="60.0655%" y="751.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (57 samples, 0.16%)</title><rect x="59.8155%" y="725" width="0.1638%" height="15" fill="rgb(219,201,28)" fg:x="20817" fg:w="57"/><text x="60.0655%" y="735.50"></text></g><g><title>hashbrown::map::make_hash (149 samples, 0.43%)</title><rect x="59.8155%" y="821" width="0.4281%" height="15" fill="rgb(235,207,41)" fg:x="20817" fg:w="149"/><text x="60.0655%" y="831.50"></text></g><g><title>core::hash::BuildHasher::hash_one (149 samples, 0.43%)</title><rect x="59.8155%" y="805" width="0.4281%" height="15" fill="rgb(241,95,54)" fg:x="20817" fg:w="149"/><text x="60.0655%" y="815.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (92 samples, 0.26%)</title><rect x="59.9793%" y="789" width="0.2644%" height="15" fill="rgb(248,12,23)" fg:x="20874" fg:w="92"/><text x="60.2293%" y="799.50"></text></g><g><title>&lt;move_core_types::language_storage::ModuleId as core::hash::Hash&gt;::hash (92 samples, 0.26%)</title><rect x="59.9793%" y="773" width="0.2644%" height="15" fill="rgb(228,173,4)" fg:x="20874" fg:w="92"/><text x="60.2293%" y="783.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (92 samples, 0.26%)</title><rect x="59.9793%" y="757" width="0.2644%" height="15" fill="rgb(254,99,5)" fg:x="20874" fg:w="92"/><text x="60.2293%" y="767.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T (92 samples, 0.26%)</title><rect x="59.9793%" y="741" width="0.2644%" height="15" fill="rgb(212,184,17)" fg:x="20874" fg:w="92"/><text x="60.2293%" y="751.50"></text></g><g><title> N]&gt;::hash (92 samples, 0.26%)</title><rect x="59.9793%" y="725" width="0.2644%" height="15" fill="rgb(252,174,1)" fg:x="20874" fg:w="92"/><text x="60.2293%" y="735.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (92 samples, 0.26%)</title><rect x="59.9793%" y="709" width="0.2644%" height="15" fill="rgb(241,118,51)" fg:x="20874" fg:w="92"/><text x="60.2293%" y="719.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (92 samples, 0.26%)</title><rect x="59.9793%" y="693" width="0.2644%" height="15" fill="rgb(227,94,47)" fg:x="20874" fg:w="92"/><text x="60.2293%" y="703.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (92 samples, 0.26%)</title><rect x="59.9793%" y="677" width="0.2644%" height="15" fill="rgb(229,104,2)" fg:x="20874" fg:w="92"/><text x="60.2293%" y="687.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (92 samples, 0.26%)</title><rect x="59.9793%" y="661" width="0.2644%" height="15" fill="rgb(219,28,31)" fg:x="20874" fg:w="92"/><text x="60.2293%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (92 samples, 0.26%)</title><rect x="59.9793%" y="645" width="0.2644%" height="15" fill="rgb(233,109,36)" fg:x="20874" fg:w="92"/><text x="60.2293%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (92 samples, 0.26%)</title><rect x="59.9793%" y="629" width="0.2644%" height="15" fill="rgb(246,88,11)" fg:x="20874" fg:w="92"/><text x="60.2293%" y="639.50"></text></g><g><title>move_vm_runtime::interpreter::Frame::resolver (275 samples, 0.79%)</title><rect x="59.8012%" y="933" width="0.7902%" height="15" fill="rgb(209,212,17)" fg:x="20812" fg:w="275"/><text x="60.0512%" y="943.50"></text></g><g><title>move_vm_runtime::loader::Function::get_resolver (270 samples, 0.78%)</title><rect x="59.8155%" y="917" width="0.7758%" height="15" fill="rgb(243,59,29)" fg:x="20817" fg:w="270"/><text x="60.0655%" y="927.50"></text></g><g><title>move_vm_runtime::loader::Loader::get_module (270 samples, 0.78%)</title><rect x="59.8155%" y="901" width="0.7758%" height="15" fill="rgb(244,205,48)" fg:x="20817" fg:w="270"/><text x="60.0655%" y="911.50"></text></g><g><title>move_vm_runtime::loader::BinaryCache&lt;K,V&gt;::get (270 samples, 0.78%)</title><rect x="59.8155%" y="885" width="0.7758%" height="15" fill="rgb(227,30,6)" fg:x="20817" fg:w="270"/><text x="60.0655%" y="895.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (270 samples, 0.78%)</title><rect x="59.8155%" y="869" width="0.7758%" height="15" fill="rgb(220,205,48)" fg:x="20817" fg:w="270"/><text x="60.0655%" y="879.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (270 samples, 0.78%)</title><rect x="59.8155%" y="853" width="0.7758%" height="15" fill="rgb(250,94,14)" fg:x="20817" fg:w="270"/><text x="60.0655%" y="863.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (270 samples, 0.78%)</title><rect x="59.8155%" y="837" width="0.7758%" height="15" fill="rgb(216,119,42)" fg:x="20817" fg:w="270"/><text x="60.0655%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (121 samples, 0.35%)</title><rect x="60.2437%" y="821" width="0.3477%" height="15" fill="rgb(232,155,0)" fg:x="20966" fg:w="121"/><text x="60.4937%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (121 samples, 0.35%)</title><rect x="60.2437%" y="805" width="0.3477%" height="15" fill="rgb(212,24,32)" fg:x="20966" fg:w="121"/><text x="60.4937%" y="815.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (121 samples, 0.35%)</title><rect x="60.2437%" y="789" width="0.3477%" height="15" fill="rgb(216,69,20)" fg:x="20966" fg:w="121"/><text x="60.4937%" y="799.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (121 samples, 0.35%)</title><rect x="60.2437%" y="773" width="0.3477%" height="15" fill="rgb(229,73,31)" fg:x="20966" fg:w="121"/><text x="60.4937%" y="783.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (121 samples, 0.35%)</title><rect x="60.2437%" y="757" width="0.3477%" height="15" fill="rgb(224,219,20)" fg:x="20966" fg:w="121"/><text x="60.4937%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.01%)</title><rect x="60.7781%" y="837" width="0.0115%" height="15" fill="rgb(215,146,41)" fg:x="21152" fg:w="4"/><text x="61.0281%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.01%)</title><rect x="60.7781%" y="821" width="0.0115%" height="15" fill="rgb(244,71,31)" fg:x="21152" fg:w="4"/><text x="61.0281%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (4 samples, 0.01%)</title><rect x="60.7781%" y="805" width="0.0115%" height="15" fill="rgb(224,24,11)" fg:x="21152" fg:w="4"/><text x="61.0281%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.01%)</title><rect x="60.7781%" y="789" width="0.0115%" height="15" fill="rgb(229,76,15)" fg:x="21152" fg:w="4"/><text x="61.0281%" y="799.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.01%)</title><rect x="60.7781%" y="773" width="0.0115%" height="15" fill="rgb(209,93,2)" fg:x="21152" fg:w="4"/><text x="61.0281%" y="783.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.01%)</title><rect x="60.7781%" y="757" width="0.0115%" height="15" fill="rgb(216,200,50)" fg:x="21152" fg:w="4"/><text x="61.0281%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (15 samples, 0.04%)</title><rect x="60.7695%" y="901" width="0.0431%" height="15" fill="rgb(211,67,34)" fg:x="21149" fg:w="15"/><text x="61.0195%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (15 samples, 0.04%)</title><rect x="60.7695%" y="885" width="0.0431%" height="15" fill="rgb(225,87,47)" fg:x="21149" fg:w="15"/><text x="61.0195%" y="895.50"></text></g><g><title>alloc::slice::hack::to_vec (15 samples, 0.04%)</title><rect x="60.7695%" y="869" width="0.0431%" height="15" fill="rgb(217,185,16)" fg:x="21149" fg:w="15"/><text x="61.0195%" y="879.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (15 samples, 0.04%)</title><rect x="60.7695%" y="853" width="0.0431%" height="15" fill="rgb(205,0,0)" fg:x="21149" fg:w="15"/><text x="61.0195%" y="863.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (8 samples, 0.02%)</title><rect x="60.7896%" y="837" width="0.0230%" height="15" fill="rgb(207,116,45)" fg:x="21156" fg:w="8"/><text x="61.0396%" y="847.50"></text></g><g><title>&lt;aptos_gas::gas_meter::AptosGasMeter as move_vm_types::gas::GasMeter&gt;::charge_native_function (6 samples, 0.02%)</title><rect x="60.8126%" y="901" width="0.0172%" height="15" fill="rgb(221,156,26)" fg:x="21164" fg:w="6"/><text x="61.0626%" y="911.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.02%)</title><rect x="60.8126%" y="885" width="0.0172%" height="15" fill="rgb(213,140,4)" fg:x="21164" fg:w="6"/><text x="61.0626%" y="895.50"></text></g><g><title>&lt;aptos_gas::gas_meter::AptosGasMeter as move_vm_types::gas::GasMeter&gt;::charge_native_function::{{closure}} (6 samples, 0.02%)</title><rect x="60.8126%" y="869" width="0.0172%" height="15" fill="rgb(231,224,15)" fg:x="21164" fg:w="6"/><text x="61.0626%" y="879.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_heap_size (6 samples, 0.02%)</title><rect x="60.8126%" y="853" width="0.0172%" height="15" fill="rgb(244,76,20)" fg:x="21164" fg:w="6"/><text x="61.0626%" y="863.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_value_size (4 samples, 0.01%)</title><rect x="60.8183%" y="837" width="0.0115%" height="15" fill="rgb(238,117,7)" fg:x="21166" fg:w="4"/><text x="61.0683%" y="847.50"></text></g><g><title>&lt;&amp;T as move_vm_types::views::ValueView&gt;::visit (4 samples, 0.01%)</title><rect x="60.8183%" y="821" width="0.0115%" height="15" fill="rgb(235,1,10)" fg:x="21166" fg:w="4"/><text x="61.0683%" y="831.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::views::ValueView&gt;::visit (4 samples, 0.01%)</title><rect x="60.8183%" y="805" width="0.0115%" height="15" fill="rgb(216,165,6)" fg:x="21166" fg:w="4"/><text x="61.0683%" y="815.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::ValueImpl as move_vm_types::views::ValueView&gt;::visit (4 samples, 0.01%)</title><rect x="60.8183%" y="789" width="0.0115%" height="15" fill="rgb(246,91,35)" fg:x="21166" fg:w="4"/><text x="61.0683%" y="799.50"></text></g><g><title>move_vm_types::values::values_impl::Container::visit_impl (4 samples, 0.01%)</title><rect x="60.8183%" y="773" width="0.0115%" height="15" fill="rgb(228,96,24)" fg:x="21166" fg:w="4"/><text x="61.0683%" y="783.50"></text></g><g><title>&lt;aptos_gas::gas_meter::AptosGasMeter as move_vm_types::gas::GasMeter&gt;::charge_native_function_before_execution (6 samples, 0.02%)</title><rect x="60.8298%" y="901" width="0.0172%" height="15" fill="rgb(254,217,53)" fg:x="21170" fg:w="6"/><text x="61.0798%" y="911.50"></text></g><g><title>&lt;alloc::collections::vec_deque::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.02%)</title><rect x="60.8298%" y="885" width="0.0172%" height="15" fill="rgb(209,60,0)" fg:x="21170" fg:w="6"/><text x="61.0798%" y="895.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.02%)</title><rect x="60.8298%" y="869" width="0.0172%" height="15" fill="rgb(250,93,26)" fg:x="21170" fg:w="6"/><text x="61.0798%" y="879.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="60.8471%" y="901" width="0.0115%" height="15" fill="rgb(211,9,40)" fg:x="21176" fg:w="4"/><text x="61.0971%" y="911.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (4 samples, 0.01%)</title><rect x="60.8471%" y="885" width="0.0115%" height="15" fill="rgb(242,57,20)" fg:x="21176" fg:w="4"/><text x="61.0971%" y="895.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (4 samples, 0.01%)</title><rect x="60.8471%" y="869" width="0.0115%" height="15" fill="rgb(248,85,48)" fg:x="21176" fg:w="4"/><text x="61.0971%" y="879.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple_mut (4 samples, 0.01%)</title><rect x="60.8471%" y="853" width="0.0115%" height="15" fill="rgb(212,117,2)" fg:x="21176" fg:w="4"/><text x="61.0971%" y="863.50"></text></g><g><title>smallvec::SmallVecData&lt;A&gt;::inline_mut (4 samples, 0.01%)</title><rect x="60.8471%" y="837" width="0.0115%" height="15" fill="rgb(243,19,3)" fg:x="21176" fg:w="4"/><text x="61.0971%" y="847.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::as_mut_ptr (4 samples, 0.01%)</title><rect x="60.8471%" y="821" width="0.0115%" height="15" fill="rgb(232,217,24)" fg:x="21176" fg:w="4"/><text x="61.0971%" y="831.50"></text></g><g><title>__rust_dealloc (4 samples, 0.01%)</title><rect x="60.8586%" y="901" width="0.0115%" height="15" fill="rgb(224,175,40)" fg:x="21180" fg:w="4"/><text x="61.1086%" y="911.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (4 samples, 0.01%)</title><rect x="60.8586%" y="885" width="0.0115%" height="15" fill="rgb(212,162,32)" fg:x="21180" fg:w="4"/><text x="61.1086%" y="895.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.01%)</title><rect x="60.8758%" y="837" width="0.0115%" height="15" fill="rgb(215,9,4)" fg:x="21186" fg:w="4"/><text x="61.1258%" y="847.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::push_front (9 samples, 0.03%)</title><rect x="60.8701%" y="901" width="0.0259%" height="15" fill="rgb(242,42,7)" fg:x="21184" fg:w="9"/><text x="61.1201%" y="911.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::grow (9 samples, 0.03%)</title><rect x="60.8701%" y="885" width="0.0259%" height="15" fill="rgb(242,184,45)" fg:x="21184" fg:w="9"/><text x="61.1201%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (7 samples, 0.02%)</title><rect x="60.8758%" y="869" width="0.0201%" height="15" fill="rgb(228,111,51)" fg:x="21186" fg:w="7"/><text x="61.1258%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (7 samples, 0.02%)</title><rect x="60.8758%" y="853" width="0.0201%" height="15" fill="rgb(236,147,17)" fg:x="21186" fg:w="7"/><text x="61.1258%" y="863.50"></text></g><g><title>aptos_aggregator::aggregator_extension::AggregatorData::get_aggregator (9 samples, 0.03%)</title><rect x="60.9247%" y="869" width="0.0259%" height="15" fill="rgb(210,75,22)" fg:x="21203" fg:w="9"/><text x="61.1747%" y="879.50"></text></g><g><title>alloc::collections::btree::map::entry::Entry&lt;K,V,A&gt;::or_insert_with (7 samples, 0.02%)</title><rect x="60.9304%" y="853" width="0.0201%" height="15" fill="rgb(217,159,45)" fg:x="21205" fg:w="7"/><text x="61.1804%" y="863.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (7 samples, 0.02%)</title><rect x="60.9304%" y="837" width="0.0201%" height="15" fill="rgb(245,165,53)" fg:x="21205" fg:w="7"/><text x="61.1804%" y="847.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (6 samples, 0.02%)</title><rect x="60.9735%" y="773" width="0.0172%" height="15" fill="rgb(251,190,50)" fg:x="21220" fg:w="6"/><text x="61.2235%" y="783.50"></text></g><g><title>move_vm_types::values::values_impl::Reference::read_ref (7 samples, 0.02%)</title><rect x="60.9735%" y="821" width="0.0201%" height="15" fill="rgb(208,203,29)" fg:x="21220" fg:w="7"/><text x="61.2235%" y="831.50"></text></g><g><title>move_vm_types::values::values_impl::ReferenceImpl::read_ref (7 samples, 0.02%)</title><rect x="60.9735%" y="805" width="0.0201%" height="15" fill="rgb(207,209,35)" fg:x="21220" fg:w="7"/><text x="61.2235%" y="815.50"></text></g><g><title>move_vm_types::values::values_impl::IndexedRef::read_ref (7 samples, 0.02%)</title><rect x="60.9735%" y="789" width="0.0201%" height="15" fill="rgb(230,144,49)" fg:x="21220" fg:w="7"/><text x="61.2235%" y="799.50"></text></g><g><title>move_vm_types::values::values_impl::StructRef::borrow_field (7 samples, 0.02%)</title><rect x="60.9936%" y="821" width="0.0201%" height="15" fill="rgb(229,31,6)" fg:x="21227" fg:w="7"/><text x="61.2436%" y="831.50"></text></g><g><title>move_vm_types::values::values_impl::ContainerRef::borrow_elem (4 samples, 0.01%)</title><rect x="61.0022%" y="805" width="0.0115%" height="15" fill="rgb(251,129,24)" fg:x="21230" fg:w="4"/><text x="61.2522%" y="815.50"></text></g><g><title>aptos_framework::natives::aggregator_natives::helpers::aggregator_info (25 samples, 0.07%)</title><rect x="60.9505%" y="869" width="0.0718%" height="15" fill="rgb(235,105,15)" fg:x="21212" fg:w="25"/><text x="61.2005%" y="879.50"></text></g><g><title>aptos_framework::natives::aggregator_natives::helpers::get_aggregator_fields (18 samples, 0.05%)</title><rect x="60.9706%" y="853" width="0.0517%" height="15" fill="rgb(216,52,43)" fg:x="21219" fg:w="18"/><text x="61.2206%" y="863.50"></text></g><g><title>aptos_framework::natives::aggregator_natives::helpers::get_aggregator_field (18 samples, 0.05%)</title><rect x="60.9706%" y="837" width="0.0517%" height="15" fill="rgb(238,144,41)" fg:x="21219" fg:w="18"/><text x="61.2206%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::StructRef&gt; (5 samples, 0.01%)</title><rect x="61.0310%" y="869" width="0.0144%" height="15" fill="rgb(243,63,9)" fg:x="21240" fg:w="5"/><text x="61.2810%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::ContainerRef&gt; (5 samples, 0.01%)</title><rect x="61.0310%" y="853" width="0.0144%" height="15" fill="rgb(246,208,1)" fg:x="21240" fg:w="5"/><text x="61.2810%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (5 samples, 0.01%)</title><rect x="61.0310%" y="837" width="0.0144%" height="15" fill="rgb(233,182,18)" fg:x="21240" fg:w="5"/><text x="61.2810%" y="847.50"></text></g><g><title>hashbrown::map::make_hash (5 samples, 0.01%)</title><rect x="61.0540%" y="805" width="0.0144%" height="15" fill="rgb(242,224,8)" fg:x="21248" fg:w="5"/><text x="61.3040%" y="815.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5 samples, 0.01%)</title><rect x="61.0540%" y="789" width="0.0144%" height="15" fill="rgb(243,54,37)" fg:x="21248" fg:w="5"/><text x="61.3040%" y="799.50"></text></g><g><title>move_vm_runtime::native_extensions::NativeContextExtensions::get (18 samples, 0.05%)</title><rect x="61.0453%" y="869" width="0.0517%" height="15" fill="rgb(233,192,12)" fg:x="21245" fg:w="18"/><text x="61.2953%" y="879.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (15 samples, 0.04%)</title><rect x="61.0540%" y="853" width="0.0431%" height="15" fill="rgb(251,192,53)" fg:x="21248" fg:w="15"/><text x="61.3040%" y="863.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (15 samples, 0.04%)</title><rect x="61.0540%" y="837" width="0.0431%" height="15" fill="rgb(246,141,26)" fg:x="21248" fg:w="15"/><text x="61.3040%" y="847.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (15 samples, 0.04%)</title><rect x="61.0540%" y="821" width="0.0431%" height="15" fill="rgb(239,195,19)" fg:x="21248" fg:w="15"/><text x="61.3040%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (10 samples, 0.03%)</title><rect x="61.0683%" y="805" width="0.0287%" height="15" fill="rgb(241,16,39)" fg:x="21253" fg:w="10"/><text x="61.3183%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (10 samples, 0.03%)</title><rect x="61.0683%" y="789" width="0.0287%" height="15" fill="rgb(223,13,53)" fg:x="21253" fg:w="10"/><text x="61.3183%" y="799.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (10 samples, 0.03%)</title><rect x="61.0683%" y="773" width="0.0287%" height="15" fill="rgb(214,227,0)" fg:x="21253" fg:w="10"/><text x="61.3183%" y="783.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (10 samples, 0.03%)</title><rect x="61.0683%" y="757" width="0.0287%" height="15" fill="rgb(228,103,26)" fg:x="21253" fg:w="10"/><text x="61.3183%" y="767.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (10 samples, 0.03%)</title><rect x="61.0683%" y="741" width="0.0287%" height="15" fill="rgb(254,177,53)" fg:x="21253" fg:w="10"/><text x="61.3183%" y="751.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (10 samples, 0.03%)</title><rect x="61.0683%" y="725" width="0.0287%" height="15" fill="rgb(208,201,34)" fg:x="21253" fg:w="10"/><text x="61.3183%" y="735.50"></text></g><g><title>aptos_framework::natives::aggregator_natives::aggregator::make_native_add::{{closure}} (73 samples, 0.21%)</title><rect x="60.8959%" y="901" width="0.2098%" height="15" fill="rgb(212,39,5)" fg:x="21193" fg:w="73"/><text x="61.1459%" y="911.50"></text></g><g><title>aptos_framework::natives::aggregator_natives::aggregator::native_add (65 samples, 0.19%)</title><rect x="60.9189%" y="885" width="0.1868%" height="15" fill="rgb(246,117,3)" fg:x="21201" fg:w="65"/><text x="61.1689%" y="895.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (6 samples, 0.02%)</title><rect x="61.1057%" y="869" width="0.0172%" height="15" fill="rgb(244,118,39)" fg:x="21266" fg:w="6"/><text x="61.3557%" y="879.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (4 samples, 0.01%)</title><rect x="61.1258%" y="869" width="0.0115%" height="15" fill="rgb(241,64,10)" fg:x="21273" fg:w="4"/><text x="61.3758%" y="879.50"></text></g><g><title>aptos_block_executor::natives::aptos_natives::{{closure}} (4 samples, 0.01%)</title><rect x="61.1258%" y="853" width="0.0115%" height="15" fill="rgb(229,39,44)" fg:x="21273" fg:w="4"/><text x="61.3758%" y="863.50"></text></g><g><title>aptos_gas::misc::AbstractValueSizeGasParameters::abstract_value_size (4 samples, 0.01%)</title><rect x="61.1258%" y="837" width="0.0115%" height="15" fill="rgb(230,226,3)" fg:x="21273" fg:w="4"/><text x="61.3758%" y="847.50"></text></g><g><title>&lt;&amp;T as move_vm_types::views::ValueView&gt;::visit (4 samples, 0.01%)</title><rect x="61.1258%" y="821" width="0.0115%" height="15" fill="rgb(222,13,42)" fg:x="21273" fg:w="4"/><text x="61.3758%" y="831.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::views::ValueView&gt;::visit (4 samples, 0.01%)</title><rect x="61.1258%" y="805" width="0.0115%" height="15" fill="rgb(247,180,54)" fg:x="21273" fg:w="4"/><text x="61.3758%" y="815.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::ValueImpl as move_vm_types::views::ValueView&gt;::visit (4 samples, 0.01%)</title><rect x="61.1258%" y="789" width="0.0115%" height="15" fill="rgb(205,96,16)" fg:x="21273" fg:w="4"/><text x="61.3758%" y="799.50"></text></g><g><title>move_vm_types::values::values_impl::ValueImpl::visit_impl (4 samples, 0.01%)</title><rect x="61.1258%" y="773" width="0.0115%" height="15" fill="rgb(205,100,21)" fg:x="21273" fg:w="4"/><text x="61.3758%" y="783.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::cast (5 samples, 0.01%)</title><rect x="61.1459%" y="821" width="0.0144%" height="15" fill="rgb(248,51,4)" fg:x="21280" fg:w="5"/><text x="61.3959%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (10 samples, 0.03%)</title><rect x="61.1373%" y="869" width="0.0287%" height="15" fill="rgb(217,197,30)" fg:x="21277" fg:w="10"/><text x="61.3873%" y="879.50"></text></g><g><title>aptos_framework::natives::event::native_write_to_event_store::{{closure}} (10 samples, 0.03%)</title><rect x="61.1373%" y="853" width="0.0287%" height="15" fill="rgb(240,179,40)" fg:x="21277" fg:w="10"/><text x="61.3873%" y="863.50"></text></g><g><title>move_vm_types::values::values_impl::Value::value_as (10 samples, 0.03%)</title><rect x="61.1373%" y="837" width="0.0287%" height="15" fill="rgb(212,185,35)" fg:x="21277" fg:w="10"/><text x="61.3873%" y="847.50"></text></g><g><title>move_vm_runtime::native_functions::NativeContext::save_event (23 samples, 0.07%)</title><rect x="61.1746%" y="869" width="0.0661%" height="15" fill="rgb(251,222,31)" fg:x="21290" fg:w="23"/><text x="61.4246%" y="879.50"></text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::emit_event (21 samples, 0.06%)</title><rect x="61.1804%" y="853" width="0.0603%" height="15" fill="rgb(208,140,36)" fg:x="21292" fg:w="21"/><text x="61.4304%" y="863.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout (18 samples, 0.05%)</title><rect x="61.1890%" y="837" width="0.0517%" height="15" fill="rgb(220,148,1)" fg:x="21295" fg:w="18"/><text x="61.4390%" y="847.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout_impl (18 samples, 0.05%)</title><rect x="61.1890%" y="821" width="0.0517%" height="15" fill="rgb(254,4,28)" fg:x="21295" fg:w="18"/><text x="61.4390%" y="831.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_layout (16 samples, 0.05%)</title><rect x="61.1948%" y="805" width="0.0460%" height="15" fill="rgb(222,185,44)" fg:x="21297" fg:w="16"/><text x="61.4448%" y="815.50"></text></g><g><title>aptos_framework::natives::event::make_native_write_to_event_store::{{closure}} (48 samples, 0.14%)</title><rect x="61.1057%" y="901" width="0.1379%" height="15" fill="rgb(215,74,39)" fg:x="21266" fg:w="48"/><text x="61.3557%" y="911.50"></text></g><g><title>aptos_framework::natives::event::native_write_to_event_store (48 samples, 0.14%)</title><rect x="61.1057%" y="885" width="0.1379%" height="15" fill="rgb(247,86,4)" fg:x="21266" fg:w="48"/><text x="61.3557%" y="895.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (8 samples, 0.02%)</title><rect x="61.2666%" y="741" width="0.0230%" height="15" fill="rgb(231,105,32)" fg:x="21322" fg:w="8"/><text x="61.5166%" y="751.50"></text></g><g><title>alloc::string::String::push_str (8 samples, 0.02%)</title><rect x="61.2666%" y="725" width="0.0230%" height="15" fill="rgb(222,65,35)" fg:x="21322" fg:w="8"/><text x="61.5166%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (8 samples, 0.02%)</title><rect x="61.2666%" y="709" width="0.0230%" height="15" fill="rgb(218,145,35)" fg:x="21322" fg:w="8"/><text x="61.5166%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (8 samples, 0.02%)</title><rect x="61.2666%" y="693" width="0.0230%" height="15" fill="rgb(208,7,15)" fg:x="21322" fg:w="8"/><text x="61.5166%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (8 samples, 0.02%)</title><rect x="61.2666%" y="677" width="0.0230%" height="15" fill="rgb(209,83,13)" fg:x="21322" fg:w="8"/><text x="61.5166%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (8 samples, 0.02%)</title><rect x="61.2666%" y="661" width="0.0230%" height="15" fill="rgb(218,3,10)" fg:x="21322" fg:w="8"/><text x="61.5166%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (8 samples, 0.02%)</title><rect x="61.2666%" y="645" width="0.0230%" height="15" fill="rgb(211,219,4)" fg:x="21322" fg:w="8"/><text x="61.5166%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (7 samples, 0.02%)</title><rect x="61.2695%" y="629" width="0.0201%" height="15" fill="rgb(228,194,12)" fg:x="21323" fg:w="7"/><text x="61.5195%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 0.02%)</title><rect x="61.2723%" y="613" width="0.0172%" height="15" fill="rgb(210,175,7)" fg:x="21324" fg:w="6"/><text x="61.5223%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.02%)</title><rect x="61.2723%" y="597" width="0.0172%" height="15" fill="rgb(243,132,6)" fg:x="21324" fg:w="6"/><text x="61.5223%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (5 samples, 0.01%)</title><rect x="61.3039%" y="581" width="0.0144%" height="15" fill="rgb(207,72,18)" fg:x="21335" fg:w="5"/><text x="61.5539%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5 samples, 0.01%)</title><rect x="61.3039%" y="565" width="0.0144%" height="15" fill="rgb(236,1,18)" fg:x="21335" fg:w="5"/><text x="61.5539%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.01%)</title><rect x="61.3039%" y="549" width="0.0144%" height="15" fill="rgb(227,0,18)" fg:x="21335" fg:w="5"/><text x="61.5539%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.01%)</title><rect x="61.3039%" y="533" width="0.0144%" height="15" fill="rgb(247,37,5)" fg:x="21335" fg:w="5"/><text x="61.5539%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.01%)</title><rect x="61.3068%" y="517" width="0.0115%" height="15" fill="rgb(237,179,24)" fg:x="21336" fg:w="4"/><text x="61.5568%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (4 samples, 0.01%)</title><rect x="61.3068%" y="501" width="0.0115%" height="15" fill="rgb(226,53,20)" fg:x="21336" fg:w="4"/><text x="61.5568%" y="511.50"></text></g><g><title>alloc::alloc::Global::grow_impl (4 samples, 0.01%)</title><rect x="61.3068%" y="485" width="0.0115%" height="15" fill="rgb(247,75,7)" fg:x="21336" fg:w="4"/><text x="61.5568%" y="495.50"></text></g><g><title>alloc::alloc::realloc (4 samples, 0.01%)</title><rect x="61.3068%" y="469" width="0.0115%" height="15" fill="rgb(233,96,12)" fg:x="21336" fg:w="4"/><text x="61.5568%" y="479.50"></text></g><g><title>rallocx (4 samples, 0.01%)</title><rect x="61.3068%" y="453" width="0.0115%" height="15" fill="rgb(224,125,0)" fg:x="21336" fg:w="4"/><text x="61.5568%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (7 samples, 0.02%)</title><rect x="61.3039%" y="661" width="0.0201%" height="15" fill="rgb(224,92,25)" fg:x="21335" fg:w="7"/><text x="61.5539%" y="671.50"></text></g><g><title>alloc::string::String::push_str (7 samples, 0.02%)</title><rect x="61.3039%" y="645" width="0.0201%" height="15" fill="rgb(224,42,24)" fg:x="21335" fg:w="7"/><text x="61.5539%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (7 samples, 0.02%)</title><rect x="61.3039%" y="629" width="0.0201%" height="15" fill="rgb(234,132,49)" fg:x="21335" fg:w="7"/><text x="61.5539%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (7 samples, 0.02%)</title><rect x="61.3039%" y="613" width="0.0201%" height="15" fill="rgb(248,100,35)" fg:x="21335" fg:w="7"/><text x="61.5539%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (7 samples, 0.02%)</title><rect x="61.3039%" y="597" width="0.0201%" height="15" fill="rgb(239,94,40)" fg:x="21335" fg:w="7"/><text x="61.5539%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_fmt (22 samples, 0.06%)</title><rect x="61.2637%" y="773" width="0.0632%" height="15" fill="rgb(235,139,28)" fg:x="21321" fg:w="22"/><text x="61.5137%" y="783.50"></text></g><g><title>core::fmt::write (22 samples, 0.06%)</title><rect x="61.2637%" y="757" width="0.0632%" height="15" fill="rgb(217,144,7)" fg:x="21321" fg:w="22"/><text x="61.5137%" y="767.50"></text></g><g><title>core::fmt::rt::Argument::fmt (10 samples, 0.03%)</title><rect x="61.2982%" y="741" width="0.0287%" height="15" fill="rgb(227,55,4)" fg:x="21333" fg:w="10"/><text x="61.5482%" y="751.50"></text></g><g><title>&lt;move_core_types::identifier::Identifier as core::fmt::Display&gt;::fmt (9 samples, 0.03%)</title><rect x="61.3011%" y="725" width="0.0259%" height="15" fill="rgb(252,82,54)" fg:x="21334" fg:w="9"/><text x="61.5511%" y="735.50"></text></g><g><title>core::fmt::Formatter::write_fmt (9 samples, 0.03%)</title><rect x="61.3011%" y="709" width="0.0259%" height="15" fill="rgb(245,172,4)" fg:x="21334" fg:w="9"/><text x="61.5511%" y="719.50"></text></g><g><title>core::fmt::write (9 samples, 0.03%)</title><rect x="61.3011%" y="693" width="0.0259%" height="15" fill="rgb(207,26,27)" fg:x="21334" fg:w="9"/><text x="61.5511%" y="703.50"></text></g><g><title>core::fmt::rt::Argument::fmt (9 samples, 0.03%)</title><rect x="61.3011%" y="677" width="0.0259%" height="15" fill="rgb(252,98,18)" fg:x="21334" fg:w="9"/><text x="61.5511%" y="687.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim_start_matches (5 samples, 0.01%)</title><rect x="61.3298%" y="757" width="0.0144%" height="15" fill="rgb(244,8,26)" fg:x="21344" fg:w="5"/><text x="61.5798%" y="767.50"></text></g><g><title>core::str::pattern::Searcher::next_reject (5 samples, 0.01%)</title><rect x="61.3298%" y="741" width="0.0144%" height="15" fill="rgb(237,173,45)" fg:x="21344" fg:w="5"/><text x="61.5798%" y="751.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next (5 samples, 0.01%)</title><rect x="61.3298%" y="725" width="0.0144%" height="15" fill="rgb(208,213,49)" fg:x="21344" fg:w="5"/><text x="61.5798%" y="735.50"></text></g><g><title>alloc::string::String::reserve (5 samples, 0.01%)</title><rect x="61.3470%" y="661" width="0.0144%" height="15" fill="rgb(212,122,37)" fg:x="21350" fg:w="5"/><text x="61.5970%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (5 samples, 0.01%)</title><rect x="61.3470%" y="645" width="0.0144%" height="15" fill="rgb(213,80,17)" fg:x="21350" fg:w="5"/><text x="61.5970%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5 samples, 0.01%)</title><rect x="61.3470%" y="629" width="0.0144%" height="15" fill="rgb(206,210,43)" fg:x="21350" fg:w="5"/><text x="61.5970%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.01%)</title><rect x="61.3470%" y="613" width="0.0144%" height="15" fill="rgb(229,214,3)" fg:x="21350" fg:w="5"/><text x="61.5970%" y="623.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.03%)</title><rect x="61.3614%" y="629" width="0.0316%" height="15" fill="rgb(235,213,29)" fg:x="21355" fg:w="11"/><text x="61.6114%" y="639.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (11 samples, 0.03%)</title><rect x="61.3614%" y="613" width="0.0316%" height="15" fill="rgb(248,135,26)" fg:x="21355" fg:w="11"/><text x="61.6114%" y="623.50"></text></g><g><title>&lt;hex::BytesToHexChars as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (11 samples, 0.03%)</title><rect x="61.3614%" y="597" width="0.0316%" height="15" fill="rgb(242,188,12)" fg:x="21355" fg:w="11"/><text x="61.6114%" y="607.50"></text></g><g><title>move_core_types::account_address::AccountAddress::short_str_lossless (29 samples, 0.08%)</title><rect x="61.3269%" y="773" width="0.0833%" height="15" fill="rgb(245,38,12)" fg:x="21343" fg:w="29"/><text x="61.5769%" y="783.50"></text></g><g><title>hex::encode (23 samples, 0.07%)</title><rect x="61.3442%" y="757" width="0.0661%" height="15" fill="rgb(218,42,13)" fg:x="21349" fg:w="23"/><text x="61.5942%" y="767.50"></text></g><g><title>&lt;T as hex::ToHex&gt;::encode_hex (23 samples, 0.07%)</title><rect x="61.3442%" y="741" width="0.0661%" height="15" fill="rgb(238,132,49)" fg:x="21349" fg:w="23"/><text x="61.5942%" y="751.50"></text></g><g><title>hex::encode_to_iter (23 samples, 0.07%)</title><rect x="61.3442%" y="725" width="0.0661%" height="15" fill="rgb(209,196,19)" fg:x="21349" fg:w="23"/><text x="61.5942%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (23 samples, 0.07%)</title><rect x="61.3442%" y="709" width="0.0661%" height="15" fill="rgb(244,131,22)" fg:x="21349" fg:w="23"/><text x="61.5942%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (23 samples, 0.07%)</title><rect x="61.3442%" y="693" width="0.0661%" height="15" fill="rgb(223,18,34)" fg:x="21349" fg:w="23"/><text x="61.5942%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (23 samples, 0.07%)</title><rect x="61.3442%" y="677" width="0.0661%" height="15" fill="rgb(252,124,54)" fg:x="21349" fg:w="23"/><text x="61.5942%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (17 samples, 0.05%)</title><rect x="61.3614%" y="661" width="0.0488%" height="15" fill="rgb(229,106,42)" fg:x="21355" fg:w="17"/><text x="61.6114%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (17 samples, 0.05%)</title><rect x="61.3614%" y="645" width="0.0488%" height="15" fill="rgb(221,129,1)" fg:x="21355" fg:w="17"/><text x="61.6114%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (6 samples, 0.02%)</title><rect x="61.3930%" y="629" width="0.0172%" height="15" fill="rgb(229,74,15)" fg:x="21366" fg:w="6"/><text x="61.6430%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend::{{closure}} (6 samples, 0.02%)</title><rect x="61.3930%" y="613" width="0.0172%" height="15" fill="rgb(210,206,50)" fg:x="21366" fg:w="6"/><text x="61.6430%" y="623.50"></text></g><g><title>alloc::string::String::push (6 samples, 0.02%)</title><rect x="61.3930%" y="597" width="0.0172%" height="15" fill="rgb(251,114,31)" fg:x="21366" fg:w="6"/><text x="61.6430%" y="607.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::len_utf8 (6 samples, 0.02%)</title><rect x="61.3930%" y="581" width="0.0172%" height="15" fill="rgb(215,225,28)" fg:x="21366" fg:w="6"/><text x="61.6430%" y="591.50"></text></g><g><title>core::char::methods::len_utf8 (6 samples, 0.02%)</title><rect x="61.3930%" y="565" width="0.0172%" height="15" fill="rgb(237,109,14)" fg:x="21366" fg:w="6"/><text x="61.6430%" y="575.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (59 samples, 0.17%)</title><rect x="61.2436%" y="869" width="0.1695%" height="15" fill="rgb(230,13,37)" fg:x="21314" fg:w="59"/><text x="61.4936%" y="879.50"></text></g><g><title>&lt;move_core_types::language_storage::TypeTag as core::fmt::Display&gt;::fmt (59 samples, 0.17%)</title><rect x="61.2436%" y="853" width="0.1695%" height="15" fill="rgb(231,40,28)" fg:x="21314" fg:w="59"/><text x="61.4936%" y="863.50"></text></g><g><title>core::fmt::Formatter::write_fmt (56 samples, 0.16%)</title><rect x="61.2522%" y="837" width="0.1609%" height="15" fill="rgb(231,202,18)" fg:x="21317" fg:w="56"/><text x="61.5022%" y="847.50"></text></g><g><title>core::fmt::write (56 samples, 0.16%)</title><rect x="61.2522%" y="821" width="0.1609%" height="15" fill="rgb(225,33,18)" fg:x="21317" fg:w="56"/><text x="61.5022%" y="831.50"></text></g><g><title>core::fmt::rt::Argument::fmt (53 samples, 0.15%)</title><rect x="61.2608%" y="805" width="0.1523%" height="15" fill="rgb(223,64,47)" fg:x="21320" fg:w="53"/><text x="61.5108%" y="815.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::fmt::Display&gt;::fmt (52 samples, 0.15%)</title><rect x="61.2637%" y="789" width="0.1494%" height="15" fill="rgb(234,114,13)" fg:x="21321" fg:w="52"/><text x="61.5137%" y="799.50"></text></g><g><title>aptos_framework::natives::type_info::type_of_internal (16 samples, 0.05%)</title><rect x="61.4131%" y="869" width="0.0460%" height="15" fill="rgb(248,56,40)" fg:x="21373" fg:w="16"/><text x="61.6631%" y="879.50"></text></g><g><title>move_vm_types::values::values_impl::Value::vector_u8 (9 samples, 0.03%)</title><rect x="61.4333%" y="853" width="0.0259%" height="15" fill="rgb(221,194,21)" fg:x="21380" fg:w="9"/><text x="61.6833%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (7 samples, 0.02%)</title><rect x="61.4390%" y="837" width="0.0201%" height="15" fill="rgb(242,108,46)" fg:x="21382" fg:w="7"/><text x="61.6890%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (7 samples, 0.02%)</title><rect x="61.4390%" y="821" width="0.0201%" height="15" fill="rgb(220,106,10)" fg:x="21382" fg:w="7"/><text x="61.6890%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (4 samples, 0.01%)</title><rect x="61.4706%" y="869" width="0.0115%" height="15" fill="rgb(211,88,4)" fg:x="21393" fg:w="4"/><text x="61.7206%" y="879.50"></text></g><g><title>&lt;move_core_types::language_storage::StructTag as core::clone::Clone&gt;::clone (4 samples, 0.01%)</title><rect x="61.4907%" y="805" width="0.0115%" height="15" fill="rgb(214,95,34)" fg:x="21400" fg:w="4"/><text x="61.7407%" y="815.50"></text></g><g><title>move_vm_runtime::native_functions::NativeContext::type_to_type_tag (12 samples, 0.03%)</title><rect x="61.4850%" y="869" width="0.0345%" height="15" fill="rgb(250,160,33)" fg:x="21398" fg:w="12"/><text x="61.7350%" y="879.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag (12 samples, 0.03%)</title><rect x="61.4850%" y="853" width="0.0345%" height="15" fill="rgb(225,29,10)" fg:x="21398" fg:w="12"/><text x="61.7350%" y="863.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_tag_impl (11 samples, 0.03%)</title><rect x="61.4878%" y="837" width="0.0316%" height="15" fill="rgb(224,28,30)" fg:x="21399" fg:w="11"/><text x="61.7378%" y="847.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_tag (10 samples, 0.03%)</title><rect x="61.4907%" y="821" width="0.0287%" height="15" fill="rgb(231,77,4)" fg:x="21400" fg:w="10"/><text x="61.7407%" y="831.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (6 samples, 0.02%)</title><rect x="61.5022%" y="805" width="0.0172%" height="15" fill="rgb(209,63,21)" fg:x="21404" fg:w="6"/><text x="61.7522%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (6 samples, 0.02%)</title><rect x="61.5022%" y="789" width="0.0172%" height="15" fill="rgb(226,22,11)" fg:x="21404" fg:w="6"/><text x="61.7522%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (6 samples, 0.02%)</title><rect x="61.5022%" y="773" width="0.0172%" height="15" fill="rgb(216,82,30)" fg:x="21404" fg:w="6"/><text x="61.7522%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (5 samples, 0.01%)</title><rect x="61.5051%" y="757" width="0.0144%" height="15" fill="rgb(246,227,38)" fg:x="21405" fg:w="5"/><text x="61.7551%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5 samples, 0.01%)</title><rect x="61.5051%" y="741" width="0.0144%" height="15" fill="rgb(251,203,53)" fg:x="21405" fg:w="5"/><text x="61.7551%" y="751.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (5 samples, 0.01%)</title><rect x="61.5051%" y="725" width="0.0144%" height="15" fill="rgb(254,101,1)" fg:x="21405" fg:w="5"/><text x="61.7551%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (5 samples, 0.01%)</title><rect x="61.5051%" y="709" width="0.0144%" height="15" fill="rgb(241,180,5)" fg:x="21405" fg:w="5"/><text x="61.7551%" y="719.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (5 samples, 0.01%)</title><rect x="61.5051%" y="693" width="0.0144%" height="15" fill="rgb(218,168,4)" fg:x="21405" fg:w="5"/><text x="61.7551%" y="703.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (5 samples, 0.01%)</title><rect x="61.5051%" y="677" width="0.0144%" height="15" fill="rgb(224,223,32)" fg:x="21405" fg:w="5"/><text x="61.7551%" y="687.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (5 samples, 0.01%)</title><rect x="61.5051%" y="661" width="0.0144%" height="15" fill="rgb(236,106,22)" fg:x="21405" fg:w="5"/><text x="61.7551%" y="671.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (5 samples, 0.01%)</title><rect x="61.5051%" y="645" width="0.0144%" height="15" fill="rgb(206,121,5)" fg:x="21405" fg:w="5"/><text x="61.7551%" y="655.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (5 samples, 0.01%)</title><rect x="61.5051%" y="629" width="0.0144%" height="15" fill="rgb(233,87,28)" fg:x="21405" fg:w="5"/><text x="61.7551%" y="639.50"></text></g><g><title>aptos_framework::natives::type_info::make_native_type_of::{{closure}} (98 samples, 0.28%)</title><rect x="61.2436%" y="901" width="0.2816%" height="15" fill="rgb(236,137,17)" fg:x="21314" fg:w="98"/><text x="61.4936%" y="911.50"></text></g><g><title>aptos_framework::natives::type_info::native_type_of (98 samples, 0.28%)</title><rect x="61.2436%" y="885" width="0.2816%" height="15" fill="rgb(209,183,38)" fg:x="21314" fg:w="98"/><text x="61.4936%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (7 samples, 0.02%)</title><rect x="61.5281%" y="901" width="0.0201%" height="15" fill="rgb(206,162,44)" fg:x="21413" fg:w="7"/><text x="61.7781%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (7 samples, 0.02%)</title><rect x="61.5281%" y="885" width="0.0201%" height="15" fill="rgb(237,70,39)" fg:x="21413" fg:w="7"/><text x="61.7781%" y="895.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (15 samples, 0.04%)</title><rect x="61.5539%" y="869" width="0.0431%" height="15" fill="rgb(212,176,5)" fg:x="21422" fg:w="15"/><text x="61.8039%" y="879.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4 samples, 0.01%)</title><rect x="61.6028%" y="869" width="0.0115%" height="15" fill="rgb(232,95,16)" fg:x="21439" fg:w="4"/><text x="61.8528%" y="879.50"></text></g><g><title>move_stdlib::natives::bcs::native_to_bytes::{{closure}} (4 samples, 0.01%)</title><rect x="61.6028%" y="853" width="0.0115%" height="15" fill="rgb(219,115,35)" fg:x="21439" fg:w="4"/><text x="61.8528%" y="863.50"></text></g><g><title>move_vm_types::values::values_impl::Value::value_as (4 samples, 0.01%)</title><rect x="61.6028%" y="837" width="0.0115%" height="15" fill="rgb(251,67,27)" fg:x="21439" fg:w="4"/><text x="61.8528%" y="847.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::Value as move_vm_types::values::values_impl::VMValueCast&lt;move_vm_types::values::values_impl::Reference&gt;&gt;::cast (4 samples, 0.01%)</title><rect x="61.6028%" y="821" width="0.0115%" height="15" fill="rgb(222,95,40)" fg:x="21439" fg:w="4"/><text x="61.8528%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (4 samples, 0.01%)</title><rect x="61.6229%" y="789" width="0.0115%" height="15" fill="rgb(250,35,16)" fg:x="21446" fg:w="4"/><text x="61.8729%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveStructLayout&gt; (4 samples, 0.01%)</title><rect x="61.6229%" y="773" width="0.0115%" height="15" fill="rgb(224,86,44)" fg:x="21446" fg:w="4"/><text x="61.8729%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::value::MoveTypeLayout&gt;&gt; (4 samples, 0.01%)</title><rect x="61.6229%" y="757" width="0.0115%" height="15" fill="rgb(237,53,53)" fg:x="21446" fg:w="4"/><text x="61.8729%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="61.6229%" y="741" width="0.0115%" height="15" fill="rgb(208,171,33)" fg:x="21446" fg:w="4"/><text x="61.8729%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::value::MoveTypeLayout]&gt; (4 samples, 0.01%)</title><rect x="61.6229%" y="725" width="0.0115%" height="15" fill="rgb(222,64,27)" fg:x="21446" fg:w="4"/><text x="61.8729%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveTypeLayout&gt; (10 samples, 0.03%)</title><rect x="61.6171%" y="869" width="0.0287%" height="15" fill="rgb(221,121,35)" fg:x="21444" fg:w="10"/><text x="61.8671%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_core_types::value::MoveStructLayout&gt; (10 samples, 0.03%)</title><rect x="61.6171%" y="853" width="0.0287%" height="15" fill="rgb(228,137,42)" fg:x="21444" fg:w="10"/><text x="61.8671%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_core_types::value::MoveTypeLayout&gt;&gt; (10 samples, 0.03%)</title><rect x="61.6171%" y="837" width="0.0287%" height="15" fill="rgb(227,54,21)" fg:x="21444" fg:w="10"/><text x="61.8671%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.03%)</title><rect x="61.6171%" y="821" width="0.0287%" height="15" fill="rgb(240,168,33)" fg:x="21444" fg:w="10"/><text x="61.8671%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_core_types::value::MoveTypeLayout]&gt; (10 samples, 0.03%)</title><rect x="61.6171%" y="805" width="0.0287%" height="15" fill="rgb(243,159,6)" fg:x="21444" fg:w="10"/><text x="61.8671%" y="815.50"></text></g><g><title>sdallocx (4 samples, 0.01%)</title><rect x="61.6344%" y="789" width="0.0115%" height="15" fill="rgb(205,211,41)" fg:x="21450" fg:w="4"/><text x="61.8844%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (9 samples, 0.03%)</title><rect x="61.6631%" y="741" width="0.0259%" height="15" fill="rgb(253,30,1)" fg:x="21460" fg:w="9"/><text x="61.9131%" y="751.50"></text></g><g><title>sdallocx (4 samples, 0.01%)</title><rect x="61.6775%" y="725" width="0.0115%" height="15" fill="rgb(226,80,18)" fg:x="21465" fg:w="4"/><text x="61.9275%" y="735.50"></text></g><g><title>isfree (4 samples, 0.01%)</title><rect x="61.6775%" y="709" width="0.0115%" height="15" fill="rgb(253,156,46)" fg:x="21465" fg:w="4"/><text x="61.9275%" y="719.50"></text></g><g><title>isdalloct (4 samples, 0.01%)</title><rect x="61.6775%" y="693" width="0.0115%" height="15" fill="rgb(248,87,27)" fg:x="21465" fg:w="4"/><text x="61.9275%" y="703.50"></text></g><g><title>arena_sdalloc (4 samples, 0.01%)</title><rect x="61.6775%" y="677" width="0.0115%" height="15" fill="rgb(227,122,2)" fg:x="21465" fg:w="4"/><text x="61.9275%" y="687.50"></text></g><g><title>tcache_dalloc_small (4 samples, 0.01%)</title><rect x="61.6775%" y="661" width="0.0115%" height="15" fill="rgb(229,94,39)" fg:x="21465" fg:w="4"/><text x="61.9275%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt;&gt; (11 samples, 0.03%)</title><rect x="61.6602%" y="853" width="0.0316%" height="15" fill="rgb(225,173,31)" fg:x="21459" fg:w="11"/><text x="61.9102%" y="863.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.03%)</title><rect x="61.6602%" y="837" width="0.0316%" height="15" fill="rgb(239,176,30)" fg:x="21459" fg:w="11"/><text x="61.9102%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (11 samples, 0.03%)</title><rect x="61.6602%" y="821" width="0.0316%" height="15" fill="rgb(212,104,21)" fg:x="21459" fg:w="11"/><text x="61.9102%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt;&gt; (11 samples, 0.03%)</title><rect x="61.6602%" y="805" width="0.0316%" height="15" fill="rgb(240,209,40)" fg:x="21459" fg:w="11"/><text x="61.9102%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; (11 samples, 0.03%)</title><rect x="61.6602%" y="789" width="0.0316%" height="15" fill="rgb(234,195,5)" fg:x="21459" fg:w="11"/><text x="61.9102%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.03%)</title><rect x="61.6602%" y="773" width="0.0316%" height="15" fill="rgb(238,213,1)" fg:x="21459" fg:w="11"/><text x="61.9102%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::values::values_impl::ValueImpl]&gt; (11 samples, 0.03%)</title><rect x="61.6602%" y="757" width="0.0316%" height="15" fill="rgb(235,182,54)" fg:x="21459" fg:w="11"/><text x="61.9102%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::values::values_impl::Container&gt; (15 samples, 0.04%)</title><rect x="61.6545%" y="869" width="0.0431%" height="15" fill="rgb(229,50,46)" fg:x="21457" fg:w="15"/><text x="61.9045%" y="879.50"></text></g><g><title>&lt;move_core_types::value::MoveTypeLayout as core::clone::Clone&gt;::clone (20 samples, 0.06%)</title><rect x="61.7120%" y="709" width="0.0575%" height="15" fill="rgb(219,145,13)" fg:x="21477" fg:w="20"/><text x="61.9620%" y="719.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (15 samples, 0.04%)</title><rect x="61.7263%" y="693" width="0.0431%" height="15" fill="rgb(220,226,10)" fg:x="21482" fg:w="15"/><text x="61.9763%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (13 samples, 0.04%)</title><rect x="61.7321%" y="677" width="0.0374%" height="15" fill="rgb(248,47,30)" fg:x="21484" fg:w="13"/><text x="61.9821%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (13 samples, 0.04%)</title><rect x="61.7321%" y="661" width="0.0374%" height="15" fill="rgb(231,209,44)" fg:x="21484" fg:w="13"/><text x="61.9821%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (13 samples, 0.04%)</title><rect x="61.7321%" y="645" width="0.0374%" height="15" fill="rgb(209,80,30)" fg:x="21484" fg:w="13"/><text x="61.9821%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (13 samples, 0.04%)</title><rect x="61.7321%" y="629" width="0.0374%" height="15" fill="rgb(232,9,14)" fg:x="21484" fg:w="13"/><text x="61.9821%" y="639.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (8 samples, 0.02%)</title><rect x="61.7465%" y="613" width="0.0230%" height="15" fill="rgb(243,91,43)" fg:x="21489" fg:w="8"/><text x="61.9965%" y="623.50"></text></g><g><title>&lt;move_core_types::value::MoveStructLayout as core::clone::Clone&gt;::clone (22 samples, 0.06%)</title><rect x="61.7091%" y="789" width="0.0632%" height="15" fill="rgb(231,90,52)" fg:x="21476" fg:w="22"/><text x="61.9591%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (21 samples, 0.06%)</title><rect x="61.7120%" y="773" width="0.0603%" height="15" fill="rgb(253,192,44)" fg:x="21477" fg:w="21"/><text x="61.9620%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (21 samples, 0.06%)</title><rect x="61.7120%" y="757" width="0.0603%" height="15" fill="rgb(241,66,31)" fg:x="21477" fg:w="21"/><text x="61.9620%" y="767.50"></text></g><g><title>alloc::slice::hack::to_vec (21 samples, 0.06%)</title><rect x="61.7120%" y="741" width="0.0603%" height="15" fill="rgb(235,81,37)" fg:x="21477" fg:w="21"/><text x="61.9620%" y="751.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (21 samples, 0.06%)</title><rect x="61.7120%" y="725" width="0.0603%" height="15" fill="rgb(223,221,9)" fg:x="21477" fg:w="21"/><text x="61.9620%" y="735.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::finish (4 samples, 0.01%)</title><rect x="61.7723%" y="709" width="0.0115%" height="15" fill="rgb(242,180,7)" fg:x="21498" fg:w="4"/><text x="62.0223%" y="719.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4 samples, 0.01%)</title><rect x="61.7723%" y="693" width="0.0115%" height="15" fill="rgb(243,78,19)" fg:x="21498" fg:w="4"/><text x="62.0223%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4 samples, 0.01%)</title><rect x="61.7723%" y="677" width="0.0115%" height="15" fill="rgb(233,23,17)" fg:x="21498" fg:w="4"/><text x="62.0223%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (4 samples, 0.01%)</title><rect x="61.7723%" y="661" width="0.0115%" height="15" fill="rgb(252,122,45)" fg:x="21498" fg:w="4"/><text x="62.0223%" y="671.50"></text></g><g><title>hashbrown::map::make_hash (5 samples, 0.01%)</title><rect x="61.7723%" y="741" width="0.0144%" height="15" fill="rgb(247,108,20)" fg:x="21498" fg:w="5"/><text x="62.0223%" y="751.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5 samples, 0.01%)</title><rect x="61.7723%" y="725" width="0.0144%" height="15" fill="rgb(235,84,21)" fg:x="21498" fg:w="5"/><text x="62.0223%" y="735.50"></text></g><g><title>move_vm_runtime::native_functions::NativeContext::type_to_type_layout (42 samples, 0.12%)</title><rect x="61.7005%" y="869" width="0.1207%" height="15" fill="rgb(247,129,10)" fg:x="21473" fg:w="42"/><text x="61.9505%" y="879.50"></text></g><g><title>move_vm_runtime::loader::Resolver::type_to_type_layout (41 samples, 0.12%)</title><rect x="61.7034%" y="853" width="0.1178%" height="15" fill="rgb(208,173,14)" fg:x="21474" fg:w="41"/><text x="61.9534%" y="863.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout (41 samples, 0.12%)</title><rect x="61.7034%" y="837" width="0.1178%" height="15" fill="rgb(236,31,38)" fg:x="21474" fg:w="41"/><text x="61.9534%" y="847.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout_impl (41 samples, 0.12%)</title><rect x="61.7034%" y="821" width="0.1178%" height="15" fill="rgb(232,65,17)" fg:x="21474" fg:w="41"/><text x="61.9534%" y="831.50"></text></g><g><title>move_vm_runtime::loader::Loader::struct_gidx_to_type_layout (39 samples, 0.11%)</title><rect x="61.7091%" y="805" width="0.1121%" height="15" fill="rgb(224,45,49)" fg:x="21476" fg:w="39"/><text x="61.9591%" y="815.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (17 samples, 0.05%)</title><rect x="61.7723%" y="789" width="0.0488%" height="15" fill="rgb(225,2,53)" fg:x="21498" fg:w="17"/><text x="62.0223%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (17 samples, 0.05%)</title><rect x="61.7723%" y="773" width="0.0488%" height="15" fill="rgb(248,210,53)" fg:x="21498" fg:w="17"/><text x="62.0223%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (17 samples, 0.05%)</title><rect x="61.7723%" y="757" width="0.0488%" height="15" fill="rgb(211,1,30)" fg:x="21498" fg:w="17"/><text x="62.0223%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (12 samples, 0.03%)</title><rect x="61.7867%" y="741" width="0.0345%" height="15" fill="rgb(224,96,15)" fg:x="21503" fg:w="12"/><text x="62.0367%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (12 samples, 0.03%)</title><rect x="61.7867%" y="725" width="0.0345%" height="15" fill="rgb(252,45,11)" fg:x="21503" fg:w="12"/><text x="62.0367%" y="735.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (12 samples, 0.03%)</title><rect x="61.7867%" y="709" width="0.0345%" height="15" fill="rgb(220,125,38)" fg:x="21503" fg:w="12"/><text x="62.0367%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (12 samples, 0.03%)</title><rect x="61.7867%" y="693" width="0.0345%" height="15" fill="rgb(243,161,33)" fg:x="21503" fg:w="12"/><text x="62.0367%" y="703.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (12 samples, 0.03%)</title><rect x="61.7867%" y="677" width="0.0345%" height="15" fill="rgb(248,197,34)" fg:x="21503" fg:w="12"/><text x="62.0367%" y="687.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (12 samples, 0.03%)</title><rect x="61.7867%" y="661" width="0.0345%" height="15" fill="rgb(228,165,23)" fg:x="21503" fg:w="12"/><text x="62.0367%" y="671.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (12 samples, 0.03%)</title><rect x="61.7867%" y="645" width="0.0345%" height="15" fill="rgb(236,94,38)" fg:x="21503" fg:w="12"/><text x="62.0367%" y="655.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::CachedStructIndex as core::cmp::PartialEq&gt;::eq (12 samples, 0.03%)</title><rect x="61.7867%" y="629" width="0.0345%" height="15" fill="rgb(220,13,23)" fg:x="21503" fg:w="12"/><text x="62.0367%" y="639.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (4 samples, 0.01%)</title><rect x="61.8269%" y="789" width="0.0115%" height="15" fill="rgb(234,26,39)" fg:x="21517" fg:w="4"/><text x="62.0769%" y="799.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (4 samples, 0.01%)</title><rect x="61.8269%" y="773" width="0.0115%" height="15" fill="rgb(205,117,44)" fg:x="21517" fg:w="4"/><text x="62.0769%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (6 samples, 0.02%)</title><rect x="61.9016%" y="373" width="0.0172%" height="15" fill="rgb(250,42,2)" fg:x="21543" fg:w="6"/><text x="62.1516%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (6 samples, 0.02%)</title><rect x="61.9016%" y="357" width="0.0172%" height="15" fill="rgb(223,83,14)" fg:x="21543" fg:w="6"/><text x="62.1516%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.02%)</title><rect x="61.9016%" y="341" width="0.0172%" height="15" fill="rgb(241,147,50)" fg:x="21543" fg:w="6"/><text x="62.1516%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (6 samples, 0.02%)</title><rect x="61.9016%" y="325" width="0.0172%" height="15" fill="rgb(218,90,6)" fg:x="21543" fg:w="6"/><text x="62.1516%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.02%)</title><rect x="61.9016%" y="309" width="0.0172%" height="15" fill="rgb(210,191,5)" fg:x="21543" fg:w="6"/><text x="62.1516%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.02%)</title><rect x="61.9016%" y="293" width="0.0172%" height="15" fill="rgb(225,139,19)" fg:x="21543" fg:w="6"/><text x="62.1516%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.07%)</title><rect x="61.8671%" y="661" width="0.0718%" height="15" fill="rgb(210,1,33)" fg:x="21531" fg:w="25"/><text x="62.1171%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (25 samples, 0.07%)</title><rect x="61.8671%" y="645" width="0.0718%" height="15" fill="rgb(213,50,3)" fg:x="21531" fg:w="25"/><text x="62.1171%" y="655.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (25 samples, 0.07%)</title><rect x="61.8671%" y="629" width="0.0718%" height="15" fill="rgb(234,227,4)" fg:x="21531" fg:w="25"/><text x="62.1171%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (25 samples, 0.07%)</title><rect x="61.8671%" y="613" width="0.0718%" height="15" fill="rgb(246,63,5)" fg:x="21531" fg:w="25"/><text x="62.1171%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (20 samples, 0.06%)</title><rect x="61.8815%" y="597" width="0.0575%" height="15" fill="rgb(245,136,27)" fg:x="21536" fg:w="20"/><text x="62.1315%" y="607.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (20 samples, 0.06%)</title><rect x="61.8815%" y="581" width="0.0575%" height="15" fill="rgb(247,199,27)" fg:x="21536" fg:w="20"/><text x="62.1315%" y="591.50"></text></g><g><title>move_vm_types::values::values_impl::Container::copy_value::{{closure}}::{{closure}} (20 samples, 0.06%)</title><rect x="61.8815%" y="565" width="0.0575%" height="15" fill="rgb(252,158,49)" fg:x="21536" fg:w="20"/><text x="62.1315%" y="575.50"></text></g><g><title>move_vm_types::values::values_impl::ValueImpl::copy_value (20 samples, 0.06%)</title><rect x="61.8815%" y="549" width="0.0575%" height="15" fill="rgb(254,73,1)" fg:x="21536" fg:w="20"/><text x="62.1315%" y="559.50"></text></g><g><title>move_vm_types::values::values_impl::Container::copy_value (17 samples, 0.05%)</title><rect x="61.8901%" y="533" width="0.0488%" height="15" fill="rgb(248,93,19)" fg:x="21539" fg:w="17"/><text x="62.1401%" y="543.50"></text></g><g><title>move_vm_types::values::values_impl::Container::copy_value::{{closure}} (15 samples, 0.04%)</title><rect x="61.8959%" y="517" width="0.0431%" height="15" fill="rgb(206,67,5)" fg:x="21541" fg:w="15"/><text x="62.1459%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (14 samples, 0.04%)</title><rect x="61.8987%" y="501" width="0.0402%" height="15" fill="rgb(209,210,4)" fg:x="21542" fg:w="14"/><text x="62.1487%" y="511.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (14 samples, 0.04%)</title><rect x="61.8987%" y="485" width="0.0402%" height="15" fill="rgb(214,185,36)" fg:x="21542" fg:w="14"/><text x="62.1487%" y="495.50"></text></g><g><title>core::iter::adapters::try_process (14 samples, 0.04%)</title><rect x="61.8987%" y="469" width="0.0402%" height="15" fill="rgb(233,191,26)" fg:x="21542" fg:w="14"/><text x="62.1487%" y="479.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (14 samples, 0.04%)</title><rect x="61.8987%" y="453" width="0.0402%" height="15" fill="rgb(248,94,17)" fg:x="21542" fg:w="14"/><text x="62.1487%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (14 samples, 0.04%)</title><rect x="61.8987%" y="437" width="0.0402%" height="15" fill="rgb(250,64,4)" fg:x="21542" fg:w="14"/><text x="62.1487%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (14 samples, 0.04%)</title><rect x="61.8987%" y="421" width="0.0402%" height="15" fill="rgb(218,41,53)" fg:x="21542" fg:w="14"/><text x="62.1487%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (13 samples, 0.04%)</title><rect x="61.9016%" y="405" width="0.0374%" height="15" fill="rgb(251,176,28)" fg:x="21543" fg:w="13"/><text x="62.1516%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (13 samples, 0.04%)</title><rect x="61.9016%" y="389" width="0.0374%" height="15" fill="rgb(247,22,9)" fg:x="21543" fg:w="13"/><text x="62.1516%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.02%)</title><rect x="61.9189%" y="373" width="0.0201%" height="15" fill="rgb(218,201,14)" fg:x="21549" fg:w="7"/><text x="62.1689%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (7 samples, 0.02%)</title><rect x="61.9189%" y="357" width="0.0201%" height="15" fill="rgb(218,94,10)" fg:x="21549" fg:w="7"/><text x="62.1689%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (7 samples, 0.02%)</title><rect x="61.9189%" y="341" width="0.0201%" height="15" fill="rgb(222,183,52)" fg:x="21549" fg:w="7"/><text x="62.1689%" y="351.50"></text></g><g><title>core::ops::control_flow::ControlFlow&lt;R,&lt;R as core::ops::try_trait::Try&gt;::Output&gt;::into_try (5 samples, 0.01%)</title><rect x="61.9246%" y="325" width="0.0144%" height="15" fill="rgb(242,140,25)" fg:x="21551" fg:w="5"/><text x="62.1746%" y="335.50"></text></g><g><title>move_vm_types::values::values_impl::Reference::read_ref (42 samples, 0.12%)</title><rect x="61.8212%" y="869" width="0.1207%" height="15" fill="rgb(235,197,38)" fg:x="21515" fg:w="42"/><text x="62.0712%" y="879.50"></text></g><g><title>move_vm_types::values::values_impl::ReferenceImpl::read_ref (42 samples, 0.12%)</title><rect x="61.8212%" y="853" width="0.1207%" height="15" fill="rgb(237,136,15)" fg:x="21515" fg:w="42"/><text x="62.0712%" y="863.50"></text></g><g><title>move_vm_types::values::values_impl::ContainerRef::read_ref (42 samples, 0.12%)</title><rect x="61.8212%" y="837" width="0.1207%" height="15" fill="rgb(223,44,49)" fg:x="21515" fg:w="42"/><text x="62.0712%" y="847.50"></text></g><g><title>move_vm_types::values::values_impl::Container::copy_value (40 samples, 0.11%)</title><rect x="61.8269%" y="821" width="0.1149%" height="15" fill="rgb(227,71,15)" fg:x="21517" fg:w="40"/><text x="62.0769%" y="831.50"></text></g><g><title>move_vm_types::values::values_impl::Container::copy_value::{{closure}} (40 samples, 0.11%)</title><rect x="61.8269%" y="805" width="0.1149%" height="15" fill="rgb(225,153,20)" fg:x="21517" fg:w="40"/><text x="62.0769%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (36 samples, 0.10%)</title><rect x="61.8384%" y="789" width="0.1034%" height="15" fill="rgb(210,190,26)" fg:x="21521" fg:w="36"/><text x="62.0884%" y="799.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (36 samples, 0.10%)</title><rect x="61.8384%" y="773" width="0.1034%" height="15" fill="rgb(223,147,5)" fg:x="21521" fg:w="36"/><text x="62.0884%" y="783.50"></text></g><g><title>core::iter::adapters::try_process (36 samples, 0.10%)</title><rect x="61.8384%" y="757" width="0.1034%" height="15" fill="rgb(207,14,23)" fg:x="21521" fg:w="36"/><text x="62.0884%" y="767.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (31 samples, 0.09%)</title><rect x="61.8528%" y="741" width="0.0891%" height="15" fill="rgb(211,195,53)" fg:x="21526" fg:w="31"/><text x="62.1028%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (31 samples, 0.09%)</title><rect x="61.8528%" y="725" width="0.0891%" height="15" fill="rgb(237,75,46)" fg:x="21526" fg:w="31"/><text x="62.1028%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (31 samples, 0.09%)</title><rect x="61.8528%" y="709" width="0.0891%" height="15" fill="rgb(254,55,14)" fg:x="21526" fg:w="31"/><text x="62.1028%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (31 samples, 0.09%)</title><rect x="61.8528%" y="693" width="0.0891%" height="15" fill="rgb(230,185,30)" fg:x="21526" fg:w="31"/><text x="62.1028%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (31 samples, 0.09%)</title><rect x="61.8528%" y="677" width="0.0891%" height="15" fill="rgb(220,14,11)" fg:x="21526" fg:w="31"/><text x="62.1028%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.01%)</title><rect x="61.9677%" y="565" width="0.0115%" height="15" fill="rgb(215,169,44)" fg:x="21566" fg:w="4"/><text x="62.2177%" y="575.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u64 (5 samples, 0.01%)</title><rect x="61.9677%" y="709" width="0.0144%" height="15" fill="rgb(253,203,20)" fg:x="21566" fg:w="5"/><text x="62.2177%" y="719.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (5 samples, 0.01%)</title><rect x="61.9677%" y="693" width="0.0144%" height="15" fill="rgb(229,225,17)" fg:x="21566" fg:w="5"/><text x="62.2177%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (5 samples, 0.01%)</title><rect x="61.9677%" y="677" width="0.0144%" height="15" fill="rgb(236,76,26)" fg:x="21566" fg:w="5"/><text x="62.2177%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (5 samples, 0.01%)</title><rect x="61.9677%" y="661" width="0.0144%" height="15" fill="rgb(234,15,30)" fg:x="21566" fg:w="5"/><text x="62.2177%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (5 samples, 0.01%)</title><rect x="61.9677%" y="645" width="0.0144%" height="15" fill="rgb(211,113,48)" fg:x="21566" fg:w="5"/><text x="62.2177%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (5 samples, 0.01%)</title><rect x="61.9677%" y="629" width="0.0144%" height="15" fill="rgb(221,31,36)" fg:x="21566" fg:w="5"/><text x="62.2177%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5 samples, 0.01%)</title><rect x="61.9677%" y="613" width="0.0144%" height="15" fill="rgb(215,118,52)" fg:x="21566" fg:w="5"/><text x="62.2177%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.01%)</title><rect x="61.9677%" y="597" width="0.0144%" height="15" fill="rgb(241,151,27)" fg:x="21566" fg:w="5"/><text x="62.2177%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.01%)</title><rect x="61.9677%" y="581" width="0.0144%" height="15" fill="rgb(253,51,3)" fg:x="21566" fg:w="5"/><text x="62.2177%" y="591.50"></text></g><g><title>iralloct (9 samples, 0.03%)</title><rect x="61.9849%" y="389" width="0.0259%" height="15" fill="rgb(216,201,24)" fg:x="21572" fg:w="9"/><text x="62.2349%" y="399.50"></text></g><g><title>_rjem_je_arena_ralloc (9 samples, 0.03%)</title><rect x="61.9849%" y="373" width="0.0259%" height="15" fill="rgb(231,107,4)" fg:x="21572" fg:w="9"/><text x="62.2349%" y="383.50"></text></g><g><title>_rjem_je_arena_ralloc_no_move (4 samples, 0.01%)</title><rect x="61.9993%" y="357" width="0.0115%" height="15" fill="rgb(243,97,54)" fg:x="21577" fg:w="4"/><text x="62.2493%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (22 samples, 0.06%)</title><rect x="61.9821%" y="453" width="0.0632%" height="15" fill="rgb(221,32,51)" fg:x="21571" fg:w="22"/><text x="62.2321%" y="463.50"></text></g><g><title>alloc::alloc::Global::grow_impl (22 samples, 0.06%)</title><rect x="61.9821%" y="437" width="0.0632%" height="15" fill="rgb(218,171,35)" fg:x="21571" fg:w="22"/><text x="62.2321%" y="447.50"></text></g><g><title>alloc::alloc::realloc (22 samples, 0.06%)</title><rect x="61.9821%" y="421" width="0.0632%" height="15" fill="rgb(214,20,53)" fg:x="21571" fg:w="22"/><text x="62.2321%" y="431.50"></text></g><g><title>rallocx (21 samples, 0.06%)</title><rect x="61.9849%" y="405" width="0.0603%" height="15" fill="rgb(239,9,52)" fg:x="21572" fg:w="21"/><text x="62.2349%" y="415.50"></text></g><g><title>rtree_szind_slab_read (12 samples, 0.03%)</title><rect x="62.0108%" y="389" width="0.0345%" height="15" fill="rgb(215,114,45)" fg:x="21581" fg:w="12"/><text x="62.2608%" y="399.50"></text></g><g><title>rtree_read (12 samples, 0.03%)</title><rect x="62.0108%" y="373" width="0.0345%" height="15" fill="rgb(208,118,9)" fg:x="21581" fg:w="12"/><text x="62.2608%" y="383.50"></text></g><g><title>rtree_leaf_elm_lookup (12 samples, 0.03%)</title><rect x="62.0108%" y="357" width="0.0345%" height="15" fill="rgb(235,7,39)" fg:x="21581" fg:w="12"/><text x="62.2608%" y="367.50"></text></g><g><title>rtree_subkey (12 samples, 0.03%)</title><rect x="62.0108%" y="341" width="0.0345%" height="15" fill="rgb(243,225,15)" fg:x="21581" fg:w="12"/><text x="62.2608%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (24 samples, 0.07%)</title><rect x="61.9821%" y="533" width="0.0690%" height="15" fill="rgb(225,216,18)" fg:x="21571" fg:w="24"/><text x="62.2321%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (24 samples, 0.07%)</title><rect x="61.9821%" y="517" width="0.0690%" height="15" fill="rgb(233,36,38)" fg:x="21571" fg:w="24"/><text x="62.2321%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (24 samples, 0.07%)</title><rect x="61.9821%" y="501" width="0.0690%" height="15" fill="rgb(239,88,23)" fg:x="21571" fg:w="24"/><text x="62.2321%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (24 samples, 0.07%)</title><rect x="61.9821%" y="485" width="0.0690%" height="15" fill="rgb(219,181,35)" fg:x="21571" fg:w="24"/><text x="62.2321%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (24 samples, 0.07%)</title><rect x="61.9821%" y="469" width="0.0690%" height="15" fill="rgb(215,18,46)" fg:x="21571" fg:w="24"/><text x="62.2321%" y="479.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (35 samples, 0.10%)</title><rect x="61.9648%" y="741" width="0.1006%" height="15" fill="rgb(241,38,11)" fg:x="21565" fg:w="35"/><text x="62.2148%" y="751.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::ValueImpl&gt; as serde::ser::Serialize&gt;::serialize (35 samples, 0.10%)</title><rect x="61.9648%" y="725" width="0.1006%" height="15" fill="rgb(248,169,45)" fg:x="21565" fg:w="35"/><text x="62.2148%" y="735.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::ser::Serialize&gt;::serialize (29 samples, 0.08%)</title><rect x="61.9821%" y="709" width="0.0833%" height="15" fill="rgb(239,50,49)" fg:x="21571" fg:w="29"/><text x="62.2321%" y="719.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (29 samples, 0.08%)</title><rect x="61.9821%" y="693" width="0.0833%" height="15" fill="rgb(231,96,31)" fg:x="21571" fg:w="29"/><text x="62.2321%" y="703.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for [T (29 samples, 0.08%)</title><rect x="61.9821%" y="677" width="0.0833%" height="15" fill="rgb(224,193,37)" fg:x="21571" fg:w="29"/><text x="62.2321%" y="687.50"></text></g><g><title> 32]&gt;::serialize (29 samples, 0.08%)</title><rect x="61.9821%" y="661" width="0.0833%" height="15" fill="rgb(227,153,50)" fg:x="21571" fg:w="29"/><text x="62.2321%" y="671.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (29 samples, 0.08%)</title><rect x="61.9821%" y="645" width="0.0833%" height="15" fill="rgb(249,228,3)" fg:x="21571" fg:w="29"/><text x="62.2321%" y="655.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for u8&gt;::serialize (29 samples, 0.08%)</title><rect x="61.9821%" y="629" width="0.0833%" height="15" fill="rgb(219,164,43)" fg:x="21571" fg:w="29"/><text x="62.2321%" y="639.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_u8 (29 samples, 0.08%)</title><rect x="61.9821%" y="613" width="0.0833%" height="15" fill="rgb(216,45,41)" fg:x="21571" fg:w="29"/><text x="62.2321%" y="623.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for alloc::vec::Vec&lt;u8,A&gt;&gt;::write_all (29 samples, 0.08%)</title><rect x="61.9821%" y="597" width="0.0833%" height="15" fill="rgb(210,226,51)" fg:x="21571" fg:w="29"/><text x="62.2321%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (29 samples, 0.08%)</title><rect x="61.9821%" y="581" width="0.0833%" height="15" fill="rgb(209,117,49)" fg:x="21571" fg:w="29"/><text x="62.2321%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (29 samples, 0.08%)</title><rect x="61.9821%" y="565" width="0.0833%" height="15" fill="rgb(206,196,24)" fg:x="21571" fg:w="29"/><text x="62.2321%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (29 samples, 0.08%)</title><rect x="61.9821%" y="549" width="0.0833%" height="15" fill="rgb(253,218,3)" fg:x="21571" fg:w="29"/><text x="62.2321%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.01%)</title><rect x="62.0510%" y="533" width="0.0144%" height="15" fill="rgb(252,166,2)" fg:x="21595" fg:w="5"/><text x="62.3010%" y="543.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeTuple&gt;::serialize_element (37 samples, 0.11%)</title><rect x="61.9620%" y="789" width="0.1063%" height="15" fill="rgb(236,218,26)" fg:x="21564" fg:w="37"/><text x="62.2120%" y="799.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::ValueImpl&gt; as serde::ser::Serialize&gt;::serialize (37 samples, 0.11%)</title><rect x="61.9620%" y="773" width="0.1063%" height="15" fill="rgb(254,84,19)" fg:x="21564" fg:w="37"/><text x="62.2120%" y="783.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveStructLayout,alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; as serde::ser::Serialize&gt;::serialize (36 samples, 0.10%)</title><rect x="61.9648%" y="757" width="0.1034%" height="15" fill="rgb(219,137,29)" fg:x="21565" fg:w="36"/><text x="62.2148%" y="767.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_serialize (43 samples, 0.12%)</title><rect x="61.9505%" y="869" width="0.1236%" height="15" fill="rgb(227,47,52)" fg:x="21560" fg:w="43"/><text x="62.2005%" y="879.50"></text></g><g><title>bcs::ser::to_bytes (43 samples, 0.12%)</title><rect x="61.9505%" y="853" width="0.1236%" height="15" fill="rgb(229,167,24)" fg:x="21560" fg:w="43"/><text x="62.2005%" y="863.50"></text></g><g><title>bcs::ser::serialize_into (43 samples, 0.12%)</title><rect x="61.9505%" y="837" width="0.1236%" height="15" fill="rgb(233,164,1)" fg:x="21560" fg:w="43"/><text x="62.2005%" y="847.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveTypeLayout,move_vm_types::values::values_impl::ValueImpl&gt; as serde::ser::Serialize&gt;::serialize (43 samples, 0.12%)</title><rect x="61.9505%" y="821" width="0.1236%" height="15" fill="rgb(218,88,48)" fg:x="21560" fg:w="43"/><text x="62.2005%" y="831.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::AnnotatedValue&lt;move_core_types::value::MoveStructLayout,alloc::vec::Vec&lt;move_vm_types::values::values_impl::ValueImpl&gt;&gt; as serde::ser::Serialize&gt;::serialize (39 samples, 0.11%)</title><rect x="61.9620%" y="805" width="0.1121%" height="15" fill="rgb(226,214,24)" fg:x="21564" fg:w="39"/><text x="62.2120%" y="815.50"></text></g><g><title>move_vm_types::values::values_impl::Value::vector_u8 (12 samples, 0.03%)</title><rect x="62.0740%" y="869" width="0.0345%" height="15" fill="rgb(233,29,12)" fg:x="21603" fg:w="12"/><text x="62.3240%" y="879.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (6 samples, 0.02%)</title><rect x="62.0913%" y="853" width="0.0172%" height="15" fill="rgb(219,120,34)" fg:x="21609" fg:w="6"/><text x="62.3413%" y="863.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (6 samples, 0.02%)</title><rect x="62.0913%" y="837" width="0.0172%" height="15" fill="rgb(226,78,44)" fg:x="21609" fg:w="6"/><text x="62.3413%" y="847.50"></text></g><g><title>alloc::alloc::exchange_malloc (6 samples, 0.02%)</title><rect x="62.0913%" y="821" width="0.0172%" height="15" fill="rgb(240,15,48)" fg:x="21609" fg:w="6"/><text x="62.3413%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.02%)</title><rect x="62.0913%" y="805" width="0.0172%" height="15" fill="rgb(253,176,7)" fg:x="21609" fg:w="6"/><text x="62.3413%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.02%)</title><rect x="62.0913%" y="789" width="0.0172%" height="15" fill="rgb(206,166,28)" fg:x="21609" fg:w="6"/><text x="62.3413%" y="799.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.02%)</title><rect x="62.0913%" y="773" width="0.0172%" height="15" fill="rgb(241,53,51)" fg:x="21609" fg:w="6"/><text x="62.3413%" y="783.50"></text></g><g><title>mallocx (5 samples, 0.01%)</title><rect x="62.0941%" y="757" width="0.0144%" height="15" fill="rgb(249,112,30)" fg:x="21610" fg:w="5"/><text x="62.3441%" y="767.50"></text></g><g><title>imalloc (5 samples, 0.01%)</title><rect x="62.0941%" y="741" width="0.0144%" height="15" fill="rgb(217,85,30)" fg:x="21610" fg:w="5"/><text x="62.3441%" y="751.50"></text></g><g><title>imalloc_body (5 samples, 0.01%)</title><rect x="62.0941%" y="725" width="0.0144%" height="15" fill="rgb(233,49,7)" fg:x="21610" fg:w="5"/><text x="62.3441%" y="735.50"></text></g><g><title>imalloc_no_sample (5 samples, 0.01%)</title><rect x="62.0941%" y="709" width="0.0144%" height="15" fill="rgb(234,109,9)" fg:x="21610" fg:w="5"/><text x="62.3441%" y="719.50"></text></g><g><title>iallocztm (5 samples, 0.01%)</title><rect x="62.0941%" y="693" width="0.0144%" height="15" fill="rgb(253,95,22)" fg:x="21610" fg:w="5"/><text x="62.3441%" y="703.50"></text></g><g><title>arena_malloc (5 samples, 0.01%)</title><rect x="62.0941%" y="677" width="0.0144%" height="15" fill="rgb(233,176,25)" fg:x="21610" fg:w="5"/><text x="62.3441%" y="687.50"></text></g><g><title>tcache_alloc_small (5 samples, 0.01%)</title><rect x="62.0941%" y="661" width="0.0144%" height="15" fill="rgb(236,33,39)" fg:x="21610" fg:w="5"/><text x="62.3441%" y="671.50"></text></g><g><title>sdallocx (4 samples, 0.01%)</title><rect x="62.1085%" y="869" width="0.0115%" height="15" fill="rgb(223,226,42)" fg:x="21615" fg:w="4"/><text x="62.3585%" y="879.50"></text></g><g><title>isfree (4 samples, 0.01%)</title><rect x="62.1085%" y="853" width="0.0115%" height="15" fill="rgb(216,99,33)" fg:x="21615" fg:w="4"/><text x="62.3585%" y="863.50"></text></g><g><title>isdalloct (4 samples, 0.01%)</title><rect x="62.1085%" y="837" width="0.0115%" height="15" fill="rgb(235,84,23)" fg:x="21615" fg:w="4"/><text x="62.3585%" y="847.50"></text></g><g><title>arena_sdalloc (4 samples, 0.01%)</title><rect x="62.1085%" y="821" width="0.0115%" height="15" fill="rgb(232,2,27)" fg:x="21615" fg:w="4"/><text x="62.3585%" y="831.50"></text></g><g><title>sz_size2index (4 samples, 0.01%)</title><rect x="62.1085%" y="805" width="0.0115%" height="15" fill="rgb(241,23,22)" fg:x="21615" fg:w="4"/><text x="62.3585%" y="815.50"></text></g><g><title>sz_size2index_lookup (4 samples, 0.01%)</title><rect x="62.1085%" y="789" width="0.0115%" height="15" fill="rgb(211,73,27)" fg:x="21615" fg:w="4"/><text x="62.3585%" y="799.50"></text></g><g><title>move_stdlib::natives::bcs::make_native_to_bytes::{{closure}} (202 samples, 0.58%)</title><rect x="61.5539%" y="901" width="0.5804%" height="15" fill="rgb(235,109,49)" fg:x="21422" fg:w="202"/><text x="61.8039%" y="911.50"></text></g><g><title>move_stdlib::natives::bcs::native_to_bytes (202 samples, 0.58%)</title><rect x="61.5539%" y="885" width="0.5804%" height="15" fill="rgb(230,99,29)" fg:x="21422" fg:w="202"/><text x="61.8039%" y="895.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::push (5 samples, 0.01%)</title><rect x="62.1200%" y="869" width="0.0144%" height="15" fill="rgb(245,199,7)" fg:x="21619" fg:w="5"/><text x="62.3700%" y="879.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple_mut (5 samples, 0.01%)</title><rect x="62.1200%" y="853" width="0.0144%" height="15" fill="rgb(217,179,10)" fg:x="21619" fg:w="5"/><text x="62.3700%" y="863.50"></text></g><g><title>move_stdlib::natives::signer::make_native_borrow_address::{{closure}} (24 samples, 0.07%)</title><rect x="62.1344%" y="901" width="0.0690%" height="15" fill="rgb(254,99,47)" fg:x="21624" fg:w="24"/><text x="62.3844%" y="911.50"></text></g><g><title>move_stdlib::natives::signer::native_borrow_address (13 samples, 0.04%)</title><rect x="62.1660%" y="885" width="0.0374%" height="15" fill="rgb(251,121,7)" fg:x="21635" fg:w="13"/><text x="62.4160%" y="895.50"></text></g><g><title>move_vm_types::values::values_impl::SignerRef::borrow_signer (9 samples, 0.03%)</title><rect x="62.1775%" y="869" width="0.0259%" height="15" fill="rgb(250,177,26)" fg:x="21639" fg:w="9"/><text x="62.4275%" y="879.50"></text></g><g><title>move_vm_types::values::values_impl::ContainerRef::borrow_elem (5 samples, 0.01%)</title><rect x="62.1890%" y="853" width="0.0144%" height="15" fill="rgb(232,88,15)" fg:x="21643" fg:w="5"/><text x="62.4390%" y="863.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::push_ty (5 samples, 0.01%)</title><rect x="62.2091%" y="901" width="0.0144%" height="15" fill="rgb(251,54,54)" fg:x="21650" fg:w="5"/><text x="62.4591%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (5 samples, 0.01%)</title><rect x="62.2091%" y="885" width="0.0144%" height="15" fill="rgb(208,177,15)" fg:x="21650" fg:w="5"/><text x="62.4591%" y="895.50"></text></g><g><title>core::ptr::write (5 samples, 0.01%)</title><rect x="62.2091%" y="869" width="0.0144%" height="15" fill="rgb(205,97,32)" fg:x="21650" fg:w="5"/><text x="62.4591%" y="879.50"></text></g><g><title>move_vm_runtime::loader::Function::get_native (9 samples, 0.03%)</title><rect x="62.2234%" y="901" width="0.0259%" height="15" fill="rgb(217,192,13)" fg:x="21655" fg:w="9"/><text x="62.4734%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_deref (9 samples, 0.03%)</title><rect x="62.2234%" y="885" width="0.0259%" height="15" fill="rgb(215,163,41)" fg:x="21655" fg:w="9"/><text x="62.4734%" y="895.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (9 samples, 0.03%)</title><rect x="62.2234%" y="869" width="0.0259%" height="15" fill="rgb(246,83,29)" fg:x="21655" fg:w="9"/><text x="62.4734%" y="879.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (25 samples, 0.07%)</title><rect x="62.2550%" y="869" width="0.0718%" height="15" fill="rgb(219,2,45)" fg:x="21666" fg:w="25"/><text x="62.5050%" y="879.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (8 samples, 0.02%)</title><rect x="62.3269%" y="869" width="0.0230%" height="15" fill="rgb(242,215,33)" fg:x="21691" fg:w="8"/><text x="62.5769%" y="879.50"></text></g><g><title>alloc::alloc::exchange_malloc (8 samples, 0.02%)</title><rect x="62.3269%" y="853" width="0.0230%" height="15" fill="rgb(217,1,6)" fg:x="21691" fg:w="8"/><text x="62.5769%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.02%)</title><rect x="62.3269%" y="837" width="0.0230%" height="15" fill="rgb(207,85,52)" fg:x="21691" fg:w="8"/><text x="62.5769%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.02%)</title><rect x="62.3269%" y="821" width="0.0230%" height="15" fill="rgb(231,171,19)" fg:x="21691" fg:w="8"/><text x="62.5769%" y="831.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.02%)</title><rect x="62.3269%" y="805" width="0.0230%" height="15" fill="rgb(207,128,4)" fg:x="21691" fg:w="8"/><text x="62.5769%" y="815.50"></text></g><g><title>mallocx (7 samples, 0.02%)</title><rect x="62.3298%" y="789" width="0.0201%" height="15" fill="rgb(219,208,4)" fg:x="21692" fg:w="7"/><text x="62.5798%" y="799.50"></text></g><g><title>imalloc (7 samples, 0.02%)</title><rect x="62.3298%" y="773" width="0.0201%" height="15" fill="rgb(235,161,42)" fg:x="21692" fg:w="7"/><text x="62.5798%" y="783.50"></text></g><g><title>imalloc_body (7 samples, 0.02%)</title><rect x="62.3298%" y="757" width="0.0201%" height="15" fill="rgb(247,218,18)" fg:x="21692" fg:w="7"/><text x="62.5798%" y="767.50"></text></g><g><title>imalloc_no_sample (7 samples, 0.02%)</title><rect x="62.3298%" y="741" width="0.0201%" height="15" fill="rgb(232,114,51)" fg:x="21692" fg:w="7"/><text x="62.5798%" y="751.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (58 samples, 0.17%)</title><rect x="62.2522%" y="901" width="0.1667%" height="15" fill="rgb(222,95,3)" fg:x="21665" fg:w="58"/><text x="62.5022%" y="911.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (57 samples, 0.16%)</title><rect x="62.2550%" y="885" width="0.1638%" height="15" fill="rgb(240,65,29)" fg:x="21666" fg:w="57"/><text x="62.5050%" y="895.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (24 samples, 0.07%)</title><rect x="62.3499%" y="869" width="0.0690%" height="15" fill="rgb(249,209,20)" fg:x="21699" fg:w="24"/><text x="62.5999%" y="879.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::call_native (646 samples, 1.86%)</title><rect x="60.5913%" y="933" width="1.8562%" height="15" fill="rgb(241,48,37)" fg:x="21087" fg:w="646"/><text x="60.8413%" y="943.50">m..</text></g><g><title>move_vm_runtime::interpreter::Interpreter::call_native_impl (646 samples, 1.86%)</title><rect x="60.5913%" y="917" width="1.8562%" height="15" fill="rgb(230,140,42)" fg:x="21087" fg:w="646"/><text x="60.8413%" y="927.50">m..</text></g><g><title>sdallocx (10 samples, 0.03%)</title><rect x="62.4188%" y="901" width="0.0287%" height="15" fill="rgb(230,176,45)" fg:x="21723" fg:w="10"/><text x="62.6688%" y="911.50"></text></g><g><title>isfree (10 samples, 0.03%)</title><rect x="62.4188%" y="885" width="0.0287%" height="15" fill="rgb(245,112,21)" fg:x="21723" fg:w="10"/><text x="62.6688%" y="895.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::check_friend_or_private_call (7 samples, 0.02%)</title><rect x="62.4476%" y="933" width="0.0201%" height="15" fill="rgb(207,183,35)" fg:x="21733" fg:w="7"/><text x="62.6976%" y="943.50"></text></g><g><title>__rust_dealloc (5 samples, 0.01%)</title><rect x="62.5165%" y="885" width="0.0144%" height="15" fill="rgb(227,44,33)" fg:x="21757" fg:w="5"/><text x="62.7665%" y="895.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::dealloc (5 samples, 0.01%)</title><rect x="62.5165%" y="869" width="0.0144%" height="15" fill="rgb(246,120,21)" fg:x="21757" fg:w="5"/><text x="62.7665%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (10 samples, 0.03%)</title><rect x="62.5309%" y="885" width="0.0287%" height="15" fill="rgb(235,57,52)" fg:x="21762" fg:w="10"/><text x="62.7809%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_types::loaded_data::runtime_types::Type&gt; (40 samples, 0.11%)</title><rect x="62.4763%" y="917" width="0.1149%" height="15" fill="rgb(238,84,10)" fg:x="21743" fg:w="40"/><text x="62.7263%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (40 samples, 0.11%)</title><rect x="62.4763%" y="901" width="0.1149%" height="15" fill="rgb(251,200,32)" fg:x="21743" fg:w="40"/><text x="62.7263%" y="911.50"></text></g><g><title>sdallocx (11 samples, 0.03%)</title><rect x="62.5596%" y="885" width="0.0316%" height="15" fill="rgb(247,159,13)" fg:x="21772" fg:w="11"/><text x="62.8096%" y="895.50"></text></g><g><title>isfree (11 samples, 0.03%)</title><rect x="62.5596%" y="869" width="0.0316%" height="15" fill="rgb(238,64,4)" fg:x="21772" fg:w="11"/><text x="62.8096%" y="879.50"></text></g><g><title>isdalloct (11 samples, 0.03%)</title><rect x="62.5596%" y="853" width="0.0316%" height="15" fill="rgb(221,131,51)" fg:x="21772" fg:w="11"/><text x="62.8096%" y="863.50"></text></g><g><title>arena_sdalloc (11 samples, 0.03%)</title><rect x="62.5596%" y="837" width="0.0316%" height="15" fill="rgb(242,5,29)" fg:x="21772" fg:w="11"/><text x="62.8096%" y="847.50"></text></g><g><title>tcache_dalloc_small (11 samples, 0.03%)</title><rect x="62.5596%" y="821" width="0.0316%" height="15" fill="rgb(214,130,32)" fg:x="21772" fg:w="11"/><text x="62.8096%" y="831.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::make_call_frame (8 samples, 0.02%)</title><rect x="62.5912%" y="917" width="0.0230%" height="15" fill="rgb(244,210,16)" fg:x="21783" fg:w="8"/><text x="62.8412%" y="927.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (5 samples, 0.01%)</title><rect x="62.6516%" y="805" width="0.0144%" height="15" fill="rgb(234,48,26)" fg:x="21804" fg:w="5"/><text x="62.9016%" y="815.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (10 samples, 0.03%)</title><rect x="62.6516%" y="837" width="0.0287%" height="15" fill="rgb(231,82,38)" fg:x="21804" fg:w="10"/><text x="62.9016%" y="847.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (10 samples, 0.03%)</title><rect x="62.6516%" y="821" width="0.0287%" height="15" fill="rgb(254,128,41)" fg:x="21804" fg:w="10"/><text x="62.9016%" y="831.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (5 samples, 0.01%)</title><rect x="62.6659%" y="805" width="0.0144%" height="15" fill="rgb(212,73,49)" fg:x="21809" fg:w="5"/><text x="62.9159%" y="815.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::try_new_uninit_in (5 samples, 0.01%)</title><rect x="62.6659%" y="789" width="0.0144%" height="15" fill="rgb(205,62,54)" fg:x="21809" fg:w="5"/><text x="62.9159%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.01%)</title><rect x="62.6659%" y="773" width="0.0144%" height="15" fill="rgb(228,0,8)" fg:x="21809" fg:w="5"/><text x="62.9159%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.01%)</title><rect x="62.6659%" y="757" width="0.0144%" height="15" fill="rgb(251,28,17)" fg:x="21809" fg:w="5"/><text x="62.9159%" y="767.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.01%)</title><rect x="62.6659%" y="741" width="0.0144%" height="15" fill="rgb(238,105,27)" fg:x="21809" fg:w="5"/><text x="62.9159%" y="751.50"></text></g><g><title>mallocx (5 samples, 0.01%)</title><rect x="62.6659%" y="725" width="0.0144%" height="15" fill="rgb(237,216,33)" fg:x="21809" fg:w="5"/><text x="62.9159%" y="735.50"></text></g><g><title>imalloc (5 samples, 0.01%)</title><rect x="62.6659%" y="709" width="0.0144%" height="15" fill="rgb(229,228,25)" fg:x="21809" fg:w="5"/><text x="62.9159%" y="719.50"></text></g><g><title>imalloc_body (5 samples, 0.01%)</title><rect x="62.6659%" y="693" width="0.0144%" height="15" fill="rgb(233,75,23)" fg:x="21809" fg:w="5"/><text x="62.9159%" y="703.50"></text></g><g><title>imalloc_no_sample (5 samples, 0.01%)</title><rect x="62.6659%" y="677" width="0.0144%" height="15" fill="rgb(231,207,16)" fg:x="21809" fg:w="5"/><text x="62.9159%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (11 samples, 0.03%)</title><rect x="62.6516%" y="901" width="0.0316%" height="15" fill="rgb(231,191,45)" fg:x="21804" fg:w="11"/><text x="62.9016%" y="911.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (11 samples, 0.03%)</title><rect x="62.6516%" y="885" width="0.0316%" height="15" fill="rgb(224,133,17)" fg:x="21804" fg:w="11"/><text x="62.9016%" y="895.50"></text></g><g><title>alloc::slice::hack::to_vec (11 samples, 0.03%)</title><rect x="62.6516%" y="869" width="0.0316%" height="15" fill="rgb(209,178,27)" fg:x="21804" fg:w="11"/><text x="62.9016%" y="879.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (11 samples, 0.03%)</title><rect x="62.6516%" y="853" width="0.0316%" height="15" fill="rgb(218,37,11)" fg:x="21804" fg:w="11"/><text x="62.9016%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::{{closure}} (55 samples, 0.16%)</title><rect x="62.7866%" y="645" width="0.1580%" height="15" fill="rgb(251,226,25)" fg:x="21851" fg:w="55"/><text x="63.0366%" y="655.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (55 samples, 0.16%)</title><rect x="62.7866%" y="629" width="0.1580%" height="15" fill="rgb(209,222,27)" fg:x="21851" fg:w="55"/><text x="63.0366%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 0.01%)</title><rect x="62.9447%" y="597" width="0.0115%" height="15" fill="rgb(238,22,21)" fg:x="21906" fg:w="4"/><text x="63.1947%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (4 samples, 0.01%)</title><rect x="62.9447%" y="581" width="0.0115%" height="15" fill="rgb(233,161,25)" fg:x="21906" fg:w="4"/><text x="63.1947%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.01%)</title><rect x="62.9447%" y="565" width="0.0115%" height="15" fill="rgb(226,122,53)" fg:x="21906" fg:w="4"/><text x="63.1947%" y="575.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (13 samples, 0.04%)</title><rect x="62.9562%" y="581" width="0.0374%" height="15" fill="rgb(220,123,17)" fg:x="21910" fg:w="13"/><text x="63.2062%" y="591.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst::{{closure}} (6 samples, 0.02%)</title><rect x="62.9763%" y="565" width="0.0172%" height="15" fill="rgb(230,224,35)" fg:x="21917" fg:w="6"/><text x="63.2263%" y="575.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::clone_impl (6 samples, 0.02%)</title><rect x="62.9763%" y="549" width="0.0172%" height="15" fill="rgb(246,83,8)" fg:x="21917" fg:w="6"/><text x="63.2263%" y="559.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (6 samples, 0.02%)</title><rect x="62.9763%" y="533" width="0.0172%" height="15" fill="rgb(230,214,17)" fg:x="21917" fg:w="6"/><text x="63.2263%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (73 samples, 0.21%)</title><rect x="62.7866%" y="773" width="0.2098%" height="15" fill="rgb(222,97,18)" fg:x="21851" fg:w="73"/><text x="63.0366%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (73 samples, 0.21%)</title><rect x="62.7866%" y="757" width="0.2098%" height="15" fill="rgb(206,79,1)" fg:x="21851" fg:w="73"/><text x="63.0366%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (73 samples, 0.21%)</title><rect x="62.7866%" y="741" width="0.2098%" height="15" fill="rgb(214,121,34)" fg:x="21851" fg:w="73"/><text x="63.0366%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (73 samples, 0.21%)</title><rect x="62.7866%" y="725" width="0.2098%" height="15" fill="rgb(249,199,46)" fg:x="21851" fg:w="73"/><text x="63.0366%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (73 samples, 0.21%)</title><rect x="62.7866%" y="709" width="0.2098%" height="15" fill="rgb(214,222,46)" fg:x="21851" fg:w="73"/><text x="63.0366%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (73 samples, 0.21%)</title><rect x="62.7866%" y="693" width="0.2098%" height="15" fill="rgb(248,168,30)" fg:x="21851" fg:w="73"/><text x="63.0366%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (73 samples, 0.21%)</title><rect x="62.7866%" y="677" width="0.2098%" height="15" fill="rgb(226,14,28)" fg:x="21851" fg:w="73"/><text x="63.0366%" y="687.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (73 samples, 0.21%)</title><rect x="62.7866%" y="661" width="0.2098%" height="15" fill="rgb(253,123,1)" fg:x="21851" fg:w="73"/><text x="63.0366%" y="671.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::make_new_frame::{{closure}} (18 samples, 0.05%)</title><rect x="62.9447%" y="645" width="0.0517%" height="15" fill="rgb(225,24,42)" fg:x="21906" fg:w="18"/><text x="63.1947%" y="655.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (18 samples, 0.05%)</title><rect x="62.9447%" y="629" width="0.0517%" height="15" fill="rgb(216,161,37)" fg:x="21906" fg:w="18"/><text x="63.1947%" y="639.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (18 samples, 0.05%)</title><rect x="62.9447%" y="613" width="0.0517%" height="15" fill="rgb(251,164,26)" fg:x="21906" fg:w="18"/><text x="63.1947%" y="623.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (14 samples, 0.04%)</title><rect x="62.9562%" y="597" width="0.0402%" height="15" fill="rgb(219,177,3)" fg:x="21910" fg:w="14"/><text x="63.2062%" y="607.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (6 samples, 0.02%)</title><rect x="63.1257%" y="629" width="0.0172%" height="15" fill="rgb(222,65,0)" fg:x="21969" fg:w="6"/><text x="63.3757%" y="639.50"></text></g><g><title>alloc::alloc::exchange_malloc (6 samples, 0.02%)</title><rect x="63.1257%" y="613" width="0.0172%" height="15" fill="rgb(223,69,54)" fg:x="21969" fg:w="6"/><text x="63.3757%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.01%)</title><rect x="63.1286%" y="597" width="0.0144%" height="15" fill="rgb(235,30,27)" fg:x="21970" fg:w="5"/><text x="63.3786%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.01%)</title><rect x="63.1286%" y="581" width="0.0144%" height="15" fill="rgb(220,183,50)" fg:x="21970" fg:w="5"/><text x="63.3786%" y="591.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.01%)</title><rect x="63.1286%" y="565" width="0.0144%" height="15" fill="rgb(248,198,15)" fg:x="21970" fg:w="5"/><text x="63.3786%" y="575.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (23 samples, 0.07%)</title><rect x="63.1429%" y="613" width="0.0661%" height="15" fill="rgb(222,211,4)" fg:x="21975" fg:w="23"/><text x="63.3929%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (90 samples, 0.26%)</title><rect x="62.9964%" y="773" width="0.2586%" height="15" fill="rgb(214,102,34)" fg:x="21924" fg:w="90"/><text x="63.2464%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (90 samples, 0.26%)</title><rect x="62.9964%" y="757" width="0.2586%" height="15" fill="rgb(245,92,5)" fg:x="21924" fg:w="90"/><text x="63.2464%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (90 samples, 0.26%)</title><rect x="62.9964%" y="741" width="0.2586%" height="15" fill="rgb(252,72,51)" fg:x="21924" fg:w="90"/><text x="63.2464%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (90 samples, 0.26%)</title><rect x="62.9964%" y="725" width="0.2586%" height="15" fill="rgb(252,208,19)" fg:x="21924" fg:w="90"/><text x="63.2464%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (90 samples, 0.26%)</title><rect x="62.9964%" y="709" width="0.2586%" height="15" fill="rgb(211,69,7)" fg:x="21924" fg:w="90"/><text x="63.2464%" y="719.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (90 samples, 0.26%)</title><rect x="62.9964%" y="693" width="0.2586%" height="15" fill="rgb(211,27,16)" fg:x="21924" fg:w="90"/><text x="63.2464%" y="703.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::make_new_frame::{{closure}} (90 samples, 0.26%)</title><rect x="62.9964%" y="677" width="0.2586%" height="15" fill="rgb(219,216,14)" fg:x="21924" fg:w="90"/><text x="63.2464%" y="687.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (90 samples, 0.26%)</title><rect x="62.9964%" y="661" width="0.2586%" height="15" fill="rgb(219,71,8)" fg:x="21924" fg:w="90"/><text x="63.2464%" y="671.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (88 samples, 0.25%)</title><rect x="63.0021%" y="645" width="0.2529%" height="15" fill="rgb(223,170,53)" fg:x="21926" fg:w="88"/><text x="63.2521%" y="655.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (39 samples, 0.11%)</title><rect x="63.1429%" y="629" width="0.1121%" height="15" fill="rgb(246,21,26)" fg:x="21975" fg:w="39"/><text x="63.3929%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (13 samples, 0.04%)</title><rect x="63.2176%" y="613" width="0.0374%" height="15" fill="rgb(248,20,46)" fg:x="22001" fg:w="13"/><text x="63.4676%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (13 samples, 0.04%)</title><rect x="63.2176%" y="597" width="0.0374%" height="15" fill="rgb(252,94,11)" fg:x="22001" fg:w="13"/><text x="63.4676%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (13 samples, 0.04%)</title><rect x="63.2176%" y="581" width="0.0374%" height="15" fill="rgb(236,163,8)" fg:x="22001" fg:w="13"/><text x="63.4676%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (12 samples, 0.03%)</title><rect x="63.2205%" y="565" width="0.0345%" height="15" fill="rgb(217,221,45)" fg:x="22002" fg:w="12"/><text x="63.4705%" y="575.50"></text></g><g><title>mallocx (8 samples, 0.02%)</title><rect x="63.2320%" y="549" width="0.0230%" height="15" fill="rgb(238,38,17)" fg:x="22006" fg:w="8"/><text x="63.4820%" y="559.50"></text></g><g><title>imalloc (8 samples, 0.02%)</title><rect x="63.2320%" y="533" width="0.0230%" height="15" fill="rgb(242,210,23)" fg:x="22006" fg:w="8"/><text x="63.4820%" y="543.50"></text></g><g><title>imalloc_body (8 samples, 0.02%)</title><rect x="63.2320%" y="517" width="0.0230%" height="15" fill="rgb(250,86,53)" fg:x="22006" fg:w="8"/><text x="63.4820%" y="527.50"></text></g><g><title>imalloc_no_sample (8 samples, 0.02%)</title><rect x="63.2320%" y="501" width="0.0230%" height="15" fill="rgb(223,168,25)" fg:x="22006" fg:w="8"/><text x="63.4820%" y="511.50"></text></g><g><title>tcaches_get (6 samples, 0.02%)</title><rect x="63.2377%" y="485" width="0.0172%" height="15" fill="rgb(251,189,4)" fg:x="22008" fg:w="6"/><text x="63.4877%" y="495.50"></text></g><g><title>__rust_alloc (6 samples, 0.02%)</title><rect x="63.2550%" y="661" width="0.0172%" height="15" fill="rgb(245,19,28)" fg:x="22014" fg:w="6"/><text x="63.5050%" y="671.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (4 samples, 0.01%)</title><rect x="63.2607%" y="645" width="0.0115%" height="15" fill="rgb(207,10,34)" fg:x="22016" fg:w="4"/><text x="63.5107%" y="655.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::make_new_frame (236 samples, 0.68%)</title><rect x="62.6142%" y="917" width="0.6781%" height="15" fill="rgb(235,153,31)" fg:x="21791" fg:w="236"/><text x="62.8642%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (212 samples, 0.61%)</title><rect x="62.6832%" y="901" width="0.6092%" height="15" fill="rgb(228,72,37)" fg:x="21815" fg:w="212"/><text x="62.9332%" y="911.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (212 samples, 0.61%)</title><rect x="62.6832%" y="885" width="0.6092%" height="15" fill="rgb(215,15,16)" fg:x="21815" fg:w="212"/><text x="62.9332%" y="895.50"></text></g><g><title>core::iter::adapters::try_process (212 samples, 0.61%)</title><rect x="62.6832%" y="869" width="0.6092%" height="15" fill="rgb(250,119,29)" fg:x="21815" fg:w="212"/><text x="62.9332%" y="879.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (191 samples, 0.55%)</title><rect x="62.7435%" y="853" width="0.5488%" height="15" fill="rgb(214,59,1)" fg:x="21836" fg:w="191"/><text x="62.9935%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (191 samples, 0.55%)</title><rect x="62.7435%" y="837" width="0.5488%" height="15" fill="rgb(223,109,25)" fg:x="21836" fg:w="191"/><text x="62.9935%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (191 samples, 0.55%)</title><rect x="62.7435%" y="821" width="0.5488%" height="15" fill="rgb(230,198,22)" fg:x="21836" fg:w="191"/><text x="62.9935%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (191 samples, 0.55%)</title><rect x="62.7435%" y="805" width="0.5488%" height="15" fill="rgb(245,184,46)" fg:x="21836" fg:w="191"/><text x="62.9935%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (176 samples, 0.51%)</title><rect x="62.7866%" y="789" width="0.5057%" height="15" fill="rgb(253,73,16)" fg:x="21851" fg:w="176"/><text x="63.0366%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (13 samples, 0.04%)</title><rect x="63.2550%" y="773" width="0.0374%" height="15" fill="rgb(206,94,45)" fg:x="22014" fg:w="13"/><text x="63.5050%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (13 samples, 0.04%)</title><rect x="63.2550%" y="757" width="0.0374%" height="15" fill="rgb(236,83,27)" fg:x="22014" fg:w="13"/><text x="63.5050%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (13 samples, 0.04%)</title><rect x="63.2550%" y="741" width="0.0374%" height="15" fill="rgb(220,196,8)" fg:x="22014" fg:w="13"/><text x="63.5050%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (13 samples, 0.04%)</title><rect x="63.2550%" y="725" width="0.0374%" height="15" fill="rgb(254,185,14)" fg:x="22014" fg:w="13"/><text x="63.5050%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.04%)</title><rect x="63.2550%" y="709" width="0.0374%" height="15" fill="rgb(226,50,22)" fg:x="22014" fg:w="13"/><text x="63.5050%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.04%)</title><rect x="63.2550%" y="693" width="0.0374%" height="15" fill="rgb(253,147,0)" fg:x="22014" fg:w="13"/><text x="63.5050%" y="703.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.04%)</title><rect x="63.2550%" y="677" width="0.0374%" height="15" fill="rgb(252,46,33)" fg:x="22014" fg:w="13"/><text x="63.5050%" y="687.50"></text></g><g><title>mallocx (7 samples, 0.02%)</title><rect x="63.2722%" y="661" width="0.0201%" height="15" fill="rgb(242,22,54)" fg:x="22020" fg:w="7"/><text x="63.5222%" y="671.50"></text></g><g><title>imalloc (7 samples, 0.02%)</title><rect x="63.2722%" y="645" width="0.0201%" height="15" fill="rgb(223,178,32)" fg:x="22020" fg:w="7"/><text x="63.5222%" y="655.50"></text></g><g><title>imalloc_body (7 samples, 0.02%)</title><rect x="63.2722%" y="629" width="0.0201%" height="15" fill="rgb(214,106,53)" fg:x="22020" fg:w="7"/><text x="63.5222%" y="639.50"></text></g><g><title>imalloc_no_sample (7 samples, 0.02%)</title><rect x="63.2722%" y="613" width="0.0201%" height="15" fill="rgb(232,65,50)" fg:x="22020" fg:w="7"/><text x="63.5222%" y="623.50"></text></g><g><title>iallocztm (7 samples, 0.02%)</title><rect x="63.2722%" y="597" width="0.0201%" height="15" fill="rgb(231,110,28)" fg:x="22020" fg:w="7"/><text x="63.5222%" y="607.50"></text></g><g><title>arena_malloc (7 samples, 0.02%)</title><rect x="63.2722%" y="581" width="0.0201%" height="15" fill="rgb(216,71,40)" fg:x="22020" fg:w="7"/><text x="63.5222%" y="591.50"></text></g><g><title>tcache_alloc_small (6 samples, 0.02%)</title><rect x="63.2751%" y="565" width="0.0172%" height="15" fill="rgb(229,89,53)" fg:x="22021" fg:w="6"/><text x="63.5251%" y="575.50"></text></g><g><title>cache_bin_alloc_easy (6 samples, 0.02%)</title><rect x="63.2751%" y="549" width="0.0172%" height="15" fill="rgb(210,124,14)" fg:x="22021" fg:w="6"/><text x="63.5251%" y="559.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::pop_ty (32 samples, 0.09%)</title><rect x="63.2923%" y="917" width="0.0919%" height="15" fill="rgb(236,213,6)" fg:x="22027" fg:w="32"/><text x="63.5423%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (32 samples, 0.09%)</title><rect x="63.2923%" y="901" width="0.0919%" height="15" fill="rgb(228,41,5)" fg:x="22027" fg:w="32"/><text x="63.5423%" y="911.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::check_eq (23 samples, 0.07%)</title><rect x="63.3843%" y="917" width="0.0661%" height="15" fill="rgb(221,167,25)" fg:x="22059" fg:w="23"/><text x="63.6343%" y="927.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (20 samples, 0.06%)</title><rect x="63.3929%" y="901" width="0.0575%" height="15" fill="rgb(228,144,37)" fg:x="22062" fg:w="20"/><text x="63.6429%" y="911.50"></text></g><g><title>core::cmp::PartialEq::ne (20 samples, 0.06%)</title><rect x="63.3929%" y="885" width="0.0575%" height="15" fill="rgb(227,189,38)" fg:x="22062" fg:w="20"/><text x="63.6429%" y="895.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::cmp::PartialEq&gt;::eq (18 samples, 0.05%)</title><rect x="63.3987%" y="869" width="0.0517%" height="15" fill="rgb(218,8,2)" fg:x="22064" fg:w="18"/><text x="63.6487%" y="879.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4 samples, 0.01%)</title><rect x="63.4389%" y="853" width="0.0115%" height="15" fill="rgb(209,61,28)" fg:x="22078" fg:w="4"/><text x="63.6889%" y="863.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (4 samples, 0.01%)</title><rect x="63.4389%" y="837" width="0.0115%" height="15" fill="rgb(233,140,39)" fg:x="22078" fg:w="4"/><text x="63.6889%" y="847.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (4 samples, 0.01%)</title><rect x="63.4389%" y="821" width="0.0115%" height="15" fill="rgb(251,66,48)" fg:x="22078" fg:w="4"/><text x="63.6889%" y="831.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (4 samples, 0.01%)</title><rect x="63.4389%" y="805" width="0.0115%" height="15" fill="rgb(210,44,45)" fg:x="22078" fg:w="4"/><text x="63.6889%" y="815.50"></text></g><g><title>core::cmp::PartialEq::ne (4 samples, 0.01%)</title><rect x="63.4389%" y="789" width="0.0115%" height="15" fill="rgb(214,136,46)" fg:x="22078" fg:w="4"/><text x="63.6889%" y="799.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::cmp::PartialEq&gt;::eq (4 samples, 0.01%)</title><rect x="63.4389%" y="773" width="0.0115%" height="15" fill="rgb(207,130,50)" fg:x="22078" fg:w="4"/><text x="63.6889%" y="783.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (8 samples, 0.02%)</title><rect x="63.6429%" y="885" width="0.0230%" height="15" fill="rgb(228,102,49)" fg:x="22149" fg:w="8"/><text x="63.8929%" y="895.50"></text></g><g><title>alloc::alloc::exchange_malloc (8 samples, 0.02%)</title><rect x="63.6429%" y="869" width="0.0230%" height="15" fill="rgb(253,55,1)" fg:x="22149" fg:w="8"/><text x="63.8929%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.02%)</title><rect x="63.6429%" y="853" width="0.0230%" height="15" fill="rgb(238,222,9)" fg:x="22149" fg:w="8"/><text x="63.8929%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.02%)</title><rect x="63.6429%" y="837" width="0.0230%" height="15" fill="rgb(246,99,6)" fg:x="22149" fg:w="8"/><text x="63.8929%" y="847.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.02%)</title><rect x="63.6429%" y="821" width="0.0230%" height="15" fill="rgb(219,110,26)" fg:x="22149" fg:w="8"/><text x="63.8929%" y="831.50"></text></g><g><title>mallocx (5 samples, 0.01%)</title><rect x="63.6515%" y="805" width="0.0144%" height="15" fill="rgb(239,160,33)" fg:x="22152" fg:w="5"/><text x="63.9015%" y="815.50"></text></g><g><title>imalloc (5 samples, 0.01%)</title><rect x="63.6515%" y="789" width="0.0144%" height="15" fill="rgb(220,202,23)" fg:x="22152" fg:w="5"/><text x="63.9015%" y="799.50"></text></g><g><title>imalloc_body (5 samples, 0.01%)</title><rect x="63.6515%" y="773" width="0.0144%" height="15" fill="rgb(208,80,26)" fg:x="22152" fg:w="5"/><text x="63.9015%" y="783.50"></text></g><g><title>imalloc_no_sample (5 samples, 0.01%)</title><rect x="63.6515%" y="757" width="0.0144%" height="15" fill="rgb(243,85,7)" fg:x="22152" fg:w="5"/><text x="63.9015%" y="767.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (33 samples, 0.09%)</title><rect x="63.6716%" y="869" width="0.0948%" height="15" fill="rgb(228,77,47)" fg:x="22159" fg:w="33"/><text x="63.9216%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (13 samples, 0.04%)</title><rect x="63.7693%" y="869" width="0.0374%" height="15" fill="rgb(212,226,8)" fg:x="22193" fg:w="13"/><text x="64.0193%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (13 samples, 0.04%)</title><rect x="63.7693%" y="853" width="0.0374%" height="15" fill="rgb(241,120,54)" fg:x="22193" fg:w="13"/><text x="64.0193%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (9 samples, 0.03%)</title><rect x="63.7808%" y="837" width="0.0259%" height="15" fill="rgb(226,80,16)" fg:x="22197" fg:w="9"/><text x="64.0308%" y="847.50"></text></g><g><title>alloc::raw_vec::finish_grow (9 samples, 0.03%)</title><rect x="63.7808%" y="821" width="0.0259%" height="15" fill="rgb(240,76,13)" fg:x="22197" fg:w="9"/><text x="64.0308%" y="831.50"></text></g><g><title>mallocx (4 samples, 0.01%)</title><rect x="63.7952%" y="805" width="0.0115%" height="15" fill="rgb(252,74,8)" fg:x="22202" fg:w="4"/><text x="64.0452%" y="815.50"></text></g><g><title>imalloc (4 samples, 0.01%)</title><rect x="63.7952%" y="789" width="0.0115%" height="15" fill="rgb(244,155,2)" fg:x="22202" fg:w="4"/><text x="64.0452%" y="799.50"></text></g><g><title>tsd_fetch (4 samples, 0.01%)</title><rect x="63.7952%" y="773" width="0.0115%" height="15" fill="rgb(215,81,35)" fg:x="22202" fg:w="4"/><text x="64.0452%" y="783.50"></text></g><g><title>tsd_fetch_impl (4 samples, 0.01%)</title><rect x="63.7952%" y="757" width="0.0115%" height="15" fill="rgb(206,55,2)" fg:x="22202" fg:w="4"/><text x="64.0452%" y="767.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (19 samples, 0.05%)</title><rect x="63.8067%" y="869" width="0.0546%" height="15" fill="rgb(231,2,34)" fg:x="22206" fg:w="19"/><text x="64.0567%" y="879.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (144 samples, 0.41%)</title><rect x="63.4504%" y="917" width="0.4138%" height="15" fill="rgb(242,176,48)" fg:x="22082" fg:w="144"/><text x="63.7004%" y="927.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (142 samples, 0.41%)</title><rect x="63.4561%" y="901" width="0.4080%" height="15" fill="rgb(249,31,36)" fg:x="22084" fg:w="142"/><text x="63.7061%" y="911.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (67 samples, 0.19%)</title><rect x="63.6716%" y="885" width="0.1925%" height="15" fill="rgb(205,18,17)" fg:x="22159" fg:w="67"/><text x="63.9216%" y="895.50"></text></g><g><title>__rust_alloc (8 samples, 0.02%)</title><rect x="63.8641%" y="805" width="0.0230%" height="15" fill="rgb(254,130,5)" fg:x="22226" fg:w="8"/><text x="64.1141%" y="815.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (8 samples, 0.02%)</title><rect x="63.8641%" y="789" width="0.0230%" height="15" fill="rgb(229,42,45)" fg:x="22226" fg:w="8"/><text x="64.1141%" y="799.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (24 samples, 0.07%)</title><rect x="63.8641%" y="901" width="0.0690%" height="15" fill="rgb(245,95,25)" fg:x="22226" fg:w="24"/><text x="64.1141%" y="911.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (24 samples, 0.07%)</title><rect x="63.8641%" y="885" width="0.0690%" height="15" fill="rgb(249,193,38)" fg:x="22226" fg:w="24"/><text x="64.1141%" y="895.50"></text></g><g><title>alloc::alloc::exchange_malloc (24 samples, 0.07%)</title><rect x="63.8641%" y="869" width="0.0690%" height="15" fill="rgb(241,140,43)" fg:x="22226" fg:w="24"/><text x="64.1141%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (24 samples, 0.07%)</title><rect x="63.8641%" y="853" width="0.0690%" height="15" fill="rgb(245,78,48)" fg:x="22226" fg:w="24"/><text x="64.1141%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (24 samples, 0.07%)</title><rect x="63.8641%" y="837" width="0.0690%" height="15" fill="rgb(214,92,39)" fg:x="22226" fg:w="24"/><text x="64.1141%" y="847.50"></text></g><g><title>alloc::alloc::alloc (24 samples, 0.07%)</title><rect x="63.8641%" y="821" width="0.0690%" height="15" fill="rgb(211,189,14)" fg:x="22226" fg:w="24"/><text x="64.1141%" y="831.50"></text></g><g><title>mallocx (16 samples, 0.05%)</title><rect x="63.8871%" y="805" width="0.0460%" height="15" fill="rgb(218,7,24)" fg:x="22234" fg:w="16"/><text x="64.1371%" y="815.50"></text></g><g><title>imalloc (16 samples, 0.05%)</title><rect x="63.8871%" y="789" width="0.0460%" height="15" fill="rgb(224,200,49)" fg:x="22234" fg:w="16"/><text x="64.1371%" y="799.50"></text></g><g><title>imalloc_body (16 samples, 0.05%)</title><rect x="63.8871%" y="773" width="0.0460%" height="15" fill="rgb(218,210,14)" fg:x="22234" fg:w="16"/><text x="64.1371%" y="783.50"></text></g><g><title>imalloc_no_sample (16 samples, 0.05%)</title><rect x="63.8871%" y="757" width="0.0460%" height="15" fill="rgb(234,142,31)" fg:x="22234" fg:w="16"/><text x="64.1371%" y="767.50"></text></g><g><title>iallocztm (16 samples, 0.05%)</title><rect x="63.8871%" y="741" width="0.0460%" height="15" fill="rgb(227,165,2)" fg:x="22234" fg:w="16"/><text x="64.1371%" y="751.50"></text></g><g><title>arena_malloc (16 samples, 0.05%)</title><rect x="63.8871%" y="725" width="0.0460%" height="15" fill="rgb(232,44,46)" fg:x="22234" fg:w="16"/><text x="64.1371%" y="735.50"></text></g><g><title>tcache_alloc_small (16 samples, 0.05%)</title><rect x="63.8871%" y="709" width="0.0460%" height="15" fill="rgb(236,149,47)" fg:x="22234" fg:w="16"/><text x="64.1371%" y="719.50"></text></g><g><title>cache_bin_alloc_easy (16 samples, 0.05%)</title><rect x="63.8871%" y="693" width="0.0460%" height="15" fill="rgb(227,45,31)" fg:x="22234" fg:w="16"/><text x="64.1371%" y="703.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::new (38 samples, 0.11%)</title><rect x="63.8641%" y="917" width="0.1092%" height="15" fill="rgb(240,176,51)" fg:x="22226" fg:w="38"/><text x="64.1141%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (14 samples, 0.04%)</title><rect x="63.9331%" y="901" width="0.0402%" height="15" fill="rgb(249,146,41)" fg:x="22250" fg:w="14"/><text x="64.1831%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (14 samples, 0.04%)</title><rect x="63.9331%" y="885" width="0.0402%" height="15" fill="rgb(213,208,4)" fg:x="22250" fg:w="14"/><text x="64.1831%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (14 samples, 0.04%)</title><rect x="63.9331%" y="869" width="0.0402%" height="15" fill="rgb(245,84,36)" fg:x="22250" fg:w="14"/><text x="64.1831%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (14 samples, 0.04%)</title><rect x="63.9331%" y="853" width="0.0402%" height="15" fill="rgb(254,84,18)" fg:x="22250" fg:w="14"/><text x="64.1831%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (14 samples, 0.04%)</title><rect x="63.9331%" y="837" width="0.0402%" height="15" fill="rgb(225,38,54)" fg:x="22250" fg:w="14"/><text x="64.1831%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (14 samples, 0.04%)</title><rect x="63.9331%" y="821" width="0.0402%" height="15" fill="rgb(246,50,30)" fg:x="22250" fg:w="14"/><text x="64.1831%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (14 samples, 0.04%)</title><rect x="63.9331%" y="805" width="0.0402%" height="15" fill="rgb(246,148,9)" fg:x="22250" fg:w="14"/><text x="64.1831%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (14 samples, 0.04%)</title><rect x="63.9331%" y="789" width="0.0402%" height="15" fill="rgb(223,75,4)" fg:x="22250" fg:w="14"/><text x="64.1831%" y="799.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::store_loc (22 samples, 0.06%)</title><rect x="63.9733%" y="917" width="0.0632%" height="15" fill="rgb(239,148,41)" fg:x="22264" fg:w="22"/><text x="64.2233%" y="927.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::swap_loc (18 samples, 0.05%)</title><rect x="63.9848%" y="901" width="0.0517%" height="15" fill="rgb(205,195,3)" fg:x="22268" fg:w="18"/><text x="64.2348%" y="911.50"></text></g><g><title>core::mem::replace (18 samples, 0.05%)</title><rect x="63.9848%" y="885" width="0.0517%" height="15" fill="rgb(254,161,1)" fg:x="22268" fg:w="18"/><text x="64.2348%" y="895.50"></text></g><g><title>core::ptr::write (18 samples, 0.05%)</title><rect x="63.9848%" y="869" width="0.0517%" height="15" fill="rgb(211,229,8)" fg:x="22268" fg:w="18"/><text x="64.2348%" y="879.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::make_call_frame (570 samples, 1.64%)</title><rect x="62.4677%" y="933" width="1.6378%" height="15" fill="rgb(220,97,9)" fg:x="21740" fg:w="570"/><text x="62.7177%" y="943.50"></text></g><g><title>sdallocx (24 samples, 0.07%)</title><rect x="64.0365%" y="917" width="0.0690%" height="15" fill="rgb(240,218,8)" fg:x="22286" fg:w="24"/><text x="64.2865%" y="927.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::clone::Clone&gt;::clone (10 samples, 0.03%)</title><rect x="64.1055%" y="837" width="0.0287%" height="15" fill="rgb(250,44,0)" fg:x="22310" fg:w="10"/><text x="64.3555%" y="847.50"></text></g><g><title>&lt;T as alloc::alloc::WriteCloneIntoRaw&gt;::write_clone_into_raw (10 samples, 0.03%)</title><rect x="64.1055%" y="821" width="0.0287%" height="15" fill="rgb(236,41,53)" fg:x="22310" fg:w="10"/><text x="64.3555%" y="831.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (7 samples, 0.02%)</title><rect x="64.1141%" y="805" width="0.0201%" height="15" fill="rgb(218,227,13)" fg:x="22313" fg:w="7"/><text x="64.3641%" y="815.50"></text></g><g><title>core::ptr::write (7 samples, 0.02%)</title><rect x="64.1141%" y="789" width="0.0201%" height="15" fill="rgb(217,94,32)" fg:x="22313" fg:w="7"/><text x="64.3641%" y="799.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (16 samples, 0.05%)</title><rect x="64.1055%" y="853" width="0.0460%" height="15" fill="rgb(213,217,12)" fg:x="22310" fg:w="16"/><text x="64.3555%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.02%)</title><rect x="64.1342%" y="837" width="0.0172%" height="15" fill="rgb(229,13,46)" fg:x="22320" fg:w="6"/><text x="64.3842%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.01%)</title><rect x="64.1400%" y="821" width="0.0115%" height="15" fill="rgb(243,139,5)" fg:x="22322" fg:w="4"/><text x="64.3900%" y="831.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.01%)</title><rect x="64.1400%" y="805" width="0.0115%" height="15" fill="rgb(249,38,45)" fg:x="22322" fg:w="4"/><text x="64.3900%" y="815.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.01%)</title><rect x="64.1400%" y="789" width="0.0115%" height="15" fill="rgb(216,70,11)" fg:x="22322" fg:w="4"/><text x="64.3900%" y="799.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::Type as core::clone::Clone&gt;::clone (4 samples, 0.01%)</title><rect x="64.1400%" y="773" width="0.0115%" height="15" fill="rgb(253,101,25)" fg:x="22322" fg:w="4"/><text x="64.3900%" y="783.50"></text></g><g><title>&lt;move_vm_types::loaded_data::runtime_types::CachedStructIndex as core::clone::Clone&gt;::clone (4 samples, 0.01%)</title><rect x="64.1400%" y="757" width="0.0115%" height="15" fill="rgb(207,197,30)" fg:x="22322" fg:w="4"/><text x="64.3900%" y="767.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::make_new_frame (24 samples, 0.07%)</title><rect x="64.1055%" y="933" width="0.0690%" height="15" fill="rgb(238,87,13)" fg:x="22310" fg:w="24"/><text x="64.3555%" y="943.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (24 samples, 0.07%)</title><rect x="64.1055%" y="917" width="0.0690%" height="15" fill="rgb(215,155,8)" fg:x="22310" fg:w="24"/><text x="64.3555%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (24 samples, 0.07%)</title><rect x="64.1055%" y="901" width="0.0690%" height="15" fill="rgb(239,166,38)" fg:x="22310" fg:w="24"/><text x="64.3555%" y="911.50"></text></g><g><title>alloc::slice::hack::to_vec (24 samples, 0.07%)</title><rect x="64.1055%" y="885" width="0.0690%" height="15" fill="rgb(240,194,35)" fg:x="22310" fg:w="24"/><text x="64.3555%" y="895.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (24 samples, 0.07%)</title><rect x="64.1055%" y="869" width="0.0690%" height="15" fill="rgb(219,10,44)" fg:x="22310" fg:w="24"/><text x="64.3555%" y="879.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (7 samples, 0.02%)</title><rect x="64.1544%" y="853" width="0.0201%" height="15" fill="rgb(251,220,35)" fg:x="22327" fg:w="7"/><text x="64.4044%" y="863.50"></text></g><g><title>move_vm_runtime::interpreter::Stack::last_n (5 samples, 0.01%)</title><rect x="64.1745%" y="933" width="0.0144%" height="15" fill="rgb(218,117,13)" fg:x="22334" fg:w="5"/><text x="64.4245%" y="943.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (5 samples, 0.01%)</title><rect x="64.1745%" y="917" width="0.0144%" height="15" fill="rgb(221,213,40)" fg:x="22334" fg:w="5"/><text x="64.4245%" y="927.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (5 samples, 0.01%)</title><rect x="64.1745%" y="901" width="0.0144%" height="15" fill="rgb(251,224,35)" fg:x="22334" fg:w="5"/><text x="64.4245%" y="911.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (5 samples, 0.01%)</title><rect x="64.1745%" y="885" width="0.0144%" height="15" fill="rgb(241,33,39)" fg:x="22334" fg:w="5"/><text x="64.4245%" y="895.50"></text></g><g><title>move_vm_runtime::loader::Loader::function_at (50 samples, 0.14%)</title><rect x="64.1888%" y="933" width="0.1437%" height="15" fill="rgb(222,74,17)" fg:x="22339" fg:w="50"/><text x="64.4388%" y="943.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::function_at (50 samples, 0.14%)</title><rect x="64.1888%" y="917" width="0.1437%" height="15" fill="rgb(225,103,0)" fg:x="22339" fg:w="50"/><text x="64.4388%" y="927.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::clone::Clone&gt;::clone (50 samples, 0.14%)</title><rect x="64.1888%" y="901" width="0.1437%" height="15" fill="rgb(240,0,12)" fg:x="22339" fg:w="50"/><text x="64.4388%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (50 samples, 0.14%)</title><rect x="64.1888%" y="885" width="0.1437%" height="15" fill="rgb(233,213,37)" fg:x="22339" fg:w="50"/><text x="64.4388%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_add (50 samples, 0.14%)</title><rect x="64.1888%" y="869" width="0.1437%" height="15" fill="rgb(225,84,52)" fg:x="22339" fg:w="50"/><text x="64.4388%" y="879.50"></text></g><g><title>move_vm_runtime::loader::Resolver::function_from_handle (7 samples, 0.02%)</title><rect x="64.3325%" y="933" width="0.0201%" height="15" fill="rgb(247,160,51)" fg:x="22389" fg:w="7"/><text x="64.5825%" y="943.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (47 samples, 0.14%)</title><rect x="64.3584%" y="917" width="0.1350%" height="15" fill="rgb(244,60,51)" fg:x="22398" fg:w="47"/><text x="64.6084%" y="927.50"></text></g><g><title>__rust_alloc (6 samples, 0.02%)</title><rect x="64.5308%" y="853" width="0.0172%" height="15" fill="rgb(233,114,7)" fg:x="22458" fg:w="6"/><text x="64.7808%" y="863.50"></text></g><g><title>&lt;jemallocator::Jemalloc as core::alloc::global::GlobalAlloc&gt;::alloc (6 samples, 0.02%)</title><rect x="64.5308%" y="837" width="0.0172%" height="15" fill="rgb(246,136,16)" fg:x="22458" fg:w="6"/><text x="64.7808%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (29 samples, 0.08%)</title><rect x="64.4934%" y="917" width="0.0833%" height="15" fill="rgb(243,114,45)" fg:x="22445" fg:w="29"/><text x="64.7434%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (29 samples, 0.08%)</title><rect x="64.4934%" y="901" width="0.0833%" height="15" fill="rgb(247,183,43)" fg:x="22445" fg:w="29"/><text x="64.7434%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (23 samples, 0.07%)</title><rect x="64.5107%" y="885" width="0.0661%" height="15" fill="rgb(251,210,42)" fg:x="22451" fg:w="23"/><text x="64.7607%" y="895.50"></text></g><g><title>alloc::raw_vec::finish_grow (22 samples, 0.06%)</title><rect x="64.5135%" y="869" width="0.0632%" height="15" fill="rgb(221,88,35)" fg:x="22452" fg:w="22"/><text x="64.7635%" y="879.50"></text></g><g><title>mallocx (10 samples, 0.03%)</title><rect x="64.5480%" y="853" width="0.0287%" height="15" fill="rgb(242,21,20)" fg:x="22464" fg:w="10"/><text x="64.7980%" y="863.50"></text></g><g><title>imalloc (10 samples, 0.03%)</title><rect x="64.5480%" y="837" width="0.0287%" height="15" fill="rgb(233,226,36)" fg:x="22464" fg:w="10"/><text x="64.7980%" y="847.50"></text></g><g><title>imalloc_body (10 samples, 0.03%)</title><rect x="64.5480%" y="821" width="0.0287%" height="15" fill="rgb(243,189,34)" fg:x="22464" fg:w="10"/><text x="64.7980%" y="831.50"></text></g><g><title>imalloc_no_sample (10 samples, 0.03%)</title><rect x="64.5480%" y="805" width="0.0287%" height="15" fill="rgb(207,145,50)" fg:x="22464" fg:w="10"/><text x="64.7980%" y="815.50"></text></g><g><title>move_vm_runtime::loader::Resolver::instantiate_generic_function (127 samples, 0.36%)</title><rect x="64.3584%" y="933" width="0.3649%" height="15" fill="rgb(242,1,50)" fg:x="22398" fg:w="127"/><text x="64.6084%" y="943.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst (51 samples, 0.15%)</title><rect x="64.5767%" y="917" width="0.1465%" height="15" fill="rgb(231,65,32)" fg:x="22474" fg:w="51"/><text x="64.8267%" y="927.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (47 samples, 0.14%)</title><rect x="64.5882%" y="901" width="0.1350%" height="15" fill="rgb(208,68,49)" fg:x="22478" fg:w="47"/><text x="64.8382%" y="911.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::subst::{{closure}} (8 samples, 0.02%)</title><rect x="64.7003%" y="885" width="0.0230%" height="15" fill="rgb(253,54,49)" fg:x="22517" fg:w="8"/><text x="64.9503%" y="895.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::clone_impl (8 samples, 0.02%)</title><rect x="64.7003%" y="869" width="0.0230%" height="15" fill="rgb(245,186,24)" fg:x="22517" fg:w="8"/><text x="64.9503%" y="879.50"></text></g><g><title>move_vm_types::loaded_data::runtime_types::Type::apply_subst (8 samples, 0.02%)</title><rect x="64.7003%" y="853" width="0.0230%" height="15" fill="rgb(209,2,41)" fg:x="22517" fg:w="8"/><text x="64.9503%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (6 samples, 0.02%)</title><rect x="64.7578%" y="917" width="0.0172%" height="15" fill="rgb(242,208,54)" fg:x="22537" fg:w="6"/><text x="65.0078%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (6 samples, 0.02%)</title><rect x="64.7578%" y="901" width="0.0172%" height="15" fill="rgb(225,9,51)" fg:x="22537" fg:w="6"/><text x="65.0078%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.01%)</title><rect x="64.7606%" y="885" width="0.0144%" height="15" fill="rgb(207,207,25)" fg:x="22538" fg:w="5"/><text x="65.0106%" y="895.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.01%)</title><rect x="64.7606%" y="869" width="0.0144%" height="15" fill="rgb(253,96,18)" fg:x="22538" fg:w="5"/><text x="65.0106%" y="879.50"></text></g><g><title>mallocx (4 samples, 0.01%)</title><rect x="64.7635%" y="853" width="0.0115%" height="15" fill="rgb(252,215,20)" fg:x="22539" fg:w="4"/><text x="65.0135%" y="863.50"></text></g><g><title>imalloc (4 samples, 0.01%)</title><rect x="64.7635%" y="837" width="0.0115%" height="15" fill="rgb(245,227,26)" fg:x="22539" fg:w="4"/><text x="65.0135%" y="847.50"></text></g><g><title>imalloc_body (4 samples, 0.01%)</title><rect x="64.7635%" y="821" width="0.0115%" height="15" fill="rgb(241,208,0)" fg:x="22539" fg:w="4"/><text x="65.0135%" y="831.50"></text></g><g><title>imalloc_no_sample (4 samples, 0.01%)</title><rect x="64.7635%" y="805" width="0.0115%" height="15" fill="rgb(224,130,10)" fg:x="22539" fg:w="4"/><text x="65.0135%" y="815.50"></text></g><g><title>iallocztm (4 samples, 0.01%)</title><rect x="64.7635%" y="789" width="0.0115%" height="15" fill="rgb(237,29,0)" fg:x="22539" fg:w="4"/><text x="65.0135%" y="799.50"></text></g><g><title>arena_malloc (4 samples, 0.01%)</title><rect x="64.7635%" y="773" width="0.0115%" height="15" fill="rgb(219,27,41)" fg:x="22539" fg:w="4"/><text x="65.0135%" y="783.50"></text></g><g><title>tcache_alloc_small (4 samples, 0.01%)</title><rect x="64.7635%" y="757" width="0.0115%" height="15" fill="rgb(245,101,19)" fg:x="22539" fg:w="4"/><text x="65.0135%" y="767.50"></text></g><g><title>cache_bin_alloc_easy (4 samples, 0.01%)</title><rect x="64.7635%" y="741" width="0.0115%" height="15" fill="rgb(243,44,37)" fg:x="22539" fg:w="4"/><text x="65.0135%" y="751.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::drop_all_values (20 samples, 0.06%)</title><rect x="64.7233%" y="933" width="0.0575%" height="15" fill="rgb(228,213,43)" fg:x="22525" fg:w="20"/><text x="64.9733%" y="943.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::store_loc (4 samples, 0.01%)</title><rect x="64.7808%" y="933" width="0.0115%" height="15" fill="rgb(219,163,21)" fg:x="22545" fg:w="4"/><text x="65.0308%" y="943.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::swap_loc (4 samples, 0.01%)</title><rect x="64.7808%" y="917" width="0.0115%" height="15" fill="rgb(234,86,24)" fg:x="22545" fg:w="4"/><text x="65.0308%" y="927.50"></text></g><g><title>core::mem::replace (4 samples, 0.01%)</title><rect x="64.7808%" y="901" width="0.0115%" height="15" fill="rgb(225,10,24)" fg:x="22545" fg:w="4"/><text x="65.0308%" y="911.50"></text></g><g><title>core::ptr::write (4 samples, 0.01%)</title><rect x="64.7808%" y="885" width="0.0115%" height="15" fill="rgb(218,109,7)" fg:x="22545" fg:w="4"/><text x="65.0308%" y="895.50"></text></g><g><title>move_vm_runtime::interpreter::Interpreter::entrypoint (5,648 samples, 16.23%)</title><rect x="48.6380%" y="965" width="16.2290%" height="15" fill="rgb(210,20,26)" fg:x="16927" fg:w="5648"/><text x="48.8880%" y="975.50">move_vm_runtime::interpre..</text></g><g><title>move_vm_runtime::interpreter::Interpreter::execute_main (5,648 samples, 16.23%)</title><rect x="48.6380%" y="949" width="16.2290%" height="15" fill="rgb(216,18,1)" fg:x="16927" fg:w="5648"/><text x="48.8880%" y="959.50">move_vm_runtime::interpre..</text></g><g><title>sdallocx (26 samples, 0.07%)</title><rect x="64.7923%" y="933" width="0.0747%" height="15" fill="rgb(206,163,23)" fg:x="22549" fg:w="26"/><text x="65.0423%" y="943.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize (20 samples, 0.06%)</title><rect x="64.9848%" y="581" width="0.0575%" height="15" fill="rgb(229,150,31)" fg:x="22616" fg:w="20"/><text x="65.2348%" y="591.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize (20 samples, 0.06%)</title><rect x="64.9848%" y="565" width="0.0575%" height="15" fill="rgb(231,10,5)" fg:x="22616" fg:w="20"/><text x="65.2348%" y="575.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (20 samples, 0.06%)</title><rect x="64.9848%" y="549" width="0.0575%" height="15" fill="rgb(250,40,50)" fg:x="22616" fg:w="20"/><text x="65.2348%" y="559.50"></text></g><g><title>&lt;&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (20 samples, 0.06%)</title><rect x="64.9848%" y="533" width="0.0575%" height="15" fill="rgb(217,119,7)" fg:x="22616" fg:w="20"/><text x="65.2348%" y="543.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for [T (20 samples, 0.06%)</title><rect x="64.9848%" y="517" width="0.0575%" height="15" fill="rgb(245,214,40)" fg:x="22616" fg:w="20"/><text x="65.2348%" y="527.50"></text></g><g><title> 32]&gt;::deserialize (20 samples, 0.06%)</title><rect x="64.9848%" y="501" width="0.0575%" height="15" fill="rgb(216,187,1)" fg:x="22616" fg:w="20"/><text x="65.2348%" y="511.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (20 samples, 0.06%)</title><rect x="64.9848%" y="485" width="0.0575%" height="15" fill="rgb(237,146,21)" fg:x="22616" fg:w="20"/><text x="65.2348%" y="495.50"></text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T (20 samples, 0.06%)</title><rect x="64.9848%" y="469" width="0.0575%" height="15" fill="rgb(210,174,47)" fg:x="22616" fg:w="20"/><text x="65.2348%" y="479.50"></text></g><g><title> 32]&gt; as serde::de::Visitor&gt;::visit_seq (20 samples, 0.06%)</title><rect x="64.9848%" y="453" width="0.0575%" height="15" fill="rgb(218,111,39)" fg:x="22616" fg:w="20"/><text x="65.2348%" y="463.50"></text></g><g><title>serde::de::SeqAccess::next_element (13 samples, 0.04%)</title><rect x="65.0049%" y="437" width="0.0374%" height="15" fill="rgb(224,95,19)" fg:x="22623" fg:w="13"/><text x="65.2549%" y="447.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (13 samples, 0.04%)</title><rect x="65.0049%" y="421" width="0.0374%" height="15" fill="rgb(234,15,38)" fg:x="22623" fg:w="13"/><text x="65.2549%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (58 samples, 0.17%)</title><rect x="64.8785%" y="789" width="0.1667%" height="15" fill="rgb(246,56,12)" fg:x="22579" fg:w="58"/><text x="65.1285%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (58 samples, 0.17%)</title><rect x="64.8785%" y="773" width="0.1667%" height="15" fill="rgb(247,16,17)" fg:x="22579" fg:w="58"/><text x="65.1285%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (58 samples, 0.17%)</title><rect x="64.8785%" y="757" width="0.1667%" height="15" fill="rgb(215,151,11)" fg:x="22579" fg:w="58"/><text x="65.1285%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (58 samples, 0.17%)</title><rect x="64.8785%" y="741" width="0.1667%" height="15" fill="rgb(225,16,24)" fg:x="22579" fg:w="58"/><text x="65.1285%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (58 samples, 0.17%)</title><rect x="64.8785%" y="725" width="0.1667%" height="15" fill="rgb(217,117,5)" fg:x="22579" fg:w="58"/><text x="65.1285%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (58 samples, 0.17%)</title><rect x="64.8785%" y="709" width="0.1667%" height="15" fill="rgb(246,187,53)" fg:x="22579" fg:w="58"/><text x="65.1285%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (58 samples, 0.17%)</title><rect x="64.8785%" y="693" width="0.1667%" height="15" fill="rgb(241,71,40)" fg:x="22579" fg:w="58"/><text x="65.1285%" y="703.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (58 samples, 0.17%)</title><rect x="64.8785%" y="677" width="0.1667%" height="15" fill="rgb(231,67,39)" fg:x="22579" fg:w="58"/><text x="65.1285%" y="687.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::deserialize_args::{{closure}} (58 samples, 0.17%)</title><rect x="64.8785%" y="661" width="0.1667%" height="15" fill="rgb(222,120,24)" fg:x="22579" fg:w="58"/><text x="65.1285%" y="671.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::deserialize_value (42 samples, 0.12%)</title><rect x="64.9244%" y="645" width="0.1207%" height="15" fill="rgb(248,3,3)" fg:x="22595" fg:w="42"/><text x="65.1744%" y="655.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (36 samples, 0.10%)</title><rect x="64.9417%" y="629" width="0.1034%" height="15" fill="rgb(228,218,5)" fg:x="22601" fg:w="36"/><text x="65.1917%" y="639.50"></text></g><g><title>bcs::de::from_bytes_seed (36 samples, 0.10%)</title><rect x="64.9417%" y="613" width="0.1034%" height="15" fill="rgb(212,202,43)" fg:x="22601" fg:w="36"/><text x="65.1917%" y="623.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (29 samples, 0.08%)</title><rect x="64.9618%" y="597" width="0.0833%" height="15" fill="rgb(235,183,2)" fg:x="22608" fg:w="29"/><text x="65.2118%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (64 samples, 0.18%)</title><rect x="64.8727%" y="821" width="0.1839%" height="15" fill="rgb(230,165,10)" fg:x="22577" fg:w="64"/><text x="65.1227%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (64 samples, 0.18%)</title><rect x="64.8727%" y="805" width="0.1839%" height="15" fill="rgb(219,54,40)" fg:x="22577" fg:w="64"/><text x="65.1227%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::GenericShunt&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::enumerate::Enumerate&lt;core::iter::adapters::zip::Zip&lt;alloc::vec::into_iter::IntoIter&lt;move_vm_types::loaded_data::runtime_types::Type&gt;,alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;,move_vm_runtime::runtime::VMRuntime::deserialize_args&lt;alloc::vec::Vec&lt;u8&gt;&gt;::{{closure}}&gt;,core::result::Result&lt;core::convert::Infallible,move_binary_format::errors::PartialVMError&gt;&gt;&gt; (4 samples, 0.01%)</title><rect x="65.0451%" y="789" width="0.0115%" height="15" fill="rgb(244,73,9)" fg:x="22637" fg:w="4"/><text x="65.2951%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;core::iter::adapters::enumerate::Enumerate&lt;core::iter::adapters::zip::Zip&lt;alloc::vec::into_iter::IntoIter&lt;move_vm_types::loaded_data::runtime_types::Type&gt;,alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;,move_vm_runtime::runtime::VMRuntime::deserialize_args&lt;alloc::vec::Vec&lt;u8&gt;&gt;::{{closure}}&gt;&gt; (4 samples, 0.01%)</title><rect x="65.0451%" y="773" width="0.0115%" height="15" fill="rgb(212,32,45)" fg:x="22637" fg:w="4"/><text x="65.2951%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::enumerate::Enumerate&lt;core::iter::adapters::zip::Zip&lt;alloc::vec::into_iter::IntoIter&lt;move_vm_types::loaded_data::runtime_types::Type&gt;,alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt;&gt; (4 samples, 0.01%)</title><rect x="65.0451%" y="757" width="0.0115%" height="15" fill="rgb(205,58,31)" fg:x="22637" fg:w="4"/><text x="65.2951%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::zip::Zip&lt;alloc::vec::into_iter::IntoIter&lt;move_vm_types::loaded_data::runtime_types::Type&gt;,alloc::vec::into_iter::IntoIter&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt;&gt; (4 samples, 0.01%)</title><rect x="65.0451%" y="741" width="0.0115%" height="15" fill="rgb(250,120,43)" fg:x="22637" fg:w="4"/><text x="65.2951%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (4 samples, 0.01%)</title><rect x="65.0624%" y="661" width="0.0115%" height="15" fill="rgb(235,13,10)" fg:x="22643" fg:w="4"/><text x="65.3124%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (4 samples, 0.01%)</title><rect x="65.0624%" y="645" width="0.0115%" height="15" fill="rgb(232,219,31)" fg:x="22643" fg:w="4"/><text x="65.3124%" y="655.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="65.0624%" y="629" width="0.0115%" height="15" fill="rgb(218,157,51)" fg:x="22643" fg:w="4"/><text x="65.3124%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.01%)</title><rect x="65.0624%" y="613" width="0.0115%" height="15" fill="rgb(211,91,52)" fg:x="22643" fg:w="4"/><text x="65.3124%" y="623.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.01%)</title><rect x="65.0624%" y="597" width="0.0115%" height="15" fill="rgb(240,173,1)" fg:x="22643" fg:w="4"/><text x="65.3124%" y="607.50"></text></g><g><title>move_vm_runtime::loader::Loader::type_to_type_layout (4 samples, 0.01%)</title><rect x="65.0796%" y="661" width="0.0115%" height="15" fill="rgb(248,20,47)" fg:x="22649" fg:w="4"/><text x="65.3296%" y="671.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize (13 samples, 0.04%)</title><rect x="65.1026%" y="613" width="0.0374%" height="15" fill="rgb(217,221,40)" fg:x="22657" fg:w="13"/><text x="65.3526%" y="623.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize (10 samples, 0.03%)</title><rect x="65.1112%" y="597" width="0.0287%" height="15" fill="rgb(226,149,51)" fg:x="22660" fg:w="10"/><text x="65.3612%" y="607.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_newtype_struct (10 samples, 0.03%)</title><rect x="65.1112%" y="581" width="0.0287%" height="15" fill="rgb(252,193,7)" fg:x="22660" fg:w="10"/><text x="65.3612%" y="591.50"></text></g><g><title>&lt;&lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::_::&lt;impl serde::de::Deserialize for &lt;move_core_types::account_address::AccountAddress as serde::de::Deserialize&gt;::deserialize::Value&gt;::deserialize::__Visitor as serde::de::Visitor&gt;::visit_newtype_struct (9 samples, 0.03%)</title><rect x="65.1141%" y="565" width="0.0259%" height="15" fill="rgb(205,123,0)" fg:x="22661" fg:w="9"/><text x="65.3641%" y="575.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for [T (9 samples, 0.03%)</title><rect x="65.1141%" y="549" width="0.0259%" height="15" fill="rgb(233,173,25)" fg:x="22661" fg:w="9"/><text x="65.3641%" y="559.50"></text></g><g><title> 32]&gt;::deserialize (9 samples, 0.03%)</title><rect x="65.1141%" y="533" width="0.0259%" height="15" fill="rgb(216,63,32)" fg:x="22661" fg:w="9"/><text x="65.3641%" y="543.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_tuple (9 samples, 0.03%)</title><rect x="65.1141%" y="517" width="0.0259%" height="15" fill="rgb(209,56,45)" fg:x="22661" fg:w="9"/><text x="65.3641%" y="527.50"></text></g><g><title>&lt;serde::de::impls::ArrayVisitor&lt;[T (9 samples, 0.03%)</title><rect x="65.1141%" y="501" width="0.0259%" height="15" fill="rgb(226,111,49)" fg:x="22661" fg:w="9"/><text x="65.3641%" y="511.50"></text></g><g><title> 32]&gt; as serde::de::Visitor&gt;::visit_seq (9 samples, 0.03%)</title><rect x="65.1141%" y="485" width="0.0259%" height="15" fill="rgb(244,181,21)" fg:x="22661" fg:w="9"/><text x="65.3641%" y="495.50"></text></g><g><title>serde::de::SeqAccess::next_element (8 samples, 0.02%)</title><rect x="65.1169%" y="469" width="0.0230%" height="15" fill="rgb(222,126,15)" fg:x="22662" fg:w="8"/><text x="65.3669%" y="479.50"></text></g><g><title>&lt;bcs::de::SeqDeserializer as serde::de::SeqAccess&gt;::next_element_seed (8 samples, 0.02%)</title><rect x="65.1169%" y="453" width="0.0230%" height="15" fill="rgb(222,95,17)" fg:x="22662" fg:w="8"/><text x="65.3669%" y="463.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (8 samples, 0.02%)</title><rect x="65.1169%" y="437" width="0.0230%" height="15" fill="rgb(254,46,5)" fg:x="22662" fg:w="8"/><text x="65.3669%" y="447.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u8&gt;::deserialize (8 samples, 0.02%)</title><rect x="65.1169%" y="421" width="0.0230%" height="15" fill="rgb(236,216,35)" fg:x="22662" fg:w="8"/><text x="65.3669%" y="431.50"></text></g><g><title>&lt;&amp;mut bcs::de::Deserializer as serde::de::Deserializer&gt;::deserialize_u8 (8 samples, 0.02%)</title><rect x="65.1169%" y="405" width="0.0230%" height="15" fill="rgb(217,187,26)" fg:x="22662" fg:w="8"/><text x="65.3669%" y="415.50"></text></g><g><title>bcs::de::Deserializer::parse_u8 (6 samples, 0.02%)</title><rect x="65.1227%" y="389" width="0.0172%" height="15" fill="rgb(207,192,25)" fg:x="22664" fg:w="6"/><text x="65.3727%" y="399.50"></text></g><g><title>bcs::de::Deserializer::next (6 samples, 0.02%)</title><rect x="65.1227%" y="373" width="0.0172%" height="15" fill="rgb(253,135,27)" fg:x="22664" fg:w="6"/><text x="65.3727%" y="383.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::deserialize_value (30 samples, 0.09%)</title><rect x="65.0624%" y="677" width="0.0862%" height="15" fill="rgb(211,122,29)" fg:x="22643" fg:w="30"/><text x="65.3124%" y="687.50"></text></g><g><title>move_vm_types::values::values_impl::Value::simple_deserialize (20 samples, 0.06%)</title><rect x="65.0911%" y="661" width="0.0575%" height="15" fill="rgb(233,162,40)" fg:x="22653" fg:w="20"/><text x="65.3411%" y="671.50"></text></g><g><title>bcs::de::from_bytes_seed (16 samples, 0.05%)</title><rect x="65.1026%" y="645" width="0.0460%" height="15" fill="rgb(222,184,47)" fg:x="22657" fg:w="16"/><text x="65.3526%" y="655.50"></text></g><g><title>&lt;move_vm_types::values::values_impl::SeedWrapper&lt;&amp;move_core_types::value::MoveTypeLayout&gt; as serde::de::DeserializeSeed&gt;::deserialize (16 samples, 0.05%)</title><rect x="65.1026%" y="629" width="0.0460%" height="15" fill="rgb(249,99,23)" fg:x="22657" fg:w="16"/><text x="65.3526%" y="639.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::borrow_loc (4 samples, 0.01%)</title><rect x="65.1486%" y="677" width="0.0115%" height="15" fill="rgb(214,60,12)" fg:x="22673" fg:w="4"/><text x="65.3986%" y="687.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow (4 samples, 0.01%)</title><rect x="65.1486%" y="661" width="0.0115%" height="15" fill="rgb(250,229,36)" fg:x="22673" fg:w="4"/><text x="65.3986%" y="671.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow (4 samples, 0.01%)</title><rect x="65.1486%" y="645" width="0.0115%" height="15" fill="rgb(232,195,10)" fg:x="22673" fg:w="4"/><text x="65.3986%" y="655.50"></text></g><g><title>core::cell::BorrowRef::new (4 samples, 0.01%)</title><rect x="65.1486%" y="629" width="0.0115%" height="15" fill="rgb(205,213,31)" fg:x="22673" fg:w="4"/><text x="65.3986%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (40 samples, 0.11%)</title><rect x="65.0566%" y="821" width="0.1149%" height="15" fill="rgb(237,43,8)" fg:x="22641" fg:w="40"/><text x="65.3066%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (40 samples, 0.11%)</title><rect x="65.0566%" y="805" width="0.1149%" height="15" fill="rgb(216,208,3)" fg:x="22641" fg:w="40"/><text x="65.3066%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (40 samples, 0.11%)</title><rect x="65.0566%" y="789" width="0.1149%" height="15" fill="rgb(228,179,44)" fg:x="22641" fg:w="40"/><text x="65.3066%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (40 samples, 0.11%)</title><rect x="65.0566%" y="773" width="0.1149%" height="15" fill="rgb(230,192,27)" fg:x="22641" fg:w="40"/><text x="65.3066%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (40 samples, 0.11%)</title><rect x="65.0566%" y="757" width="0.1149%" height="15" fill="rgb(251,30,38)" fg:x="22641" fg:w="40"/><text x="65.3066%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (40 samples, 0.11%)</title><rect x="65.0566%" y="741" width="0.1149%" height="15" fill="rgb(246,55,52)" fg:x="22641" fg:w="40"/><text x="65.3066%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::enumerate::{{closure}} (40 samples, 0.11%)</title><rect x="65.0566%" y="725" width="0.1149%" height="15" fill="rgb(249,79,26)" fg:x="22641" fg:w="40"/><text x="65.3066%" y="735.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (40 samples, 0.11%)</title><rect x="65.0566%" y="709" width="0.1149%" height="15" fill="rgb(220,202,16)" fg:x="22641" fg:w="40"/><text x="65.3066%" y="719.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::deserialize_args::{{closure}} (40 samples, 0.11%)</title><rect x="65.0566%" y="693" width="0.1149%" height="15" fill="rgb(250,170,23)" fg:x="22641" fg:w="40"/><text x="65.3066%" y="703.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::store_loc (4 samples, 0.01%)</title><rect x="65.1600%" y="677" width="0.0115%" height="15" fill="rgb(230,7,37)" fg:x="22677" fg:w="4"/><text x="65.4100%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (107 samples, 0.31%)</title><rect x="64.8670%" y="949" width="0.3075%" height="15" fill="rgb(213,71,1)" fg:x="22575" fg:w="107"/><text x="65.1170%" y="959.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (107 samples, 0.31%)</title><rect x="64.8670%" y="933" width="0.3075%" height="15" fill="rgb(227,87,39)" fg:x="22575" fg:w="107"/><text x="65.1170%" y="943.50"></text></g><g><title>core::iter::adapters::try_process (107 samples, 0.31%)</title><rect x="64.8670%" y="917" width="0.3075%" height="15" fill="rgb(210,41,29)" fg:x="22575" fg:w="107"/><text x="65.1170%" y="927.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (107 samples, 0.31%)</title><rect x="64.8670%" y="901" width="0.3075%" height="15" fill="rgb(206,191,31)" fg:x="22575" fg:w="107"/><text x="65.1170%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (107 samples, 0.31%)</title><rect x="64.8670%" y="885" width="0.3075%" height="15" fill="rgb(247,75,54)" fg:x="22575" fg:w="107"/><text x="65.1170%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (107 samples, 0.31%)</title><rect x="64.8670%" y="869" width="0.3075%" height="15" fill="rgb(208,54,50)" fg:x="22575" fg:w="107"/><text x="65.1170%" y="879.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (105 samples, 0.30%)</title><rect x="64.8727%" y="853" width="0.3017%" height="15" fill="rgb(214,90,37)" fg:x="22577" fg:w="105"/><text x="65.1227%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (105 samples, 0.30%)</title><rect x="64.8727%" y="837" width="0.3017%" height="15" fill="rgb(220,132,6)" fg:x="22577" fg:w="105"/><text x="65.1227%" y="847.50"></text></g><g><title>move_vm_runtime::runtime::VMRuntime::deserialize_args (111 samples, 0.32%)</title><rect x="64.8670%" y="965" width="0.3189%" height="15" fill="rgb(213,167,7)" fg:x="22575" fg:w="111"/><text x="65.1170%" y="975.50"></text></g><g><title>move_vm_types::values::values_impl::Locals::new (4 samples, 0.01%)</title><rect x="65.1744%" y="949" width="0.0115%" height="15" fill="rgb(243,36,27)" fg:x="22682" fg:w="4"/><text x="65.4244%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4 samples, 0.01%)</title><rect x="65.1744%" y="933" width="0.0115%" height="15" fill="rgb(235,147,12)" fg:x="22682" fg:w="4"/><text x="65.4244%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4 samples, 0.01%)</title><rect x="65.1744%" y="917" width="0.0115%" height="15" fill="rgb(212,198,44)" fg:x="22682" fg:w="4"/><text x="65.4244%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.01%)</title><rect x="65.1744%" y="901" width="0.0115%" height="15" fill="rgb(218,68,50)" fg:x="22682" fg:w="4"/><text x="65.4244%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (4 samples, 0.01%)</title><rect x="65.1744%" y="885" width="0.0115%" height="15" fill="rgb(224,79,48)" fg:x="22682" fg:w="4"/><text x="65.4244%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.01%)</title><rect x="65.1744%" y="869" width="0.0115%" height="15" fill="rgb(213,191,50)" fg:x="22682" fg:w="4"/><text x="65.4244%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.01%)</title><rect x="65.1744%" y="853" width="0.0115%" height="15" fill="rgb(254,146,10)" fg:x="22682" fg:w="4"/><text x="65.4244%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.01%)</title><rect x="65.1744%" y="837" width="0.0115%" height="15" fill="rgb(215,175,11)" fg:x="22682" fg:w="4"/><text x="65.4244%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (4 samples, 0.01%)</title><rect x="65.1744%" y="821" width="0.0115%" height="15" fill="rgb(207,49,7)" fg:x="22682" fg:w="4"/><text x="65.4244%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.01%)</title><rect x="65.1744%" y="805" width="0.0115%" height="15" fill="rgb(234,144,29)" fg:x="22682" fg:w="4"/><text x="65.4244%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.01%)</title><rect x="65.1744%" y="789" width="0.0115%" height="15" fill="rgb(213,222,48)" fg:x="22682" fg:w="4"/><text x="65.4244%" y="799.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.01%)</title><rect x="65.1744%" y="773" width="0.0115%" height="15" fill="rgb(222,8,6)" fg:x="22682" fg:w="4"/><text x="65.4244%" y="783.50"></text></g><g><title>&lt;&amp;mut dyn cfx_state::state_trait::CallMoveVMTrait as cfx_state::state_trait::CallMoveVMTrait&gt;::call_move_vm (5,966 samples, 17.14%)</title><rect x="48.0662%" y="1061" width="17.1427%" height="15" fill="rgb(221,114,49)" fg:x="16728" fg:w="5966"/><text x="48.3162%" y="1071.50">&lt;&amp;mut dyn cfx_state::state_..</text></g><g><title>&lt;aptos_block_executor::aptos_vm::CrossSpaceHandler&lt;S&gt; as cfx_state::state_trait::CallMoveVMTrait&gt;::call_move_vm (5,963 samples, 17.13%)</title><rect x="48.0748%" y="1045" width="17.1341%" height="15" fill="rgb(250,140,42)" fg:x="16731" fg:w="5963"/><text x="48.3248%" y="1055.50">&lt;aptos_block_executor::apto..</text></g><g><title>aptos_block_executor::aptos_vm::CrossSpaceHandler&lt;S&gt;::cross_space_transfer (5,956 samples, 17.11%)</title><rect x="48.0949%" y="1029" width="17.1140%" height="15" fill="rgb(250,150,27)" fg:x="16738" fg:w="5956"/><text x="48.3449%" y="1039.50">aptos_block_executor::aptos..</text></g><g><title>move_vm_runtime::session::Session&lt;S&gt;::execute_function_bypass_visibility (5,896 samples, 16.94%)</title><rect x="48.2673%" y="1013" width="16.9416%" height="15" fill="rgb(252,159,3)" fg:x="16798" fg:w="5896"/><text x="48.5173%" y="1023.50">move_vm_runtime::session::..</text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function (5,896 samples, 16.94%)</title><rect x="48.2673%" y="997" width="16.9416%" height="15" fill="rgb(241,182,3)" fg:x="16798" fg:w="5896"/><text x="48.5173%" y="1007.50">move_vm_runtime::runtime::..</text></g><g><title>move_vm_runtime::runtime::VMRuntime::execute_function_impl (5,807 samples, 16.69%)</title><rect x="48.5231%" y="981" width="16.6858%" height="15" fill="rgb(236,3,9)" fg:x="16887" fg:w="5807"/><text x="48.7731%" y="991.50">move_vm_runtime::runtime::..</text></g><g><title>move_vm_runtime::runtime::VMRuntime::serialize_return_values (8 samples, 0.02%)</title><rect x="65.1859%" y="965" width="0.0230%" height="15" fill="rgb(223,227,51)" fg:x="22686" fg:w="8"/><text x="65.4359%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (5 samples, 0.01%)</title><rect x="65.1945%" y="949" width="0.0144%" height="15" fill="rgb(232,133,30)" fg:x="22689" fg:w="5"/><text x="65.4445%" y="959.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (5 samples, 0.01%)</title><rect x="65.1945%" y="933" width="0.0144%" height="15" fill="rgb(209,93,27)" fg:x="22689" fg:w="5"/><text x="65.4445%" y="943.50"></text></g><g><title>core::iter::adapters::try_process (5 samples, 0.01%)</title><rect x="65.1945%" y="917" width="0.0144%" height="15" fill="rgb(208,108,34)" fg:x="22689" fg:w="5"/><text x="65.4445%" y="927.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (5 samples, 0.01%)</title><rect x="65.1945%" y="901" width="0.0144%" height="15" fill="rgb(215,189,13)" fg:x="22689" fg:w="5"/><text x="65.4445%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (5 samples, 0.01%)</title><rect x="65.1945%" y="885" width="0.0144%" height="15" fill="rgb(206,88,23)" fg:x="22689" fg:w="5"/><text x="65.4445%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (5 samples, 0.01%)</title><rect x="65.1945%" y="869" width="0.0144%" height="15" fill="rgb(240,173,0)" fg:x="22689" fg:w="5"/><text x="65.4445%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.01%)</title><rect x="65.1945%" y="853" width="0.0144%" height="15" fill="rgb(223,106,52)" fg:x="22689" fg:w="5"/><text x="65.4445%" y="863.50"></text></g><g><title>cfx_evm::state::State::require_exists (6 samples, 0.02%)</title><rect x="65.2261%" y="1045" width="0.0172%" height="15" fill="rgb(206,130,16)" fg:x="22700" fg:w="6"/><text x="65.4761%" y="1055.50"></text></g><g><title>cfx_evm::state::State::require_or_set (6 samples, 0.02%)</title><rect x="65.2261%" y="1029" width="0.0172%" height="15" fill="rgb(220,54,25)" fg:x="22700" fg:w="6"/><text x="65.4761%" y="1039.50"></text></g><g><title>&lt;cfx_evm::state::State as cfx_state::state_trait::StateOpsTrait&gt;::sub_balance (10 samples, 0.03%)</title><rect x="65.2175%" y="1061" width="0.0287%" height="15" fill="rgb(210,4,38)" fg:x="22697" fg:w="10"/><text x="65.4675%" y="1071.50"></text></g><g><title>&lt;cfx_parameters::internal_contract_addresses::CROSS_SPACE_CONTRACT_ADDRESS as core::ops::deref::Deref&gt;::deref (5 samples, 0.01%)</title><rect x="65.2463%" y="1061" width="0.0144%" height="15" fill="rgb(238,94,39)" fg:x="22707" fg:w="5"/><text x="65.4963%" y="1071.50"></text></g><g><title>alloc::fmt::format (9 samples, 0.03%)</title><rect x="65.2606%" y="1061" width="0.0259%" height="15" fill="rgb(234,124,34)" fg:x="22712" fg:w="9"/><text x="65.5106%" y="1071.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (9 samples, 0.03%)</title><rect x="65.2606%" y="1045" width="0.0259%" height="15" fill="rgb(221,91,40)" fg:x="22712" fg:w="9"/><text x="65.5106%" y="1055.50"></text></g><g><title>alloc::fmt::format::{{closure}} (9 samples, 0.03%)</title><rect x="65.2606%" y="1029" width="0.0259%" height="15" fill="rgb(246,53,28)" fg:x="22712" fg:w="9"/><text x="65.5106%" y="1039.50"></text></g><g><title>alloc::fmt::format::format_inner (9 samples, 0.03%)</title><rect x="65.2606%" y="1013" width="0.0259%" height="15" fill="rgb(229,109,7)" fg:x="22712" fg:w="9"/><text x="65.5106%" y="1023.50"></text></g><g><title>core::fmt::Write::write_fmt (7 samples, 0.02%)</title><rect x="65.2664%" y="997" width="0.0201%" height="15" fill="rgb(249,117,8)" fg:x="22714" fg:w="7"/><text x="65.5164%" y="1007.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (7 samples, 0.02%)</title><rect x="65.2664%" y="981" width="0.0201%" height="15" fill="rgb(210,181,1)" fg:x="22714" fg:w="7"/><text x="65.5164%" y="991.50"></text></g><g><title>core::fmt::write (7 samples, 0.02%)</title><rect x="65.2664%" y="965" width="0.0201%" height="15" fill="rgb(211,66,1)" fg:x="22714" fg:w="7"/><text x="65.5164%" y="975.50"></text></g><g><title>core::fmt::rt::Argument::fmt (4 samples, 0.01%)</title><rect x="65.2750%" y="949" width="0.0115%" height="15" fill="rgb(221,90,14)" fg:x="22717" fg:w="4"/><text x="65.5250%" y="959.50"></text></g><g><title>&lt;T as cfx_evm::internal_contract::components::function::ExecutionTrait&gt;::execute_inner (6,003 samples, 17.25%)</title><rect x="48.0605%" y="1109" width="17.2490%" height="15" fill="rgb(219,222,44)" fg:x="16726" fg:w="6003"/><text x="48.3105%" y="1119.50">&lt;T as cfx_evm::internal_con..</text></g><g><title>&lt;cfx_evm::internal_contract::contracts::cross_space::CallToMove as cfx_evm::internal_contract::components::function::SimpleExecutionTrait&gt;::execute_inner (6,003 samples, 17.25%)</title><rect x="48.0605%" y="1093" width="17.2490%" height="15" fill="rgb(246,34,33)" fg:x="16726" fg:w="6003"/><text x="48.3105%" y="1103.50">&lt;cfx_evm::internal_contract..</text></g><g><title>&lt;cfx_evm::internal_contract::contracts::cross_space::CallToMove as cfx_evm::internal_contract::components::function::SimpleExecutionTrait&gt;::execute_inner::{{closure}} (6,003 samples, 17.25%)</title><rect x="48.0605%" y="1077" width="17.2490%" height="15" fill="rgb(227,135,41)" fg:x="16726" fg:w="6003"/><text x="48.3105%" y="1087.50">&lt;cfx_evm::internal_contract..</text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (6 samples, 0.02%)</title><rect x="65.2922%" y="1061" width="0.0172%" height="15" fill="rgb(226,15,14)" fg:x="22723" fg:w="6"/><text x="65.5422%" y="1071.50"></text></g><g><title>primitive_types::U256::from_big_endian (4 samples, 0.01%)</title><rect x="65.3296%" y="1061" width="0.0115%" height="15" fill="rgb(236,148,47)" fg:x="22736" fg:w="4"/><text x="65.5796%" y="1071.50"></text></g><g><title>solidity_abi::array::&lt;impl solidity_abi::ABIVariable for alloc::vec::Vec&lt;T&gt;&gt;::from_abi (7 samples, 0.02%)</title><rect x="65.3439%" y="1061" width="0.0201%" height="15" fill="rgb(233,162,52)" fg:x="22741" fg:w="7"/><text x="65.5939%" y="1071.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (4 samples, 0.01%)</title><rect x="65.3669%" y="1045" width="0.0115%" height="15" fill="rgb(244,35,28)" fg:x="22749" fg:w="4"/><text x="65.6169%" y="1055.50"></text></g><g><title>&lt;(A,B,C,D,E) as solidity_abi::ABIDecodable&gt;::abi_decode (26 samples, 0.07%)</title><rect x="65.3095%" y="1093" width="0.0747%" height="15" fill="rgb(205,121,10)" fg:x="22729" fg:w="26"/><text x="65.5595%" y="1103.50"></text></g><g><title>solidity_abi::utils::read_abi_list (26 samples, 0.07%)</title><rect x="65.3095%" y="1077" width="0.0747%" height="15" fill="rgb(250,58,18)" fg:x="22729" fg:w="26"/><text x="65.5595%" y="1087.50"></text></g><g><title>solidity_abi::string::&lt;impl solidity_abi::ABIVariable for alloc::string::String&gt;::from_abi (7 samples, 0.02%)</title><rect x="65.3641%" y="1061" width="0.0201%" height="15" fill="rgb(216,37,13)" fg:x="22748" fg:w="7"/><text x="65.6141%" y="1071.50"></text></g><g><title>cfx_evm::internal_contract::components::function::preprocessing (28 samples, 0.08%)</title><rect x="65.3095%" y="1109" width="0.0805%" height="15" fill="rgb(221,215,42)" fg:x="22729" fg:w="28"/><text x="65.5595%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.01%)</title><rect x="65.3899%" y="917" width="0.0144%" height="15" fill="rgb(217,214,19)" fg:x="22757" fg:w="5"/><text x="65.6399%" y="927.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.01%)</title><rect x="65.3899%" y="901" width="0.0144%" height="15" fill="rgb(233,139,13)" fg:x="22757" fg:w="5"/><text x="65.6399%" y="911.50"></text></g><g><title>sdallocx (5 samples, 0.01%)</title><rect x="65.3899%" y="885" width="0.0144%" height="15" fill="rgb(247,168,23)" fg:x="22757" fg:w="5"/><text x="65.6399%" y="895.50"></text></g><g><title>inallocx (5 samples, 0.01%)</title><rect x="65.3899%" y="869" width="0.0144%" height="15" fill="rgb(207,202,1)" fg:x="22757" fg:w="5"/><text x="65.6399%" y="879.50"></text></g><g><title>sz_s2u (5 samples, 0.01%)</title><rect x="65.3899%" y="853" width="0.0144%" height="15" fill="rgb(220,155,48)" fg:x="22757" fg:w="5"/><text x="65.6399%" y="863.50"></text></g><g><title>sz_s2u_lookup (5 samples, 0.01%)</title><rect x="65.3899%" y="837" width="0.0144%" height="15" fill="rgb(250,43,26)" fg:x="22757" fg:w="5"/><text x="65.6399%" y="847.50"></text></g><g><title>sz_index2size_lookup (5 samples, 0.01%)</title><rect x="65.3899%" y="821" width="0.0144%" height="15" fill="rgb(212,190,23)" fg:x="22757" fg:w="5"/><text x="65.6399%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;solidity_abi::utils::LinkedBytes&gt; (7 samples, 0.02%)</title><rect x="65.3899%" y="1061" width="0.0201%" height="15" fill="rgb(216,39,24)" fg:x="22757" fg:w="7"/><text x="65.6399%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::linked_list::LinkedList&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (7 samples, 0.02%)</title><rect x="65.3899%" y="1045" width="0.0201%" height="15" fill="rgb(252,113,16)" fg:x="22757" fg:w="7"/><text x="65.6399%" y="1055.50"></text></g><g><title>&lt;alloc::collections::linked_list::LinkedList&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.02%)</title><rect x="65.3899%" y="1029" width="0.0201%" height="15" fill="rgb(208,113,19)" fg:x="22757" fg:w="7"/><text x="65.6399%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;alloc::collections::linked_list::Node&lt;alloc::vec::Vec&lt;u8&gt;&gt;,&amp;alloc::alloc::Global&gt;&gt;&gt; (7 samples, 0.02%)</title><rect x="65.3899%" y="1013" width="0.0201%" height="15" fill="rgb(234,107,25)" fg:x="22757" fg:w="7"/><text x="65.6399%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;alloc::collections::linked_list::Node&lt;alloc::vec::Vec&lt;u8&gt;&gt;,&amp;alloc::alloc::Global&gt;&gt; (7 samples, 0.02%)</title><rect x="65.3899%" y="997" width="0.0201%" height="15" fill="rgb(234,217,51)" fg:x="22757" fg:w="7"/><text x="65.6399%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::linked_list::Node&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (7 samples, 0.02%)</title><rect x="65.3899%" y="981" width="0.0201%" height="15" fill="rgb(251,29,42)" fg:x="22757" fg:w="7"/><text x="65.6399%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (7 samples, 0.02%)</title><rect x="65.3899%" y="965" width="0.0201%" height="15" fill="rgb(221,62,51)" fg:x="22757" fg:w="7"/><text x="65.6399%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (7 samples, 0.02%)</title><rect x="65.3899%" y="949" width="0.0201%" height="15" fill="rgb(240,192,43)" fg:x="22757" fg:w="7"/><text x="65.6399%" y="959.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.02%)</title><rect x="65.3899%" y="933" width="0.0201%" height="15" fill="rgb(224,157,47)" fg:x="22757" fg:w="7"/><text x="65.6399%" y="943.50"></text></g><g><title>solidity_abi::bytes::&lt;impl solidity_abi::ABIVariable for alloc::vec::Vec&lt;u8&gt;&gt;::to_abi (6 samples, 0.02%)</title><rect x="65.4445%" y="1045" width="0.0172%" height="15" fill="rgb(226,84,45)" fg:x="22776" fg:w="6"/><text x="65.6945%" y="1055.50"></text></g><g><title>solidity_abi::utils::LinkedBytes::append (4 samples, 0.01%)</title><rect x="65.4618%" y="1045" width="0.0115%" height="15" fill="rgb(208,207,23)" fg:x="22782" fg:w="4"/><text x="65.7118%" y="1055.50"></text></g><g><title>solidity_abi::utils::ABIListWriter::write_down (24 samples, 0.07%)</title><rect x="65.4187%" y="1061" width="0.0690%" height="15" fill="rgb(253,34,51)" fg:x="22767" fg:w="24"/><text x="65.6687%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (7 samples, 0.02%)</title><rect x="65.4934%" y="917" width="0.0201%" height="15" fill="rgb(227,26,34)" fg:x="22793" fg:w="7"/><text x="65.7434%" y="927.50"></text></g><g><title>alloc::alloc::Global::grow_impl (7 samples, 0.02%)</title><rect x="65.4934%" y="901" width="0.0201%" height="15" fill="rgb(245,75,19)" fg:x="22793" fg:w="7"/><text x="65.7434%" y="911.50"></text></g><g><title>alloc::alloc::realloc (7 samples, 0.02%)</title><rect x="65.4934%" y="885" width="0.0201%" height="15" fill="rgb(250,191,31)" fg:x="22793" fg:w="7"/><text x="65.7434%" y="895.50"></text></g><g><title>rallocx (4 samples, 0.01%)</title><rect x="65.5020%" y="869" width="0.0115%" height="15" fill="rgb(224,11,50)" fg:x="22796" fg:w="4"/><text x="65.7520%" y="879.50"></text></g><g><title>iralloct (4 samples, 0.01%)</title><rect x="65.5020%" y="853" width="0.0115%" height="15" fill="rgb(231,171,7)" fg:x="22796" fg:w="4"/><text x="65.7520%" y="863.50"></text></g><g><title>_rjem_je_arena_ralloc (4 samples, 0.01%)</title><rect x="65.5020%" y="837" width="0.0115%" height="15" fill="rgb(252,214,10)" fg:x="22796" fg:w="4"/><text x="65.7520%" y="847.50"></text></g><g><title>&lt;T as solidity_abi::ABIEncodable&gt;::abi_encode (49 samples, 0.14%)</title><rect x="65.3899%" y="1077" width="0.1408%" height="15" fill="rgb(249,45,46)" fg:x="22757" fg:w="49"/><text x="65.6399%" y="1087.50"></text></g><g><title>solidity_abi::utils::LinkedBytes::to_vec (15 samples, 0.04%)</title><rect x="65.4876%" y="1061" width="0.0431%" height="15" fill="rgb(240,173,7)" fg:x="22791" fg:w="15"/><text x="65.7376%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (13 samples, 0.04%)</title><rect x="65.4934%" y="1045" width="0.0374%" height="15" fill="rgb(235,214,13)" fg:x="22793" fg:w="13"/><text x="65.7434%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (13 samples, 0.04%)</title><rect x="65.4934%" y="1029" width="0.0374%" height="15" fill="rgb(245,156,8)" fg:x="22793" fg:w="13"/><text x="65.7434%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (13 samples, 0.04%)</title><rect x="65.4934%" y="1013" width="0.0374%" height="15" fill="rgb(235,46,12)" fg:x="22793" fg:w="13"/><text x="65.7434%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (13 samples, 0.04%)</title><rect x="65.4934%" y="997" width="0.0374%" height="15" fill="rgb(221,81,14)" fg:x="22793" fg:w="13"/><text x="65.7434%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (13 samples, 0.04%)</title><rect x="65.4934%" y="981" width="0.0374%" height="15" fill="rgb(238,207,9)" fg:x="22793" fg:w="13"/><text x="65.7434%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (13 samples, 0.04%)</title><rect x="65.4934%" y="965" width="0.0374%" height="15" fill="rgb(224,129,35)" fg:x="22793" fg:w="13"/><text x="65.7434%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (13 samples, 0.04%)</title><rect x="65.4934%" y="949" width="0.0374%" height="15" fill="rgb(243,218,34)" fg:x="22793" fg:w="13"/><text x="65.7434%" y="959.50"></text></g><g><title>alloc::raw_vec::finish_grow (13 samples, 0.04%)</title><rect x="65.4934%" y="933" width="0.0374%" height="15" fill="rgb(220,166,13)" fg:x="22793" fg:w="13"/><text x="65.7434%" y="943.50"></text></g><g><title>mallocx (4 samples, 0.01%)</title><rect x="65.5192%" y="917" width="0.0115%" height="15" fill="rgb(227,167,49)" fg:x="22802" fg:w="4"/><text x="65.7692%" y="927.50"></text></g><g><title>imalloc (4 samples, 0.01%)</title><rect x="65.5192%" y="901" width="0.0115%" height="15" fill="rgb(234,142,12)" fg:x="22802" fg:w="4"/><text x="65.7692%" y="911.50"></text></g><g><title>imalloc_body (4 samples, 0.01%)</title><rect x="65.5192%" y="885" width="0.0115%" height="15" fill="rgb(207,100,48)" fg:x="22802" fg:w="4"/><text x="65.7692%" y="895.50"></text></g><g><title>&lt;T as cfx_evm::internal_contract::components::function::SolidityFunctionTrait&gt;::execute (6,090 samples, 17.50%)</title><rect x="48.0403%" y="1125" width="17.4990%" height="15" fill="rgb(210,25,14)" fg:x="16719" fg:w="6090"/><text x="48.2903%" y="1135.50">&lt;T as cfx_evm::internal_con..</text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (52 samples, 0.15%)</title><rect x="65.3899%" y="1109" width="0.1494%" height="15" fill="rgb(246,116,27)" fg:x="22757" fg:w="52"/><text x="65.6399%" y="1119.50"></text></g><g><title>&lt;T as cfx_evm::internal_contract::components::function::SolidityFunctionTrait&gt;::execute::{{closure}} (52 samples, 0.15%)</title><rect x="65.3899%" y="1093" width="0.1494%" height="15" fill="rgb(214,193,42)" fg:x="22757" fg:w="52"/><text x="65.6399%" y="1103.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (7 samples, 0.02%)</title><rect x="65.5422%" y="1109" width="0.0201%" height="15" fill="rgb(214,122,8)" fg:x="22810" fg:w="7"/><text x="65.7922%" y="1119.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (7 samples, 0.02%)</title><rect x="65.5422%" y="1093" width="0.0201%" height="15" fill="rgb(244,173,18)" fg:x="22810" fg:w="7"/><text x="65.7922%" y="1103.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (7 samples, 0.02%)</title><rect x="65.5422%" y="1077" width="0.0201%" height="15" fill="rgb(232,68,19)" fg:x="22810" fg:w="7"/><text x="65.7922%" y="1087.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (7 samples, 0.02%)</title><rect x="65.5422%" y="1061" width="0.0201%" height="15" fill="rgb(236,224,1)" fg:x="22810" fg:w="7"/><text x="65.7922%" y="1071.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (7 samples, 0.02%)</title><rect x="65.5422%" y="1045" width="0.0201%" height="15" fill="rgb(240,11,8)" fg:x="22810" fg:w="7"/><text x="65.7922%" y="1055.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (7 samples, 0.02%)</title><rect x="65.5422%" y="1029" width="0.0201%" height="15" fill="rgb(244,159,20)" fg:x="22810" fg:w="7"/><text x="65.7922%" y="1039.50"></text></g><g><title>alloc::slice::hack::to_vec (7 samples, 0.02%)</title><rect x="65.5422%" y="1013" width="0.0201%" height="15" fill="rgb(240,223,54)" fg:x="22810" fg:w="7"/><text x="65.7922%" y="1023.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7 samples, 0.02%)</title><rect x="65.5422%" y="997" width="0.0201%" height="15" fill="rgb(237,146,5)" fg:x="22810" fg:w="7"/><text x="65.7922%" y="1007.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (4 samples, 0.01%)</title><rect x="65.5508%" y="981" width="0.0115%" height="15" fill="rgb(218,221,32)" fg:x="22813" fg:w="4"/><text x="65.8008%" y="991.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.01%)</title><rect x="65.5508%" y="965" width="0.0115%" height="15" fill="rgb(244,96,26)" fg:x="22813" fg:w="4"/><text x="65.8008%" y="975.50"></text></g><g><title>cfx_evm::internal_contract::components::contract::InternalContractTrait::execute (6,101 samples, 17.53%)</title><rect x="48.0346%" y="1141" width="17.5306%" height="15" fill="rgb(245,184,37)" fg:x="16717" fg:w="6101"/><text x="48.2846%" y="1151.50">cfx_evm::internal_contract:..</text></g><g><title>cfx_evm::internal_contract::components::contract::load_solidity_fn (8 samples, 0.02%)</title><rect x="65.5422%" y="1125" width="0.0230%" height="15" fill="rgb(248,91,47)" fg:x="22810" fg:w="8"/><text x="65.7922%" y="1135.50"></text></g><g><title>&lt;cfx_evm::call_create_frame::executive::InternalContractExec as cfx_evm::vm::Exec&gt;::exec (6,116 samples, 17.57%)</title><rect x="48.0059%" y="1157" width="17.5737%" height="15" fill="rgb(243,199,8)" fg:x="16707" fg:w="6116"/><text x="48.2559%" y="1167.50">&lt;cfx_evm::call_create_frame..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;cfx_evm::call_create_frame::executive::InternalContractExec&gt;&gt; (5 samples, 0.01%)</title><rect x="65.5652%" y="1141" width="0.0144%" height="15" fill="rgb(249,12,15)" fg:x="22818" fg:w="5"/><text x="65.8152%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;cfx_evm::call_create_frame::executive::InternalContractExec&gt; (5 samples, 0.01%)</title><rect x="65.5652%" y="1125" width="0.0144%" height="15" fill="rgb(245,97,12)" fg:x="22818" fg:w="5"/><text x="65.8152%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;cfx_evm::vm::action_params::ActionParams&gt; (5 samples, 0.01%)</title><rect x="65.5652%" y="1109" width="0.0144%" height="15" fill="rgb(244,61,1)" fg:x="22818" fg:w="5"/><text x="65.8152%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::Vec&lt;u8&gt;&gt;&gt; (5 samples, 0.01%)</title><rect x="65.5652%" y="1093" width="0.0144%" height="15" fill="rgb(222,194,10)" fg:x="22818" fg:w="5"/><text x="65.8152%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (5 samples, 0.01%)</title><rect x="65.5652%" y="1077" width="0.0144%" height="15" fill="rgb(226,178,8)" fg:x="22818" fg:w="5"/><text x="65.8152%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (5 samples, 0.01%)</title><rect x="65.5652%" y="1061" width="0.0144%" height="15" fill="rgb(241,32,34)" fg:x="22818" fg:w="5"/><text x="65.8152%" y="1071.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="65.5652%" y="1045" width="0.0144%" height="15" fill="rgb(254,26,6)" fg:x="22818" fg:w="5"/><text x="65.8152%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.01%)</title><rect x="65.5652%" y="1029" width="0.0144%" height="15" fill="rgb(249,71,11)" fg:x="22818" fg:w="5"/><text x="65.8152%" y="1039.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.01%)</title><rect x="65.5652%" y="1013" width="0.0144%" height="15" fill="rgb(232,170,27)" fg:x="22818" fg:w="5"/><text x="65.8152%" y="1023.50"></text></g><g><title>sdallocx (4 samples, 0.01%)</title><rect x="65.5681%" y="997" width="0.0115%" height="15" fill="rgb(214,223,17)" fg:x="22819" fg:w="4"/><text x="65.8181%" y="1007.50"></text></g><g><title>&lt;std::collections::hash::map::Drain&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.06%)</title><rect x="65.5853%" y="1109" width="0.0603%" height="15" fill="rgb(250,18,15)" fg:x="22825" fg:w="21"/><text x="65.8353%" y="1119.50"></text></g><g><title>&lt;hashbrown::map::Drain&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.06%)</title><rect x="65.5853%" y="1093" width="0.0603%" height="15" fill="rgb(212,153,51)" fg:x="22825" fg:w="21"/><text x="65.8353%" y="1103.50"></text></g><g><title>&lt;hashbrown::raw::RawDrain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.06%)</title><rect x="65.5853%" y="1077" width="0.0603%" height="15" fill="rgb(219,194,12)" fg:x="22825" fg:w="21"/><text x="65.8353%" y="1087.50"></text></g><g><title>&lt;cfx_evm::state::State as cfx_state::state_trait::CheckpointTrait&gt;::discard_checkpoint (29 samples, 0.08%)</title><rect x="65.5853%" y="1125" width="0.0833%" height="15" fill="rgb(212,58,17)" fg:x="22825" fg:w="29"/><text x="65.8353%" y="1135.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (5 samples, 0.01%)</title><rect x="65.6543%" y="1109" width="0.0144%" height="15" fill="rgb(254,5,10)" fg:x="22849" fg:w="5"/><text x="65.9043%" y="1119.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (5 samples, 0.01%)</title><rect x="65.6543%" y="1093" width="0.0144%" height="15" fill="rgb(246,91,7)" fg:x="22849" fg:w="5"/><text x="65.9043%" y="1103.50"></text></g><g><title>hashbrown::map::make_hash (5 samples, 0.01%)</title><rect x="65.6543%" y="1077" width="0.0144%" height="15" fill="rgb(218,108,49)" fg:x="22849" fg:w="5"/><text x="65.9043%" y="1087.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5 samples, 0.01%)</title><rect x="65.6543%" y="1061" width="0.0144%" height="15" fill="rgb(238,123,20)" fg:x="22849" fg:w="5"/><text x="65.9043%" y="1071.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (4 samples, 0.01%)</title><rect x="65.6571%" y="1045" width="0.0115%" height="15" fill="rgb(231,69,23)" fg:x="22850" fg:w="4"/><text x="65.9071%" y="1055.50"></text></g><g><title>&lt;cfx_types::AddressWithSpace as core::hash::Hash&gt;::hash (4 samples, 0.01%)</title><rect x="65.6571%" y="1029" width="0.0115%" height="15" fill="rgb(230,209,3)" fg:x="22850" fg:w="4"/><text x="65.9071%" y="1039.50"></text></g><g><title>&lt;primitive_types::H160 as core::hash::Hash&gt;::hash (4 samples, 0.01%)</title><rect x="65.6571%" y="1013" width="0.0115%" height="15" fill="rgb(231,19,0)" fg:x="22850" fg:w="4"/><text x="65.9071%" y="1023.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (4 samples, 0.01%)</title><rect x="65.6571%" y="997" width="0.0115%" height="15" fill="rgb(226,192,25)" fg:x="22850" fg:w="4"/><text x="65.9071%" y="1007.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (4 samples, 0.01%)</title><rect x="65.6571%" y="981" width="0.0115%" height="15" fill="rgb(223,175,53)" fg:x="22850" fg:w="4"/><text x="65.9071%" y="991.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 0.01%)</title><rect x="65.6571%" y="965" width="0.0115%" height="15" fill="rgb(248,35,51)" fg:x="22850" fg:w="4"/><text x="65.9071%" y="975.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4 samples, 0.01%)</title><rect x="65.6571%" y="949" width="0.0115%" height="15" fill="rgb(230,37,26)" fg:x="22850" fg:w="4"/><text x="65.9071%" y="959.50"></text></g><g><title>&lt;core::result::Result&lt;cfx_evm::vm::return_data::GasLeft,cfx_evm::vm::error::Error&gt; as cfx_evm::evm::evm::Finalize&gt;::finalize (9 samples, 0.03%)</title><rect x="65.6686%" y="1125" width="0.0259%" height="15" fill="rgb(206,120,22)" fg:x="22854" fg:w="9"/><text x="65.9186%" y="1135.50"></text></g><g><title>&lt;cfx_evm::call_create_frame::context::Context as cfx_evm::vm::context::Context&gt;::ret (6 samples, 0.02%)</title><rect x="65.6773%" y="1109" width="0.0172%" height="15" fill="rgb(207,165,28)" fg:x="22857" fg:w="6"/><text x="65.9273%" y="1119.50"></text></g><g><title>cfx_evm::state::substate::FrameStackInfo::pop (4 samples, 0.01%)</title><rect x="65.6945%" y="1125" width="0.0115%" height="15" fill="rgb(226,23,46)" fg:x="22863" fg:w="4"/><text x="65.9445%" y="1135.50"></text></g><g><title>cfx_evm::call_create_frame::frame::CallCreateFrame::process_output (46 samples, 0.13%)</title><rect x="65.5824%" y="1157" width="0.1322%" height="15" fill="rgb(208,130,44)" fg:x="22824" fg:w="46"/><text x="65.8324%" y="1167.50"></text></g><g><title>cfx_evm::call_create_frame::frame::CallCreateFrame::process_return (46 samples, 0.13%)</title><rect x="65.5824%" y="1141" width="0.1322%" height="15" fill="rgb(231,67,8)" fg:x="22824" fg:w="46"/><text x="65.8324%" y="1151.50"></text></g><g><title>cfx_evm::state::State::require_or_new_basic_account (9 samples, 0.03%)</title><rect x="65.7146%" y="1109" width="0.0259%" height="15" fill="rgb(205,183,22)" fg:x="22870" fg:w="9"/><text x="65.9646%" y="1119.50"></text></g><g><title>cfx_evm::state::State::require_or_set (9 samples, 0.03%)</title><rect x="65.7146%" y="1093" width="0.0259%" height="15" fill="rgb(224,47,9)" fg:x="22870" fg:w="9"/><text x="65.9646%" y="1103.50"></text></g><g><title>lock_api::rwlock::RwLockWriteGuard&lt;R,T&gt;::map (6 samples, 0.02%)</title><rect x="65.7232%" y="1077" width="0.0172%" height="15" fill="rgb(250,183,49)" fg:x="22873" fg:w="6"/><text x="65.9732%" y="1087.50"></text></g><g><title>cfx_evm::state::State::require_or_set::{{closure}} (6 samples, 0.02%)</title><rect x="65.7232%" y="1061" width="0.0172%" height="15" fill="rgb(220,151,39)" fg:x="22873" fg:w="6"/><text x="65.9732%" y="1071.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (6 samples, 0.02%)</title><rect x="65.7232%" y="1045" width="0.0172%" height="15" fill="rgb(220,118,20)" fg:x="22873" fg:w="6"/><text x="65.9732%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (6 samples, 0.02%)</title><rect x="65.7232%" y="1029" width="0.0172%" height="15" fill="rgb(231,65,51)" fg:x="22873" fg:w="6"/><text x="65.9732%" y="1039.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (6 samples, 0.02%)</title><rect x="65.7232%" y="1013" width="0.0172%" height="15" fill="rgb(253,125,37)" fg:x="22873" fg:w="6"/><text x="65.9732%" y="1023.50"></text></g><g><title>hashbrown::map::make_hash (6 samples, 0.02%)</title><rect x="65.7232%" y="997" width="0.0172%" height="15" fill="rgb(232,102,6)" fg:x="22873" fg:w="6"/><text x="65.9732%" y="1007.50"></text></g><g><title>core::hash::BuildHasher::hash_one (6 samples, 0.02%)</title><rect x="65.7232%" y="981" width="0.0172%" height="15" fill="rgb(251,105,13)" fg:x="22873" fg:w="6"/><text x="65.9732%" y="991.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::hash::BuildHasher&gt;::build_hasher (6 samples, 0.02%)</title><rect x="65.7232%" y="965" width="0.0172%" height="15" fill="rgb(222,179,29)" fg:x="22873" fg:w="6"/><text x="65.9732%" y="975.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (6 samples, 0.02%)</title><rect x="65.7232%" y="949" width="0.0172%" height="15" fill="rgb(229,180,53)" fg:x="22873" fg:w="6"/><text x="65.9732%" y="959.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (6 samples, 0.02%)</title><rect x="65.7232%" y="933" width="0.0172%" height="15" fill="rgb(238,104,13)" fg:x="22873" fg:w="6"/><text x="65.9732%" y="943.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (6 samples, 0.02%)</title><rect x="65.7232%" y="917" width="0.0172%" height="15" fill="rgb(210,130,5)" fg:x="22873" fg:w="6"/><text x="65.9732%" y="927.50"></text></g><g><title>&lt;cfx_evm::state::State as cfx_state::state_trait::StateOpsTrait&gt;::add_balance (10 samples, 0.03%)</title><rect x="65.7146%" y="1125" width="0.0287%" height="15" fill="rgb(233,87,49)" fg:x="22870" fg:w="10"/><text x="65.9646%" y="1135.50"></text></g><g><title>cfx_evm::state::account_entry::OverlayAccount::clone_basic (6 samples, 0.02%)</title><rect x="65.7577%" y="949" width="0.0172%" height="15" fill="rgb(243,34,9)" fg:x="22885" fg:w="6"/><text x="66.0077%" y="959.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::default::Default&gt;::default (6 samples, 0.02%)</title><rect x="65.7577%" y="933" width="0.0172%" height="15" fill="rgb(235,225,10)" fg:x="22885" fg:w="6"/><text x="66.0077%" y="943.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (6 samples, 0.02%)</title><rect x="65.7577%" y="917" width="0.0172%" height="15" fill="rgb(212,0,30)" fg:x="22885" fg:w="6"/><text x="66.0077%" y="927.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (6 samples, 0.02%)</title><rect x="65.7577%" y="901" width="0.0172%" height="15" fill="rgb(211,177,0)" fg:x="22885" fg:w="6"/><text x="66.0077%" y="911.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert_with (8 samples, 0.02%)</title><rect x="65.7548%" y="1077" width="0.0230%" height="15" fill="rgb(225,220,11)" fg:x="22884" fg:w="8"/><text x="66.0048%" y="1087.50"></text></g><g><title>cfx_evm::state::State::require_or_set::{{closure}} (8 samples, 0.02%)</title><rect x="65.7548%" y="1061" width="0.0230%" height="15" fill="rgb(215,10,13)" fg:x="22884" fg:w="8"/><text x="66.0048%" y="1071.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (8 samples, 0.02%)</title><rect x="65.7548%" y="1045" width="0.0230%" height="15" fill="rgb(240,177,14)" fg:x="22884" fg:w="8"/><text x="66.0048%" y="1055.50"></text></g><g><title>core::ops::function::FnOnce::call_once (8 samples, 0.02%)</title><rect x="65.7548%" y="1029" width="0.0230%" height="15" fill="rgb(243,7,39)" fg:x="22884" fg:w="8"/><text x="66.0048%" y="1039.50"></text></g><g><title>cfx_evm::state::account_entry::AccountEntry::clone_dirty (8 samples, 0.02%)</title><rect x="65.7548%" y="1013" width="0.0230%" height="15" fill="rgb(212,99,0)" fg:x="22884" fg:w="8"/><text x="66.0048%" y="1023.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (8 samples, 0.02%)</title><rect x="65.7548%" y="997" width="0.0230%" height="15" fill="rgb(225,162,48)" fg:x="22884" fg:w="8"/><text x="66.0048%" y="1007.50"></text></g><g><title>core::ops::function::FnOnce::call_once (8 samples, 0.02%)</title><rect x="65.7548%" y="981" width="0.0230%" height="15" fill="rgb(246,16,25)" fg:x="22884" fg:w="8"/><text x="66.0048%" y="991.50"></text></g><g><title>cfx_evm::state::account_entry::OverlayAccount::clone_dirty (7 samples, 0.02%)</title><rect x="65.7577%" y="965" width="0.0201%" height="15" fill="rgb(220,150,2)" fg:x="22885" fg:w="7"/><text x="66.0077%" y="975.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (4 samples, 0.01%)</title><rect x="65.7778%" y="1061" width="0.0115%" height="15" fill="rgb(237,113,11)" fg:x="22892" fg:w="4"/><text x="66.0278%" y="1071.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (4 samples, 0.01%)</title><rect x="65.7778%" y="1045" width="0.0115%" height="15" fill="rgb(236,70,20)" fg:x="22892" fg:w="4"/><text x="66.0278%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (4 samples, 0.01%)</title><rect x="65.7778%" y="1029" width="0.0115%" height="15" fill="rgb(234,94,7)" fg:x="22892" fg:w="4"/><text x="66.0278%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.01%)</title><rect x="65.7778%" y="1013" width="0.0115%" height="15" fill="rgb(250,221,0)" fg:x="22892" fg:w="4"/><text x="66.0278%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (4 samples, 0.01%)</title><rect x="65.7778%" y="997" width="0.0115%" height="15" fill="rgb(245,149,46)" fg:x="22892" fg:w="4"/><text x="66.0278%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (4 samples, 0.01%)</title><rect x="65.7778%" y="981" width="0.0115%" height="15" fill="rgb(215,37,27)" fg:x="22892" fg:w="4"/><text x="66.0278%" y="991.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize (4 samples, 0.01%)</title><rect x="65.7778%" y="965" width="0.0115%" height="15" fill="rgb(232,65,3)" fg:x="22892" fg:w="4"/><text x="66.0278%" y="975.50"></text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (4 samples, 0.01%)</title><rect x="65.7778%" y="949" width="0.0115%" height="15" fill="rgb(214,2,16)" fg:x="22892" fg:w="4"/><text x="66.0278%" y="959.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (4 samples, 0.01%)</title><rect x="65.7778%" y="933" width="0.0115%" height="15" fill="rgb(227,131,50)" fg:x="22892" fg:w="4"/><text x="66.0278%" y="943.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (4 samples, 0.01%)</title><rect x="65.7778%" y="917" width="0.0115%" height="15" fill="rgb(247,131,45)" fg:x="22892" fg:w="4"/><text x="66.0278%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.01%)</title><rect x="65.7778%" y="901" width="0.0115%" height="15" fill="rgb(215,97,47)" fg:x="22892" fg:w="4"/><text x="66.0278%" y="911.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.01%)</title><rect x="65.7778%" y="885" width="0.0115%" height="15" fill="rgb(233,143,12)" fg:x="22892" fg:w="4"/><text x="66.0278%" y="895.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.01%)</title><rect x="65.7778%" y="869" width="0.0115%" height="15" fill="rgb(222,57,17)" fg:x="22892" fg:w="4"/><text x="66.0278%" y="879.50"></text></g><g><title>mallocx (4 samples, 0.01%)</title><rect x="65.7778%" y="853" width="0.0115%" height="15" fill="rgb(214,119,38)" fg:x="22892" fg:w="4"/><text x="66.0278%" y="863.50"></text></g><g><title>imalloc (4 samples, 0.01%)</title><rect x="65.7778%" y="837" width="0.0115%" height="15" fill="rgb(217,28,47)" fg:x="22892" fg:w="4"/><text x="66.0278%" y="847.50"></text></g><g><title>imalloc_body (4 samples, 0.01%)</title><rect x="65.7778%" y="821" width="0.0115%" height="15" fill="rgb(231,14,52)" fg:x="22892" fg:w="4"/><text x="66.0278%" y="831.50"></text></g><g><title>imalloc_no_sample (4 samples, 0.01%)</title><rect x="65.7778%" y="805" width="0.0115%" height="15" fill="rgb(220,158,18)" fg:x="22892" fg:w="4"/><text x="66.0278%" y="815.50"></text></g><g><title>iallocztm (4 samples, 0.01%)</title><rect x="65.7778%" y="789" width="0.0115%" height="15" fill="rgb(222,143,46)" fg:x="22892" fg:w="4"/><text x="66.0278%" y="799.50"></text></g><g><title>arena_malloc (4 samples, 0.01%)</title><rect x="65.7778%" y="773" width="0.0115%" height="15" fill="rgb(227,165,5)" fg:x="22892" fg:w="4"/><text x="66.0278%" y="783.50"></text></g><g><title>tcache_alloc_small (4 samples, 0.01%)</title><rect x="65.7778%" y="757" width="0.0115%" height="15" fill="rgb(216,222,49)" fg:x="22892" fg:w="4"/><text x="66.0278%" y="767.50"></text></g><g><title>cache_bin_alloc_easy (4 samples, 0.01%)</title><rect x="65.7778%" y="741" width="0.0115%" height="15" fill="rgb(238,73,39)" fg:x="22892" fg:w="4"/><text x="66.0278%" y="751.50"></text></g><g><title>cfx_evm::state::State::require_exists (24 samples, 0.07%)</title><rect x="65.7548%" y="1109" width="0.0690%" height="15" fill="rgb(252,115,9)" fg:x="22884" fg:w="24"/><text x="66.0048%" y="1119.50"></text></g><g><title>cfx_evm::state::State::require_or_set (24 samples, 0.07%)</title><rect x="65.7548%" y="1093" width="0.0690%" height="15" fill="rgb(238,202,4)" fg:x="22884" fg:w="24"/><text x="66.0048%" y="1103.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (16 samples, 0.05%)</title><rect x="65.7778%" y="1077" width="0.0460%" height="15" fill="rgb(252,153,44)" fg:x="22892" fg:w="16"/><text x="66.0278%" y="1087.50"></text></g><g><title>std::collections::hash::map::map_entry (12 samples, 0.03%)</title><rect x="65.7893%" y="1061" width="0.0345%" height="15" fill="rgb(235,128,27)" fg:x="22896" fg:w="12"/><text x="66.0393%" y="1071.50"></text></g><g><title>cfx_evm::call_create_frame::frame::CallCreateFrame::exec (6,207 samples, 17.84%)</title><rect x="48.0059%" y="1173" width="17.8352%" height="15" fill="rgb(221,121,47)" fg:x="16707" fg:w="6207"/><text x="48.2559%" y="1183.50">cfx_evm::call_create_frame::..</text></g><g><title>cfx_evm::call_create_frame::frame::CallCreateFrame::transfer_exec_balance (44 samples, 0.13%)</title><rect x="65.7146%" y="1157" width="0.1264%" height="15" fill="rgb(247,211,47)" fg:x="22870" fg:w="44"/><text x="65.9646%" y="1167.50"></text></g><g><title>&lt;cfx_evm::state::State as cfx_state::state_trait::StateOpsTrait&gt;::transfer_balance (44 samples, 0.13%)</title><rect x="65.7146%" y="1141" width="0.1264%" height="15" fill="rgb(252,47,49)" fg:x="22870" fg:w="44"/><text x="65.9646%" y="1151.50"></text></g><g><title>&lt;cfx_evm::state::State as cfx_state::state_trait::StateOpsTrait&gt;::sub_balance (33 samples, 0.09%)</title><rect x="65.7462%" y="1125" width="0.0948%" height="15" fill="rgb(219,119,53)" fg:x="22881" fg:w="33"/><text x="65.9962%" y="1135.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (6 samples, 0.02%)</title><rect x="65.8238%" y="1109" width="0.0172%" height="15" fill="rgb(243,165,53)" fg:x="22908" fg:w="6"/><text x="66.0738%" y="1119.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (6 samples, 0.02%)</title><rect x="65.8238%" y="1093" width="0.0172%" height="15" fill="rgb(230,12,35)" fg:x="22908" fg:w="6"/><text x="66.0738%" y="1103.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.02%)</title><rect x="65.8238%" y="1077" width="0.0172%" height="15" fill="rgb(239,57,49)" fg:x="22908" fg:w="6"/><text x="66.0738%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (4 samples, 0.01%)</title><rect x="65.8296%" y="1061" width="0.0115%" height="15" fill="rgb(231,154,7)" fg:x="22910" fg:w="4"/><text x="66.0796%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (4 samples, 0.01%)</title><rect x="65.8296%" y="1045" width="0.0115%" height="15" fill="rgb(248,81,34)" fg:x="22910" fg:w="4"/><text x="66.0796%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.01%)</title><rect x="65.8296%" y="1029" width="0.0115%" height="15" fill="rgb(247,9,5)" fg:x="22910" fg:w="4"/><text x="66.0796%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (4 samples, 0.01%)</title><rect x="65.8296%" y="1013" width="0.0115%" height="15" fill="rgb(228,172,27)" fg:x="22910" fg:w="4"/><text x="66.0796%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (4 samples, 0.01%)</title><rect x="65.8296%" y="997" width="0.0115%" height="15" fill="rgb(230,57,44)" fg:x="22910" fg:w="4"/><text x="66.0796%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTableInner::prepare_resize (4 samples, 0.01%)</title><rect x="65.8296%" y="981" width="0.0115%" height="15" fill="rgb(249,35,22)" fg:x="22910" fg:w="4"/><text x="66.0796%" y="991.50"></text></g><g><title>hashbrown::raw::RawTableInner::fallible_with_capacity (4 samples, 0.01%)</title><rect x="65.8296%" y="965" width="0.0115%" height="15" fill="rgb(250,137,27)" fg:x="22910" fg:w="4"/><text x="66.0796%" y="975.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (4 samples, 0.01%)</title><rect x="65.8296%" y="949" width="0.0115%" height="15" fill="rgb(251,57,31)" fg:x="22910" fg:w="4"/><text x="66.0796%" y="959.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (4 samples, 0.01%)</title><rect x="65.8296%" y="933" width="0.0115%" height="15" fill="rgb(238,60,0)" fg:x="22910" fg:w="4"/><text x="66.0796%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.01%)</title><rect x="65.8296%" y="917" width="0.0115%" height="15" fill="rgb(242,185,39)" fg:x="22910" fg:w="4"/><text x="66.0796%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.01%)</title><rect x="65.8296%" y="901" width="0.0115%" height="15" fill="rgb(240,63,43)" fg:x="22910" fg:w="4"/><text x="66.0796%" y="911.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.01%)</title><rect x="65.8296%" y="885" width="0.0115%" height="15" fill="rgb(236,155,6)" fg:x="22910" fg:w="4"/><text x="66.0796%" y="895.50"></text></g><g><title>cfx_evm::call_create_frame::frame::CallCreateFrame::from_trap_error (7 samples, 0.02%)</title><rect x="65.8410%" y="1173" width="0.0201%" height="15" fill="rgb(215,11,29)" fg:x="22914" fg:w="7"/><text x="66.0910%" y="1183.50"></text></g><g><title>cfx_evm::call_create_frame::frame::CallCreateFrame::new_call_raw (6 samples, 0.02%)</title><rect x="65.8439%" y="1157" width="0.0172%" height="15" fill="rgb(228,180,48)" fg:x="22915" fg:w="6"/><text x="66.0939%" y="1167.50"></text></g><g><title>cfx_evm::state::substate::Substate::new (5 samples, 0.01%)</title><rect x="65.8468%" y="1141" width="0.0144%" height="15" fill="rgb(241,102,12)" fg:x="22916" fg:w="5"/><text x="66.0968%" y="1151.50"></text></g><g><title>&lt;cfx_evm::state::substate::Substate as core::default::Default&gt;::default (5 samples, 0.01%)</title><rect x="65.8468%" y="1125" width="0.0144%" height="15" fill="rgb(246,213,4)" fg:x="22916" fg:w="5"/><text x="66.0968%" y="1135.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::default::Default&gt;::default (5 samples, 0.01%)</title><rect x="65.8468%" y="1109" width="0.0144%" height="15" fill="rgb(218,134,35)" fg:x="22916" fg:w="5"/><text x="66.0968%" y="1119.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::default::Default&gt;::default (5 samples, 0.01%)</title><rect x="65.8468%" y="1093" width="0.0144%" height="15" fill="rgb(251,117,35)" fg:x="22916" fg:w="5"/><text x="66.0968%" y="1103.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::default::Default&gt;::default (5 samples, 0.01%)</title><rect x="65.8468%" y="1077" width="0.0144%" height="15" fill="rgb(206,156,45)" fg:x="22916" fg:w="5"/><text x="66.0968%" y="1087.50"></text></g><g><title>&lt;std::hash::random::RandomState as core::default::Default&gt;::default (5 samples, 0.01%)</title><rect x="65.8468%" y="1061" width="0.0144%" height="15" fill="rgb(218,52,27)" fg:x="22916" fg:w="5"/><text x="66.0968%" y="1071.50"></text></g><g><title>std::hash::random::RandomState::new (5 samples, 0.01%)</title><rect x="65.8468%" y="1045" width="0.0144%" height="15" fill="rgb(238,83,36)" fg:x="22916" fg:w="5"/><text x="66.0968%" y="1055.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5 samples, 0.01%)</title><rect x="65.8468%" y="1029" width="0.0144%" height="15" fill="rgb(218,53,43)" fg:x="22916" fg:w="5"/><text x="66.0968%" y="1039.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5 samples, 0.01%)</title><rect x="65.8468%" y="1013" width="0.0144%" height="15" fill="rgb(239,54,39)" fg:x="22916" fg:w="5"/><text x="66.0968%" y="1023.50"></text></g><g><title>core::ops::function::FnOnce::call_once (5 samples, 0.01%)</title><rect x="65.8468%" y="997" width="0.0144%" height="15" fill="rgb(212,198,13)" fg:x="22916" fg:w="5"/><text x="66.0968%" y="1007.50"></text></g><g><title>std::hash::random::RandomState::new::KEYS::{{constant}}::{{closure}} (5 samples, 0.01%)</title><rect x="65.8468%" y="981" width="0.0144%" height="15" fill="rgb(234,54,46)" fg:x="22916" fg:w="5"/><text x="66.0968%" y="991.50"></text></g><g><title>std::sys::thread_local::fast_local::lazy::Storage&lt;T,D&gt;::get_or_init (5 samples, 0.01%)</title><rect x="65.8468%" y="965" width="0.0144%" height="15" fill="rgb(217,120,7)" fg:x="22916" fg:w="5"/><text x="66.0968%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (4 samples, 0.01%)</title><rect x="65.8899%" y="1109" width="0.0115%" height="15" fill="rgb(246,39,15)" fg:x="22931" fg:w="4"/><text x="66.1399%" y="1119.50"></text></g><g><title>cfx_evm::evm::instructions::Instruction::from_u8 (19 samples, 0.05%)</title><rect x="65.9014%" y="1109" width="0.0546%" height="15" fill="rgb(242,143,31)" fg:x="22935" fg:w="19"/><text x="66.1514%" y="1119.50"></text></g><g><title>&lt;cfx_evm::evm::instructions::INSTRUCTIONS as core::ops::deref::Deref&gt;::deref (24 samples, 0.07%)</title><rect x="65.9560%" y="1093" width="0.0690%" height="15" fill="rgb(252,60,24)" fg:x="22954" fg:w="24"/><text x="66.2060%" y="1103.50"></text></g><g><title>&lt;cfx_evm::evm::instructions::INSTRUCTIONS as core::ops::deref::Deref&gt;::deref::__stability (24 samples, 0.07%)</title><rect x="65.9560%" y="1077" width="0.0690%" height="15" fill="rgb(249,220,7)" fg:x="22954" fg:w="24"/><text x="66.2060%" y="1087.50"></text></g><g><title>lazy_static::lazy::Lazy&lt;T&gt;::get (24 samples, 0.07%)</title><rect x="65.9560%" y="1061" width="0.0690%" height="15" fill="rgb(236,67,13)" fg:x="22954" fg:w="24"/><text x="66.2060%" y="1071.50"></text></g><g><title>spin::once::Once&lt;T&gt;::call_once (24 samples, 0.07%)</title><rect x="65.9560%" y="1045" width="0.0690%" height="15" fill="rgb(210,62,39)" fg:x="22954" fg:w="24"/><text x="66.2060%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (24 samples, 0.07%)</title><rect x="65.9560%" y="1029" width="0.0690%" height="15" fill="rgb(219,122,53)" fg:x="22954" fg:w="24"/><text x="66.2060%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_load (24 samples, 0.07%)</title><rect x="65.9560%" y="1013" width="0.0690%" height="15" fill="rgb(218,87,25)" fg:x="22954" fg:w="24"/><text x="66.2060%" y="1023.50"></text></g><g><title>cfx_evm::evm::instructions::Instruction::info (320 samples, 0.92%)</title><rect x="65.9560%" y="1109" width="0.9195%" height="15" fill="rgb(234,179,48)" fg:x="22954" fg:w="320"/><text x="66.2060%" y="1119.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (296 samples, 0.85%)</title><rect x="66.0249%" y="1093" width="0.8505%" height="15" fill="rgb(248,90,0)" fg:x="22978" fg:w="296"/><text x="66.2749%" y="1103.50"></text></g><g><title>&lt;cfx_evm::evm::interpreter::stack::VecStack&lt;S&gt; as cfx_evm::evm::interpreter::stack::Stack&lt;S&gt;&gt;::pop_back (32 samples, 0.09%)</title><rect x="66.9013%" y="1093" width="0.0919%" height="15" fill="rgb(207,228,37)" fg:x="23283" fg:w="32"/><text x="67.1513%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (32 samples, 0.09%)</title><rect x="66.9013%" y="1077" width="0.0919%" height="15" fill="rgb(235,214,15)" fg:x="23283" fg:w="32"/><text x="67.1513%" y="1087.50"></text></g><g><title>core::ptr::read (32 samples, 0.09%)</title><rect x="66.9013%" y="1061" width="0.0919%" height="15" fill="rgb(210,144,39)" fg:x="23283" fg:w="32"/><text x="67.1513%" y="1071.50"></text></g><g><title>&lt;cfx_evm::evm::interpreter::stack::VecStack&lt;S&gt; as cfx_evm::evm::interpreter::stack::Stack&lt;S&gt;&gt;::push (152 samples, 0.44%)</title><rect x="66.9933%" y="1093" width="0.4368%" height="15" fill="rgb(222,67,41)" fg:x="23315" fg:w="152"/><text x="67.2433%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (152 samples, 0.44%)</title><rect x="66.9933%" y="1077" width="0.4368%" height="15" fill="rgb(205,35,37)" fg:x="23315" fg:w="152"/><text x="67.2433%" y="1087.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (152 samples, 0.44%)</title><rect x="66.9933%" y="1061" width="0.4368%" height="15" fill="rgb(216,125,40)" fg:x="23315" fg:w="152"/><text x="67.2433%" y="1071.50"></text></g><g><title>cfx_evm::evm::interpreter::CodeReader::read (27 samples, 0.08%)</title><rect x="67.4329%" y="1093" width="0.0776%" height="15" fill="rgb(228,227,20)" fg:x="23468" fg:w="27"/><text x="67.6829%" y="1103.50"></text></g><g><title>&lt;primitive_types::U256 as core::convert::From&lt;&amp;[u8]&gt;&gt;::from (27 samples, 0.08%)</title><rect x="67.4329%" y="1077" width="0.0776%" height="15" fill="rgb(242,173,45)" fg:x="23468" fg:w="27"/><text x="67.6829%" y="1087.50"></text></g><g><title>primitive_types::U256::from_big_endian (27 samples, 0.08%)</title><rect x="67.4329%" y="1061" width="0.0776%" height="15" fill="rgb(215,79,24)" fg:x="23468" fg:w="27"/><text x="67.6829%" y="1071.50"></text></g><g><title>&lt;byteorder::BigEndian as byteorder::ByteOrder&gt;::read_u64 (27 samples, 0.08%)</title><rect x="67.4329%" y="1045" width="0.0776%" height="15" fill="rgb(238,164,38)" fg:x="23468" fg:w="27"/><text x="67.6829%" y="1055.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (27 samples, 0.08%)</title><rect x="67.4329%" y="1029" width="0.0776%" height="15" fill="rgb(245,196,38)" fg:x="23468" fg:w="27"/><text x="67.6829%" y="1039.50"></text></g><g><title>core::array::&lt;impl core::convert::TryFrom&lt;&amp;[T]&gt; for [T (27 samples, 0.08%)</title><rect x="67.4329%" y="1013" width="0.0776%" height="15" fill="rgb(231,217,29)" fg:x="23468" fg:w="27"/><text x="67.6829%" y="1023.50"></text></g><g><title> N]&gt;::try_from (27 samples, 0.08%)</title><rect x="67.4329%" y="997" width="0.0776%" height="15" fill="rgb(245,6,4)" fg:x="23468" fg:w="27"/><text x="67.6829%" y="1007.50"></text></g><g><title>core::result::Result&lt;&amp;T,E&gt;::copied (27 samples, 0.08%)</title><rect x="67.4329%" y="981" width="0.0776%" height="15" fill="rgb(214,76,49)" fg:x="23468" fg:w="27"/><text x="67.6829%" y="991.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (27 samples, 0.08%)</title><rect x="67.4329%" y="965" width="0.0776%" height="15" fill="rgb(205,96,12)" fg:x="23468" fg:w="27"/><text x="67.6829%" y="975.50"></text></g><g><title>core::result::Result&lt;&amp;T,E&gt;::copied::{{closure}} (27 samples, 0.08%)</title><rect x="67.4329%" y="949" width="0.0776%" height="15" fill="rgb(243,131,4)" fg:x="23468" fg:w="27"/><text x="67.6829%" y="959.50"></text></g><g><title>cfx_evm::evm::interpreter::Interpreter&lt;Cost&gt;::copy_data_to_memory (4 samples, 0.01%)</title><rect x="67.5105%" y="1093" width="0.0115%" height="15" fill="rgb(214,114,4)" fg:x="23495" fg:w="4"/><text x="67.7605%" y="1103.50"></text></g><g><title>cfx_evm::evm::interpreter::get_and_reset_sign (4 samples, 0.01%)</title><rect x="67.5220%" y="1093" width="0.0115%" height="15" fill="rgb(234,215,15)" fg:x="23499" fg:w="4"/><text x="67.7720%" y="1103.50"></text></g><g><title>cfx_evm::evm::interpreter::Interpreter&lt;Cost&gt;::exec_instruction (234 samples, 0.67%)</title><rect x="66.8755%" y="1109" width="0.6724%" height="15" fill="rgb(250,216,45)" fg:x="23274" fg:w="234"/><text x="67.1255%" y="1119.50"></text></g><g><title>core::cmp::PartialOrd::ge (5 samples, 0.01%)</title><rect x="67.5335%" y="1093" width="0.0144%" height="15" fill="rgb(236,128,4)" fg:x="23503" fg:w="5"/><text x="67.7835%" y="1103.50"></text></g><g><title>&lt;primitive_types::U256 as core::cmp::PartialOrd&gt;::partial_cmp (5 samples, 0.01%)</title><rect x="67.5335%" y="1077" width="0.0144%" height="15" fill="rgb(234,50,33)" fg:x="23503" fg:w="5"/><text x="67.7835%" y="1087.50"></text></g><g><title>&lt;primitive_types::U256 as core::cmp::Ord&gt;::cmp (5 samples, 0.01%)</title><rect x="67.5335%" y="1061" width="0.0144%" height="15" fill="rgb(253,131,37)" fg:x="23503" fg:w="5"/><text x="67.7835%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::cmp (5 samples, 0.01%)</title><rect x="67.5335%" y="1045" width="0.0144%" height="15" fill="rgb(218,55,27)" fg:x="23503" fg:w="5"/><text x="67.7835%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::cmp_by (5 samples, 0.01%)</title><rect x="67.5335%" y="1029" width="0.0144%" height="15" fill="rgb(241,220,28)" fg:x="23503" fg:w="5"/><text x="67.7835%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::iter_compare (5 samples, 0.01%)</title><rect x="67.5335%" y="1013" width="0.0144%" height="15" fill="rgb(241,90,48)" fg:x="23503" fg:w="5"/><text x="67.7835%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (5 samples, 0.01%)</title><rect x="67.5335%" y="997" width="0.0144%" height="15" fill="rgb(216,43,37)" fg:x="23503" fg:w="5"/><text x="67.7835%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.01%)</title><rect x="67.5335%" y="981" width="0.0144%" height="15" fill="rgb(207,173,9)" fg:x="23503" fg:w="5"/><text x="67.7835%" y="991.50"></text></g><g><title>core::iter::traits::double_ended::DoubleEndedIterator::try_rfold (5 samples, 0.01%)</title><rect x="67.5335%" y="965" width="0.0144%" height="15" fill="rgb(240,126,30)" fg:x="23503" fg:w="5"/><text x="67.7835%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (5 samples, 0.01%)</title><rect x="67.5335%" y="949" width="0.0144%" height="15" fill="rgb(228,178,53)" fg:x="23503" fg:w="5"/><text x="67.7835%" y="959.50"></text></g><g><title>core::iter::traits::iterator::iter_compare::compare::{{closure}} (5 samples, 0.01%)</title><rect x="67.5335%" y="933" width="0.0144%" height="15" fill="rgb(217,33,4)" fg:x="23503" fg:w="5"/><text x="67.7835%" y="943.50"></text></g><g><title>cfx_evm::evm::interpreter::Interpreter&lt;Cost&gt;::verify_instruction (20 samples, 0.06%)</title><rect x="67.5478%" y="1109" width="0.0575%" height="15" fill="rgb(206,124,34)" fg:x="23508" fg:w="20"/><text x="67.7978%" y="1119.50"></text></g><g><title>&lt;cfx_evm::call_create_frame::context::Context as cfx_evm::vm::context::Context&gt;::spec (9 samples, 0.03%)</title><rect x="67.5794%" y="1093" width="0.0259%" height="15" fill="rgb(208,122,53)" fg:x="23519" fg:w="9"/><text x="67.8294%" y="1103.50"></text></g><g><title>cfx_evm::evm::interpreter::Interpreter&lt;Cost&gt;::step (729 samples, 2.09%)</title><rect x="65.8899%" y="1141" width="2.0947%" height="15" fill="rgb(215,202,26)" fg:x="22931" fg:w="729"/><text x="66.1399%" y="1151.50">c..</text></g><g><title>cfx_evm::evm::interpreter::Interpreter&lt;Cost&gt;::step_inner (729 samples, 2.09%)</title><rect x="65.8899%" y="1125" width="2.0947%" height="15" fill="rgb(232,198,31)" fg:x="22931" fg:w="729"/><text x="66.1399%" y="1135.50">c..</text></g><g><title>cfx_evm::evm::interpreter::gasometer::Gasometer&lt;Gas&gt;::requirements (132 samples, 0.38%)</title><rect x="67.6053%" y="1109" width="0.3793%" height="15" fill="rgb(222,23,35)" fg:x="23528" fg:w="132"/><text x="67.8553%" y="1119.50"></text></g><g><title>&lt;cfx_evm::call_create_frame::context::Context as cfx_evm::vm::context::Context&gt;::spec (6 samples, 0.02%)</title><rect x="67.9674%" y="1093" width="0.0172%" height="15" fill="rgb(242,27,53)" fg:x="23654" fg:w="6"/><text x="68.2174%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;usize&gt;&gt; (9 samples, 0.03%)</title><rect x="67.9932%" y="1109" width="0.0259%" height="15" fill="rgb(210,216,42)" fg:x="23663" fg:w="9"/><text x="68.2432%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;usize&gt;&gt; (9 samples, 0.03%)</title><rect x="67.9932%" y="1093" width="0.0259%" height="15" fill="rgb(234,39,38)" fg:x="23663" fg:w="9"/><text x="68.2432%" y="1103.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.03%)</title><rect x="67.9932%" y="1077" width="0.0259%" height="15" fill="rgb(235,126,54)" fg:x="23663" fg:w="9"/><text x="68.2432%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9 samples, 0.03%)</title><rect x="67.9932%" y="1061" width="0.0259%" height="15" fill="rgb(235,150,33)" fg:x="23663" fg:w="9"/><text x="68.2432%" y="1071.50"></text></g><g><title>alloc::alloc::dealloc (9 samples, 0.03%)</title><rect x="67.9932%" y="1045" width="0.0259%" height="15" fill="rgb(249,49,53)" fg:x="23663" fg:w="9"/><text x="68.2432%" y="1055.50"></text></g><g><title>sdallocx (9 samples, 0.03%)</title><rect x="67.9932%" y="1029" width="0.0259%" height="15" fill="rgb(238,60,50)" fg:x="23663" fg:w="9"/><text x="68.2432%" y="1039.50"></text></g><g><title>isfree (9 samples, 0.03%)</title><rect x="67.9932%" y="1013" width="0.0259%" height="15" fill="rgb(210,5,2)" fg:x="23663" fg:w="9"/><text x="68.2432%" y="1023.50"></text></g><g><title>isdalloct (9 samples, 0.03%)</title><rect x="67.9932%" y="997" width="0.0259%" height="15" fill="rgb(214,207,24)" fg:x="23663" fg:w="9"/><text x="68.2432%" y="1007.50"></text></g><g><title>arena_sdalloc (9 samples, 0.03%)</title><rect x="67.9932%" y="981" width="0.0259%" height="15" fill="rgb(228,173,2)" fg:x="23663" fg:w="9"/><text x="68.2432%" y="991.50"></text></g><g><title>sz_size2index (9 samples, 0.03%)</title><rect x="67.9932%" y="965" width="0.0259%" height="15" fill="rgb(244,26,8)" fg:x="23663" fg:w="9"/><text x="68.2432%" y="975.50"></text></g><g><title>sz_size2index_compute (9 samples, 0.03%)</title><rect x="67.9932%" y="949" width="0.0259%" height="15" fill="rgb(249,153,35)" fg:x="23663" fg:w="9"/><text x="68.2432%" y="959.50"></text></g><g><title>&lt;cfx_evm::evm::interpreter::Interpreter&lt;Cost&gt; as cfx_evm::vm::Exec&gt;::exec (743 samples, 2.13%)</title><rect x="65.8899%" y="1157" width="2.1349%" height="15" fill="rgb(221,215,40)" fg:x="22931" fg:w="743"/><text x="66.1399%" y="1167.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;cfx_evm::evm::interpreter::Interpreter&lt;usize&gt;&gt;&gt; (14 samples, 0.04%)</title><rect x="67.9846%" y="1141" width="0.0402%" height="15" fill="rgb(238,106,35)" fg:x="23660" fg:w="14"/><text x="68.2346%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;cfx_evm::evm::interpreter::Interpreter&lt;usize&gt;&gt; (13 samples, 0.04%)</title><rect x="67.9875%" y="1125" width="0.0374%" height="15" fill="rgb(207,195,21)" fg:x="23661" fg:w="13"/><text x="68.2375%" y="1135.50"></text></g><g><title>&lt;cfx_evm::evm::interpreter::Interpreter&lt;Cost&gt; as cfx_evm::vm::ResumeCall&gt;::resume_call (5 samples, 0.01%)</title><rect x="68.0248%" y="1157" width="0.0144%" height="15" fill="rgb(205,43,29)" fg:x="23674" fg:w="5"/><text x="68.2748%" y="1167.50"></text></g><g><title>&lt;cfx_evm::evm::interpreter::stack::VecStack&lt;S&gt; as cfx_evm::evm::interpreter::stack::Stack&lt;S&gt;&gt;::push (5 samples, 0.01%)</title><rect x="68.0248%" y="1141" width="0.0144%" height="15" fill="rgb(236,35,21)" fg:x="23674" fg:w="5"/><text x="68.2748%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (5 samples, 0.01%)</title><rect x="68.0248%" y="1125" width="0.0144%" height="15" fill="rgb(244,74,8)" fg:x="23674" fg:w="5"/><text x="68.2748%" y="1135.50"></text></g><g><title>core::ptr::write (5 samples, 0.01%)</title><rect x="68.0248%" y="1109" width="0.0144%" height="15" fill="rgb(241,229,7)" fg:x="23674" fg:w="5"/><text x="68.2748%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (13 samples, 0.04%)</title><rect x="68.0478%" y="1029" width="0.0374%" height="15" fill="rgb(212,223,25)" fg:x="23682" fg:w="13"/><text x="68.2978%" y="1039.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (13 samples, 0.04%)</title><rect x="68.0478%" y="1013" width="0.0374%" height="15" fill="rgb(234,58,53)" fg:x="23682" fg:w="13"/><text x="68.2978%" y="1023.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (13 samples, 0.04%)</title><rect x="68.0478%" y="997" width="0.0374%" height="15" fill="rgb(244,36,1)" fg:x="23682" fg:w="13"/><text x="68.2978%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;(cfx_types::AddressWithSpace,core::option::Option&lt;cfx_evm::state::account_entry::AccountEntry&gt;)&gt; (13 samples, 0.04%)</title><rect x="68.0478%" y="981" width="0.0374%" height="15" fill="rgb(222,40,54)" fg:x="23682" fg:w="13"/><text x="68.2978%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;cfx_evm::state::account_entry::AccountEntry&gt;&gt; (13 samples, 0.04%)</title><rect x="68.0478%" y="965" width="0.0374%" height="15" fill="rgb(210,207,39)" fg:x="23682" fg:w="13"/><text x="68.2978%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;cfx_evm::state::account_entry::AccountEntry&gt; (5 samples, 0.01%)</title><rect x="68.0708%" y="949" width="0.0144%" height="15" fill="rgb(234,52,14)" fg:x="23690" fg:w="5"/><text x="68.3208%" y="959.50"></text></g><g><title>&lt;cfx_evm::state::State as cfx_state::state_trait::CheckpointTrait&gt;::discard_checkpoint (16 samples, 0.05%)</title><rect x="68.0478%" y="1125" width="0.0460%" height="15" fill="rgb(239,108,46)" fg:x="23682" fg:w="16"/><text x="68.2978%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;cfx_types::AddressWithSpace,core::option::Option&lt;cfx_evm::state::account_entry::AccountEntry&gt;&gt;&gt; (16 samples, 0.05%)</title><rect x="68.0478%" y="1109" width="0.0460%" height="15" fill="rgb(252,223,5)" fg:x="23682" fg:w="16"/><text x="68.2978%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;cfx_types::AddressWithSpace,core::option::Option&lt;cfx_evm::state::account_entry::AccountEntry&gt;,std::hash::random::RandomState&gt;&gt; (16 samples, 0.05%)</title><rect x="68.0478%" y="1093" width="0.0460%" height="15" fill="rgb(227,181,11)" fg:x="23682" fg:w="16"/><text x="68.2978%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(cfx_types::AddressWithSpace,core::option::Option&lt;cfx_evm::state::account_entry::AccountEntry&gt;)&gt;&gt; (16 samples, 0.05%)</title><rect x="68.0478%" y="1077" width="0.0460%" height="15" fill="rgb(248,126,40)" fg:x="23682" fg:w="16"/><text x="68.2978%" y="1087.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.05%)</title><rect x="68.0478%" y="1061" width="0.0460%" height="15" fill="rgb(243,1,18)" fg:x="23682" fg:w="16"/><text x="68.2978%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (16 samples, 0.05%)</title><rect x="68.0478%" y="1045" width="0.0460%" height="15" fill="rgb(214,145,23)" fg:x="23682" fg:w="16"/><text x="68.2978%" y="1055.50"></text></g><g><title>cfx_evm::call_create_frame::frame::CallCreateFrame::process_output (26 samples, 0.07%)</title><rect x="68.0392%" y="1157" width="0.0747%" height="15" fill="rgb(241,218,11)" fg:x="23679" fg:w="26"/><text x="68.2892%" y="1167.50"></text></g><g><title>cfx_evm::call_create_frame::frame::CallCreateFrame::process_return (23 samples, 0.07%)</title><rect x="68.0478%" y="1141" width="0.0661%" height="15" fill="rgb(214,219,24)" fg:x="23682" fg:w="23"/><text x="68.2978%" y="1151.50"></text></g><g><title>cfx_evm::state::substate::FrameStackInfo::pop (5 samples, 0.01%)</title><rect x="68.0995%" y="1125" width="0.0144%" height="15" fill="rgb(235,32,7)" fg:x="23700" fg:w="5"/><text x="68.3495%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (5 samples, 0.01%)</title><rect x="68.1369%" y="885" width="0.0144%" height="15" fill="rgb(227,121,28)" fg:x="23713" fg:w="5"/><text x="68.3869%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.01%)</title><rect x="68.1369%" y="869" width="0.0144%" height="15" fill="rgb(216,129,49)" fg:x="23713" fg:w="5"/><text x="68.3869%" y="879.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (5 samples, 0.01%)</title><rect x="68.1369%" y="853" width="0.0144%" height="15" fill="rgb(207,194,50)" fg:x="23713" fg:w="5"/><text x="68.3869%" y="863.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (5 samples, 0.01%)</title><rect x="68.1369%" y="837" width="0.0144%" height="15" fill="rgb(207,4,18)" fg:x="23713" fg:w="5"/><text x="68.3869%" y="847.50"></text></g><g><title>&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12 samples, 0.03%)</title><rect x="68.1254%" y="1029" width="0.0345%" height="15" fill="rgb(213,50,30)" fg:x="23709" fg:w="12"/><text x="68.3754%" y="1039.50"></text></g><g><title>&lt;hashbrown::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (11 samples, 0.03%)</title><rect x="68.1283%" y="1013" width="0.0316%" height="15" fill="rgb(208,77,22)" fg:x="23710" fg:w="11"/><text x="68.3783%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (11 samples, 0.03%)</title><rect x="68.1283%" y="997" width="0.0316%" height="15" fill="rgb(244,204,34)" fg:x="23710" fg:w="11"/><text x="68.3783%" y="1007.50"></text></g><g><title>&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold::{{closure}} (11 samples, 0.03%)</title><rect x="68.1283%" y="981" width="0.0316%" height="15" fill="rgb(230,20,17)" fg:x="23710" fg:w="11"/><text x="68.3783%" y="991.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (11 samples, 0.03%)</title><rect x="68.1283%" y="965" width="0.0316%" height="15" fill="rgb(237,83,15)" fg:x="23710" fg:w="11"/><text x="68.3783%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (11 samples, 0.03%)</title><rect x="68.1283%" y="949" width="0.0316%" height="15" fill="rgb(221,109,25)" fg:x="23710" fg:w="11"/><text x="68.3783%" y="959.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (11 samples, 0.03%)</title><rect x="68.1283%" y="933" width="0.0316%" height="15" fill="rgb(205,194,52)" fg:x="23710" fg:w="11"/><text x="68.3783%" y="943.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (11 samples, 0.03%)</title><rect x="68.1283%" y="917" width="0.0316%" height="15" fill="rgb(244,173,54)" fg:x="23710" fg:w="11"/><text x="68.3783%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (8 samples, 0.02%)</title><rect x="68.1369%" y="901" width="0.0230%" height="15" fill="rgb(227,181,18)" fg:x="23713" fg:w="8"/><text x="68.3869%" y="911.50"></text></g><g><title>cfx_evm::call_create_frame::frame::CallCreateFrame::resume (802 samples, 2.30%)</title><rect x="65.8612%" y="1173" width="2.3045%" height="15" fill="rgb(238,36,30)" fg:x="22921" fg:w="802"/><text x="66.1112%" y="1183.50">c..</text></g><g><title>cfx_evm::call_create_frame::result::accrue_substate (18 samples, 0.05%)</title><rect x="68.1139%" y="1157" width="0.0517%" height="15" fill="rgb(254,85,0)" fg:x="23705" fg:w="18"/><text x="68.3639%" y="1167.50"></text></g><g><title>cfx_evm::state::substate::Substate::accrue (18 samples, 0.05%)</title><rect x="68.1139%" y="1141" width="0.0517%" height="15" fill="rgb(247,63,33)" fg:x="23705" fg:w="18"/><text x="68.3639%" y="1151.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (18 samples, 0.05%)</title><rect x="68.1139%" y="1125" width="0.0517%" height="15" fill="rgb(220,7,54)" fg:x="23705" fg:w="18"/><text x="68.3639%" y="1135.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (14 samples, 0.04%)</title><rect x="68.1254%" y="1109" width="0.0402%" height="15" fill="rgb(238,227,21)" fg:x="23709" fg:w="14"/><text x="68.3754%" y="1119.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (14 samples, 0.04%)</title><rect x="68.1254%" y="1093" width="0.0402%" height="15" fill="rgb(237,29,31)" fg:x="23709" fg:w="14"/><text x="68.3754%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (14 samples, 0.04%)</title><rect x="68.1254%" y="1077" width="0.0402%" height="15" fill="rgb(211,21,50)" fg:x="23709" fg:w="14"/><text x="68.3754%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14 samples, 0.04%)</title><rect x="68.1254%" y="1061" width="0.0402%" height="15" fill="rgb(239,119,2)" fg:x="23709" fg:w="14"/><text x="68.3754%" y="1071.50"></text></g><g><title>&lt;std::collections::hash::set::IntoIter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14 samples, 0.04%)</title><rect x="68.1254%" y="1045" width="0.0402%" height="15" fill="rgb(250,2,39)" fg:x="23709" fg:w="14"/><text x="68.3754%" y="1055.50"></text></g><g><title>hashbrown::map::make_hash (5 samples, 0.01%)</title><rect x="68.1685%" y="901" width="0.0144%" height="15" fill="rgb(244,46,53)" fg:x="23724" fg:w="5"/><text x="68.4185%" y="911.50"></text></g><g><title>core::hash::BuildHasher::hash_one (5 samples, 0.01%)</title><rect x="68.1685%" y="885" width="0.0144%" height="15" fill="rgb(209,21,19)" fg:x="23724" fg:w="5"/><text x="68.4185%" y="895.50"></text></g><g><title>cfx_evm::call_create_frame::result::accrue_substate (10 samples, 0.03%)</title><rect x="68.1656%" y="1157" width="0.0287%" height="15" fill="rgb(236,145,4)" fg:x="23723" fg:w="10"/><text x="68.4156%" y="1167.50"></text></g><g><title>cfx_evm::state::substate::Substate::accrue (10 samples, 0.03%)</title><rect x="68.1656%" y="1141" width="0.0287%" height="15" fill="rgb(220,133,36)" fg:x="23723" fg:w="10"/><text x="68.4156%" y="1151.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (9 samples, 0.03%)</title><rect x="68.1685%" y="1125" width="0.0259%" height="15" fill="rgb(244,18,3)" fg:x="23724" fg:w="9"/><text x="68.4185%" y="1135.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (9 samples, 0.03%)</title><rect x="68.1685%" y="1109" width="0.0259%" height="15" fill="rgb(232,171,48)" fg:x="23724" fg:w="9"/><text x="68.4185%" y="1119.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (9 samples, 0.03%)</title><rect x="68.1685%" y="1093" width="0.0259%" height="15" fill="rgb(223,223,53)" fg:x="23724" fg:w="9"/><text x="68.4185%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (9 samples, 0.03%)</title><rect x="68.1685%" y="1077" width="0.0259%" height="15" fill="rgb(246,92,13)" fg:x="23724" fg:w="9"/><text x="68.4185%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.03%)</title><rect x="68.1685%" y="1061" width="0.0259%" height="15" fill="rgb(229,171,10)" fg:x="23724" fg:w="9"/><text x="68.4185%" y="1071.50"></text></g><g><title>&lt;std::collections::hash::set::IntoIter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.03%)</title><rect x="68.1685%" y="1045" width="0.0259%" height="15" fill="rgb(213,131,26)" fg:x="23724" fg:w="9"/><text x="68.4185%" y="1055.50"></text></g><g><title>&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.03%)</title><rect x="68.1685%" y="1029" width="0.0259%" height="15" fill="rgb(242,87,54)" fg:x="23724" fg:w="9"/><text x="68.4185%" y="1039.50"></text></g><g><title>&lt;hashbrown::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.03%)</title><rect x="68.1685%" y="1013" width="0.0259%" height="15" fill="rgb(237,21,35)" fg:x="23724" fg:w="9"/><text x="68.4185%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (9 samples, 0.03%)</title><rect x="68.1685%" y="997" width="0.0259%" height="15" fill="rgb(253,13,47)" fg:x="23724" fg:w="9"/><text x="68.4185%" y="1007.50"></text></g><g><title>&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold::{{closure}} (9 samples, 0.03%)</title><rect x="68.1685%" y="981" width="0.0259%" height="15" fill="rgb(215,122,49)" fg:x="23724" fg:w="9"/><text x="68.4185%" y="991.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (9 samples, 0.03%)</title><rect x="68.1685%" y="965" width="0.0259%" height="15" fill="rgb(209,179,30)" fg:x="23724" fg:w="9"/><text x="68.4185%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (9 samples, 0.03%)</title><rect x="68.1685%" y="949" width="0.0259%" height="15" fill="rgb(235,100,24)" fg:x="23724" fg:w="9"/><text x="68.4185%" y="959.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (9 samples, 0.03%)</title><rect x="68.1685%" y="933" width="0.0259%" height="15" fill="rgb(209,67,24)" fg:x="23724" fg:w="9"/><text x="68.4185%" y="943.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (9 samples, 0.03%)</title><rect x="68.1685%" y="917" width="0.0259%" height="15" fill="rgb(206,74,32)" fg:x="23724" fg:w="9"/><text x="68.4185%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (4 samples, 0.01%)</title><rect x="68.1829%" y="901" width="0.0115%" height="15" fill="rgb(212,45,25)" fg:x="23729" fg:w="4"/><text x="68.4329%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (4 samples, 0.01%)</title><rect x="68.1829%" y="885" width="0.0115%" height="15" fill="rgb(239,26,3)" fg:x="23729" fg:w="4"/><text x="68.4329%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot::{{closure}} (4 samples, 0.01%)</title><rect x="68.1829%" y="869" width="0.0115%" height="15" fill="rgb(218,36,15)" fg:x="23729" fg:w="4"/><text x="68.4329%" y="879.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (4 samples, 0.01%)</title><rect x="68.1829%" y="853" width="0.0115%" height="15" fill="rgb(206,108,24)" fg:x="23729" fg:w="4"/><text x="68.4329%" y="863.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (4 samples, 0.01%)</title><rect x="68.1829%" y="837" width="0.0115%" height="15" fill="rgb(234,204,42)" fg:x="23729" fg:w="4"/><text x="68.4329%" y="847.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4 samples, 0.01%)</title><rect x="68.1829%" y="821" width="0.0115%" height="15" fill="rgb(229,2,11)" fg:x="23729" fg:w="4"/><text x="68.4329%" y="831.50"></text></g><g><title>&lt;cfx_types::AddressWithSpace as core::cmp::PartialEq&gt;::eq (4 samples, 0.01%)</title><rect x="68.1829%" y="805" width="0.0115%" height="15" fill="rgb(221,20,48)" fg:x="23729" fg:w="4"/><text x="68.4329%" y="815.50"></text></g><g><title>&lt;primitive_types::H160 as core::cmp::PartialEq&gt;::eq (4 samples, 0.01%)</title><rect x="68.1829%" y="789" width="0.0115%" height="15" fill="rgb(244,164,10)" fg:x="23729" fg:w="4"/><text x="68.4329%" y="799.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4 samples, 0.01%)</title><rect x="68.1829%" y="773" width="0.0115%" height="15" fill="rgb(243,229,2)" fg:x="23729" fg:w="4"/><text x="68.4329%" y="783.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (4 samples, 0.01%)</title><rect x="68.1829%" y="757" width="0.0115%" height="15" fill="rgb(232,131,37)" fg:x="23729" fg:w="4"/><text x="68.4329%" y="767.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (4 samples, 0.01%)</title><rect x="68.1829%" y="741" width="0.0115%" height="15" fill="rgb(217,156,11)" fg:x="23729" fg:w="4"/><text x="68.4329%" y="751.50"></text></g><g><title>cfx_evm::call_create_frame::stack::FrameStack::process_return (16 samples, 0.05%)</title><rect x="68.1656%" y="1173" width="0.0460%" height="15" fill="rgb(239,99,48)" fg:x="23723" fg:w="16"/><text x="68.4156%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;cfx_evm::state::substate::FrameStackInfo&gt; (5 samples, 0.01%)</title><rect x="68.1972%" y="1157" width="0.0144%" height="15" fill="rgb(231,209,9)" fg:x="23734" fg:w="5"/><text x="68.4472%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;cfx_types::AddressWithSpace,u32&gt;&gt; (5 samples, 0.01%)</title><rect x="68.1972%" y="1141" width="0.0144%" height="15" fill="rgb(254,97,27)" fg:x="23734" fg:w="5"/><text x="68.4472%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;cfx_types::AddressWithSpace,u32,std::hash::random::RandomState&gt;&gt; (5 samples, 0.01%)</title><rect x="68.1972%" y="1125" width="0.0144%" height="15" fill="rgb(223,151,38)" fg:x="23734" fg:w="5"/><text x="68.4472%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(cfx_types::AddressWithSpace,u32)&gt;&gt; (5 samples, 0.01%)</title><rect x="68.1972%" y="1109" width="0.0144%" height="15" fill="rgb(219,206,35)" fg:x="23734" fg:w="5"/><text x="68.4472%" y="1119.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="68.1972%" y="1093" width="0.0144%" height="15" fill="rgb(216,130,31)" fg:x="23734" fg:w="5"/><text x="68.4472%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (5 samples, 0.01%)</title><rect x="68.1972%" y="1077" width="0.0144%" height="15" fill="rgb(251,97,34)" fg:x="23734" fg:w="5"/><text x="68.4472%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTableInner::free_buckets (5 samples, 0.01%)</title><rect x="68.1972%" y="1061" width="0.0144%" height="15" fill="rgb(246,159,47)" fg:x="23734" fg:w="5"/><text x="68.4472%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.01%)</title><rect x="68.1972%" y="1045" width="0.0144%" height="15" fill="rgb(232,87,10)" fg:x="23734" fg:w="5"/><text x="68.4472%" y="1055.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.01%)</title><rect x="68.1972%" y="1029" width="0.0144%" height="15" fill="rgb(249,1,37)" fg:x="23734" fg:w="5"/><text x="68.4472%" y="1039.50"></text></g><g><title>sdallocx (4 samples, 0.01%)</title><rect x="68.2001%" y="1013" width="0.0115%" height="15" fill="rgb(239,135,14)" fg:x="23735" fg:w="4"/><text x="68.4501%" y="1023.50"></text></g><g><title>isfree (4 samples, 0.01%)</title><rect x="68.2001%" y="997" width="0.0115%" height="15" fill="rgb(253,116,46)" fg:x="23735" fg:w="4"/><text x="68.4501%" y="1007.50"></text></g><g><title>isdalloct (4 samples, 0.01%)</title><rect x="68.2001%" y="981" width="0.0115%" height="15" fill="rgb(222,217,37)" fg:x="23735" fg:w="4"/><text x="68.4501%" y="991.50"></text></g><g><title>arena_sdalloc (4 samples, 0.01%)</title><rect x="68.2001%" y="965" width="0.0115%" height="15" fill="rgb(252,96,8)" fg:x="23735" fg:w="4"/><text x="68.4501%" y="975.50"></text></g><g><title>tcache_dalloc_small (4 samples, 0.01%)</title><rect x="68.2001%" y="949" width="0.0115%" height="15" fill="rgb(254,103,41)" fg:x="23735" fg:w="4"/><text x="68.4501%" y="959.50"></text></g><g><title>cfx_evm::call_create_frame::stack::FrameStack::exec_stack (7,049 samples, 20.25%)</title><rect x="47.9656%" y="1189" width="20.2546%" height="15" fill="rgb(218,213,19)" fg:x="16693" fg:w="7049"/><text x="48.2156%" y="1199.50">cfx_evm::call_create_frame::stac..</text></g><g><title>cfx_evm::call_create_frame::stack::FrameStack::exec (10,563 samples, 30.35%)</title><rect x="37.8771%" y="1205" width="30.3517%" height="15" fill="rgb(253,95,21)" fg:x="13182" fg:w="10563"/><text x="38.1271%" y="1215.50">cfx_evm::call_create_frame::stack::FrameStack::ex..</text></g><g><title>&lt;aptos_evm::transaction::EvmTransaction as cfx_evm::execution::transaction_info::TransactionInfo&gt;::sender (4 samples, 0.01%)</title><rect x="68.2949%" y="1189" width="0.0115%" height="15" fill="rgb(229,26,28)" fg:x="23768" fg:w="4"/><text x="68.5449%" y="1199.50"></text></g><g><title>cfx_evm::state::State::require_or_new_basic_account (5 samples, 0.01%)</title><rect x="68.3294%" y="1173" width="0.0144%" height="15" fill="rgb(230,129,16)" fg:x="23780" fg:w="5"/><text x="68.5794%" y="1183.50"></text></g><g><title>cfx_evm::state::State::require_or_set (5 samples, 0.01%)</title><rect x="68.3294%" y="1157" width="0.0144%" height="15" fill="rgb(236,126,17)" fg:x="23780" fg:w="5"/><text x="68.5794%" y="1167.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (5 samples, 0.01%)</title><rect x="68.3294%" y="1141" width="0.0144%" height="15" fill="rgb(209,33,33)" fg:x="23780" fg:w="5"/><text x="68.5794%" y="1151.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (5 samples, 0.01%)</title><rect x="68.3294%" y="1125" width="0.0144%" height="15" fill="rgb(227,85,29)" fg:x="23780" fg:w="5"/><text x="68.5794%" y="1135.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (5 samples, 0.01%)</title><rect x="68.3294%" y="1109" width="0.0144%" height="15" fill="rgb(241,53,46)" fg:x="23780" fg:w="5"/><text x="68.5794%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (4 samples, 0.01%)</title><rect x="68.3323%" y="1093" width="0.0115%" height="15" fill="rgb(228,167,53)" fg:x="23781" fg:w="4"/><text x="68.5823%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (4 samples, 0.01%)</title><rect x="68.3323%" y="1077" width="0.0115%" height="15" fill="rgb(238,195,45)" fg:x="23781" fg:w="4"/><text x="68.5823%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (4 samples, 0.01%)</title><rect x="68.3323%" y="1061" width="0.0115%" height="15" fill="rgb(252,124,45)" fg:x="23781" fg:w="4"/><text x="68.5823%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (4 samples, 0.01%)</title><rect x="68.3323%" y="1045" width="0.0115%" height="15" fill="rgb(251,38,35)" fg:x="23781" fg:w="4"/><text x="68.5823%" y="1055.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (4 samples, 0.01%)</title><rect x="68.3323%" y="1029" width="0.0115%" height="15" fill="rgb(227,33,2)" fg:x="23781" fg:w="4"/><text x="68.5823%" y="1039.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (4 samples, 0.01%)</title><rect x="68.3323%" y="1013" width="0.0115%" height="15" fill="rgb(223,157,46)" fg:x="23781" fg:w="4"/><text x="68.5823%" y="1023.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4 samples, 0.01%)</title><rect x="68.3323%" y="997" width="0.0115%" height="15" fill="rgb(222,78,41)" fg:x="23781" fg:w="4"/><text x="68.5823%" y="1007.50"></text></g><g><title>&lt;cfx_types::AddressWithSpace as core::cmp::PartialEq&gt;::eq (4 samples, 0.01%)</title><rect x="68.3323%" y="981" width="0.0115%" height="15" fill="rgb(248,176,11)" fg:x="23781" fg:w="4"/><text x="68.5823%" y="991.50"></text></g><g><title>&lt;primitive_types::H160 as core::cmp::PartialEq&gt;::eq (4 samples, 0.01%)</title><rect x="68.3323%" y="965" width="0.0115%" height="15" fill="rgb(241,221,18)" fg:x="23781" fg:w="4"/><text x="68.5823%" y="975.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4 samples, 0.01%)</title><rect x="68.3323%" y="949" width="0.0115%" height="15" fill="rgb(218,85,22)" fg:x="23781" fg:w="4"/><text x="68.5823%" y="959.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (4 samples, 0.01%)</title><rect x="68.3323%" y="933" width="0.0115%" height="15" fill="rgb(222,223,7)" fg:x="23781" fg:w="4"/><text x="68.5823%" y="943.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (4 samples, 0.01%)</title><rect x="68.3323%" y="917" width="0.0115%" height="15" fill="rgb(254,59,39)" fg:x="23781" fg:w="4"/><text x="68.5823%" y="927.50"></text></g><g><title>&lt;cfx_evm::state::State as cfx_state::state_trait::StateOpsTrait&gt;::add_balance (19 samples, 0.05%)</title><rect x="68.3064%" y="1189" width="0.0546%" height="15" fill="rgb(247,100,27)" fg:x="23772" fg:w="19"/><text x="68.5564%" y="1199.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (5 samples, 0.01%)</title><rect x="68.3466%" y="1173" width="0.0144%" height="15" fill="rgb(237,207,10)" fg:x="23786" fg:w="5"/><text x="68.5966%" y="1183.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (5 samples, 0.01%)</title><rect x="68.3466%" y="1157" width="0.0144%" height="15" fill="rgb(220,121,28)" fg:x="23786" fg:w="5"/><text x="68.5966%" y="1167.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (5 samples, 0.01%)</title><rect x="68.3466%" y="1141" width="0.0144%" height="15" fill="rgb(213,223,20)" fg:x="23786" fg:w="5"/><text x="68.5966%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (4 samples, 0.01%)</title><rect x="68.3495%" y="1125" width="0.0115%" height="15" fill="rgb(205,121,27)" fg:x="23787" fg:w="4"/><text x="68.5995%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (4 samples, 0.01%)</title><rect x="68.3495%" y="1109" width="0.0115%" height="15" fill="rgb(253,24,53)" fg:x="23787" fg:w="4"/><text x="68.5995%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.01%)</title><rect x="68.3495%" y="1093" width="0.0115%" height="15" fill="rgb(224,224,47)" fg:x="23787" fg:w="4"/><text x="68.5995%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;cfx_evm::state::substate::Substate&gt; (4 samples, 0.01%)</title><rect x="68.3840%" y="1189" width="0.0115%" height="15" fill="rgb(250,125,36)" fg:x="23799" fg:w="4"/><text x="68.6340%" y="1199.50"></text></g><g><title>cfx_evm::execution::executor::TXExecutor::transact_postprocessing (61 samples, 0.18%)</title><rect x="68.2288%" y="1205" width="0.1753%" height="15" fill="rgb(240,144,38)" fg:x="23745" fg:w="61"/><text x="68.4788%" y="1215.50"></text></g><g><title>cfx_evm::state::State::insert_cache_if_fresh_account (5 samples, 0.01%)</title><rect x="68.4127%" y="1157" width="0.0144%" height="15" fill="rgb(250,15,50)" fg:x="23809" fg:w="5"/><text x="68.6627%" y="1167.50"></text></g><g><title>cfx_evm::state::account_entry::OverlayAccount::is_code_loaded (4 samples, 0.01%)</title><rect x="68.4271%" y="1125" width="0.0115%" height="15" fill="rgb(210,24,26)" fg:x="23814" fg:w="4"/><text x="68.6771%" y="1135.50"></text></g><g><title>&lt;primitive_types::H256 as core::cmp::PartialEq&gt;::eq (4 samples, 0.01%)</title><rect x="68.4271%" y="1109" width="0.0115%" height="15" fill="rgb(234,53,53)" fg:x="23814" fg:w="4"/><text x="68.6771%" y="1119.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4 samples, 0.01%)</title><rect x="68.4271%" y="1093" width="0.0115%" height="15" fill="rgb(208,108,28)" fg:x="23814" fg:w="4"/><text x="68.6771%" y="1103.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[U]&gt; for [T]&gt;::eq (4 samples, 0.01%)</title><rect x="68.4271%" y="1077" width="0.0115%" height="15" fill="rgb(227,143,7)" fg:x="23814" fg:w="4"/><text x="68.6771%" y="1087.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (4 samples, 0.01%)</title><rect x="68.4271%" y="1061" width="0.0115%" height="15" fill="rgb(238,189,38)" fg:x="23814" fg:w="4"/><text x="68.6771%" y="1071.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (5 samples, 0.01%)</title><rect x="68.4530%" y="1045" width="0.0144%" height="15" fill="rgb(222,69,15)" fg:x="23823" fg:w="5"/><text x="68.7030%" y="1055.50"></text></g><g><title>aptos_evm::storage_key::&lt;impl core::convert::From&lt;aptos_evm::storage_key::StorageKey&gt; for aptos_types::state_store::state_key::StateKey&gt;::from (5 samples, 0.01%)</title><rect x="68.4530%" y="1029" width="0.0144%" height="15" fill="rgb(213,169,7)" fg:x="23823" fg:w="5"/><text x="68.7030%" y="1039.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (5 samples, 0.01%)</title><rect x="68.4530%" y="1013" width="0.0144%" height="15" fill="rgb(251,219,4)" fg:x="23823" fg:w="5"/><text x="68.7030%" y="1023.50"></text></g><g><title>aptos_evm::storage_key::&lt;impl core::convert::From&lt;aptos_evm::storage_key::StorageKey&gt; for aptos_types::access_path::AccessPath&gt;::from (5 samples, 0.01%)</title><rect x="68.4530%" y="997" width="0.0144%" height="15" fill="rgb(241,55,40)" fg:x="23823" fg:w="5"/><text x="68.7030%" y="1007.50"></text></g><g><title>bcs::ser::to_bytes (4 samples, 0.01%)</title><rect x="68.4558%" y="981" width="0.0115%" height="15" fill="rgb(243,57,30)" fg:x="23824" fg:w="4"/><text x="68.7058%" y="991.50"></text></g><g><title>bcs::ser::serialize_into (4 samples, 0.01%)</title><rect x="68.4558%" y="965" width="0.0115%" height="15" fill="rgb(234,50,30)" fg:x="23824" fg:w="4"/><text x="68.7058%" y="975.50"></text></g><g><title>aptos_types::access_path::_::&lt;impl serde::ser::Serialize for aptos_types::access_path::Path&gt;::serialize (4 samples, 0.01%)</title><rect x="68.4558%" y="949" width="0.0115%" height="15" fill="rgb(239,23,42)" fg:x="23824" fg:w="4"/><text x="68.7058%" y="959.50"></text></g><g><title>&lt;cfx_statedb::impls::StateDb as cfx_statedb::StateDbTrait&gt;::get_raw (12 samples, 0.03%)</title><rect x="68.4415%" y="1093" width="0.0345%" height="15" fill="rgb(217,38,19)" fg:x="23819" fg:w="12"/><text x="68.6915%" y="1103.50"></text></g><g><title>&lt;cfx_storage::StorageKeyWrapper&lt;T,Key&gt; as cfx_storage::StorageTrait&gt;::get (11 samples, 0.03%)</title><rect x="68.4443%" y="1077" width="0.0316%" height="15" fill="rgb(215,179,16)" fg:x="23820" fg:w="11"/><text x="68.6943%" y="1087.50"></text></g><g><title>&lt;&amp;mut aptos_evm::state::ViewWrapper&lt;S&gt; as cfx_storage::StorageTrait&gt;::get (11 samples, 0.03%)</title><rect x="68.4443%" y="1061" width="0.0316%" height="15" fill="rgb(254,21,37)" fg:x="23820" fg:w="11"/><text x="68.6943%" y="1071.50"></text></g><g><title>extent_recycle_extract (13 samples, 0.04%)</title><rect x="68.5564%" y="645" width="0.0374%" height="15" fill="rgb(219,207,48)" fg:x="23859" fg:w="13"/><text x="68.8064%" y="655.50"></text></g><g><title>extents_fit_locked (9 samples, 0.03%)</title><rect x="68.5679%" y="629" width="0.0259%" height="15" fill="rgb(227,225,41)" fg:x="23863" fg:w="9"/><text x="68.8179%" y="639.50"></text></g><g><title>extents_best_fit_locked (9 samples, 0.03%)</title><rect x="68.5679%" y="613" width="0.0259%" height="15" fill="rgb(223,130,1)" fg:x="23863" fg:w="9"/><text x="68.8179%" y="623.50"></text></g><g><title>_rjem_je_large_palloc (39 samples, 0.11%)</title><rect x="68.5219%" y="693" width="0.1121%" height="15" fill="rgb(249,54,42)" fg:x="23847" fg:w="39"/><text x="68.7719%" y="703.50"></text></g><g><title>_rjem_je_arena_extent_alloc_large (30 samples, 0.09%)</title><rect x="68.5478%" y="677" width="0.0862%" height="15" fill="rgb(248,69,25)" fg:x="23856" fg:w="30"/><text x="68.7978%" y="687.50"></text></g><g><title>extent_recycle (27 samples, 0.08%)</title><rect x="68.5564%" y="661" width="0.0776%" height="15" fill="rgb(234,21,32)" fg:x="23859" fg:w="27"/><text x="68.8064%" y="671.50"></text></g><g><title>extent_recycle_split (14 samples, 0.04%)</title><rect x="68.5938%" y="645" width="0.0402%" height="15" fill="rgb(252,136,6)" fg:x="23872" fg:w="14"/><text x="68.8438%" y="655.50"></text></g><g><title>extent_split_interior (12 samples, 0.03%)</title><rect x="68.5995%" y="629" width="0.0345%" height="15" fill="rgb(245,87,12)" fg:x="23874" fg:w="12"/><text x="68.8495%" y="639.50"></text></g><g><title>extent_split_impl (10 samples, 0.03%)</title><rect x="68.6053%" y="613" width="0.0287%" height="15" fill="rgb(208,12,15)" fg:x="23876" fg:w="10"/><text x="68.8553%" y="623.50"></text></g><g><title>rlp::rlpin::Rlp::as_val (56 samples, 0.16%)</title><rect x="68.4817%" y="1029" width="0.1609%" height="15" fill="rgb(250,98,2)" fg:x="23833" fg:w="56"/><text x="68.7317%" y="1039.50"></text></g><g><title>rlp::impls::&lt;impl rlp::traits::Decodable for alloc::vec::Vec&lt;u8&gt;&gt;::decode (53 samples, 0.15%)</title><rect x="68.4903%" y="1013" width="0.1523%" height="15" fill="rgb(205,213,15)" fg:x="23836" fg:w="53"/><text x="68.7403%" y="1023.50"></text></g><g><title>rlp::rlpin::BasicDecoder::decode_value (51 samples, 0.15%)</title><rect x="68.4961%" y="997" width="0.1465%" height="15" fill="rgb(248,192,44)" fg:x="23838" fg:w="51"/><text x="68.7461%" y="1007.50"></text></g><g><title>rlp::impls::&lt;impl rlp::traits::Decodable for alloc::vec::Vec&lt;u8&gt;&gt;::decode::{{closure}} (47 samples, 0.14%)</title><rect x="68.5076%" y="981" width="0.1350%" height="15" fill="rgb(221,89,17)" fg:x="23842" fg:w="47"/><text x="68.7576%" y="991.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (43 samples, 0.12%)</title><rect x="68.5191%" y="965" width="0.1236%" height="15" fill="rgb(209,55,3)" fg:x="23846" fg:w="43"/><text x="68.7691%" y="975.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (43 samples, 0.12%)</title><rect x="68.5191%" y="949" width="0.1236%" height="15" fill="rgb(247,23,45)" fg:x="23846" fg:w="43"/><text x="68.7691%" y="959.50"></text></g><g><title>alloc::slice::hack::to_vec (43 samples, 0.12%)</title><rect x="68.5191%" y="933" width="0.1236%" height="15" fill="rgb(235,152,23)" fg:x="23846" fg:w="43"/><text x="68.7691%" y="943.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (43 samples, 0.12%)</title><rect x="68.5191%" y="917" width="0.1236%" height="15" fill="rgb(244,63,13)" fg:x="23846" fg:w="43"/><text x="68.7691%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (43 samples, 0.12%)</title><rect x="68.5191%" y="901" width="0.1236%" height="15" fill="rgb(227,30,37)" fg:x="23846" fg:w="43"/><text x="68.7691%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (43 samples, 0.12%)</title><rect x="68.5191%" y="885" width="0.1236%" height="15" fill="rgb(224,49,42)" fg:x="23846" fg:w="43"/><text x="68.7691%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (43 samples, 0.12%)</title><rect x="68.5191%" y="869" width="0.1236%" height="15" fill="rgb(218,129,5)" fg:x="23846" fg:w="43"/><text x="68.7691%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (43 samples, 0.12%)</title><rect x="68.5191%" y="853" width="0.1236%" height="15" fill="rgb(240,199,54)" fg:x="23846" fg:w="43"/><text x="68.7691%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (43 samples, 0.12%)</title><rect x="68.5191%" y="837" width="0.1236%" height="15" fill="rgb(234,31,13)" fg:x="23846" fg:w="43"/><text x="68.7691%" y="847.50"></text></g><g><title>alloc::alloc::alloc (43 samples, 0.12%)</title><rect x="68.5191%" y="821" width="0.1236%" height="15" fill="rgb(219,73,54)" fg:x="23846" fg:w="43"/><text x="68.7691%" y="831.50"></text></g><g><title>mallocx (42 samples, 0.12%)</title><rect x="68.5219%" y="805" width="0.1207%" height="15" fill="rgb(251,162,10)" fg:x="23847" fg:w="42"/><text x="68.7719%" y="815.50"></text></g><g><title>imalloc (42 samples, 0.12%)</title><rect x="68.5219%" y="789" width="0.1207%" height="15" fill="rgb(240,138,47)" fg:x="23847" fg:w="42"/><text x="68.7719%" y="799.50"></text></g><g><title>imalloc_body (42 samples, 0.12%)</title><rect x="68.5219%" y="773" width="0.1207%" height="15" fill="rgb(216,138,26)" fg:x="23847" fg:w="42"/><text x="68.7719%" y="783.50"></text></g><g><title>imalloc_no_sample (42 samples, 0.12%)</title><rect x="68.5219%" y="757" width="0.1207%" height="15" fill="rgb(243,17,35)" fg:x="23847" fg:w="42"/><text x="68.7719%" y="767.50"></text></g><g><title>iallocztm (42 samples, 0.12%)</title><rect x="68.5219%" y="741" width="0.1207%" height="15" fill="rgb(241,60,18)" fg:x="23847" fg:w="42"/><text x="68.7719%" y="751.50"></text></g><g><title>arena_malloc (42 samples, 0.12%)</title><rect x="68.5219%" y="725" width="0.1207%" height="15" fill="rgb(234,2,44)" fg:x="23847" fg:w="42"/><text x="68.7719%" y="735.50"></text></g><g><title>tcache_alloc_large (42 samples, 0.12%)</title><rect x="68.5219%" y="709" width="0.1207%" height="15" fill="rgb(225,225,33)" fg:x="23847" fg:w="42"/><text x="68.7719%" y="719.50"></text></g><g><title>rlp::rlpin::BasicDecoder::payload_info (4 samples, 0.01%)</title><rect x="68.6426%" y="997" width="0.0115%" height="15" fill="rgb(234,50,31)" fg:x="23889" fg:w="4"/><text x="68.8926%" y="1007.50"></text></g><g><title>cfx_evm::state::State::update_account_cache (81 samples, 0.23%)</title><rect x="68.4271%" y="1157" width="0.2327%" height="15" fill="rgb(249,6,25)" fg:x="23814" fg:w="81"/><text x="68.6771%" y="1167.50"></text></g><g><title>cfx_evm::state::account_entry::OverlayAccount::cache_code (81 samples, 0.23%)</title><rect x="68.4271%" y="1141" width="0.2327%" height="15" fill="rgb(241,5,17)" fg:x="23814" fg:w="81"/><text x="68.6771%" y="1151.50"></text></g><g><title>cfx_statedb::statedb_ext::StateDbExt::get_code (77 samples, 0.22%)</title><rect x="68.4386%" y="1125" width="0.2213%" height="15" fill="rgb(207,116,10)" fg:x="23818" fg:w="77"/><text x="68.6886%" y="1135.50"></text></g><g><title>cfx_statedb::statedb_ext::StateDbExt::get (77 samples, 0.22%)</title><rect x="68.4386%" y="1109" width="0.2213%" height="15" fill="rgb(222,128,18)" fg:x="23818" fg:w="77"/><text x="68.6886%" y="1119.50"></text></g><g><title>rlp::decode (64 samples, 0.18%)</title><rect x="68.4759%" y="1093" width="0.1839%" height="15" fill="rgb(229,109,25)" fg:x="23831" fg:w="64"/><text x="68.7259%" y="1103.50"></text></g><g><title>rlp::rlpin::Rlp::as_val (64 samples, 0.18%)</title><rect x="68.4759%" y="1077" width="0.1839%" height="15" fill="rgb(222,102,25)" fg:x="23831" fg:w="64"/><text x="68.7259%" y="1087.50"></text></g><g><title>&lt;primitives::account::CodeInfo as rlp::traits::Decodable&gt;::decode (64 samples, 0.18%)</title><rect x="68.4759%" y="1061" width="0.1839%" height="15" fill="rgb(239,211,5)" fg:x="23831" fg:w="64"/><text x="68.7259%" y="1071.50"></text></g><g><title>rlp::rlpin::Rlp::val_at (64 samples, 0.18%)</title><rect x="68.4759%" y="1045" width="0.1839%" height="15" fill="rgb(223,136,26)" fg:x="23831" fg:w="64"/><text x="68.7259%" y="1055.50"></text></g><g><title>rlp::rlpin::Rlp::at (6 samples, 0.02%)</title><rect x="68.6426%" y="1029" width="0.0172%" height="15" fill="rgb(227,30,15)" fg:x="23889" fg:w="6"/><text x="68.8926%" y="1039.50"></text></g><g><title>rlp::rlpin::Rlp::at_with_offset (6 samples, 0.02%)</title><rect x="68.6426%" y="1013" width="0.0172%" height="15" fill="rgb(247,76,4)" fg:x="23889" fg:w="6"/><text x="68.8926%" y="1023.50"></text></g><g><title>&lt;cfx_storage::StorageKeyWrapper&lt;T,Key&gt; as cfx_storage::StorageTrait&gt;::get (4 samples, 0.01%)</title><rect x="68.6627%" y="1125" width="0.0115%" height="15" fill="rgb(245,38,48)" fg:x="23896" fg:w="4"/><text x="68.9127%" y="1135.50"></text></g><g><title>&lt;&amp;mut aptos_evm::state::ViewWrapper&lt;S&gt; as cfx_storage::StorageTrait&gt;::get (4 samples, 0.01%)</title><rect x="68.6627%" y="1109" width="0.0115%" height="15" fill="rgb(210,220,14)" fg:x="23896" fg:w="4"/><text x="68.9127%" y="1119.50"></text></g><g><title>&lt;cfx_statedb::impls::StateDb as cfx_statedb::StateDbTrait&gt;::get_raw (5 samples, 0.01%)</title><rect x="68.6627%" y="1141" width="0.0144%" height="15" fill="rgb(224,60,51)" fg:x="23896" fg:w="5"/><text x="68.9127%" y="1151.50"></text></g><g><title>rlp::rlpin::Rlp::as_val (5 samples, 0.01%)</title><rect x="68.6800%" y="1093" width="0.0144%" height="15" fill="rgb(212,133,49)" fg:x="23902" fg:w="5"/><text x="68.9300%" y="1103.50"></text></g><g><title>primitives::account::_IMPL_RLP_DECODABLE_FOR_EthereumAccount::&lt;impl rlp::traits::Decodable for primitives::account::EthereumAccount&gt;::decode (8 samples, 0.02%)</title><rect x="68.6771%" y="1125" width="0.0230%" height="15" fill="rgb(231,39,22)" fg:x="23901" fg:w="8"/><text x="68.9271%" y="1135.50"></text></g><g><title>rlp::rlpin::Rlp::val_at (8 samples, 0.02%)</title><rect x="68.6771%" y="1109" width="0.0230%" height="15" fill="rgb(236,173,22)" fg:x="23901" fg:w="8"/><text x="68.9271%" y="1119.50"></text></g><g><title>cfx_statedb::statedb_ext::StateDbExt::get_account (20 samples, 0.06%)</title><rect x="68.6598%" y="1157" width="0.0575%" height="15" fill="rgb(210,70,0)" fg:x="23895" fg:w="20"/><text x="68.9098%" y="1167.50"></text></g><g><title>primitives::account::Account::new_from_rlp (14 samples, 0.04%)</title><rect x="68.6771%" y="1141" width="0.0402%" height="15" fill="rgb(215,170,11)" fg:x="23901" fg:w="14"/><text x="68.9271%" y="1151.50"></text></g><g><title>rlp::rlpin::Rlp::item_count (6 samples, 0.02%)</title><rect x="68.7001%" y="1125" width="0.0172%" height="15" fill="rgb(220,154,28)" fg:x="23909" fg:w="6"/><text x="68.9501%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (6 samples, 0.02%)</title><rect x="68.7001%" y="1109" width="0.0172%" height="15" fill="rgb(240,160,41)" fg:x="23909" fg:w="6"/><text x="68.9501%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (6 samples, 0.02%)</title><rect x="68.7001%" y="1093" width="0.0172%" height="15" fill="rgb(243,215,41)" fg:x="23909" fg:w="6"/><text x="68.9501%" y="1103.50"></text></g><g><title>&lt;rlp::rlpin::RlpIterator as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.02%)</title><rect x="68.7001%" y="1077" width="0.0172%" height="15" fill="rgb(214,208,31)" fg:x="23909" fg:w="6"/><text x="68.9501%" y="1087.50"></text></g><g><title>rlp::rlpin::Rlp::at (5 samples, 0.01%)</title><rect x="68.7029%" y="1061" width="0.0144%" height="15" fill="rgb(247,57,22)" fg:x="23910" fg:w="5"/><text x="68.9529%" y="1071.50"></text></g><g><title>rlp::rlpin::Rlp::at_with_offset (5 samples, 0.01%)</title><rect x="68.7029%" y="1045" width="0.0144%" height="15" fill="rgb(228,73,52)" fg:x="23910" fg:w="5"/><text x="68.9529%" y="1055.50"></text></g><g><title>&lt;cfx_evm::state::State as cfx_state::state_trait::StateOpsTrait&gt;::code (118 samples, 0.34%)</title><rect x="68.4127%" y="1189" width="0.3391%" height="15" fill="rgb(252,60,9)" fg:x="23809" fg:w="118"/><text x="68.6627%" y="1199.50"></text></g><g><title>cfx_evm::state::State::ensure_account_loaded (118 samples, 0.34%)</title><rect x="68.4127%" y="1173" width="0.3391%" height="15" fill="rgb(233,9,51)" fg:x="23809" fg:w="118"/><text x="68.6627%" y="1183.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (11 samples, 0.03%)</title><rect x="68.7202%" y="1157" width="0.0316%" height="15" fill="rgb(223,67,14)" fg:x="23916" fg:w="11"/><text x="68.9702%" y="1167.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (11 samples, 0.03%)</title><rect x="68.7202%" y="1141" width="0.0316%" height="15" fill="rgb(222,86,2)" fg:x="23916" fg:w="11"/><text x="68.9702%" y="1151.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (11 samples, 0.03%)</title><rect x="68.7202%" y="1125" width="0.0316%" height="15" fill="rgb(243,58,54)" fg:x="23916" fg:w="11"/><text x="68.9702%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (9 samples, 0.03%)</title><rect x="68.7259%" y="1109" width="0.0259%" height="15" fill="rgb(210,200,39)" fg:x="23918" fg:w="9"/><text x="68.9759%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (9 samples, 0.03%)</title><rect x="68.7259%" y="1093" width="0.0259%" height="15" fill="rgb(238,135,9)" fg:x="23918" fg:w="9"/><text x="68.9759%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (9 samples, 0.03%)</title><rect x="68.7259%" y="1077" width="0.0259%" height="15" fill="rgb(232,179,7)" fg:x="23918" fg:w="9"/><text x="68.9759%" y="1087.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.03%)</title><rect x="68.7259%" y="1061" width="0.0259%" height="15" fill="rgb(245,65,41)" fg:x="23918" fg:w="9"/><text x="68.9759%" y="1071.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (9 samples, 0.03%)</title><rect x="68.7259%" y="1045" width="0.0259%" height="15" fill="rgb(227,43,8)" fg:x="23918" fg:w="9"/><text x="68.9759%" y="1055.50"></text></g><g><title>&lt;cfx_evm::state::State as cfx_state::state_trait::StateOpsTrait&gt;::code_hash (5 samples, 0.01%)</title><rect x="68.7518%" y="1189" width="0.0144%" height="15" fill="rgb(235,91,14)" fg:x="23927" fg:w="5"/><text x="69.0018%" y="1199.50"></text></g><g><title>&lt;cfx_evm::state::State as cfx_state::state_trait::StateOpsTrait&gt;::inc_nonce (7 samples, 0.02%)</title><rect x="68.7662%" y="1189" width="0.0201%" height="15" fill="rgb(235,219,31)" fg:x="23932" fg:w="7"/><text x="69.0162%" y="1199.50"></text></g><g><title>cfx_evm::state::State::require_or_new_basic_account (6 samples, 0.02%)</title><rect x="68.7690%" y="1173" width="0.0172%" height="15" fill="rgb(227,121,25)" fg:x="23933" fg:w="6"/><text x="69.0190%" y="1183.50"></text></g><g><title>cfx_evm::state::State::require_or_set (6 samples, 0.02%)</title><rect x="68.7690%" y="1157" width="0.0172%" height="15" fill="rgb(254,129,24)" fg:x="23933" fg:w="6"/><text x="69.0190%" y="1167.50"></text></g><g><title>cfx_evm::state::account_entry::AccountEntry::new_clean (4 samples, 0.01%)</title><rect x="68.7892%" y="1141" width="0.0115%" height="15" fill="rgb(226,144,49)" fg:x="23940" fg:w="4"/><text x="69.0392%" y="1151.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4 samples, 0.01%)</title><rect x="68.7892%" y="1125" width="0.0115%" height="15" fill="rgb(214,187,32)" fg:x="23940" fg:w="4"/><text x="69.0392%" y="1135.50"></text></g><g><title>cfx_evm::state::account_entry::AccountEntry::new_clean::{{closure}} (4 samples, 0.01%)</title><rect x="68.7892%" y="1109" width="0.0115%" height="15" fill="rgb(243,129,46)" fg:x="23940" fg:w="4"/><text x="69.0392%" y="1119.50"></text></g><g><title>&lt;primitive_types::U256 as core::clone::Clone&gt;::clone (4 samples, 0.01%)</title><rect x="68.7892%" y="1093" width="0.0115%" height="15" fill="rgb(221,185,35)" fg:x="23940" fg:w="4"/><text x="69.0392%" y="1103.50"></text></g><g><title>cfx_evm::state::State::insert_cache_if_fresh_account (16 samples, 0.05%)</title><rect x="68.7892%" y="1157" width="0.0460%" height="15" fill="rgb(205,0,32)" fg:x="23940" fg:w="16"/><text x="69.0392%" y="1167.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (12 samples, 0.03%)</title><rect x="68.8006%" y="1141" width="0.0345%" height="15" fill="rgb(229,179,12)" fg:x="23944" fg:w="12"/><text x="69.0506%" y="1151.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (12 samples, 0.03%)</title><rect x="68.8006%" y="1125" width="0.0345%" height="15" fill="rgb(252,107,19)" fg:x="23944" fg:w="12"/><text x="69.0506%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (7 samples, 0.02%)</title><rect x="68.8150%" y="1109" width="0.0201%" height="15" fill="rgb(220,95,27)" fg:x="23949" fg:w="7"/><text x="69.0650%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (7 samples, 0.02%)</title><rect x="68.8150%" y="1093" width="0.0201%" height="15" fill="rgb(240,113,40)" fg:x="23949" fg:w="7"/><text x="69.0650%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (7 samples, 0.02%)</title><rect x="68.8150%" y="1077" width="0.0201%" height="15" fill="rgb(208,4,43)" fg:x="23949" fg:w="7"/><text x="69.0650%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (7 samples, 0.02%)</title><rect x="68.8150%" y="1061" width="0.0201%" height="15" fill="rgb(247,189,30)" fg:x="23949" fg:w="7"/><text x="69.0650%" y="1071.50"></text></g><g><title>hashbrown::raw::bucket_mask_to_capacity (5 samples, 0.01%)</title><rect x="68.8208%" y="1045" width="0.0144%" height="15" fill="rgb(231,157,17)" fg:x="23951" fg:w="5"/><text x="69.0708%" y="1055.50"></text></g><g><title>&lt;cfx_storage::StorageKeyWrapper&lt;T,Key&gt; as cfx_storage::StorageTrait&gt;::get (5 samples, 0.01%)</title><rect x="68.8351%" y="1125" width="0.0144%" height="15" fill="rgb(224,139,6)" fg:x="23956" fg:w="5"/><text x="69.0851%" y="1135.50"></text></g><g><title>&lt;&amp;mut aptos_evm::state::ViewWrapper&lt;S&gt; as cfx_storage::StorageTrait&gt;::get (5 samples, 0.01%)</title><rect x="68.8351%" y="1109" width="0.0144%" height="15" fill="rgb(223,83,16)" fg:x="23956" fg:w="5"/><text x="69.0851%" y="1119.50"></text></g><g><title>&lt;cfx_statedb::impls::StateDb as cfx_statedb::StateDbTrait&gt;::get_raw (6 samples, 0.02%)</title><rect x="68.8351%" y="1141" width="0.0172%" height="15" fill="rgb(232,211,20)" fg:x="23956" fg:w="6"/><text x="69.0851%" y="1151.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (4 samples, 0.01%)</title><rect x="68.8725%" y="1109" width="0.0115%" height="15" fill="rgb(225,203,35)" fg:x="23969" fg:w="4"/><text x="69.1225%" y="1119.50"></text></g><g><title>primitive_types::rlp::&lt;impl rlp::traits::Decodable for primitive_types::H256&gt;::decode (5 samples, 0.01%)</title><rect x="68.8840%" y="1077" width="0.0144%" height="15" fill="rgb(215,211,44)" fg:x="23973" fg:w="5"/><text x="69.1340%" y="1087.50"></text></g><g><title>rlp::rlpin::BasicDecoder::decode_value (4 samples, 0.01%)</title><rect x="68.8868%" y="1061" width="0.0115%" height="15" fill="rgb(248,213,26)" fg:x="23974" fg:w="4"/><text x="69.1368%" y="1071.50"></text></g><g><title>rlp::rlpin::Rlp::as_val (9 samples, 0.03%)</title><rect x="68.8840%" y="1093" width="0.0259%" height="15" fill="rgb(214,23,52)" fg:x="23973" fg:w="9"/><text x="69.1340%" y="1103.50"></text></g><g><title>primitive_types::rlp::&lt;impl rlp::traits::Decodable for primitive_types::U256&gt;::decode (4 samples, 0.01%)</title><rect x="68.8983%" y="1077" width="0.0115%" height="15" fill="rgb(225,173,50)" fg:x="23978" fg:w="4"/><text x="69.1483%" y="1087.50"></text></g><g><title>primitives::account::_IMPL_RLP_DECODABLE_FOR_EthereumAccount::&lt;impl rlp::traits::Decodable for primitives::account::EthereumAccount&gt;::decode (16 samples, 0.05%)</title><rect x="68.8725%" y="1125" width="0.0460%" height="15" fill="rgb(206,150,22)" fg:x="23969" fg:w="16"/><text x="69.1225%" y="1135.50"></text></g><g><title>rlp::rlpin::Rlp::val_at (12 samples, 0.03%)</title><rect x="68.8840%" y="1109" width="0.0345%" height="15" fill="rgb(239,64,23)" fg:x="23973" fg:w="12"/><text x="69.1340%" y="1119.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (11 samples, 0.03%)</title><rect x="68.9357%" y="1029" width="0.0316%" height="15" fill="rgb(242,50,38)" fg:x="23991" fg:w="11"/><text x="69.1857%" y="1039.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (11 samples, 0.03%)</title><rect x="68.9357%" y="1013" width="0.0316%" height="15" fill="rgb(217,91,15)" fg:x="23991" fg:w="11"/><text x="69.1857%" y="1023.50"></text></g><g><title>core::mem::replace (11 samples, 0.03%)</title><rect x="68.9357%" y="997" width="0.0316%" height="15" fill="rgb(230,172,6)" fg:x="23991" fg:w="11"/><text x="69.1857%" y="1007.50"></text></g><g><title>core::ptr::write (11 samples, 0.03%)</title><rect x="68.9357%" y="981" width="0.0316%" height="15" fill="rgb(221,98,26)" fg:x="23991" fg:w="11"/><text x="69.1857%" y="991.50"></text></g><g><title>cfx_statedb::statedb_ext::StateDbExt::get_account (53 samples, 0.15%)</title><rect x="68.8351%" y="1157" width="0.1523%" height="15" fill="rgb(227,210,45)" fg:x="23956" fg:w="53"/><text x="69.0851%" y="1167.50"></text></g><g><title>primitives::account::Account::new_from_rlp (46 samples, 0.13%)</title><rect x="68.8552%" y="1141" width="0.1322%" height="15" fill="rgb(206,8,30)" fg:x="23963" fg:w="46"/><text x="69.1052%" y="1151.50"></text></g><g><title>rlp::rlpin::Rlp::item_count (24 samples, 0.07%)</title><rect x="68.9185%" y="1125" width="0.0690%" height="15" fill="rgb(241,219,17)" fg:x="23985" fg:w="24"/><text x="69.1685%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (18 samples, 0.05%)</title><rect x="68.9357%" y="1109" width="0.0517%" height="15" fill="rgb(247,121,29)" fg:x="23991" fg:w="18"/><text x="69.1857%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (18 samples, 0.05%)</title><rect x="68.9357%" y="1093" width="0.0517%" height="15" fill="rgb(219,169,49)" fg:x="23991" fg:w="18"/><text x="69.1857%" y="1103.50"></text></g><g><title>&lt;rlp::rlpin::RlpIterator as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.05%)</title><rect x="68.9357%" y="1077" width="0.0517%" height="15" fill="rgb(253,49,49)" fg:x="23991" fg:w="18"/><text x="69.1857%" y="1087.50"></text></g><g><title>rlp::rlpin::Rlp::at (18 samples, 0.05%)</title><rect x="68.9357%" y="1061" width="0.0517%" height="15" fill="rgb(217,178,3)" fg:x="23991" fg:w="18"/><text x="69.1857%" y="1071.50"></text></g><g><title>rlp::rlpin::Rlp::at_with_offset (18 samples, 0.05%)</title><rect x="68.9357%" y="1045" width="0.0517%" height="15" fill="rgb(234,73,37)" fg:x="23991" fg:w="18"/><text x="69.1857%" y="1055.50"></text></g><g><title>rlp::rlpin::Rlp::consume_items (7 samples, 0.02%)</title><rect x="68.9673%" y="1029" width="0.0201%" height="15" fill="rgb(250,98,22)" fg:x="24002" fg:w="7"/><text x="69.2173%" y="1039.50"></text></g><g><title>rlp::rlpin::BasicDecoder::payload_info (7 samples, 0.02%)</title><rect x="68.9673%" y="1013" width="0.0201%" height="15" fill="rgb(220,108,37)" fg:x="24002" fg:w="7"/><text x="69.2173%" y="1023.50"></text></g><g><title>rlp::rlpin::PayloadInfo::from (7 samples, 0.02%)</title><rect x="68.9673%" y="997" width="0.0201%" height="15" fill="rgb(225,168,10)" fg:x="24002" fg:w="7"/><text x="69.2173%" y="1007.50"></text></g><g><title>&lt;cfx_evm::state::State as cfx_state::state_trait::StateOpsTrait&gt;::nonce (76 samples, 0.22%)</title><rect x="68.7863%" y="1189" width="0.2184%" height="15" fill="rgb(247,215,21)" fg:x="23939" fg:w="76"/><text x="69.0363%" y="1199.50"></text></g><g><title>cfx_evm::state::State::ensure_account_loaded (76 samples, 0.22%)</title><rect x="68.7863%" y="1173" width="0.2184%" height="15" fill="rgb(253,189,31)" fg:x="23939" fg:w="76"/><text x="69.0363%" y="1183.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (4 samples, 0.01%)</title><rect x="68.9932%" y="1157" width="0.0115%" height="15" fill="rgb(241,54,22)" fg:x="24011" fg:w="4"/><text x="69.2432%" y="1167.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (4 samples, 0.01%)</title><rect x="68.9932%" y="1141" width="0.0115%" height="15" fill="rgb(211,87,4)" fg:x="24011" fg:w="4"/><text x="69.2432%" y="1151.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (4 samples, 0.01%)</title><rect x="68.9932%" y="1125" width="0.0115%" height="15" fill="rgb(245,112,24)" fg:x="24011" fg:w="4"/><text x="69.2432%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (4 samples, 0.01%)</title><rect x="68.9932%" y="1109" width="0.0115%" height="15" fill="rgb(235,190,41)" fg:x="24011" fg:w="4"/><text x="69.2432%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_load (4 samples, 0.01%)</title><rect x="68.9932%" y="1093" width="0.0115%" height="15" fill="rgb(214,89,8)" fg:x="24011" fg:w="4"/><text x="69.2432%" y="1103.50"></text></g><g><title>cfx_evm::state::State::require_exists (6 samples, 0.02%)</title><rect x="69.0075%" y="1173" width="0.0172%" height="15" fill="rgb(249,155,35)" fg:x="24016" fg:w="6"/><text x="69.2575%" y="1183.50"></text></g><g><title>cfx_evm::state::State::require_or_set (6 samples, 0.02%)</title><rect x="69.0075%" y="1157" width="0.0172%" height="15" fill="rgb(249,88,26)" fg:x="24016" fg:w="6"/><text x="69.2575%" y="1167.50"></text></g><g><title>cfx_evm::state::account_entry::OverlayAccount::sub_balance (5 samples, 0.01%)</title><rect x="69.0248%" y="1173" width="0.0144%" height="15" fill="rgb(232,56,8)" fg:x="24022" fg:w="5"/><text x="69.2748%" y="1183.50"></text></g><g><title>&lt;cfx_evm::state::State as cfx_state::state_trait::StateOpsTrait&gt;::sub_balance (18 samples, 0.05%)</title><rect x="69.0047%" y="1189" width="0.0517%" height="15" fill="rgb(240,95,3)" fg:x="24015" fg:w="18"/><text x="69.2547%" y="1199.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (6 samples, 0.02%)</title><rect x="69.0391%" y="1173" width="0.0172%" height="15" fill="rgb(222,44,28)" fg:x="24027" fg:w="6"/><text x="69.2891%" y="1183.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (6 samples, 0.02%)</title><rect x="69.0391%" y="1157" width="0.0172%" height="15" fill="rgb(234,16,30)" fg:x="24027" fg:w="6"/><text x="69.2891%" y="1167.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.02%)</title><rect x="69.0391%" y="1141" width="0.0172%" height="15" fill="rgb(223,26,17)" fg:x="24027" fg:w="6"/><text x="69.2891%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (4 samples, 0.01%)</title><rect x="69.0449%" y="1125" width="0.0115%" height="15" fill="rgb(239,187,47)" fg:x="24029" fg:w="4"/><text x="69.2949%" y="1135.50"></text></g><g><title>cfx_evm::call_create_frame::frame::CallCreateFrame::new_call_raw (10 samples, 0.03%)</title><rect x="69.0707%" y="1189" width="0.0287%" height="15" fill="rgb(247,102,50)" fg:x="24038" fg:w="10"/><text x="69.3207%" y="1199.50"></text></g><g><title>cfx_evm::machine::Machine::builtin (10 samples, 0.03%)</title><rect x="69.0707%" y="1173" width="0.0287%" height="15" fill="rgb(231,216,22)" fg:x="24038" fg:w="10"/><text x="69.3207%" y="1183.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (10 samples, 0.03%)</title><rect x="69.0707%" y="1157" width="0.0287%" height="15" fill="rgb(216,201,26)" fg:x="24038" fg:w="10"/><text x="69.3207%" y="1167.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (10 samples, 0.03%)</title><rect x="69.0707%" y="1141" width="0.0287%" height="15" fill="rgb(214,186,23)" fg:x="24038" fg:w="10"/><text x="69.3207%" y="1151.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::search_node (10 samples, 0.03%)</title><rect x="69.0707%" y="1125" width="0.0287%" height="15" fill="rgb(235,184,4)" fg:x="24038" fg:w="10"/><text x="69.3207%" y="1135.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,Type&gt;&gt;::find_key_index (10 samples, 0.03%)</title><rect x="69.0707%" y="1109" width="0.0287%" height="15" fill="rgb(244,46,17)" fg:x="24038" fg:w="10"/><text x="69.3207%" y="1119.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,Type&gt;::keys (10 samples, 0.03%)</title><rect x="69.0707%" y="1093" width="0.0287%" height="15" fill="rgb(248,74,46)" fg:x="24038" fg:w="10"/><text x="69.3207%" y="1103.50"></text></g><g><title>cfx_evm::execution::executor::gas_required_for (6 samples, 0.02%)</title><rect x="69.1052%" y="1189" width="0.0172%" height="15" fill="rgb(243,79,5)" fg:x="24050" fg:w="6"/><text x="69.3552%" y="1199.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.02%)</title><rect x="69.1052%" y="1173" width="0.0172%" height="15" fill="rgb(213,148,1)" fg:x="24050" fg:w="6"/><text x="69.3552%" y="1183.50"></text></g><g><title>cfx_evm::execution::executor::gas_required_for::{{closure}} (6 samples, 0.02%)</title><rect x="69.1052%" y="1157" width="0.0172%" height="15" fill="rgb(221,30,0)" fg:x="24050" fg:w="6"/><text x="69.3552%" y="1167.50"></text></g><g><title>cfx_evm::state::substate::Substate::new (4 samples, 0.01%)</title><rect x="69.1225%" y="1189" width="0.0115%" height="15" fill="rgb(207,85,29)" fg:x="24056" fg:w="4"/><text x="69.3725%" y="1199.50"></text></g><g><title>&lt;cfx_evm::state::substate::Substate as core::default::Default&gt;::default (4 samples, 0.01%)</title><rect x="69.1225%" y="1173" width="0.0115%" height="15" fill="rgb(239,31,46)" fg:x="24056" fg:w="4"/><text x="69.3725%" y="1183.50"></text></g><g><title>cfx_evm::execution::executor::TXExecutor::transact (10,883 samples, 31.27%)</title><rect x="37.8771%" y="1221" width="31.2712%" height="15" fill="rgb(219,6,1)" fg:x="13182" fg:w="10883"/><text x="38.1271%" y="1231.50">cfx_evm::execution::executor::TXExecutor::transact</text></g><g><title>cfx_evm::execution::executor::TXExecutor::transact_preprocessing (259 samples, 0.74%)</title><rect x="68.4041%" y="1205" width="0.7442%" height="15" fill="rgb(229,90,29)" fg:x="23806" fg:w="259"/><text x="68.6541%" y="1215.50"></text></g><g><title>core::cmp::PartialOrd::lt (5 samples, 0.01%)</title><rect x="69.1340%" y="1189" width="0.0144%" height="15" fill="rgb(242,201,42)" fg:x="24060" fg:w="5"/><text x="69.3840%" y="1199.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (7 samples, 0.02%)</title><rect x="69.1569%" y="1125" width="0.0201%" height="15" fill="rgb(243,80,54)" fg:x="24068" fg:w="7"/><text x="69.4069%" y="1135.50"></text></g><g><title>alloc::collections::btree::search::&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (7 samples, 0.02%)</title><rect x="69.1569%" y="1109" width="0.0201%" height="15" fill="rgb(223,166,15)" fg:x="24068" fg:w="7"/><text x="69.4069%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (13 samples, 0.04%)</title><rect x="69.1483%" y="1189" width="0.0374%" height="15" fill="rgb(238,78,27)" fg:x="24065" fg:w="13"/><text x="69.3983%" y="1199.50"></text></g><g><title>aptos_block_executor::aptos_vm::AptosEVM::execute_eth_transaction::{{closure}} (13 samples, 0.04%)</title><rect x="69.1483%" y="1173" width="0.0374%" height="15" fill="rgb(235,28,43)" fg:x="24065" fg:w="13"/><text x="69.3983%" y="1183.50"></text></g><g><title>aptos_types::write_set::WriteSetMut::insert (13 samples, 0.04%)</title><rect x="69.1483%" y="1157" width="0.0374%" height="15" fill="rgb(240,210,28)" fg:x="24065" fg:w="13"/><text x="69.3983%" y="1167.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (12 samples, 0.03%)</title><rect x="69.1512%" y="1141" width="0.0345%" height="15" fill="rgb(253,6,46)" fg:x="24066" fg:w="12"/><text x="69.4012%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (20 samples, 0.06%)</title><rect x="69.1483%" y="1221" width="0.0575%" height="15" fill="rgb(250,159,47)" fg:x="24065" fg:w="20"/><text x="69.3983%" y="1231.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (20 samples, 0.06%)</title><rect x="69.1483%" y="1205" width="0.0575%" height="15" fill="rgb(216,139,2)" fg:x="24065" fg:w="20"/><text x="69.3983%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;aptos_types::state_store::state_key::StateKey,aptos_types::write_set::WriteOp&gt;&gt; (7 samples, 0.02%)</title><rect x="69.1857%" y="1189" width="0.0201%" height="15" fill="rgb(221,124,44)" fg:x="24078" fg:w="7"/><text x="69.4357%" y="1199.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.02%)</title><rect x="69.1857%" y="1173" width="0.0201%" height="15" fill="rgb(205,37,22)" fg:x="24078" fg:w="7"/><text x="69.4357%" y="1183.50"></text></g><g><title>aptos_block_executor::aptos_vm::AptosEVM::execute_eth_transaction (18,909 samples, 54.33%)</title><rect x="14.8957%" y="1237" width="54.3331%" height="15" fill="rgb(250,55,8)" fg:x="5184" fg:w="18909"/><text x="15.1457%" y="1247.50">aptos_block_executor::aptos_vm::AptosEVM::execute_eth_transaction</text></g><g><title>core::mem::drop (8 samples, 0.02%)</title><rect x="69.2058%" y="1221" width="0.0230%" height="15" fill="rgb(215,83,48)" fg:x="24085" fg:w="8"/><text x="69.4558%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_evm::state::EvmState&gt; (5 samples, 0.01%)</title><rect x="69.2144%" y="1205" width="0.0144%" height="15" fill="rgb(253,2,32)" fg:x="24088" fg:w="5"/><text x="69.4644%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;cfx_evm::state::State&gt; (5 samples, 0.01%)</title><rect x="69.2144%" y="1189" width="0.0144%" height="15" fill="rgb(236,67,28)" fg:x="24088" fg:w="5"/><text x="69.4644%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLock&lt;parking_lot::raw_rwlock::RawRwLock,alloc::vec::Vec&lt;cfx_evm::state::WorldStatistics&gt;&gt;&gt; (4 samples, 0.01%)</title><rect x="69.2173%" y="1173" width="0.0115%" height="15" fill="rgb(252,55,15)" fg:x="24089" fg:w="4"/><text x="69.4673%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;alloc::vec::Vec&lt;cfx_evm::state::WorldStatistics&gt;&gt;&gt; (4 samples, 0.01%)</title><rect x="69.2173%" y="1157" width="0.0115%" height="15" fill="rgb(243,173,17)" fg:x="24089" fg:w="4"/><text x="69.4673%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;cfx_evm::state::WorldStatistics&gt;&gt; (4 samples, 0.01%)</title><rect x="69.2173%" y="1141" width="0.0115%" height="15" fill="rgb(215,212,13)" fg:x="24089" fg:w="4"/><text x="69.4673%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;cfx_evm::state::WorldStatistics&gt;&gt; (4 samples, 0.01%)</title><rect x="69.2173%" y="1125" width="0.0115%" height="15" fill="rgb(253,176,6)" fg:x="24089" fg:w="4"/><text x="69.4673%" y="1135.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="69.2173%" y="1109" width="0.0115%" height="15" fill="rgb(236,105,26)" fg:x="24089" fg:w="4"/><text x="69.4673%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.01%)</title><rect x="69.2173%" y="1093" width="0.0115%" height="15" fill="rgb(239,226,32)" fg:x="24089" fg:w="4"/><text x="69.4673%" y="1103.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.01%)</title><rect x="69.2173%" y="1077" width="0.0115%" height="15" fill="rgb(236,104,51)" fg:x="24089" fg:w="4"/><text x="69.4673%" y="1087.50"></text></g><g><title>sdallocx (4 samples, 0.01%)</title><rect x="69.2173%" y="1061" width="0.0115%" height="15" fill="rgb(220,172,33)" fg:x="24089" fg:w="4"/><text x="69.4673%" y="1071.50"></text></g><g><title>isfree (4 samples, 0.01%)</title><rect x="69.2173%" y="1045" width="0.0115%" height="15" fill="rgb(224,182,25)" fg:x="24089" fg:w="4"/><text x="69.4673%" y="1055.50"></text></g><g><title>isdalloct (4 samples, 0.01%)</title><rect x="69.2173%" y="1029" width="0.0115%" height="15" fill="rgb(236,184,24)" fg:x="24089" fg:w="4"/><text x="69.4673%" y="1039.50"></text></g><g><title>arena_sdalloc (4 samples, 0.01%)</title><rect x="69.2173%" y="1013" width="0.0115%" height="15" fill="rgb(241,221,14)" fg:x="24089" fg:w="4"/><text x="69.4673%" y="1023.50"></text></g><g><title>tcache_dalloc_small (4 samples, 0.01%)</title><rect x="69.2173%" y="997" width="0.0115%" height="15" fill="rgb(227,146,5)" fg:x="24089" fg:w="4"/><text x="69.4673%" y="1007.50"></text></g><g><title>&lt;aptos_gas::gas_meter::AptosGasParameters as core::clone::Clone&gt;::clone (7 samples, 0.02%)</title><rect x="69.2288%" y="1221" width="0.0201%" height="15" fill="rgb(214,15,23)" fg:x="24093" fg:w="7"/><text x="69.4788%" y="1231.50"></text></g><g><title>&lt;aptos_block_executor::move_vm_ext::session::SessionIdHasher as aptos_crypto::hash::CryptoHasher&gt;::finish (30 samples, 0.09%)</title><rect x="69.2834%" y="1141" width="0.0862%" height="15" fill="rgb(233,157,31)" fg:x="24112" fg:w="30"/><text x="69.5334%" y="1151.50"></text></g><g><title>aptos_crypto::hash::DefaultHasher::finish (30 samples, 0.09%)</title><rect x="69.2834%" y="1125" width="0.0862%" height="15" fill="rgb(211,27,52)" fg:x="24112" fg:w="30"/><text x="69.5334%" y="1135.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (29 samples, 0.08%)</title><rect x="69.2862%" y="1109" width="0.0833%" height="15" fill="rgb(212,223,15)" fg:x="24113" fg:w="29"/><text x="69.5362%" y="1119.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (27 samples, 0.08%)</title><rect x="69.2920%" y="1093" width="0.0776%" height="15" fill="rgb(254,211,0)" fg:x="24115" fg:w="27"/><text x="69.5420%" y="1103.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (27 samples, 0.08%)</title><rect x="69.2920%" y="1077" width="0.0776%" height="15" fill="rgb(205,43,38)" fg:x="24115" fg:w="27"/><text x="69.5420%" y="1087.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (27 samples, 0.08%)</title><rect x="69.2920%" y="1061" width="0.0776%" height="15" fill="rgb(242,206,46)" fg:x="24115" fg:w="27"/><text x="69.5420%" y="1071.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (27 samples, 0.08%)</title><rect x="69.2920%" y="1045" width="0.0776%" height="15" fill="rgb(220,221,12)" fg:x="24115" fg:w="27"/><text x="69.5420%" y="1055.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (27 samples, 0.08%)</title><rect x="69.2920%" y="1029" width="0.0776%" height="15" fill="rgb(217,156,35)" fg:x="24115" fg:w="27"/><text x="69.5420%" y="1039.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (27 samples, 0.08%)</title><rect x="69.2920%" y="1013" width="0.0776%" height="15" fill="rgb(207,181,49)" fg:x="24115" fg:w="27"/><text x="69.5420%" y="1023.50"></text></g><g><title>aptos_block_executor::move_vm_ext::session::SessionId::as_uuid (40 samples, 0.11%)</title><rect x="69.2748%" y="1173" width="0.1149%" height="15" fill="rgb(235,103,47)" fg:x="24109" fg:w="40"/><text x="69.5248%" y="1183.50"></text></g><g><title>&lt;aptos_block_executor::move_vm_ext::session::SessionId as aptos_crypto::hash::CryptoHash&gt;::hash (38 samples, 0.11%)</title><rect x="69.2805%" y="1157" width="0.1092%" height="15" fill="rgb(222,63,28)" fg:x="24111" fg:w="38"/><text x="69.5305%" y="1167.50"></text></g><g><title>bcs::ser::serialize_into (7 samples, 0.02%)</title><rect x="69.3696%" y="1141" width="0.0201%" height="15" fill="rgb(244,137,21)" fg:x="24142" fg:w="7"/><text x="69.6196%" y="1151.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.02%)</title><rect x="69.3696%" y="1125" width="0.0201%" height="15" fill="rgb(228,35,27)" fg:x="24142" fg:w="7"/><text x="69.6196%" y="1135.50"></text></g><g><title>aptos_block_executor::move_vm_ext::session::_::&lt;impl serde::ser::Serialize for aptos_block_executor::move_vm_ext::session::SessionId&gt;::serialize (7 samples, 0.02%)</title><rect x="69.3696%" y="1109" width="0.0201%" height="15" fill="rgb(226,191,41)" fg:x="24142" fg:w="7"/><text x="69.6196%" y="1119.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_unit_variant (7 samples, 0.02%)</title><rect x="69.3696%" y="1093" width="0.0201%" height="15" fill="rgb(210,154,3)" fg:x="24142" fg:w="7"/><text x="69.6196%" y="1103.50"></text></g><g><title>bcs::ser::Serializer&lt;W&gt;::output_variant_index (7 samples, 0.02%)</title><rect x="69.3696%" y="1077" width="0.0201%" height="15" fill="rgb(216,60,49)" fg:x="24142" fg:w="7"/><text x="69.6196%" y="1087.50"></text></g><g><title>bcs::ser::Serializer&lt;W&gt;::output_u32_as_uleb128 (7 samples, 0.02%)</title><rect x="69.3696%" y="1061" width="0.0201%" height="15" fill="rgb(226,17,20)" fg:x="24142" fg:w="7"/><text x="69.6196%" y="1071.50"></text></g><g><title>std::io::Write::write_all (7 samples, 0.02%)</title><rect x="69.3696%" y="1045" width="0.0201%" height="15" fill="rgb(206,115,35)" fg:x="24142" fg:w="7"/><text x="69.6196%" y="1055.50"></text></g><g><title>&lt;aptos_block_executor::move_vm_ext::session::SessionIdHasher as std::io::Write&gt;::write (7 samples, 0.02%)</title><rect x="69.3696%" y="1029" width="0.0201%" height="15" fill="rgb(227,88,1)" fg:x="24142" fg:w="7"/><text x="69.6196%" y="1039.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (5 samples, 0.01%)</title><rect x="69.4127%" y="1157" width="0.0144%" height="15" fill="rgb(230,222,24)" fg:x="24157" fg:w="5"/><text x="69.6627%" y="1167.50"></text></g><g><title>alloc::alloc::exchange_malloc (5 samples, 0.01%)</title><rect x="69.4127%" y="1141" width="0.0144%" height="15" fill="rgb(214,124,32)" fg:x="24157" fg:w="5"/><text x="69.6627%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.01%)</title><rect x="69.4127%" y="1125" width="0.0144%" height="15" fill="rgb(240,41,36)" fg:x="24157" fg:w="5"/><text x="69.6627%" y="1135.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.01%)</title><rect x="69.4127%" y="1109" width="0.0144%" height="15" fill="rgb(221,17,52)" fg:x="24157" fg:w="5"/><text x="69.6627%" y="1119.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.01%)</title><rect x="69.4127%" y="1093" width="0.0144%" height="15" fill="rgb(252,70,16)" fg:x="24157" fg:w="5"/><text x="69.6627%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (7 samples, 0.02%)</title><rect x="69.4357%" y="1109" width="0.0201%" height="15" fill="rgb(250,177,4)" fg:x="24165" fg:w="7"/><text x="69.6857%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (7 samples, 0.02%)</title><rect x="69.4357%" y="1093" width="0.0201%" height="15" fill="rgb(240,188,47)" fg:x="24165" fg:w="7"/><text x="69.6857%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTableInner::reserve_rehash_inner (5 samples, 0.01%)</title><rect x="69.4414%" y="1077" width="0.0144%" height="15" fill="rgb(215,92,12)" fg:x="24167" fg:w="5"/><text x="69.6914%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTableInner::resize_inner (5 samples, 0.01%)</title><rect x="69.4414%" y="1061" width="0.0144%" height="15" fill="rgb(242,110,29)" fg:x="24167" fg:w="5"/><text x="69.6914%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (11 samples, 0.03%)</title><rect x="69.4299%" y="1125" width="0.0316%" height="15" fill="rgb(208,211,26)" fg:x="24163" fg:w="11"/><text x="69.6799%" y="1135.50"></text></g><g><title>aptos_block_executor::aptos_vm::AptosVM::make_cross_space_handler (82 samples, 0.24%)</title><rect x="69.2288%" y="1237" width="0.2356%" height="15" fill="rgb(244,147,6)" fg:x="24093" fg:w="82"/><text x="69.4788%" y="1247.50"></text></g><g><title>aptos_block_executor::aptos_vm_impl::AptosVMImpl::new_session (70 samples, 0.20%)</title><rect x="69.2633%" y="1221" width="0.2011%" height="15" fill="rgb(211,130,42)" fg:x="24105" fg:w="70"/><text x="69.5133%" y="1231.50"></text></g><g><title>aptos_block_executor::move_vm_ext::vm::MoveVmExt::new_session (70 samples, 0.20%)</title><rect x="69.2633%" y="1205" width="0.2011%" height="15" fill="rgb(220,63,1)" fg:x="24105" fg:w="70"/><text x="69.5133%" y="1215.50"></text></g><g><title>aptos_block_executor::move_vm_ext::vm::MoveVmExt::new_session_inner (70 samples, 0.20%)</title><rect x="69.2633%" y="1189" width="0.2011%" height="15" fill="rgb(241,212,30)" fg:x="24105" fg:w="70"/><text x="69.5133%" y="1199.50"></text></g><g><title>move_vm_runtime::native_extensions::NativeContextExtensions::add (21 samples, 0.06%)</title><rect x="69.4041%" y="1173" width="0.0603%" height="15" fill="rgb(233,153,17)" fg:x="24154" fg:w="21"/><text x="69.6541%" y="1183.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (13 samples, 0.04%)</title><rect x="69.4270%" y="1157" width="0.0374%" height="15" fill="rgb(236,3,10)" fg:x="24162" fg:w="13"/><text x="69.6770%" y="1167.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (13 samples, 0.04%)</title><rect x="69.4270%" y="1141" width="0.0374%" height="15" fill="rgb(232,41,21)" fg:x="24162" fg:w="13"/><text x="69.6770%" y="1151.50"></text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::start_send (15 samples, 0.04%)</title><rect x="69.4845%" y="1125" width="0.0431%" height="15" fill="rgb(206,63,51)" fg:x="24182" fg:w="15"/><text x="69.7345%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (15 samples, 0.04%)</title><rect x="69.4845%" y="1109" width="0.0431%" height="15" fill="rgb(250,214,3)" fg:x="24182" fg:w="15"/><text x="69.7345%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_load (15 samples, 0.04%)</title><rect x="69.4845%" y="1093" width="0.0431%" height="15" fill="rgb(254,89,27)" fg:x="24182" fg:w="15"/><text x="69.7345%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (33 samples, 0.09%)</title><rect x="69.5362%" y="997" width="0.0948%" height="15" fill="rgb(249,41,14)" fg:x="24200" fg:w="33"/><text x="69.7862%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_swap (33 samples, 0.09%)</title><rect x="69.5362%" y="981" width="0.0948%" height="15" fill="rgb(221,196,51)" fg:x="24200" fg:w="33"/><text x="69.7862%" y="991.50"></text></g><g><title>aptos_logger::aptos_logger::AptosData::send_entry (54 samples, 0.16%)</title><rect x="69.4845%" y="1189" width="0.1552%" height="15" fill="rgb(214,116,26)" fg:x="24182" fg:w="54"/><text x="69.7345%" y="1199.50"></text></g><g><title>std::sync::mpsc::SyncSender&lt;T&gt;::try_send (54 samples, 0.16%)</title><rect x="69.4845%" y="1173" width="0.1552%" height="15" fill="rgb(236,67,7)" fg:x="24182" fg:w="54"/><text x="69.7345%" y="1183.50"></text></g><g><title>std::sync::mpmc::Sender&lt;T&gt;::try_send (54 samples, 0.16%)</title><rect x="69.4845%" y="1157" width="0.1552%" height="15" fill="rgb(253,179,32)" fg:x="24182" fg:w="54"/><text x="69.7345%" y="1167.50"></text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::try_send (54 samples, 0.16%)</title><rect x="69.4845%" y="1141" width="0.1552%" height="15" fill="rgb(218,33,15)" fg:x="24182" fg:w="54"/><text x="69.7345%" y="1151.50"></text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::write (39 samples, 0.11%)</title><rect x="69.5276%" y="1125" width="0.1121%" height="15" fill="rgb(217,202,41)" fg:x="24197" fg:w="39"/><text x="69.7776%" y="1135.50"></text></g><g><title>std::sync::mpmc::waker::SyncWaker::notify (39 samples, 0.11%)</title><rect x="69.5276%" y="1109" width="0.1121%" height="15" fill="rgb(234,133,5)" fg:x="24197" fg:w="39"/><text x="69.7776%" y="1119.50"></text></g><g><title>std::sync::mpmc::waker::Waker::try_select (37 samples, 0.11%)</title><rect x="69.5334%" y="1093" width="0.1063%" height="15" fill="rgb(240,47,40)" fg:x="24199" fg:w="37"/><text x="69.7834%" y="1103.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (37 samples, 0.11%)</title><rect x="69.5334%" y="1077" width="0.1063%" height="15" fill="rgb(234,166,26)" fg:x="24199" fg:w="37"/><text x="69.7834%" y="1087.50"></text></g><g><title>std::sync::mpmc::waker::Waker::try_select::{{closure}} (37 samples, 0.11%)</title><rect x="69.5334%" y="1061" width="0.1063%" height="15" fill="rgb(244,125,51)" fg:x="24199" fg:w="37"/><text x="69.7834%" y="1071.50"></text></g><g><title>std::sync::mpmc::context::Context::unpark (37 samples, 0.11%)</title><rect x="69.5334%" y="1045" width="0.1063%" height="15" fill="rgb(229,171,11)" fg:x="24199" fg:w="37"/><text x="69.7834%" y="1055.50"></text></g><g><title>std::thread::Thread::unpark (37 samples, 0.11%)</title><rect x="69.5334%" y="1029" width="0.1063%" height="15" fill="rgb(224,38,45)" fg:x="24199" fg:w="37"/><text x="69.7834%" y="1039.50"></text></g><g><title>std::sys::sync::thread_parking::futex::Parker::unpark (37 samples, 0.11%)</title><rect x="69.5334%" y="1013" width="0.1063%" height="15" fill="rgb(237,27,7)" fg:x="24199" fg:w="37"/><text x="69.7834%" y="1023.50"></text></g><g><title>iralloct (4 samples, 0.01%)</title><rect x="69.7431%" y="885" width="0.0115%" height="15" fill="rgb(216,52,7)" fg:x="24272" fg:w="4"/><text x="69.9931%" y="895.50"></text></g><g><title>_rjem_je_arena_ralloc (4 samples, 0.01%)</title><rect x="69.7431%" y="869" width="0.0115%" height="15" fill="rgb(243,11,11)" fg:x="24272" fg:w="4"/><text x="69.9931%" y="879.50"></text></g><g><title>alloc::string::String::push_str (6 samples, 0.02%)</title><rect x="69.7402%" y="1093" width="0.0172%" height="15" fill="rgb(253,167,20)" fg:x="24271" fg:w="6"/><text x="69.9902%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (6 samples, 0.02%)</title><rect x="69.7402%" y="1077" width="0.0172%" height="15" fill="rgb(215,207,5)" fg:x="24271" fg:w="6"/><text x="69.9902%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (6 samples, 0.02%)</title><rect x="69.7402%" y="1061" width="0.0172%" height="15" fill="rgb(252,127,31)" fg:x="24271" fg:w="6"/><text x="69.9902%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (6 samples, 0.02%)</title><rect x="69.7402%" y="1045" width="0.0172%" height="15" fill="rgb(209,106,27)" fg:x="24271" fg:w="6"/><text x="69.9902%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (6 samples, 0.02%)</title><rect x="69.7402%" y="1029" width="0.0172%" height="15" fill="rgb(214,220,18)" fg:x="24271" fg:w="6"/><text x="69.9902%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.02%)</title><rect x="69.7402%" y="1013" width="0.0172%" height="15" fill="rgb(237,89,12)" fg:x="24271" fg:w="6"/><text x="69.9902%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.02%)</title><rect x="69.7402%" y="997" width="0.0172%" height="15" fill="rgb(209,167,36)" fg:x="24271" fg:w="6"/><text x="69.9902%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 0.02%)</title><rect x="69.7402%" y="981" width="0.0172%" height="15" fill="rgb(243,45,22)" fg:x="24271" fg:w="6"/><text x="69.9902%" y="991.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.02%)</title><rect x="69.7402%" y="965" width="0.0172%" height="15" fill="rgb(239,2,46)" fg:x="24271" fg:w="6"/><text x="69.9902%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (5 samples, 0.01%)</title><rect x="69.7431%" y="949" width="0.0144%" height="15" fill="rgb(241,101,0)" fg:x="24272" fg:w="5"/><text x="69.9931%" y="959.50"></text></g><g><title>alloc::alloc::Global::grow_impl (5 samples, 0.01%)</title><rect x="69.7431%" y="933" width="0.0144%" height="15" fill="rgb(244,34,31)" fg:x="24272" fg:w="5"/><text x="69.9931%" y="943.50"></text></g><g><title>alloc::alloc::realloc (5 samples, 0.01%)</title><rect x="69.7431%" y="917" width="0.0144%" height="15" fill="rgb(248,23,22)" fg:x="24272" fg:w="5"/><text x="69.9931%" y="927.50"></text></g><g><title>rallocx (5 samples, 0.01%)</title><rect x="69.7431%" y="901" width="0.0144%" height="15" fill="rgb(218,27,48)" fg:x="24272" fg:w="5"/><text x="69.9931%" y="911.50"></text></g><g><title>core::fmt::getcount (8 samples, 0.02%)</title><rect x="69.7632%" y="1029" width="0.0230%" height="15" fill="rgb(232,78,1)" fg:x="24279" fg:w="8"/><text x="70.0132%" y="1039.50"></text></g><g><title>core::fmt::rt::Argument::as_usize (8 samples, 0.02%)</title><rect x="69.7632%" y="1013" width="0.0230%" height="15" fill="rgb(233,169,12)" fg:x="24279" fg:w="8"/><text x="70.0132%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (5 samples, 0.01%)</title><rect x="69.8006%" y="821" width="0.0144%" height="15" fill="rgb(225,222,54)" fg:x="24292" fg:w="5"/><text x="70.0506%" y="831.50"></text></g><g><title>alloc::alloc::Global::grow_impl (5 samples, 0.01%)</title><rect x="69.8006%" y="805" width="0.0144%" height="15" fill="rgb(245,126,29)" fg:x="24292" fg:w="5"/><text x="70.0506%" y="815.50"></text></g><g><title>alloc::alloc::realloc (5 samples, 0.01%)</title><rect x="69.8006%" y="789" width="0.0144%" height="15" fill="rgb(241,63,48)" fg:x="24292" fg:w="5"/><text x="70.0506%" y="799.50"></text></g><g><title>rallocx (5 samples, 0.01%)</title><rect x="69.8006%" y="773" width="0.0144%" height="15" fill="rgb(235,126,38)" fg:x="24292" fg:w="5"/><text x="70.0506%" y="783.50"></text></g><g><title>isalloc (4 samples, 0.01%)</title><rect x="69.8035%" y="757" width="0.0115%" height="15" fill="rgb(232,96,49)" fg:x="24293" fg:w="4"/><text x="70.0535%" y="767.50"></text></g><g><title>arena_salloc (4 samples, 0.01%)</title><rect x="69.8035%" y="741" width="0.0115%" height="15" fill="rgb(211,146,40)" fg:x="24293" fg:w="4"/><text x="70.0535%" y="751.50"></text></g><g><title>sz_index2size (4 samples, 0.01%)</title><rect x="69.8035%" y="725" width="0.0115%" height="15" fill="rgb(247,93,44)" fg:x="24293" fg:w="4"/><text x="70.0535%" y="735.50"></text></g><g><title>sz_index2size_lookup (4 samples, 0.01%)</title><rect x="69.8035%" y="709" width="0.0115%" height="15" fill="rgb(251,41,49)" fg:x="24293" fg:w="4"/><text x="70.0535%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (8 samples, 0.02%)</title><rect x="69.7948%" y="837" width="0.0230%" height="15" fill="rgb(218,155,12)" fg:x="24290" fg:w="8"/><text x="70.0448%" y="847.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (15 samples, 0.04%)</title><rect x="69.7891%" y="981" width="0.0431%" height="15" fill="rgb(221,161,30)" fg:x="24288" fg:w="15"/><text x="70.0391%" y="991.50"></text></g><g><title>alloc::string::String::push_str (15 samples, 0.04%)</title><rect x="69.7891%" y="965" width="0.0431%" height="15" fill="rgb(221,179,11)" fg:x="24288" fg:w="15"/><text x="70.0391%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (15 samples, 0.04%)</title><rect x="69.7891%" y="949" width="0.0431%" height="15" fill="rgb(224,170,48)" fg:x="24288" fg:w="15"/><text x="70.0391%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (15 samples, 0.04%)</title><rect x="69.7891%" y="933" width="0.0431%" height="15" fill="rgb(223,117,5)" fg:x="24288" fg:w="15"/><text x="70.0391%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (15 samples, 0.04%)</title><rect x="69.7891%" y="917" width="0.0431%" height="15" fill="rgb(209,52,20)" fg:x="24288" fg:w="15"/><text x="70.0391%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (15 samples, 0.04%)</title><rect x="69.7891%" y="901" width="0.0431%" height="15" fill="rgb(209,19,41)" fg:x="24288" fg:w="15"/><text x="70.0391%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (15 samples, 0.04%)</title><rect x="69.7891%" y="885" width="0.0431%" height="15" fill="rgb(210,177,12)" fg:x="24288" fg:w="15"/><text x="70.0391%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (13 samples, 0.04%)</title><rect x="69.7948%" y="869" width="0.0374%" height="15" fill="rgb(211,159,37)" fg:x="24290" fg:w="13"/><text x="70.0448%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (13 samples, 0.04%)</title><rect x="69.7948%" y="853" width="0.0374%" height="15" fill="rgb(209,20,2)" fg:x="24290" fg:w="13"/><text x="70.0448%" y="863.50"></text></g><g><title>core::alloc::layout::Layout::array (5 samples, 0.01%)</title><rect x="69.8178%" y="837" width="0.0144%" height="15" fill="rgb(244,3,46)" fg:x="24298" fg:w="5"/><text x="70.0678%" y="847.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (5 samples, 0.01%)</title><rect x="69.8178%" y="821" width="0.0144%" height="15" fill="rgb(220,94,38)" fg:x="24298" fg:w="5"/><text x="70.0678%" y="831.50"></text></g><g><title>core::fmt::Formatter::pad_integral (13 samples, 0.04%)</title><rect x="69.8322%" y="981" width="0.0374%" height="15" fill="rgb(253,14,31)" fg:x="24303" fg:w="13"/><text x="70.0822%" y="991.50"></text></g><g><title>core::fmt::Write::write_fmt (43 samples, 0.12%)</title><rect x="69.7632%" y="1093" width="0.1236%" height="15" fill="rgb(234,176,13)" fg:x="24279" fg:w="43"/><text x="70.0132%" y="1103.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (43 samples, 0.12%)</title><rect x="69.7632%" y="1077" width="0.1236%" height="15" fill="rgb(218,62,25)" fg:x="24279" fg:w="43"/><text x="70.0132%" y="1087.50"></text></g><g><title>core::fmt::write (43 samples, 0.12%)</title><rect x="69.7632%" y="1061" width="0.1236%" height="15" fill="rgb(216,124,40)" fg:x="24279" fg:w="43"/><text x="70.0132%" y="1071.50"></text></g><g><title>core::fmt::run (43 samples, 0.12%)</title><rect x="69.7632%" y="1045" width="0.1236%" height="15" fill="rgb(228,170,12)" fg:x="24279" fg:w="43"/><text x="70.0132%" y="1055.50"></text></g><g><title>core::fmt::rt::Argument::fmt (35 samples, 0.10%)</title><rect x="69.7862%" y="1029" width="0.1006%" height="15" fill="rgb(231,226,5)" fg:x="24287" fg:w="35"/><text x="70.0362%" y="1039.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (34 samples, 0.10%)</title><rect x="69.7891%" y="1013" width="0.0977%" height="15" fill="rgb(237,122,22)" fg:x="24288" fg:w="34"/><text x="70.0391%" y="1023.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (34 samples, 0.10%)</title><rect x="69.7891%" y="997" width="0.0977%" height="15" fill="rgb(209,185,25)" fg:x="24288" fg:w="34"/><text x="70.0391%" y="1007.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.02%)</title><rect x="69.8695%" y="981" width="0.0172%" height="15" fill="rgb(228,200,32)" fg:x="24316" fg:w="6"/><text x="70.1195%" y="991.50"></text></g><g><title>chrono::format::format_inner (88 samples, 0.25%)</title><rect x="69.6540%" y="1109" width="0.2529%" height="15" fill="rgb(217,140,10)" fg:x="24241" fg:w="88"/><text x="69.9040%" y="1119.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (7 samples, 0.02%)</title><rect x="69.8868%" y="1093" width="0.0201%" height="15" fill="rgb(253,17,24)" fg:x="24322" fg:w="7"/><text x="70.1368%" y="1103.50"></text></g><g><title>chrono::format::format_inner::{{closure}} (7 samples, 0.02%)</title><rect x="69.8868%" y="1077" width="0.0201%" height="15" fill="rgb(212,61,6)" fg:x="24322" fg:w="7"/><text x="70.1368%" y="1087.50"></text></g><g><title>core::fmt::Write::write_fmt (6 samples, 0.02%)</title><rect x="69.8897%" y="1061" width="0.0172%" height="15" fill="rgb(205,14,25)" fg:x="24323" fg:w="6"/><text x="70.1397%" y="1071.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (6 samples, 0.02%)</title><rect x="69.8897%" y="1045" width="0.0172%" height="15" fill="rgb(232,69,41)" fg:x="24323" fg:w="6"/><text x="70.1397%" y="1055.50"></text></g><g><title>core::fmt::write (6 samples, 0.02%)</title><rect x="69.8897%" y="1029" width="0.0172%" height="15" fill="rgb(241,106,47)" fg:x="24323" fg:w="6"/><text x="70.1397%" y="1039.50"></text></g><g><title>core::fmt::run (4 samples, 0.01%)</title><rect x="69.8954%" y="1013" width="0.0115%" height="15" fill="rgb(210,213,53)" fg:x="24325" fg:w="4"/><text x="70.1454%" y="1023.50"></text></g><g><title>core::fmt::rt::Argument::fmt (4 samples, 0.01%)</title><rect x="69.8954%" y="997" width="0.0115%" height="15" fill="rgb(253,175,27)" fg:x="24325" fg:w="4"/><text x="70.1454%" y="1007.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (4 samples, 0.01%)</title><rect x="69.8954%" y="981" width="0.0115%" height="15" fill="rgb(211,171,24)" fg:x="24325" fg:w="4"/><text x="70.1454%" y="991.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (93 samples, 0.27%)</title><rect x="69.6483%" y="1157" width="0.2672%" height="15" fill="rgb(229,80,7)" fg:x="24239" fg:w="93"/><text x="69.8983%" y="1167.50"></text></g><g><title>&lt;chrono::format::DelayedFormat&lt;I&gt; as core::fmt::Display&gt;::fmt (93 samples, 0.27%)</title><rect x="69.6483%" y="1141" width="0.2672%" height="15" fill="rgb(212,46,39)" fg:x="24239" fg:w="93"/><text x="69.8983%" y="1151.50"></text></g><g><title>chrono::format::format (93 samples, 0.27%)</title><rect x="69.6483%" y="1125" width="0.2672%" height="15" fill="rgb(240,80,45)" fg:x="24239" fg:w="93"/><text x="69.8983%" y="1135.50"></text></g><g><title>chrono::datetime::DateTime&lt;Tz&gt;::naive_local (13 samples, 0.04%)</title><rect x="69.9155%" y="1141" width="0.0374%" height="15" fill="rgb(253,177,40)" fg:x="24332" fg:w="13"/><text x="70.1655%" y="1151.50"></text></g><g><title>chrono::offset::fixed::&lt;impl core::ops::arith::Add&lt;chrono::offset::fixed::FixedOffset&gt; for chrono::naive::datetime::NaiveDateTime&gt;::add (13 samples, 0.04%)</title><rect x="69.9155%" y="1125" width="0.0374%" height="15" fill="rgb(249,200,15)" fg:x="24332" fg:w="13"/><text x="70.1655%" y="1135.50"></text></g><g><title>chrono::offset::fixed::add_with_leapsecond (13 samples, 0.04%)</title><rect x="69.9155%" y="1109" width="0.0374%" height="15" fill="rgb(217,78,26)" fg:x="24332" fg:w="13"/><text x="70.1655%" y="1119.50"></text></g><g><title>&lt;chrono::naive::datetime::NaiveDateTime as core::ops::arith::Add&lt;time::duration::Duration&gt;&gt;::add (13 samples, 0.04%)</title><rect x="69.9155%" y="1093" width="0.0374%" height="15" fill="rgb(254,151,32)" fg:x="24332" fg:w="13"/><text x="70.1655%" y="1103.50"></text></g><g><title>chrono::naive::datetime::NaiveDateTime::checked_add_signed (13 samples, 0.04%)</title><rect x="69.9155%" y="1077" width="0.0374%" height="15" fill="rgb(226,165,27)" fg:x="24332" fg:w="13"/><text x="70.1655%" y="1087.50"></text></g><g><title>chrono::naive::time::NaiveTime::overflowing_add_signed (6 samples, 0.02%)</title><rect x="69.9356%" y="1061" width="0.0172%" height="15" fill="rgb(250,206,4)" fg:x="24339" fg:w="6"/><text x="70.1856%" y="1071.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (8 samples, 0.02%)</title><rect x="69.9529%" y="1109" width="0.0230%" height="15" fill="rgb(231,229,27)" fg:x="24345" fg:w="8"/><text x="70.2029%" y="1119.50"></text></g><g><title>alloc::string::String::push_str (7 samples, 0.02%)</title><rect x="69.9557%" y="1093" width="0.0201%" height="15" fill="rgb(239,217,8)" fg:x="24346" fg:w="7"/><text x="70.2057%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (7 samples, 0.02%)</title><rect x="69.9557%" y="1077" width="0.0201%" height="15" fill="rgb(225,204,27)" fg:x="24346" fg:w="7"/><text x="70.2057%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (7 samples, 0.02%)</title><rect x="69.9557%" y="1061" width="0.0201%" height="15" fill="rgb(230,56,32)" fg:x="24346" fg:w="7"/><text x="70.2057%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (7 samples, 0.02%)</title><rect x="69.9557%" y="1045" width="0.0201%" height="15" fill="rgb(222,56,27)" fg:x="24346" fg:w="7"/><text x="70.2057%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (7 samples, 0.02%)</title><rect x="69.9557%" y="1029" width="0.0201%" height="15" fill="rgb(253,108,27)" fg:x="24346" fg:w="7"/><text x="70.2057%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (7 samples, 0.02%)</title><rect x="69.9557%" y="1013" width="0.0201%" height="15" fill="rgb(212,87,36)" fg:x="24346" fg:w="7"/><text x="70.2057%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.02%)</title><rect x="69.9586%" y="997" width="0.0172%" height="15" fill="rgb(247,82,36)" fg:x="24347" fg:w="6"/><text x="70.2086%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.01%)</title><rect x="69.9615%" y="981" width="0.0144%" height="15" fill="rgb(222,143,9)" fg:x="24348" fg:w="5"/><text x="70.2115%" y="991.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.01%)</title><rect x="69.9615%" y="965" width="0.0144%" height="15" fill="rgb(238,162,48)" fg:x="24348" fg:w="5"/><text x="70.2115%" y="975.50"></text></g><g><title>chrono::datetime::DateTime&lt;Tz&gt;::format_with_items (23 samples, 0.07%)</title><rect x="69.9155%" y="1157" width="0.0661%" height="15" fill="rgb(221,59,43)" fg:x="24332" fg:w="23"/><text x="70.1655%" y="1167.50"></text></g><g><title>chrono::format::DelayedFormat&lt;I&gt;::new_with_offset (10 samples, 0.03%)</title><rect x="69.9529%" y="1141" width="0.0287%" height="15" fill="rgb(205,166,41)" fg:x="24345" fg:w="10"/><text x="70.2029%" y="1151.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (10 samples, 0.03%)</title><rect x="69.9529%" y="1125" width="0.0287%" height="15" fill="rgb(241,186,40)" fg:x="24345" fg:w="10"/><text x="70.2029%" y="1135.50"></text></g><g><title>chrono::datetime::DateTime&lt;Tz&gt;::to_rfc3339_opts (122 samples, 0.35%)</title><rect x="69.6425%" y="1173" width="0.3506%" height="15" fill="rgb(216,119,35)" fg:x="24237" fg:w="122"/><text x="69.8925%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;chrono::format::DelayedFormat&lt;core::iter::adapters::chain::Chain&lt;core::slice::iter::Iter&lt;chrono::format::Item&gt;,core::slice::iter::Iter&lt;chrono::format::Item&gt;&gt;&gt;&gt; (4 samples, 0.01%)</title><rect x="69.9816%" y="1157" width="0.0115%" height="15" fill="rgb(208,68,38)" fg:x="24355" fg:w="4"/><text x="70.2316%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;(alloc::string::String,chrono::offset::fixed::FixedOffset)&gt;&gt; (4 samples, 0.01%)</title><rect x="69.9816%" y="1141" width="0.0115%" height="15" fill="rgb(217,113,1)" fg:x="24355" fg:w="4"/><text x="70.2316%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,chrono::offset::fixed::FixedOffset)&gt; (4 samples, 0.01%)</title><rect x="69.9816%" y="1125" width="0.0115%" height="15" fill="rgb(242,153,3)" fg:x="24355" fg:w="4"/><text x="70.2316%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (4 samples, 0.01%)</title><rect x="69.9816%" y="1109" width="0.0115%" height="15" fill="rgb(229,76,35)" fg:x="24355" fg:w="4"/><text x="70.2316%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (4 samples, 0.01%)</title><rect x="69.9816%" y="1093" width="0.0115%" height="15" fill="rgb(229,125,34)" fg:x="24355" fg:w="4"/><text x="70.2316%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (4 samples, 0.01%)</title><rect x="69.9816%" y="1077" width="0.0115%" height="15" fill="rgb(238,179,36)" fg:x="24355" fg:w="4"/><text x="70.2316%" y="1087.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="69.9816%" y="1061" width="0.0115%" height="15" fill="rgb(244,183,19)" fg:x="24355" fg:w="4"/><text x="70.2316%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.01%)</title><rect x="69.9816%" y="1045" width="0.0115%" height="15" fill="rgb(216,85,49)" fg:x="24355" fg:w="4"/><text x="70.2316%" y="1055.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.01%)</title><rect x="69.9816%" y="1029" width="0.0115%" height="15" fill="rgb(208,161,47)" fg:x="24355" fg:w="4"/><text x="70.2316%" y="1039.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (9 samples, 0.03%)</title><rect x="69.9989%" y="1141" width="0.0259%" height="15" fill="rgb(233,210,18)" fg:x="24361" fg:w="9"/><text x="70.2489%" y="1151.50"></text></g><g><title>core::ops::function::FnOnce::call_once (9 samples, 0.03%)</title><rect x="69.9989%" y="1125" width="0.0259%" height="15" fill="rgb(205,104,42)" fg:x="24361" fg:w="9"/><text x="70.2489%" y="1135.50"></text></g><g><title>chrono::naive::date::NaiveDate::from_num_days_from_ce_opt (8 samples, 0.02%)</title><rect x="70.0017%" y="1109" width="0.0230%" height="15" fill="rgb(248,90,43)" fg:x="24362" fg:w="8"/><text x="70.2517%" y="1119.50"></text></g><g><title>chrono::naive::datetime::NaiveDateTime::from_timestamp_opt (11 samples, 0.03%)</title><rect x="69.9989%" y="1157" width="0.0316%" height="15" fill="rgb(206,198,11)" fg:x="24361" fg:w="11"/><text x="70.2489%" y="1167.50"></text></g><g><title>chrono::offset::utc::Utc::now (16 samples, 0.05%)</title><rect x="69.9931%" y="1173" width="0.0460%" height="15" fill="rgb(239,165,27)" fg:x="24359" fg:w="16"/><text x="70.2431%" y="1183.50"></text></g><g><title>&lt;move_core_types::vm_status::StatusCode as core::fmt::Debug&gt;::fmt (5 samples, 0.01%)</title><rect x="70.0908%" y="853" width="0.0144%" height="15" fill="rgb(246,44,32)" fg:x="24393" fg:w="5"/><text x="70.3408%" y="863.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (9 samples, 0.03%)</title><rect x="70.1167%" y="789" width="0.0259%" height="15" fill="rgb(252,65,42)" fg:x="24402" fg:w="9"/><text x="70.3667%" y="799.50"></text></g><g><title>alloc::string::String::push_str (9 samples, 0.03%)</title><rect x="70.1167%" y="773" width="0.0259%" height="15" fill="rgb(246,197,18)" fg:x="24402" fg:w="9"/><text x="70.3667%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (9 samples, 0.03%)</title><rect x="70.1167%" y="757" width="0.0259%" height="15" fill="rgb(216,192,4)" fg:x="24402" fg:w="9"/><text x="70.3667%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (9 samples, 0.03%)</title><rect x="70.1167%" y="741" width="0.0259%" height="15" fill="rgb(208,117,10)" fg:x="24402" fg:w="9"/><text x="70.3667%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (9 samples, 0.03%)</title><rect x="70.1167%" y="725" width="0.0259%" height="15" fill="rgb(240,61,47)" fg:x="24402" fg:w="9"/><text x="70.3667%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (9 samples, 0.03%)</title><rect x="70.1167%" y="709" width="0.0259%" height="15" fill="rgb(228,178,21)" fg:x="24402" fg:w="9"/><text x="70.3667%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9 samples, 0.03%)</title><rect x="70.1167%" y="693" width="0.0259%" height="15" fill="rgb(219,96,54)" fg:x="24402" fg:w="9"/><text x="70.3667%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (7 samples, 0.02%)</title><rect x="70.1224%" y="677" width="0.0201%" height="15" fill="rgb(250,177,24)" fg:x="24404" fg:w="7"/><text x="70.3724%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (7 samples, 0.02%)</title><rect x="70.1224%" y="661" width="0.0201%" height="15" fill="rgb(242,154,46)" fg:x="24404" fg:w="7"/><text x="70.3724%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (7 samples, 0.02%)</title><rect x="70.1224%" y="645" width="0.0201%" height="15" fill="rgb(226,176,29)" fg:x="24404" fg:w="7"/><text x="70.3724%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (6 samples, 0.02%)</title><rect x="70.1253%" y="629" width="0.0172%" height="15" fill="rgb(226,29,2)" fg:x="24405" fg:w="6"/><text x="70.3753%" y="639.50"></text></g><g><title>alloc::alloc::Global::grow_impl (6 samples, 0.02%)</title><rect x="70.1253%" y="613" width="0.0172%" height="15" fill="rgb(237,104,14)" fg:x="24405" fg:w="6"/><text x="70.3753%" y="623.50"></text></g><g><title>alloc::alloc::realloc (6 samples, 0.02%)</title><rect x="70.1253%" y="597" width="0.0172%" height="15" fill="rgb(245,207,31)" fg:x="24405" fg:w="6"/><text x="70.3753%" y="607.50"></text></g><g><title>rallocx (5 samples, 0.01%)</title><rect x="70.1282%" y="581" width="0.0144%" height="15" fill="rgb(229,211,45)" fg:x="24406" fg:w="5"/><text x="70.3782%" y="591.50"></text></g><g><title>isalloc (4 samples, 0.01%)</title><rect x="70.1310%" y="565" width="0.0115%" height="15" fill="rgb(229,113,15)" fg:x="24407" fg:w="4"/><text x="70.3810%" y="575.50"></text></g><g><title>arena_salloc (4 samples, 0.01%)</title><rect x="70.1310%" y="549" width="0.0115%" height="15" fill="rgb(237,147,15)" fg:x="24407" fg:w="4"/><text x="70.3810%" y="559.50"></text></g><g><title>rtree_szind_read (4 samples, 0.01%)</title><rect x="70.1310%" y="533" width="0.0115%" height="15" fill="rgb(244,120,12)" fg:x="24407" fg:w="4"/><text x="70.3810%" y="543.50"></text></g><g><title>rtree_leaf_elm_szind_read (4 samples, 0.01%)</title><rect x="70.1310%" y="517" width="0.0115%" height="15" fill="rgb(205,120,12)" fg:x="24407" fg:w="4"/><text x="70.3810%" y="527.50"></text></g><g><title>rtree_leaf_elm_bits_read (4 samples, 0.01%)</title><rect x="70.1310%" y="501" width="0.0115%" height="15" fill="rgb(231,26,45)" fg:x="24407" fg:w="4"/><text x="70.3810%" y="511.50"></text></g><g><title>atomic_load_p (4 samples, 0.01%)</title><rect x="70.1310%" y="485" width="0.0115%" height="15" fill="rgb(246,98,1)" fg:x="24407" fg:w="4"/><text x="70.3810%" y="495.50"></text></g><g><title>&lt;move_core_types::vm_status::StatusType as core::fmt::Display&gt;::fmt (14 samples, 0.04%)</title><rect x="70.1052%" y="853" width="0.0402%" height="15" fill="rgb(207,68,45)" fg:x="24398" fg:w="14"/><text x="70.3552%" y="863.50"></text></g><g><title>core::fmt::Formatter::write_fmt (13 samples, 0.04%)</title><rect x="70.1080%" y="837" width="0.0374%" height="15" fill="rgb(231,27,38)" fg:x="24399" fg:w="13"/><text x="70.3580%" y="847.50"></text></g><g><title>core::fmt::write (13 samples, 0.04%)</title><rect x="70.1080%" y="821" width="0.0374%" height="15" fill="rgb(214,223,3)" fg:x="24399" fg:w="13"/><text x="70.3580%" y="831.50"></text></g><g><title>core::fmt::rt::Argument::fmt (10 samples, 0.03%)</title><rect x="70.1167%" y="805" width="0.0287%" height="15" fill="rgb(228,195,46)" fg:x="24402" fg:w="10"/><text x="70.3667%" y="815.50"></text></g><g><title>alloc::fmt::format (26 samples, 0.07%)</title><rect x="70.0764%" y="997" width="0.0747%" height="15" fill="rgb(231,100,42)" fg:x="24388" fg:w="26"/><text x="70.3264%" y="1007.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (26 samples, 0.07%)</title><rect x="70.0764%" y="981" width="0.0747%" height="15" fill="rgb(236,53,4)" fg:x="24388" fg:w="26"/><text x="70.3264%" y="991.50"></text></g><g><title>alloc::fmt::format::{{closure}} (26 samples, 0.07%)</title><rect x="70.0764%" y="965" width="0.0747%" height="15" fill="rgb(230,152,12)" fg:x="24388" fg:w="26"/><text x="70.3264%" y="975.50"></text></g><g><title>alloc::fmt::format::format_inner (26 samples, 0.07%)</title><rect x="70.0764%" y="949" width="0.0747%" height="15" fill="rgb(226,101,19)" fg:x="24388" fg:w="26"/><text x="70.3264%" y="959.50"></text></g><g><title>core::fmt::Write::write_fmt (25 samples, 0.07%)</title><rect x="70.0793%" y="933" width="0.0718%" height="15" fill="rgb(250,149,32)" fg:x="24389" fg:w="25"/><text x="70.3293%" y="943.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (25 samples, 0.07%)</title><rect x="70.0793%" y="917" width="0.0718%" height="15" fill="rgb(232,178,12)" fg:x="24389" fg:w="25"/><text x="70.3293%" y="927.50"></text></g><g><title>core::fmt::write (24 samples, 0.07%)</title><rect x="70.0822%" y="901" width="0.0690%" height="15" fill="rgb(246,151,17)" fg:x="24390" fg:w="24"/><text x="70.3322%" y="911.50"></text></g><g><title>core::fmt::run (24 samples, 0.07%)</title><rect x="70.0822%" y="885" width="0.0690%" height="15" fill="rgb(252,17,51)" fg:x="24390" fg:w="24"/><text x="70.3322%" y="895.50"></text></g><g><title>core::fmt::rt::Argument::fmt (23 samples, 0.07%)</title><rect x="70.0851%" y="869" width="0.0661%" height="15" fill="rgb(250,207,23)" fg:x="24391" fg:w="23"/><text x="70.3351%" y="879.50"></text></g><g><title>core::fmt::Formatter::write_fmt (9 samples, 0.03%)</title><rect x="70.1511%" y="997" width="0.0259%" height="15" fill="rgb(205,27,5)" fg:x="24414" fg:w="9"/><text x="70.4011%" y="1007.50"></text></g><g><title>core::fmt::write (9 samples, 0.03%)</title><rect x="70.1511%" y="981" width="0.0259%" height="15" fill="rgb(224,32,19)" fg:x="24414" fg:w="9"/><text x="70.4011%" y="991.50"></text></g><g><title>core::fmt::rt::Argument::fmt (9 samples, 0.03%)</title><rect x="70.1511%" y="965" width="0.0259%" height="15" fill="rgb(247,214,40)" fg:x="24414" fg:w="9"/><text x="70.4011%" y="975.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (9 samples, 0.03%)</title><rect x="70.1511%" y="949" width="0.0259%" height="15" fill="rgb(239,199,17)" fg:x="24414" fg:w="9"/><text x="70.4011%" y="959.50"></text></g><g><title>alloc::string::String::push_str (9 samples, 0.03%)</title><rect x="70.1511%" y="933" width="0.0259%" height="15" fill="rgb(251,159,9)" fg:x="24414" fg:w="9"/><text x="70.4011%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (9 samples, 0.03%)</title><rect x="70.1511%" y="917" width="0.0259%" height="15" fill="rgb(225,78,32)" fg:x="24414" fg:w="9"/><text x="70.4011%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (9 samples, 0.03%)</title><rect x="70.1511%" y="901" width="0.0259%" height="15" fill="rgb(206,97,47)" fg:x="24414" fg:w="9"/><text x="70.4011%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (9 samples, 0.03%)</title><rect x="70.1511%" y="885" width="0.0259%" height="15" fill="rgb(227,107,4)" fg:x="24414" fg:w="9"/><text x="70.4011%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (9 samples, 0.03%)</title><rect x="70.1511%" y="869" width="0.0259%" height="15" fill="rgb(241,146,50)" fg:x="24414" fg:w="9"/><text x="70.4011%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9 samples, 0.03%)</title><rect x="70.1511%" y="853" width="0.0259%" height="15" fill="rgb(232,92,30)" fg:x="24414" fg:w="9"/><text x="70.4011%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (9 samples, 0.03%)</title><rect x="70.1511%" y="837" width="0.0259%" height="15" fill="rgb(222,0,40)" fg:x="24414" fg:w="9"/><text x="70.4011%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (9 samples, 0.03%)</title><rect x="70.1511%" y="821" width="0.0259%" height="15" fill="rgb(219,54,33)" fg:x="24414" fg:w="9"/><text x="70.4011%" y="831.50"></text></g><g><title>alloc::raw_vec::finish_grow (9 samples, 0.03%)</title><rect x="70.1511%" y="805" width="0.0259%" height="15" fill="rgb(226,209,28)" fg:x="24414" fg:w="9"/><text x="70.4011%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (9 samples, 0.03%)</title><rect x="70.1511%" y="789" width="0.0259%" height="15" fill="rgb(254,205,35)" fg:x="24414" fg:w="9"/><text x="70.4011%" y="799.50"></text></g><g><title>alloc::alloc::Global::grow_impl (9 samples, 0.03%)</title><rect x="70.1511%" y="773" width="0.0259%" height="15" fill="rgb(230,159,3)" fg:x="24414" fg:w="9"/><text x="70.4011%" y="783.50"></text></g><g><title>alloc::alloc::realloc (9 samples, 0.03%)</title><rect x="70.1511%" y="757" width="0.0259%" height="15" fill="rgb(232,190,24)" fg:x="24414" fg:w="9"/><text x="70.4011%" y="767.50"></text></g><g><title>rallocx (8 samples, 0.02%)</title><rect x="70.1540%" y="741" width="0.0230%" height="15" fill="rgb(217,227,44)" fg:x="24415" fg:w="8"/><text x="70.4040%" y="751.50"></text></g><g><title>rtree_szind_slab_read (6 samples, 0.02%)</title><rect x="70.1598%" y="725" width="0.0172%" height="15" fill="rgb(236,211,1)" fg:x="24417" fg:w="6"/><text x="70.4098%" y="735.50"></text></g><g><title>rtree_leaf_elm_bits_read (6 samples, 0.02%)</title><rect x="70.1598%" y="709" width="0.0172%" height="15" fill="rgb(250,127,46)" fg:x="24417" fg:w="6"/><text x="70.4098%" y="719.50"></text></g><g><title>atomic_load_p (6 samples, 0.02%)</title><rect x="70.1598%" y="693" width="0.0172%" height="15" fill="rgb(229,213,6)" fg:x="24417" fg:w="6"/><text x="70.4098%" y="703.50"></text></g><g><title>&lt;move_core_types::vm_status::VMStatus as core::fmt::Display&gt;::fmt (44 samples, 0.13%)</title><rect x="70.0764%" y="1013" width="0.1264%" height="15" fill="rgb(237,15,36)" fg:x="24388" fg:w="44"/><text x="70.3264%" y="1023.50"></text></g><g><title>move_core_types::vm_status::VMStatus::status_type (8 samples, 0.02%)</title><rect x="70.1799%" y="997" width="0.0230%" height="15" fill="rgb(213,131,41)" fg:x="24424" fg:w="8"/><text x="70.4299%" y="1007.50"></text></g><g><title>move_core_types::vm_status::VMStatus::status_code (8 samples, 0.02%)</title><rect x="70.1799%" y="981" width="0.0230%" height="15" fill="rgb(225,82,44)" fg:x="24424" fg:w="8"/><text x="70.4299%" y="991.50"></text></g><g><title>aptos_logger::aptos_logger::LogEntry::new (202 samples, 0.58%)</title><rect x="69.6397%" y="1189" width="0.5804%" height="15" fill="rgb(249,42,11)" fg:x="24236" fg:w="202"/><text x="69.8897%" y="1199.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (63 samples, 0.18%)</title><rect x="70.0391%" y="1173" width="0.1810%" height="15" fill="rgb(253,11,29)" fg:x="24375" fg:w="63"/><text x="70.2891%" y="1183.50"></text></g><g><title>core::ops::function::FnOnce::call_once (63 samples, 0.18%)</title><rect x="70.0391%" y="1157" width="0.1810%" height="15" fill="rgb(206,8,54)" fg:x="24375" fg:w="63"/><text x="70.2891%" y="1167.50"></text></g><g><title>alloc::fmt::format (63 samples, 0.18%)</title><rect x="70.0391%" y="1141" width="0.1810%" height="15" fill="rgb(222,186,2)" fg:x="24375" fg:w="63"/><text x="70.2891%" y="1151.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (63 samples, 0.18%)</title><rect x="70.0391%" y="1125" width="0.1810%" height="15" fill="rgb(221,206,53)" fg:x="24375" fg:w="63"/><text x="70.2891%" y="1135.50"></text></g><g><title>alloc::fmt::format::{{closure}} (63 samples, 0.18%)</title><rect x="70.0391%" y="1109" width="0.1810%" height="15" fill="rgb(230,150,21)" fg:x="24375" fg:w="63"/><text x="70.2891%" y="1119.50"></text></g><g><title>alloc::fmt::format::format_inner (63 samples, 0.18%)</title><rect x="70.0391%" y="1093" width="0.1810%" height="15" fill="rgb(253,202,10)" fg:x="24375" fg:w="63"/><text x="70.2891%" y="1103.50"></text></g><g><title>core::fmt::Write::write_fmt (59 samples, 0.17%)</title><rect x="70.0506%" y="1077" width="0.1695%" height="15" fill="rgb(238,109,40)" fg:x="24379" fg:w="59"/><text x="70.3006%" y="1087.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (59 samples, 0.17%)</title><rect x="70.0506%" y="1061" width="0.1695%" height="15" fill="rgb(247,120,22)" fg:x="24379" fg:w="59"/><text x="70.3006%" y="1071.50"></text></g><g><title>core::fmt::write (59 samples, 0.17%)</title><rect x="70.0506%" y="1045" width="0.1695%" height="15" fill="rgb(207,43,30)" fg:x="24379" fg:w="59"/><text x="70.3006%" y="1055.50"></text></g><g><title>core::fmt::rt::Argument::fmt (53 samples, 0.15%)</title><rect x="70.0678%" y="1029" width="0.1523%" height="15" fill="rgb(213,211,24)" fg:x="24385" fg:w="53"/><text x="70.3178%" y="1039.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (4 samples, 0.01%)</title><rect x="70.2086%" y="1013" width="0.0115%" height="15" fill="rgb(239,73,39)" fg:x="24434" fg:w="4"/><text x="70.4586%" y="1023.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (4 samples, 0.01%)</title><rect x="70.2086%" y="997" width="0.0115%" height="15" fill="rgb(245,182,19)" fg:x="24434" fg:w="4"/><text x="70.4586%" y="1007.50"></text></g><g><title>&lt;aptos_logger::aptos_logger::AptosData as aptos_logger::logger::Logger&gt;::record (265 samples, 0.76%)</title><rect x="69.4673%" y="1205" width="0.7615%" height="15" fill="rgb(247,143,26)" fg:x="24176" fg:w="265"/><text x="69.7173%" y="1215.50"></text></g><g><title>aptos_logger::event::Event::dispatch (267 samples, 0.77%)</title><rect x="69.4644%" y="1237" width="0.7672%" height="15" fill="rgb(228,191,23)" fg:x="24175" fg:w="267"/><text x="69.7144%" y="1247.50"></text></g><g><title>aptos_logger::logger::dispatch (266 samples, 0.76%)</title><rect x="69.4673%" y="1221" width="0.7643%" height="15" fill="rgb(253,165,31)" fg:x="24176" fg:w="266"/><text x="69.7173%" y="1231.50"></text></g><g><title>aptos_logger::metadata::Metadata::enabled (5 samples, 0.01%)</title><rect x="70.2316%" y="1237" width="0.0144%" height="15" fill="rgb(234,138,20)" fg:x="24442" fg:w="5"/><text x="70.4816%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;prometheus::histogram::HistogramTimer&gt; (15 samples, 0.04%)</title><rect x="70.2460%" y="1237" width="0.0431%" height="15" fill="rgb(218,191,29)" fg:x="24447" fg:w="15"/><text x="70.4960%" y="1247.50"></text></g><g><title>&lt;prometheus::histogram::HistogramTimer as core::ops::drop::Drop&gt;::drop (15 samples, 0.04%)</title><rect x="70.2460%" y="1221" width="0.0431%" height="15" fill="rgb(221,157,19)" fg:x="24447" fg:w="15"/><text x="70.4960%" y="1231.50"></text></g><g><title>prometheus::histogram::HistogramTimer::observe (7 samples, 0.02%)</title><rect x="70.2690%" y="1205" width="0.0201%" height="15" fill="rgb(237,26,42)" fg:x="24455" fg:w="7"/><text x="70.5190%" y="1215.50"></text></g><g><title>prometheus::histogram::Instant::elapsed_sec (7 samples, 0.02%)</title><rect x="70.2690%" y="1189" width="0.0201%" height="15" fill="rgb(220,163,24)" fg:x="24455" fg:w="7"/><text x="70.5190%" y="1199.50"></text></g><g><title>prometheus::histogram::Instant::elapsed (7 samples, 0.02%)</title><rect x="70.2690%" y="1173" width="0.0201%" height="15" fill="rgb(242,115,20)" fg:x="24455" fg:w="7"/><text x="70.5190%" y="1183.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (5 samples, 0.01%)</title><rect x="70.2977%" y="1189" width="0.0144%" height="15" fill="rgb(210,206,9)" fg:x="24465" fg:w="5"/><text x="70.5477%" y="1199.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (5 samples, 0.01%)</title><rect x="70.2977%" y="1173" width="0.0144%" height="15" fill="rgb(208,71,17)" fg:x="24465" fg:w="5"/><text x="70.5477%" y="1183.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (5 samples, 0.01%)</title><rect x="70.2977%" y="1157" width="0.0144%" height="15" fill="rgb(233,7,5)" fg:x="24465" fg:w="5"/><text x="70.5477%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (5 samples, 0.01%)</title><rect x="70.2977%" y="1141" width="0.0144%" height="15" fill="rgb(207,92,33)" fg:x="24465" fg:w="5"/><text x="70.5477%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (5 samples, 0.01%)</title><rect x="70.2977%" y="1125" width="0.0144%" height="15" fill="rgb(218,87,9)" fg:x="24465" fg:w="5"/><text x="70.5477%" y="1135.50"></text></g><g><title>aptos_block_executor::aptos_vm::execute_single_transaction (19,401 samples, 55.75%)</title><rect x="14.5681%" y="1253" width="55.7468%" height="15" fill="rgb(219,47,37)" fg:x="5070" fg:w="19401"/><text x="14.8181%" y="1263.50">aptos_block_executor::aptos_vm::execute_single_transaction</text></g><g><title>prometheus::vec::MetricVec&lt;T&gt;::with_label_values (6 samples, 0.02%)</title><rect x="70.2977%" y="1237" width="0.0172%" height="15" fill="rgb(221,152,34)" fg:x="24465" fg:w="6"/><text x="70.5477%" y="1247.50"></text></g><g><title>prometheus::vec::MetricVec&lt;T&gt;::get_metric_with_label_values (6 samples, 0.02%)</title><rect x="70.2977%" y="1221" width="0.0172%" height="15" fill="rgb(235,176,21)" fg:x="24465" fg:w="6"/><text x="70.5477%" y="1231.50"></text></g><g><title>prometheus::vec::MetricVecCore&lt;T&gt;::get_metric_with_label_values (6 samples, 0.02%)</title><rect x="70.2977%" y="1205" width="0.0172%" height="15" fill="rgb(232,212,21)" fg:x="24465" fg:w="6"/><text x="70.5477%" y="1215.50"></text></g><g><title>&lt;aptos_block_executor::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_executor::task::ExecutorTask&gt;::execute_transaction (19,423 samples, 55.81%)</title><rect x="14.5193%" y="1269" width="55.8100%" height="15" fill="rgb(245,82,39)" fg:x="5053" fg:w="19423"/><text x="14.7693%" y="1279.50">&lt;aptos_block_executor::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_execu..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (5 samples, 0.01%)</title><rect x="70.3149%" y="1253" width="0.0144%" height="15" fill="rgb(241,52,51)" fg:x="24471" fg:w="5"/><text x="70.5649%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (5 samples, 0.01%)</title><rect x="70.3149%" y="1237" width="0.0144%" height="15" fill="rgb(219,91,24)" fg:x="24471" fg:w="5"/><text x="70.5649%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (5 samples, 0.01%)</title><rect x="70.3149%" y="1221" width="0.0144%" height="15" fill="rgb(241,142,12)" fg:x="24471" fg:w="5"/><text x="70.5649%" y="1231.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="70.3149%" y="1205" width="0.0144%" height="15" fill="rgb(230,27,9)" fg:x="24471" fg:w="5"/><text x="70.5649%" y="1215.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.01%)</title><rect x="70.3149%" y="1189" width="0.0144%" height="15" fill="rgb(249,181,32)" fg:x="24471" fg:w="5"/><text x="70.5649%" y="1199.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.01%)</title><rect x="70.3149%" y="1173" width="0.0144%" height="15" fill="rgb(230,107,3)" fg:x="24471" fg:w="5"/><text x="70.5649%" y="1183.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (4 samples, 0.01%)</title><rect x="70.3322%" y="965" width="0.0115%" height="15" fill="rgb(246,204,14)" fg:x="24477" fg:w="4"/><text x="70.5822%" y="975.50"></text></g><g><title>move_bytecode_verifier::reference_safety::verify (4 samples, 0.01%)</title><rect x="70.3322%" y="949" width="0.0115%" height="15" fill="rgb(213,192,47)" fg:x="24477" fg:w="4"/><text x="70.5822%" y="959.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::analyze_function (4 samples, 0.01%)</title><rect x="70.3322%" y="933" width="0.0115%" height="15" fill="rgb(240,44,36)" fg:x="24477" fg:w="4"/><text x="70.5822%" y="943.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (5 samples, 0.01%)</title><rect x="70.3322%" y="1013" width="0.0144%" height="15" fill="rgb(244,209,38)" fg:x="24477" fg:w="5"/><text x="70.5822%" y="1023.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (5 samples, 0.01%)</title><rect x="70.3322%" y="997" width="0.0144%" height="15" fill="rgb(219,34,37)" fg:x="24477" fg:w="5"/><text x="70.5822%" y="1007.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (5 samples, 0.01%)</title><rect x="70.3322%" y="981" width="0.0144%" height="15" fill="rgb(210,28,6)" fg:x="24477" fg:w="5"/><text x="70.5822%" y="991.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_friends (7 samples, 0.02%)</title><rect x="70.3293%" y="1093" width="0.0201%" height="15" fill="rgb(244,110,52)" fg:x="24476" fg:w="7"/><text x="70.5793%" y="1103.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (7 samples, 0.02%)</title><rect x="70.3293%" y="1077" width="0.0201%" height="15" fill="rgb(254,124,47)" fg:x="24476" fg:w="7"/><text x="70.5793%" y="1087.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (7 samples, 0.02%)</title><rect x="70.3293%" y="1061" width="0.0201%" height="15" fill="rgb(254,110,13)" fg:x="24476" fg:w="7"/><text x="70.5793%" y="1071.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (6 samples, 0.02%)</title><rect x="70.3322%" y="1045" width="0.0172%" height="15" fill="rgb(252,57,21)" fg:x="24477" fg:w="6"/><text x="70.5822%" y="1055.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (6 samples, 0.02%)</title><rect x="70.3322%" y="1029" width="0.0172%" height="15" fill="rgb(242,60,45)" fg:x="24477" fg:w="6"/><text x="70.5822%" y="1039.50"></text></g><g><title>move_bytecode_verifier::dependencies::Context::module (6 samples, 0.02%)</title><rect x="70.3494%" y="1029" width="0.0172%" height="15" fill="rgb(234,49,30)" fg:x="24483" fg:w="6"/><text x="70.5994%" y="1039.50"></text></g><g><title>move_bytecode_verifier::dependencies::Context::new (6 samples, 0.02%)</title><rect x="70.3494%" y="1013" width="0.0172%" height="15" fill="rgb(218,98,6)" fg:x="24483" fg:w="6"/><text x="70.5994%" y="1023.50"></text></g><g><title>move_bytecode_verifier::dependencies::verify_module (8 samples, 0.02%)</title><rect x="70.3494%" y="1061" width="0.0230%" height="15" fill="rgb(220,174,29)" fg:x="24483" fg:w="8"/><text x="70.5994%" y="1071.50"></text></g><g><title>move_bytecode_verifier::dependencies::verify_module_impl (8 samples, 0.02%)</title><rect x="70.3494%" y="1045" width="0.0230%" height="15" fill="rgb(236,163,23)" fg:x="24483" fg:w="8"/><text x="70.5994%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_bytecode_verifier::dependencies::Context&gt; (4 samples, 0.01%)</title><rect x="70.3724%" y="997" width="0.0115%" height="15" fill="rgb(242,114,45)" fg:x="24491" fg:w="4"/><text x="70.6224%" y="1007.50"></text></g><g><title>move_bytecode_verifier::dependencies::Context::module (6 samples, 0.02%)</title><rect x="70.3839%" y="997" width="0.0172%" height="15" fill="rgb(232,10,53)" fg:x="24495" fg:w="6"/><text x="70.6339%" y="1007.50"></text></g><g><title>move_bytecode_verifier::dependencies::Context::new (6 samples, 0.02%)</title><rect x="70.3839%" y="981" width="0.0172%" height="15" fill="rgb(245,108,29)" fg:x="24495" fg:w="6"/><text x="70.6339%" y="991.50"></text></g><g><title>move_bytecode_verifier::dependencies::verify_module (11 samples, 0.03%)</title><rect x="70.3724%" y="1029" width="0.0316%" height="15" fill="rgb(240,89,53)" fg:x="24491" fg:w="11"/><text x="70.6224%" y="1039.50"></text></g><g><title>move_bytecode_verifier::dependencies::verify_module_impl (11 samples, 0.03%)</title><rect x="70.3724%" y="1013" width="0.0316%" height="15" fill="rgb(226,60,45)" fg:x="24491" fg:w="11"/><text x="70.6224%" y="1023.50"></text></g><g><title>move_bytecode_verifier::dependencies::verify_module (4 samples, 0.01%)</title><rect x="70.4040%" y="997" width="0.0115%" height="15" fill="rgb(230,41,44)" fg:x="24502" fg:w="4"/><text x="70.6540%" y="1007.50"></text></g><g><title>move_bytecode_verifier::dependencies::verify_module_impl (4 samples, 0.01%)</title><rect x="70.4040%" y="981" width="0.0115%" height="15" fill="rgb(230,26,20)" fg:x="24502" fg:w="4"/><text x="70.6540%" y="991.50"></text></g><g><title>move_bytecode_verifier::dependencies::Context::module (4 samples, 0.01%)</title><rect x="70.4040%" y="965" width="0.0115%" height="15" fill="rgb(237,170,32)" fg:x="24502" fg:w="4"/><text x="70.6540%" y="975.50"></text></g><g><title>move_bytecode_verifier::dependencies::Context::new (4 samples, 0.01%)</title><rect x="70.4040%" y="949" width="0.0115%" height="15" fill="rgb(212,35,42)" fg:x="24502" fg:w="4"/><text x="70.6540%" y="959.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (4 samples, 0.01%)</title><rect x="70.4040%" y="933" width="0.0115%" height="15" fill="rgb(227,31,34)" fg:x="24502" fg:w="4"/><text x="70.6540%" y="943.50"></text></g><g><title>&lt;aptos_storage_interface::async_proof_fetcher::AsyncProofFetcher as aptos_block_executor::proof_fetcher::ProofFetcher&gt;::fetch_state_value_and_proof (4 samples, 0.01%)</title><rect x="70.4270%" y="837" width="0.0115%" height="15" fill="rgb(216,19,18)" fg:x="24510" fg:w="4"/><text x="70.6770%" y="847.50"></text></g><g><title>&lt;aptos_db::AptosDB as aptos_block_executor::state_view::DbReader&gt;::get_state_value_by_version (4 samples, 0.01%)</title><rect x="70.4270%" y="821" width="0.0115%" height="15" fill="rgb(211,133,42)" fg:x="24510" fg:w="4"/><text x="70.6770%" y="831.50"></text></g><g><title>aptos_db::gauged_api (4 samples, 0.01%)</title><rect x="70.4270%" y="805" width="0.0115%" height="15" fill="rgb(244,66,13)" fg:x="24510" fg:w="4"/><text x="70.6770%" y="815.50"></text></g><g><title>&lt;aptos_db::AptosDB as aptos_block_executor::state_view::DbReader&gt;::get_state_value_by_version::{{closure}} (4 samples, 0.01%)</title><rect x="70.4270%" y="789" width="0.0115%" height="15" fill="rgb(218,185,50)" fg:x="24510" fg:w="4"/><text x="70.6770%" y="799.50"></text></g><g><title>&lt;aptos_db::state_store::StateStore as aptos_block_executor::state_view::DbReader&gt;::get_state_value_by_version (4 samples, 0.01%)</title><rect x="70.4270%" y="773" width="0.0115%" height="15" fill="rgb(219,149,13)" fg:x="24510" fg:w="4"/><text x="70.6770%" y="783.50"></text></g><g><title>&lt;aptos_db::state_store::StateDb as aptos_block_executor::state_view::DbReader&gt;::get_state_value_by_version (4 samples, 0.01%)</title><rect x="70.4270%" y="757" width="0.0115%" height="15" fill="rgb(221,125,0)" fg:x="24510" fg:w="4"/><text x="70.6770%" y="767.50"></text></g><g><title>aptos_db::state_store::StateDb::get_state_value_with_version_by_version (4 samples, 0.01%)</title><rect x="70.4270%" y="741" width="0.0115%" height="15" fill="rgb(247,126,27)" fg:x="24510" fg:w="4"/><text x="70.6770%" y="751.50"></text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_module (5 samples, 0.01%)</title><rect x="70.4270%" y="933" width="0.0144%" height="15" fill="rgb(250,138,30)" fg:x="24510" fg:w="5"/><text x="70.6770%" y="943.50"></text></g><g><title>&lt;aptos_block_executor::data_cache::StorageAdapter&lt;S&gt; as move_core_types::resolver::ModuleResolver&gt;::get_module (5 samples, 0.01%)</title><rect x="70.4270%" y="917" width="0.0144%" height="15" fill="rgb(230,151,9)" fg:x="24510" fg:w="5"/><text x="70.6770%" y="927.50"></text></g><g><title>aptos_block_executor::data_cache::StorageAdapter&lt;S&gt;::get (5 samples, 0.01%)</title><rect x="70.4270%" y="901" width="0.0144%" height="15" fill="rgb(233,80,38)" fg:x="24510" fg:w="5"/><text x="70.6770%" y="911.50"></text></g><g><title>&lt;R as aptos_state_view::TStateView&gt;::get_state_value (5 samples, 0.01%)</title><rect x="70.4270%" y="885" width="0.0144%" height="15" fill="rgb(232,68,43)" fg:x="24510" fg:w="5"/><text x="70.6770%" y="895.50"></text></g><g><title>&lt;aptos_block_executor::cached_state_view::CachedStateView as aptos_state_view::TStateView&gt;::get_state_value (5 samples, 0.01%)</title><rect x="70.4270%" y="869" width="0.0144%" height="15" fill="rgb(254,5,50)" fg:x="24510" fg:w="5"/><text x="70.6770%" y="879.50"></text></g><g><title>aptos_block_executor::cached_state_view::CachedStateView::get_state_value_internal (5 samples, 0.01%)</title><rect x="70.4270%" y="853" width="0.0144%" height="15" fill="rgb(225,45,5)" fg:x="24510" fg:w="5"/><text x="70.6770%" y="863.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (5 samples, 0.01%)</title><rect x="70.4414%" y="869" width="0.0144%" height="15" fill="rgb(239,22,3)" fg:x="24515" fg:w="5"/><text x="70.6914%" y="879.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (17 samples, 0.05%)</title><rect x="70.4155%" y="981" width="0.0488%" height="15" fill="rgb(243,129,0)" fg:x="24506" fg:w="17"/><text x="70.6655%" y="991.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (14 samples, 0.04%)</title><rect x="70.4241%" y="965" width="0.0402%" height="15" fill="rgb(223,164,0)" fg:x="24509" fg:w="14"/><text x="70.6741%" y="975.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (13 samples, 0.04%)</title><rect x="70.4270%" y="949" width="0.0374%" height="15" fill="rgb(221,46,29)" fg:x="24510" fg:w="13"/><text x="70.6770%" y="959.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (8 samples, 0.02%)</title><rect x="70.4414%" y="933" width="0.0230%" height="15" fill="rgb(205,97,47)" fg:x="24515" fg:w="8"/><text x="70.6914%" y="943.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (8 samples, 0.02%)</title><rect x="70.4414%" y="917" width="0.0230%" height="15" fill="rgb(249,14,8)" fg:x="24515" fg:w="8"/><text x="70.6914%" y="927.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (8 samples, 0.02%)</title><rect x="70.4414%" y="901" width="0.0230%" height="15" fill="rgb(216,77,3)" fg:x="24515" fg:w="8"/><text x="70.6914%" y="911.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (8 samples, 0.02%)</title><rect x="70.4414%" y="885" width="0.0230%" height="15" fill="rgb(206,168,54)" fg:x="24515" fg:w="8"/><text x="70.6914%" y="895.50"></text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_module (4 samples, 0.01%)</title><rect x="70.4643%" y="965" width="0.0115%" height="15" fill="rgb(236,3,41)" fg:x="24523" fg:w="4"/><text x="70.7143%" y="975.50"></text></g><g><title>&lt;aptos_block_executor::data_cache::StorageAdapter&lt;S&gt; as move_core_types::resolver::ModuleResolver&gt;::get_module (4 samples, 0.01%)</title><rect x="70.4643%" y="949" width="0.0115%" height="15" fill="rgb(231,132,24)" fg:x="24523" fg:w="4"/><text x="70.7143%" y="959.50"></text></g><g><title>aptos_block_executor::data_cache::StorageAdapter&lt;S&gt;::get (4 samples, 0.01%)</title><rect x="70.4643%" y="933" width="0.0115%" height="15" fill="rgb(227,221,40)" fg:x="24523" fg:w="4"/><text x="70.7143%" y="943.50"></text></g><g><title>&lt;R as aptos_state_view::TStateView&gt;::get_state_value (4 samples, 0.01%)</title><rect x="70.4643%" y="917" width="0.0115%" height="15" fill="rgb(233,151,11)" fg:x="24523" fg:w="4"/><text x="70.7143%" y="927.50"></text></g><g><title>&lt;aptos_block_executor::cached_state_view::CachedStateView as aptos_state_view::TStateView&gt;::get_state_value (4 samples, 0.01%)</title><rect x="70.4643%" y="901" width="0.0115%" height="15" fill="rgb(247,81,35)" fg:x="24523" fg:w="4"/><text x="70.7143%" y="911.50"></text></g><g><title>aptos_block_executor::cached_state_view::CachedStateView::get_state_value_internal (4 samples, 0.01%)</title><rect x="70.4643%" y="885" width="0.0115%" height="15" fill="rgb(243,128,48)" fg:x="24523" fg:w="4"/><text x="70.7143%" y="895.50"></text></g><g><title>&lt;aptos_storage_interface::async_proof_fetcher::AsyncProofFetcher as aptos_block_executor::proof_fetcher::ProofFetcher&gt;::fetch_state_value_and_proof (4 samples, 0.01%)</title><rect x="70.4643%" y="869" width="0.0115%" height="15" fill="rgb(253,16,10)" fg:x="24523" fg:w="4"/><text x="70.7143%" y="879.50"></text></g><g><title>&lt;aptos_db::AptosDB as aptos_block_executor::state_view::DbReader&gt;::get_state_value_by_version (4 samples, 0.01%)</title><rect x="70.4643%" y="853" width="0.0115%" height="15" fill="rgb(228,67,27)" fg:x="24523" fg:w="4"/><text x="70.7143%" y="863.50"></text></g><g><title>aptos_db::gauged_api (4 samples, 0.01%)</title><rect x="70.4643%" y="837" width="0.0115%" height="15" fill="rgb(231,105,25)" fg:x="24523" fg:w="4"/><text x="70.7143%" y="847.50"></text></g><g><title>&lt;aptos_db::AptosDB as aptos_block_executor::state_view::DbReader&gt;::get_state_value_by_version::{{closure}} (4 samples, 0.01%)</title><rect x="70.4643%" y="821" width="0.0115%" height="15" fill="rgb(213,166,47)" fg:x="24523" fg:w="4"/><text x="70.7143%" y="831.50"></text></g><g><title>&lt;aptos_db::state_store::StateStore as aptos_block_executor::state_view::DbReader&gt;::get_state_value_by_version (4 samples, 0.01%)</title><rect x="70.4643%" y="805" width="0.0115%" height="15" fill="rgb(209,27,10)" fg:x="24523" fg:w="4"/><text x="70.7143%" y="815.50"></text></g><g><title>&lt;aptos_db::state_store::StateDb as aptos_block_executor::state_view::DbReader&gt;::get_state_value_by_version (4 samples, 0.01%)</title><rect x="70.4643%" y="789" width="0.0115%" height="15" fill="rgb(241,44,30)" fg:x="24523" fg:w="4"/><text x="70.7143%" y="799.50"></text></g><g><title>aptos_db::state_store::StateDb::get_state_value_with_version_by_version (4 samples, 0.01%)</title><rect x="70.4643%" y="773" width="0.0115%" height="15" fill="rgb(223,216,15)" fg:x="24523" fg:w="4"/><text x="70.7143%" y="783.50"></text></g><g><title>move_binary_format::deserializer::&lt;impl move_binary_format::file_format::CompiledModule&gt;::deserialize_with_max_version (6 samples, 0.02%)</title><rect x="70.4758%" y="965" width="0.0172%" height="15" fill="rgb(227,14,7)" fg:x="24527" fg:w="6"/><text x="70.7258%" y="975.50"></text></g><g><title>move_binary_format::deserializer::deserialize_compiled_module (4 samples, 0.01%)</title><rect x="70.4816%" y="949" width="0.0115%" height="15" fill="rgb(237,14,5)" fg:x="24529" fg:w="4"/><text x="70.7316%" y="959.50"></text></g><g><title>move_bytecode_verifier::reference_safety::abstract_state::AbstractState::construct_canonical_state (5 samples, 0.01%)</title><rect x="70.5362%" y="821" width="0.0144%" height="15" fill="rgb(232,14,36)" fg:x="24548" fg:w="5"/><text x="70.7862%" y="831.50"></text></g><g><title>&lt;move_bytecode_verifier::reference_safety::ReferenceSafetyAnalysis as move_bytecode_verifier::absint::TransferFunctions&gt;::execute (9 samples, 0.03%)</title><rect x="70.5362%" y="837" width="0.0259%" height="15" fill="rgb(234,0,38)" fg:x="24548" fg:w="9"/><text x="70.7862%" y="847.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::analyze_function (17 samples, 0.05%)</title><rect x="70.5161%" y="869" width="0.0488%" height="15" fill="rgb(207,170,14)" fg:x="24541" fg:w="17"/><text x="70.7661%" y="879.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::execute_block (10 samples, 0.03%)</title><rect x="70.5362%" y="853" width="0.0287%" height="15" fill="rgb(252,45,13)" fg:x="24548" fg:w="10"/><text x="70.7862%" y="863.50"></text></g><g><title>move_bytecode_verifier::reference_safety::verify (18 samples, 0.05%)</title><rect x="70.5161%" y="885" width="0.0517%" height="15" fill="rgb(213,142,7)" fg:x="24541" fg:w="18"/><text x="70.7661%" y="895.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (25 samples, 0.07%)</title><rect x="70.5103%" y="901" width="0.0718%" height="15" fill="rgb(216,157,23)" fg:x="24539" fg:w="25"/><text x="70.7603%" y="911.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (34 samples, 0.10%)</title><rect x="70.4988%" y="917" width="0.0977%" height="15" fill="rgb(212,145,33)" fg:x="24535" fg:w="34"/><text x="70.7488%" y="927.50"></text></g><g><title>move_bytecode_verifier::control_flow::verify_function (5 samples, 0.01%)</title><rect x="70.5822%" y="901" width="0.0144%" height="15" fill="rgb(233,26,13)" fg:x="24564" fg:w="5"/><text x="70.8322%" y="911.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (35 samples, 0.10%)</title><rect x="70.4988%" y="949" width="0.1006%" height="15" fill="rgb(219,196,19)" fg:x="24535" fg:w="35"/><text x="70.7488%" y="959.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (35 samples, 0.10%)</title><rect x="70.4988%" y="933" width="0.1006%" height="15" fill="rgb(246,56,21)" fg:x="24535" fg:w="35"/><text x="70.7488%" y="943.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (50 samples, 0.14%)</title><rect x="70.4643%" y="981" width="0.1437%" height="15" fill="rgb(222,28,53)" fg:x="24523" fg:w="50"/><text x="70.7143%" y="991.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (40 samples, 0.11%)</title><rect x="70.4931%" y="965" width="0.1149%" height="15" fill="rgb(224,5,27)" fg:x="24533" fg:w="40"/><text x="70.7431%" y="975.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (76 samples, 0.22%)</title><rect x="70.4040%" y="1013" width="0.2184%" height="15" fill="rgb(220,153,33)" fg:x="24502" fg:w="76"/><text x="70.6540%" y="1023.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (72 samples, 0.21%)</title><rect x="70.4155%" y="997" width="0.2069%" height="15" fill="rgb(226,58,19)" fg:x="24506" fg:w="72"/><text x="70.6655%" y="1007.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::insert (5 samples, 0.01%)</title><rect x="70.6080%" y="981" width="0.0144%" height="15" fill="rgb(239,112,23)" fg:x="24573" fg:w="5"/><text x="70.8580%" y="991.50"></text></g><g><title>move_bytecode_verifier::reference_safety::verify (14 samples, 0.04%)</title><rect x="70.6425%" y="917" width="0.0402%" height="15" fill="rgb(251,213,20)" fg:x="24585" fg:w="14"/><text x="70.8925%" y="927.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::analyze_function (14 samples, 0.04%)</title><rect x="70.6425%" y="901" width="0.0402%" height="15" fill="rgb(215,181,21)" fg:x="24585" fg:w="14"/><text x="70.8925%" y="911.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::execute_block (12 samples, 0.03%)</title><rect x="70.6482%" y="885" width="0.0345%" height="15" fill="rgb(240,8,35)" fg:x="24587" fg:w="12"/><text x="70.8982%" y="895.50"></text></g><g><title>&lt;move_bytecode_verifier::reference_safety::ReferenceSafetyAnalysis as move_bytecode_verifier::absint::TransferFunctions&gt;::execute (12 samples, 0.03%)</title><rect x="70.6482%" y="869" width="0.0345%" height="15" fill="rgb(232,203,3)" fg:x="24587" fg:w="12"/><text x="70.8982%" y="879.50"></text></g><g><title>move_bytecode_verifier::reference_safety::execute_inner (6 samples, 0.02%)</title><rect x="70.6655%" y="853" width="0.0172%" height="15" fill="rgb(214,202,43)" fg:x="24593" fg:w="6"/><text x="70.9155%" y="863.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (20 samples, 0.06%)</title><rect x="70.6396%" y="933" width="0.0575%" height="15" fill="rgb(254,35,11)" fg:x="24584" fg:w="20"/><text x="70.8896%" y="943.50"></text></g><g><title>move_bytecode_verifier::type_safety::verify (5 samples, 0.01%)</title><rect x="70.6827%" y="917" width="0.0144%" height="15" fill="rgb(239,173,13)" fg:x="24599" fg:w="5"/><text x="70.9327%" y="927.50"></text></g><g><title>move_bytecode_verifier::type_safety::verify_instr (4 samples, 0.01%)</title><rect x="70.6856%" y="901" width="0.0115%" height="15" fill="rgb(220,141,0)" fg:x="24600" fg:w="4"/><text x="70.9356%" y="911.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (30 samples, 0.09%)</title><rect x="70.6224%" y="1013" width="0.0862%" height="15" fill="rgb(210,98,12)" fg:x="24578" fg:w="30"/><text x="70.8724%" y="1023.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (26 samples, 0.07%)</title><rect x="70.6339%" y="997" width="0.0747%" height="15" fill="rgb(254,153,22)" fg:x="24582" fg:w="26"/><text x="70.8839%" y="1007.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (25 samples, 0.07%)</title><rect x="70.6367%" y="981" width="0.0718%" height="15" fill="rgb(247,223,17)" fg:x="24583" fg:w="25"/><text x="70.8867%" y="991.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (25 samples, 0.07%)</title><rect x="70.6367%" y="965" width="0.0718%" height="15" fill="rgb(246,56,7)" fg:x="24583" fg:w="25"/><text x="70.8867%" y="975.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (25 samples, 0.07%)</title><rect x="70.6367%" y="949" width="0.0718%" height="15" fill="rgb(240,226,12)" fg:x="24583" fg:w="25"/><text x="70.8867%" y="959.50"></text></g><g><title>move_bytecode_verifier::control_flow::verify_function (4 samples, 0.01%)</title><rect x="70.6971%" y="933" width="0.0115%" height="15" fill="rgb(205,87,46)" fg:x="24604" fg:w="4"/><text x="70.9471%" y="943.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (119 samples, 0.34%)</title><rect x="70.3724%" y="1045" width="0.3419%" height="15" fill="rgb(245,214,51)" fg:x="24491" fg:w="119"/><text x="70.6224%" y="1055.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (108 samples, 0.31%)</title><rect x="70.4040%" y="1029" width="0.3103%" height="15" fill="rgb(223,172,33)" fg:x="24502" fg:w="108"/><text x="70.6540%" y="1039.50"></text></g><g><title>&lt;aptos_storage_interface::async_proof_fetcher::AsyncProofFetcher as aptos_block_executor::proof_fetcher::ProofFetcher&gt;::fetch_state_value_and_proof (4 samples, 0.01%)</title><rect x="70.7143%" y="933" width="0.0115%" height="15" fill="rgb(227,203,34)" fg:x="24610" fg:w="4"/><text x="70.9643%" y="943.50"></text></g><g><title>&lt;aptos_db::AptosDB as aptos_block_executor::state_view::DbReader&gt;::get_state_value_by_version (4 samples, 0.01%)</title><rect x="70.7143%" y="917" width="0.0115%" height="15" fill="rgb(248,143,44)" fg:x="24610" fg:w="4"/><text x="70.9643%" y="927.50"></text></g><g><title>aptos_db::gauged_api (4 samples, 0.01%)</title><rect x="70.7143%" y="901" width="0.0115%" height="15" fill="rgb(226,162,5)" fg:x="24610" fg:w="4"/><text x="70.9643%" y="911.50"></text></g><g><title>&lt;aptos_db::AptosDB as aptos_block_executor::state_view::DbReader&gt;::get_state_value_by_version::{{closure}} (4 samples, 0.01%)</title><rect x="70.7143%" y="885" width="0.0115%" height="15" fill="rgb(211,143,1)" fg:x="24610" fg:w="4"/><text x="70.9643%" y="895.50"></text></g><g><title>&lt;aptos_db::state_store::StateStore as aptos_block_executor::state_view::DbReader&gt;::get_state_value_by_version (4 samples, 0.01%)</title><rect x="70.7143%" y="869" width="0.0115%" height="15" fill="rgb(224,96,15)" fg:x="24610" fg:w="4"/><text x="70.9643%" y="879.50"></text></g><g><title>&lt;aptos_db::state_store::StateDb as aptos_block_executor::state_view::DbReader&gt;::get_state_value_by_version (4 samples, 0.01%)</title><rect x="70.7143%" y="853" width="0.0115%" height="15" fill="rgb(222,4,38)" fg:x="24610" fg:w="4"/><text x="70.9643%" y="863.50"></text></g><g><title>aptos_db::state_store::StateDb::get_state_value_with_version_by_version (4 samples, 0.01%)</title><rect x="70.7143%" y="837" width="0.0115%" height="15" fill="rgb(253,228,15)" fg:x="24610" fg:w="4"/><text x="70.9643%" y="847.50"></text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_module (5 samples, 0.01%)</title><rect x="70.7143%" y="1029" width="0.0144%" height="15" fill="rgb(242,194,12)" fg:x="24610" fg:w="5"/><text x="70.9643%" y="1039.50"></text></g><g><title>&lt;aptos_block_executor::data_cache::StorageAdapter&lt;S&gt; as move_core_types::resolver::ModuleResolver&gt;::get_module (5 samples, 0.01%)</title><rect x="70.7143%" y="1013" width="0.0144%" height="15" fill="rgb(214,177,31)" fg:x="24610" fg:w="5"/><text x="70.9643%" y="1023.50"></text></g><g><title>aptos_block_executor::data_cache::StorageAdapter&lt;S&gt;::get (5 samples, 0.01%)</title><rect x="70.7143%" y="997" width="0.0144%" height="15" fill="rgb(226,58,51)" fg:x="24610" fg:w="5"/><text x="70.9643%" y="1007.50"></text></g><g><title>&lt;R as aptos_state_view::TStateView&gt;::get_state_value (5 samples, 0.01%)</title><rect x="70.7143%" y="981" width="0.0144%" height="15" fill="rgb(250,119,16)" fg:x="24610" fg:w="5"/><text x="70.9643%" y="991.50"></text></g><g><title>&lt;aptos_block_executor::cached_state_view::CachedStateView as aptos_state_view::TStateView&gt;::get_state_value (5 samples, 0.01%)</title><rect x="70.7143%" y="965" width="0.0144%" height="15" fill="rgb(223,128,53)" fg:x="24610" fg:w="5"/><text x="70.9643%" y="975.50"></text></g><g><title>aptos_block_executor::cached_state_view::CachedStateView::get_state_value_internal (5 samples, 0.01%)</title><rect x="70.7143%" y="949" width="0.0144%" height="15" fill="rgb(251,199,15)" fg:x="24610" fg:w="5"/><text x="70.9643%" y="959.50"></text></g><g><title>move_binary_format::deserializer::&lt;impl move_binary_format::file_format::CompiledModule&gt;::deserialize_with_max_version (6 samples, 0.02%)</title><rect x="70.7287%" y="1029" width="0.0172%" height="15" fill="rgb(235,168,42)" fg:x="24615" fg:w="6"/><text x="70.9787%" y="1039.50"></text></g><g><title>move_binary_format::deserializer::deserialize_compiled_module (4 samples, 0.01%)</title><rect x="70.7344%" y="1013" width="0.0115%" height="15" fill="rgb(250,210,17)" fg:x="24617" fg:w="4"/><text x="70.9844%" y="1023.50"></text></g><g><title>move_binary_format::deserializer::build_compiled_module (4 samples, 0.01%)</title><rect x="70.7344%" y="997" width="0.0115%" height="15" fill="rgb(226,36,41)" fg:x="24617" fg:w="4"/><text x="70.9844%" y="1007.50"></text></g><g><title>move_bytecode_verifier::reference_safety::abstract_state::AbstractState::call (4 samples, 0.01%)</title><rect x="70.7862%" y="869" width="0.0115%" height="15" fill="rgb(225,87,10)" fg:x="24635" fg:w="4"/><text x="71.0362%" y="879.50"></text></g><g><title>move_bytecode_verifier::reference_safety::call (7 samples, 0.02%)</title><rect x="70.7833%" y="885" width="0.0201%" height="15" fill="rgb(228,83,9)" fg:x="24634" fg:w="7"/><text x="71.0333%" y="895.50"></text></g><g><title>move_bytecode_verifier::reference_safety::verify (19 samples, 0.05%)</title><rect x="70.7574%" y="949" width="0.0546%" height="15" fill="rgb(225,16,36)" fg:x="24625" fg:w="19"/><text x="71.0074%" y="959.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::analyze_function (19 samples, 0.05%)</title><rect x="70.7574%" y="933" width="0.0546%" height="15" fill="rgb(242,198,13)" fg:x="24625" fg:w="19"/><text x="71.0074%" y="943.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::execute_block (15 samples, 0.04%)</title><rect x="70.7689%" y="917" width="0.0431%" height="15" fill="rgb(239,25,51)" fg:x="24629" fg:w="15"/><text x="71.0189%" y="927.50"></text></g><g><title>&lt;move_bytecode_verifier::reference_safety::ReferenceSafetyAnalysis as move_bytecode_verifier::absint::TransferFunctions&gt;::execute (15 samples, 0.04%)</title><rect x="70.7689%" y="901" width="0.0431%" height="15" fill="rgb(239,28,37)" fg:x="24629" fg:w="15"/><text x="71.0189%" y="911.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (26 samples, 0.07%)</title><rect x="70.7546%" y="965" width="0.0747%" height="15" fill="rgb(234,70,17)" fg:x="24624" fg:w="26"/><text x="71.0046%" y="975.50"></text></g><g><title>move_bytecode_verifier::type_safety::verify (5 samples, 0.01%)</title><rect x="70.8149%" y="949" width="0.0144%" height="15" fill="rgb(231,215,53)" fg:x="24645" fg:w="5"/><text x="71.0649%" y="959.50"></text></g><g><title>move_bytecode_verifier::type_safety::verify_instr (5 samples, 0.01%)</title><rect x="70.8149%" y="933" width="0.0144%" height="15" fill="rgb(218,140,42)" fg:x="24645" fg:w="5"/><text x="71.0649%" y="943.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (29 samples, 0.08%)</title><rect x="70.7517%" y="1013" width="0.0833%" height="15" fill="rgb(233,227,45)" fg:x="24623" fg:w="29"/><text x="71.0017%" y="1023.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (29 samples, 0.08%)</title><rect x="70.7517%" y="997" width="0.0833%" height="15" fill="rgb(225,189,21)" fg:x="24623" fg:w="29"/><text x="71.0017%" y="1007.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (29 samples, 0.08%)</title><rect x="70.7517%" y="981" width="0.0833%" height="15" fill="rgb(237,176,54)" fg:x="24623" fg:w="29"/><text x="71.0017%" y="991.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (48 samples, 0.14%)</title><rect x="70.7143%" y="1045" width="0.1379%" height="15" fill="rgb(215,131,46)" fg:x="24610" fg:w="48"/><text x="70.9643%" y="1055.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (37 samples, 0.11%)</title><rect x="70.7459%" y="1029" width="0.1063%" height="15" fill="rgb(218,95,20)" fg:x="24621" fg:w="37"/><text x="70.9959%" y="1039.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (180 samples, 0.52%)</title><rect x="70.3494%" y="1077" width="0.5172%" height="15" fill="rgb(208,198,12)" fg:x="24483" fg:w="180"/><text x="70.5994%" y="1087.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (172 samples, 0.49%)</title><rect x="70.3724%" y="1061" width="0.4942%" height="15" fill="rgb(239,107,50)" fg:x="24491" fg:w="172"/><text x="70.6224%" y="1071.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::insert (5 samples, 0.01%)</title><rect x="70.8522%" y="1045" width="0.0144%" height="15" fill="rgb(240,217,37)" fg:x="24658" fg:w="5"/><text x="71.1022%" y="1055.50"></text></g><g><title>move_vm_runtime::loader::ModuleCache::add_module (4 samples, 0.01%)</title><rect x="70.8551%" y="1029" width="0.0115%" height="15" fill="rgb(242,197,49)" fg:x="24659" fg:w="4"/><text x="71.1051%" y="1039.50"></text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_module (4 samples, 0.01%)</title><rect x="70.8666%" y="1061" width="0.0115%" height="15" fill="rgb(219,171,17)" fg:x="24663" fg:w="4"/><text x="71.1166%" y="1071.50"></text></g><g><title>&lt;aptos_block_executor::data_cache::StorageAdapter&lt;S&gt; as move_core_types::resolver::ModuleResolver&gt;::get_module (4 samples, 0.01%)</title><rect x="70.8666%" y="1045" width="0.0115%" height="15" fill="rgb(209,81,40)" fg:x="24663" fg:w="4"/><text x="71.1166%" y="1055.50"></text></g><g><title>aptos_block_executor::data_cache::StorageAdapter&lt;S&gt;::get (4 samples, 0.01%)</title><rect x="70.8666%" y="1029" width="0.0115%" height="15" fill="rgb(237,156,30)" fg:x="24663" fg:w="4"/><text x="71.1166%" y="1039.50"></text></g><g><title>&lt;R as aptos_state_view::TStateView&gt;::get_state_value (4 samples, 0.01%)</title><rect x="70.8666%" y="1013" width="0.0115%" height="15" fill="rgb(212,127,16)" fg:x="24663" fg:w="4"/><text x="71.1166%" y="1023.50"></text></g><g><title>&lt;aptos_block_executor::cached_state_view::CachedStateView as aptos_state_view::TStateView&gt;::get_state_value (4 samples, 0.01%)</title><rect x="70.8666%" y="997" width="0.0115%" height="15" fill="rgb(226,66,32)" fg:x="24663" fg:w="4"/><text x="71.1166%" y="1007.50"></text></g><g><title>aptos_block_executor::cached_state_view::CachedStateView::get_state_value_internal (4 samples, 0.01%)</title><rect x="70.8666%" y="981" width="0.0115%" height="15" fill="rgb(245,22,46)" fg:x="24663" fg:w="4"/><text x="71.1166%" y="991.50"></text></g><g><title>move_bytecode_verifier::reference_safety::verify (4 samples, 0.01%)</title><rect x="70.8896%" y="981" width="0.0115%" height="15" fill="rgb(210,112,21)" fg:x="24671" fg:w="4"/><text x="71.1396%" y="991.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::analyze_function (4 samples, 0.01%)</title><rect x="70.8896%" y="965" width="0.0115%" height="15" fill="rgb(207,118,39)" fg:x="24671" fg:w="4"/><text x="71.1396%" y="975.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (8 samples, 0.02%)</title><rect x="70.8867%" y="997" width="0.0230%" height="15" fill="rgb(205,206,35)" fg:x="24670" fg:w="8"/><text x="71.1367%" y="1007.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (12 samples, 0.03%)</title><rect x="70.8867%" y="1045" width="0.0345%" height="15" fill="rgb(222,120,2)" fg:x="24670" fg:w="12"/><text x="71.1367%" y="1055.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (12 samples, 0.03%)</title><rect x="70.8867%" y="1029" width="0.0345%" height="15" fill="rgb(205,38,18)" fg:x="24670" fg:w="12"/><text x="71.1367%" y="1039.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (12 samples, 0.03%)</title><rect x="70.8867%" y="1013" width="0.0345%" height="15" fill="rgb(226,61,2)" fg:x="24670" fg:w="12"/><text x="71.1367%" y="1023.50"></text></g><g><title>move_bytecode_verifier::control_flow::verify_function (4 samples, 0.01%)</title><rect x="70.9097%" y="997" width="0.0115%" height="15" fill="rgb(242,161,23)" fg:x="24678" fg:w="4"/><text x="71.1597%" y="1007.50"></text></g><g><title>move_binary_format::binary_views::FunctionView::function (4 samples, 0.01%)</title><rect x="70.9097%" y="981" width="0.0115%" height="15" fill="rgb(213,13,52)" fg:x="24678" fg:w="4"/><text x="71.1597%" y="991.50"></text></g><g><title>move_binary_format::control_flow_graph::VMControlFlowGraph::new (4 samples, 0.01%)</title><rect x="70.9097%" y="965" width="0.0115%" height="15" fill="rgb(246,209,47)" fg:x="24678" fg:w="4"/><text x="71.1597%" y="975.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (22 samples, 0.06%)</title><rect x="70.8666%" y="1077" width="0.0632%" height="15" fill="rgb(214,41,3)" fg:x="24663" fg:w="22"/><text x="71.1166%" y="1087.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (18 samples, 0.05%)</title><rect x="70.8781%" y="1061" width="0.0517%" height="15" fill="rgb(236,119,38)" fg:x="24667" fg:w="18"/><text x="71.1281%" y="1071.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_friends (211 samples, 0.61%)</title><rect x="70.3293%" y="1125" width="0.6063%" height="15" fill="rgb(218,50,11)" fg:x="24476" fg:w="211"/><text x="70.5793%" y="1135.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (211 samples, 0.61%)</title><rect x="70.3293%" y="1109" width="0.6063%" height="15" fill="rgb(228,38,11)" fg:x="24476" fg:w="211"/><text x="70.5793%" y="1119.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (204 samples, 0.59%)</title><rect x="70.3494%" y="1093" width="0.5862%" height="15" fill="rgb(212,13,9)" fg:x="24483" fg:w="204"/><text x="70.5994%" y="1103.50"></text></g><g><title>move_bytecode_verifier::dependencies::verify_module (6 samples, 0.02%)</title><rect x="70.9356%" y="1093" width="0.0172%" height="15" fill="rgb(208,211,9)" fg:x="24687" fg:w="6"/><text x="71.1856%" y="1103.50"></text></g><g><title>move_bytecode_verifier::dependencies::verify_module_impl (6 samples, 0.02%)</title><rect x="70.9356%" y="1077" width="0.0172%" height="15" fill="rgb(239,39,32)" fg:x="24687" fg:w="6"/><text x="71.1856%" y="1087.50"></text></g><g><title>move_bytecode_verifier::dependencies::Context::module (6 samples, 0.02%)</title><rect x="70.9356%" y="1061" width="0.0172%" height="15" fill="rgb(254,179,26)" fg:x="24687" fg:w="6"/><text x="71.1856%" y="1071.50"></text></g><g><title>move_bytecode_verifier::dependencies::Context::new (6 samples, 0.02%)</title><rect x="70.9356%" y="1045" width="0.0172%" height="15" fill="rgb(249,165,28)" fg:x="24687" fg:w="6"/><text x="71.1856%" y="1055.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (4 samples, 0.01%)</title><rect x="70.9701%" y="949" width="0.0115%" height="15" fill="rgb(225,59,50)" fg:x="24699" fg:w="4"/><text x="71.2201%" y="959.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (5 samples, 0.01%)</title><rect x="70.9701%" y="981" width="0.0144%" height="15" fill="rgb(209,122,5)" fg:x="24699" fg:w="5"/><text x="71.2201%" y="991.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (5 samples, 0.01%)</title><rect x="70.9701%" y="965" width="0.0144%" height="15" fill="rgb(214,65,34)" fg:x="24699" fg:w="5"/><text x="71.2201%" y="975.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (10 samples, 0.03%)</title><rect x="70.9586%" y="1045" width="0.0287%" height="15" fill="rgb(249,183,32)" fg:x="24695" fg:w="10"/><text x="71.2086%" y="1055.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (9 samples, 0.03%)</title><rect x="70.9614%" y="1029" width="0.0259%" height="15" fill="rgb(218,122,24)" fg:x="24696" fg:w="9"/><text x="71.2114%" y="1039.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (9 samples, 0.03%)</title><rect x="70.9614%" y="1013" width="0.0259%" height="15" fill="rgb(224,109,18)" fg:x="24696" fg:w="9"/><text x="71.2114%" y="1023.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (6 samples, 0.02%)</title><rect x="70.9701%" y="997" width="0.0172%" height="15" fill="rgb(210,68,50)" fg:x="24699" fg:w="6"/><text x="71.2201%" y="1007.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (9 samples, 0.03%)</title><rect x="70.9873%" y="1045" width="0.0259%" height="15" fill="rgb(212,184,34)" fg:x="24705" fg:w="9"/><text x="71.2373%" y="1055.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (7 samples, 0.02%)</title><rect x="70.9930%" y="1029" width="0.0201%" height="15" fill="rgb(238,105,48)" fg:x="24707" fg:w="7"/><text x="71.2430%" y="1039.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (7 samples, 0.02%)</title><rect x="70.9930%" y="1013" width="0.0201%" height="15" fill="rgb(222,134,54)" fg:x="24707" fg:w="7"/><text x="71.2430%" y="1023.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (7 samples, 0.02%)</title><rect x="70.9930%" y="997" width="0.0201%" height="15" fill="rgb(246,24,43)" fg:x="24707" fg:w="7"/><text x="71.2430%" y="1007.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (7 samples, 0.02%)</title><rect x="70.9930%" y="981" width="0.0201%" height="15" fill="rgb(227,169,22)" fg:x="24707" fg:w="7"/><text x="71.2430%" y="991.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (5 samples, 0.01%)</title><rect x="70.9988%" y="965" width="0.0144%" height="15" fill="rgb(253,152,4)" fg:x="24709" fg:w="5"/><text x="71.2488%" y="975.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (23 samples, 0.07%)</title><rect x="70.9528%" y="1077" width="0.0661%" height="15" fill="rgb(219,158,36)" fg:x="24693" fg:w="23"/><text x="71.2028%" y="1087.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (21 samples, 0.06%)</title><rect x="70.9586%" y="1061" width="0.0603%" height="15" fill="rgb(251,128,40)" fg:x="24695" fg:w="21"/><text x="71.2086%" y="1071.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (33 samples, 0.09%)</title><rect x="70.9356%" y="1109" width="0.0948%" height="15" fill="rgb(254,101,39)" fg:x="24687" fg:w="33"/><text x="71.1856%" y="1119.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (27 samples, 0.08%)</title><rect x="70.9528%" y="1093" width="0.0776%" height="15" fill="rgb(221,168,40)" fg:x="24693" fg:w="27"/><text x="71.2028%" y="1103.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (4 samples, 0.01%)</title><rect x="71.0189%" y="1077" width="0.0115%" height="15" fill="rgb(221,14,27)" fg:x="24716" fg:w="4"/><text x="71.2689%" y="1087.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (4 samples, 0.01%)</title><rect x="71.0189%" y="1061" width="0.0115%" height="15" fill="rgb(207,36,43)" fg:x="24716" fg:w="4"/><text x="71.2689%" y="1071.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (4 samples, 0.01%)</title><rect x="71.0189%" y="1045" width="0.0115%" height="15" fill="rgb(240,172,53)" fg:x="24716" fg:w="4"/><text x="71.2689%" y="1055.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (4 samples, 0.01%)</title><rect x="71.0189%" y="1029" width="0.0115%" height="15" fill="rgb(241,138,43)" fg:x="24716" fg:w="4"/><text x="71.2689%" y="1039.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (4 samples, 0.01%)</title><rect x="71.0189%" y="1013" width="0.0115%" height="15" fill="rgb(227,78,19)" fg:x="24716" fg:w="4"/><text x="71.2689%" y="1023.50"></text></g><g><title>move_binary_format::deserializer::build_common_tables (4 samples, 0.01%)</title><rect x="71.0419%" y="1045" width="0.0115%" height="15" fill="rgb(215,127,44)" fg:x="24724" fg:w="4"/><text x="71.2919%" y="1055.50"></text></g><g><title>move_binary_format::deserializer::&lt;impl move_binary_format::file_format::CompiledModule&gt;::deserialize_with_max_version (8 samples, 0.02%)</title><rect x="71.0361%" y="1093" width="0.0230%" height="15" fill="rgb(227,13,10)" fg:x="24722" fg:w="8"/><text x="71.2861%" y="1103.50"></text></g><g><title>move_binary_format::deserializer::deserialize_compiled_module (6 samples, 0.02%)</title><rect x="71.0419%" y="1077" width="0.0172%" height="15" fill="rgb(249,177,6)" fg:x="24724" fg:w="6"/><text x="71.2919%" y="1087.50"></text></g><g><title>move_binary_format::deserializer::build_compiled_module (6 samples, 0.02%)</title><rect x="71.0419%" y="1061" width="0.0172%" height="15" fill="rgb(215,154,26)" fg:x="24724" fg:w="6"/><text x="71.2919%" y="1071.50"></text></g><g><title>&lt;move_bytecode_verifier::reference_safety::ReferenceSafetyAnalysis as move_bytecode_verifier::absint::TransferFunctions&gt;::execute (6 samples, 0.02%)</title><rect x="71.0850%" y="965" width="0.0172%" height="15" fill="rgb(250,168,20)" fg:x="24739" fg:w="6"/><text x="71.3350%" y="975.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::analyze_function (9 samples, 0.03%)</title><rect x="71.0792%" y="997" width="0.0259%" height="15" fill="rgb(222,53,38)" fg:x="24737" fg:w="9"/><text x="71.3292%" y="1007.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::execute_block (7 samples, 0.02%)</title><rect x="71.0850%" y="981" width="0.0201%" height="15" fill="rgb(245,154,5)" fg:x="24739" fg:w="7"/><text x="71.3350%" y="991.50"></text></g><g><title>move_bytecode_verifier::reference_safety::verify (10 samples, 0.03%)</title><rect x="71.0792%" y="1013" width="0.0287%" height="15" fill="rgb(214,89,50)" fg:x="24737" fg:w="10"/><text x="71.3292%" y="1023.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (15 samples, 0.04%)</title><rect x="71.0706%" y="1029" width="0.0431%" height="15" fill="rgb(232,73,14)" fg:x="24734" fg:w="15"/><text x="71.3206%" y="1039.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (25 samples, 0.07%)</title><rect x="71.0620%" y="1077" width="0.0718%" height="15" fill="rgb(230,101,20)" fg:x="24731" fg:w="25"/><text x="71.3120%" y="1087.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (25 samples, 0.07%)</title><rect x="71.0620%" y="1061" width="0.0718%" height="15" fill="rgb(208,56,28)" fg:x="24731" fg:w="25"/><text x="71.3120%" y="1071.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (25 samples, 0.07%)</title><rect x="71.0620%" y="1045" width="0.0718%" height="15" fill="rgb(247,205,22)" fg:x="24731" fg:w="25"/><text x="71.3120%" y="1055.50"></text></g><g><title>move_bytecode_verifier::control_flow::verify_function (7 samples, 0.02%)</title><rect x="71.1137%" y="1029" width="0.0201%" height="15" fill="rgb(252,109,51)" fg:x="24749" fg:w="7"/><text x="71.3637%" y="1039.50"></text></g><g><title>move_bytecode_verifier::control_flow::verify_reducibility (4 samples, 0.01%)</title><rect x="71.1223%" y="1013" width="0.0115%" height="15" fill="rgb(220,40,24)" fg:x="24752" fg:w="4"/><text x="71.3723%" y="1023.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (39 samples, 0.11%)</title><rect x="71.0304%" y="1109" width="0.1121%" height="15" fill="rgb(251,108,7)" fg:x="24720" fg:w="39"/><text x="71.2804%" y="1119.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (29 samples, 0.08%)</title><rect x="71.0591%" y="1093" width="0.0833%" height="15" fill="rgb(238,102,51)" fg:x="24730" fg:w="29"/><text x="71.3091%" y="1103.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_friends (284 samples, 0.82%)</title><rect x="70.3293%" y="1157" width="0.8160%" height="15" fill="rgb(219,149,34)" fg:x="24476" fg:w="284"/><text x="70.5793%" y="1167.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (284 samples, 0.82%)</title><rect x="70.3293%" y="1141" width="0.8160%" height="15" fill="rgb(239,70,0)" fg:x="24476" fg:w="284"/><text x="70.5793%" y="1151.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (73 samples, 0.21%)</title><rect x="70.9356%" y="1125" width="0.2098%" height="15" fill="rgb(246,214,23)" fg:x="24687" fg:w="73"/><text x="71.1856%" y="1135.50"></text></g><g><title>move_bytecode_verifier::reference_safety::verify (4 samples, 0.01%)</title><rect x="71.1683%" y="949" width="0.0115%" height="15" fill="rgb(239,221,51)" fg:x="24768" fg:w="4"/><text x="71.4183%" y="959.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::analyze_function (4 samples, 0.01%)</title><rect x="71.1683%" y="933" width="0.0115%" height="15" fill="rgb(254,62,14)" fg:x="24768" fg:w="4"/><text x="71.4183%" y="943.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (12 samples, 0.03%)</title><rect x="71.1482%" y="1077" width="0.0345%" height="15" fill="rgb(253,57,33)" fg:x="24761" fg:w="12"/><text x="71.3982%" y="1087.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (11 samples, 0.03%)</title><rect x="71.1511%" y="1061" width="0.0316%" height="15" fill="rgb(229,34,6)" fg:x="24762" fg:w="11"/><text x="71.4011%" y="1071.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (10 samples, 0.03%)</title><rect x="71.1540%" y="1045" width="0.0287%" height="15" fill="rgb(235,191,23)" fg:x="24763" fg:w="10"/><text x="71.4040%" y="1055.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (7 samples, 0.02%)</title><rect x="71.1626%" y="1029" width="0.0201%" height="15" fill="rgb(217,207,27)" fg:x="24766" fg:w="7"/><text x="71.4126%" y="1039.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (7 samples, 0.02%)</title><rect x="71.1626%" y="1013" width="0.0201%" height="15" fill="rgb(232,41,44)" fg:x="24766" fg:w="7"/><text x="71.4126%" y="1023.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (7 samples, 0.02%)</title><rect x="71.1626%" y="997" width="0.0201%" height="15" fill="rgb(221,188,19)" fg:x="24766" fg:w="7"/><text x="71.4126%" y="1007.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (7 samples, 0.02%)</title><rect x="71.1626%" y="981" width="0.0201%" height="15" fill="rgb(245,180,45)" fg:x="24766" fg:w="7"/><text x="71.4126%" y="991.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (5 samples, 0.01%)</title><rect x="71.1683%" y="965" width="0.0144%" height="15" fill="rgb(250,220,42)" fg:x="24768" fg:w="5"/><text x="71.4183%" y="975.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (6 samples, 0.02%)</title><rect x="71.1827%" y="1077" width="0.0172%" height="15" fill="rgb(234,16,34)" fg:x="24773" fg:w="6"/><text x="71.4327%" y="1087.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (4 samples, 0.01%)</title><rect x="71.1884%" y="1061" width="0.0115%" height="15" fill="rgb(233,217,23)" fg:x="24775" fg:w="4"/><text x="71.4384%" y="1071.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (4 samples, 0.01%)</title><rect x="71.1884%" y="1045" width="0.0115%" height="15" fill="rgb(209,22,46)" fg:x="24775" fg:w="4"/><text x="71.4384%" y="1055.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (4 samples, 0.01%)</title><rect x="71.1884%" y="1029" width="0.0115%" height="15" fill="rgb(213,101,18)" fg:x="24775" fg:w="4"/><text x="71.4384%" y="1039.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (4 samples, 0.01%)</title><rect x="71.1884%" y="1013" width="0.0115%" height="15" fill="rgb(215,179,52)" fg:x="24775" fg:w="4"/><text x="71.4384%" y="1023.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (21 samples, 0.06%)</title><rect x="71.1482%" y="1109" width="0.0603%" height="15" fill="rgb(223,50,25)" fg:x="24761" fg:w="21"/><text x="71.3982%" y="1119.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (21 samples, 0.06%)</title><rect x="71.1482%" y="1093" width="0.0603%" height="15" fill="rgb(224,51,44)" fg:x="24761" fg:w="21"/><text x="71.3982%" y="1103.50"></text></g><g><title>&lt;move_vm_runtime::data_cache::TransactionDataCache&lt;S&gt; as move_vm_types::data_store::DataStore&gt;::load_module (4 samples, 0.01%)</title><rect x="71.2086%" y="1093" width="0.0115%" height="15" fill="rgb(224,13,54)" fg:x="24782" fg:w="4"/><text x="71.4586%" y="1103.50"></text></g><g><title>&lt;aptos_block_executor::data_cache::StorageAdapter&lt;S&gt; as move_core_types::resolver::ModuleResolver&gt;::get_module (4 samples, 0.01%)</title><rect x="71.2086%" y="1077" width="0.0115%" height="15" fill="rgb(219,58,47)" fg:x="24782" fg:w="4"/><text x="71.4586%" y="1087.50"></text></g><g><title>aptos_block_executor::data_cache::StorageAdapter&lt;S&gt;::get (4 samples, 0.01%)</title><rect x="71.2086%" y="1061" width="0.0115%" height="15" fill="rgb(246,124,34)" fg:x="24782" fg:w="4"/><text x="71.4586%" y="1071.50"></text></g><g><title>&lt;R as aptos_state_view::TStateView&gt;::get_state_value (4 samples, 0.01%)</title><rect x="71.2086%" y="1045" width="0.0115%" height="15" fill="rgb(245,109,25)" fg:x="24782" fg:w="4"/><text x="71.4586%" y="1055.50"></text></g><g><title>&lt;aptos_block_executor::cached_state_view::CachedStateView as aptos_state_view::TStateView&gt;::get_state_value (4 samples, 0.01%)</title><rect x="71.2086%" y="1029" width="0.0115%" height="15" fill="rgb(235,48,23)" fg:x="24782" fg:w="4"/><text x="71.4586%" y="1039.50"></text></g><g><title>aptos_block_executor::cached_state_view::CachedStateView::get_state_value_internal (4 samples, 0.01%)</title><rect x="71.2086%" y="1013" width="0.0115%" height="15" fill="rgb(229,203,36)" fg:x="24782" fg:w="4"/><text x="71.4586%" y="1023.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (11 samples, 0.03%)</title><rect x="71.2086%" y="1109" width="0.0316%" height="15" fill="rgb(234,180,9)" fg:x="24782" fg:w="11"/><text x="71.4586%" y="1119.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (7 samples, 0.02%)</title><rect x="71.2200%" y="1093" width="0.0201%" height="15" fill="rgb(228,98,45)" fg:x="24786" fg:w="7"/><text x="71.4700%" y="1103.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (6 samples, 0.02%)</title><rect x="71.2229%" y="1077" width="0.0172%" height="15" fill="rgb(240,24,36)" fg:x="24787" fg:w="6"/><text x="71.4729%" y="1087.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (6 samples, 0.02%)</title><rect x="71.2229%" y="1061" width="0.0172%" height="15" fill="rgb(227,154,19)" fg:x="24787" fg:w="6"/><text x="71.4729%" y="1071.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (5 samples, 0.01%)</title><rect x="71.2258%" y="1045" width="0.0144%" height="15" fill="rgb(231,2,48)" fg:x="24788" fg:w="5"/><text x="71.4758%" y="1055.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (5 samples, 0.01%)</title><rect x="71.2258%" y="1029" width="0.0144%" height="15" fill="rgb(219,216,0)" fg:x="24788" fg:w="5"/><text x="71.4758%" y="1039.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_dependencies (35 samples, 0.10%)</title><rect x="71.1453%" y="1141" width="0.1006%" height="15" fill="rgb(251,88,0)" fg:x="24760" fg:w="35"/><text x="71.3953%" y="1151.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (34 samples, 0.10%)</title><rect x="71.1482%" y="1125" width="0.0977%" height="15" fill="rgb(242,45,45)" fg:x="24761" fg:w="34"/><text x="71.3982%" y="1135.50"></text></g><g><title>move_bytecode_verifier::reference_safety::verify (8 samples, 0.02%)</title><rect x="71.2517%" y="1045" width="0.0230%" height="15" fill="rgb(218,149,45)" fg:x="24797" fg:w="8"/><text x="71.5017%" y="1055.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::analyze_function (8 samples, 0.02%)</title><rect x="71.2517%" y="1029" width="0.0230%" height="15" fill="rgb(247,194,10)" fg:x="24797" fg:w="8"/><text x="71.5017%" y="1039.50"></text></g><g><title>move_bytecode_verifier::absint::AbstractInterpreter::execute_block (5 samples, 0.01%)</title><rect x="71.2603%" y="1013" width="0.0144%" height="15" fill="rgb(234,33,37)" fg:x="24800" fg:w="5"/><text x="71.5103%" y="1023.50"></text></g><g><title>&lt;move_bytecode_verifier::reference_safety::ReferenceSafetyAnalysis as move_bytecode_verifier::absint::TransferFunctions&gt;::execute (4 samples, 0.01%)</title><rect x="71.2631%" y="997" width="0.0115%" height="15" fill="rgb(218,61,13)" fg:x="24801" fg:w="4"/><text x="71.5131%" y="1007.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_common (9 samples, 0.03%)</title><rect x="71.2517%" y="1061" width="0.0259%" height="15" fill="rgb(210,80,52)" fg:x="24797" fg:w="9"/><text x="71.5017%" y="1071.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module (11 samples, 0.03%)</title><rect x="71.2517%" y="1109" width="0.0316%" height="15" fill="rgb(218,203,27)" fg:x="24797" fg:w="11"/><text x="71.5017%" y="1119.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_module_impl (11 samples, 0.03%)</title><rect x="71.2517%" y="1093" width="0.0316%" height="15" fill="rgb(209,126,33)" fg:x="24797" fg:w="11"/><text x="71.5017%" y="1103.50"></text></g><g><title>move_bytecode_verifier::code_unit_verifier::CodeUnitVerifier::verify_function (11 samples, 0.03%)</title><rect x="71.2517%" y="1077" width="0.0316%" height="15" fill="rgb(234,173,41)" fg:x="24797" fg:w="11"/><text x="71.5017%" y="1087.50"></text></g><g><title>aptos_block_executor::aptos_vm::AptosVM::load_module (333 samples, 0.96%)</title><rect x="70.3293%" y="1253" width="0.9568%" height="15" fill="rgb(228,166,9)" fg:x="24476" fg:w="333"/><text x="70.5793%" y="1263.50"></text></g><g><title>aptos_block_executor::aptos_vm_impl::AptosVMImpl::load_module (333 samples, 0.96%)</title><rect x="70.3293%" y="1237" width="0.9568%" height="15" fill="rgb(208,124,43)" fg:x="24476" fg:w="333"/><text x="70.5793%" y="1247.50"></text></g><g><title>move_vm_runtime::move_vm::MoveVM::load_module (333 samples, 0.96%)</title><rect x="70.3293%" y="1221" width="0.9568%" height="15" fill="rgb(212,154,38)" fg:x="24476" fg:w="333"/><text x="70.5793%" y="1231.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module (333 samples, 0.96%)</title><rect x="70.3293%" y="1205" width="0.9568%" height="15" fill="rgb(246,179,35)" fg:x="24476" fg:w="333"/><text x="70.5793%" y="1215.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_module_internal (333 samples, 0.96%)</title><rect x="70.3293%" y="1189" width="0.9568%" height="15" fill="rgb(251,3,50)" fg:x="24476" fg:w="333"/><text x="70.5793%" y="1199.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies_and_friends (333 samples, 0.96%)</title><rect x="70.3293%" y="1173" width="0.9568%" height="15" fill="rgb(219,96,8)" fg:x="24476" fg:w="333"/><text x="70.5793%" y="1183.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module_and_dependencies (49 samples, 0.14%)</title><rect x="71.1453%" y="1157" width="0.1408%" height="15" fill="rgb(251,216,33)" fg:x="24760" fg:w="49"/><text x="71.3953%" y="1167.50"></text></g><g><title>move_vm_runtime::loader::Loader::load_and_verify_module (14 samples, 0.04%)</title><rect x="71.2459%" y="1141" width="0.0402%" height="15" fill="rgb(243,145,29)" fg:x="24795" fg:w="14"/><text x="71.4959%" y="1151.50"></text></g><g><title>move_bytecode_verifier::verifier::verify_module_with_config (13 samples, 0.04%)</title><rect x="71.2488%" y="1125" width="0.0374%" height="15" fill="rgb(210,75,20)" fg:x="24796" fg:w="13"/><text x="71.4988%" y="1135.50"></text></g><g><title>&lt;aptos_block_executor::block_executor::vm_wrapper::AptosExecutorTask&lt;S&gt; as aptos_block_executor::task::ExecutorTask&gt;::init (335 samples, 0.96%)</title><rect x="70.3293%" y="1269" width="0.9626%" height="15" fill="rgb(235,56,8)" fg:x="24476" fg:w="335"/><text x="70.5793%" y="1279.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,Type&gt;::borrow_mut (4 samples, 0.01%)</title><rect x="71.2919%" y="1237" width="0.0115%" height="15" fill="rgb(226,175,49)" fg:x="24811" fg:w="4"/><text x="71.5419%" y="1247.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (9 samples, 0.03%)</title><rect x="71.2919%" y="1269" width="0.0259%" height="15" fill="rgb(242,204,23)" fg:x="24811" fg:w="9"/><text x="71.5419%" y="1279.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::entry (9 samples, 0.03%)</title><rect x="71.2919%" y="1253" width="0.0259%" height="15" fill="rgb(225,104,24)" fg:x="24811" fg:w="9"/><text x="71.5419%" y="1263.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="71.3177%" y="933" width="0.0144%" height="15" fill="rgb(253,34,1)" fg:x="24820" fg:w="5"/><text x="71.5677%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_vm_types::loaded_data::runtime_types::Type]&gt; (5 samples, 0.01%)</title><rect x="71.3177%" y="917" width="0.0144%" height="15" fill="rgb(233,199,23)" fg:x="24820" fg:w="5"/><text x="71.5677%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_vm_types::loaded_data::runtime_types::Type&gt;&gt; (6 samples, 0.02%)</title><rect x="71.3177%" y="949" width="0.0172%" height="15" fill="rgb(247,7,51)" fg:x="24820" fg:w="6"/><text x="71.5677%" y="959.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (9 samples, 0.03%)</title><rect x="71.3177%" y="981" width="0.0259%" height="15" fill="rgb(214,146,12)" fg:x="24820" fg:w="9"/><text x="71.5677%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::loader::Function&gt; (9 samples, 0.03%)</title><rect x="71.3177%" y="965" width="0.0259%" height="15" fill="rgb(234,181,43)" fg:x="24820" fg:w="9"/><text x="71.5677%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;move_vm_runtime::loader::Function&gt;&gt;&gt; (10 samples, 0.03%)</title><rect x="71.3177%" y="1061" width="0.0287%" height="15" fill="rgb(239,148,6)" fg:x="24820" fg:w="10"/><text x="71.5677%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.03%)</title><rect x="71.3177%" y="1045" width="0.0287%" height="15" fill="rgb(206,151,17)" fg:x="24820" fg:w="10"/><text x="71.5677%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::sync::Arc&lt;move_vm_runtime::loader::Function&gt;]&gt; (10 samples, 0.03%)</title><rect x="71.3177%" y="1029" width="0.0287%" height="15" fill="rgb(213,215,10)" fg:x="24820" fg:w="10"/><text x="71.5677%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;move_vm_runtime::loader::Function&gt;&gt; (10 samples, 0.03%)</title><rect x="71.3177%" y="1013" width="0.0287%" height="15" fill="rgb(215,220,44)" fg:x="24820" fg:w="10"/><text x="71.5677%" y="1023.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.03%)</title><rect x="71.3177%" y="997" width="0.0287%" height="15" fill="rgb(245,205,37)" fg:x="24820" fg:w="10"/><text x="71.5677%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_binary_format::file_format::SignatureToken&gt;&gt; (5 samples, 0.01%)</title><rect x="71.3493%" y="805" width="0.0144%" height="15" fill="rgb(245,130,43)" fg:x="24831" fg:w="5"/><text x="71.5993%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="71.3493%" y="789" width="0.0144%" height="15" fill="rgb(231,227,38)" fg:x="24831" fg:w="5"/><text x="71.5993%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_binary_format::file_format::SignatureToken]&gt; (5 samples, 0.01%)</title><rect x="71.3493%" y="773" width="0.0144%" height="15" fill="rgb(233,185,4)" fg:x="24831" fg:w="5"/><text x="71.5993%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="71.3493%" y="853" width="0.0172%" height="15" fill="rgb(224,154,43)" fg:x="24831" fg:w="6"/><text x="71.5993%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;[move_binary_format::file_format::Signature]&gt; (6 samples, 0.02%)</title><rect x="71.3493%" y="837" width="0.0172%" height="15" fill="rgb(235,156,15)" fg:x="24831" fg:w="6"/><text x="71.5993%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_binary_format::file_format::Signature&gt; (6 samples, 0.02%)</title><rect x="71.3493%" y="821" width="0.0172%" height="15" fill="rgb(211,55,43)" fg:x="24831" fg:w="6"/><text x="71.5993%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;move_binary_format::file_format::Signature&gt;&gt; (9 samples, 0.03%)</title><rect x="71.3493%" y="869" width="0.0259%" height="15" fill="rgb(247,149,40)" fg:x="24831" fg:w="9"/><text x="71.5993%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;move_binary_format::file_format::CompiledModule&gt;&gt; (14 samples, 0.04%)</title><rect x="71.3465%" y="933" width="0.0402%" height="15" fill="rgb(232,171,16)" fg:x="24830" fg:w="14"/><text x="71.5965%" y="943.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.04%)</title><rect x="71.3465%" y="917" width="0.0402%" height="15" fill="rgb(215,117,49)" fg:x="24830" fg:w="14"/><text x="71.5965%" y="927.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (14 samples, 0.04%)</title><rect x="71.3465%" y="901" width="0.0402%" height="15" fill="rgb(246,194,11)" fg:x="24830" fg:w="14"/><text x="71.5965%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_binary_format::file_format::CompiledModule&gt; (14 samples, 0.04%)</title><rect x="71.3465%" y="885" width="0.0402%" height="15" fill="rgb(242,101,44)" fg:x="24830" fg:w="14"/><text x="71.5965%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_block_executor::block_executor::vm_wrapper::AptosExecutorTask&lt;&amp;aptos_block_executor::cached_state_view::CachedStateView&gt;&gt; (25 samples, 0.07%)</title><rect x="71.3177%" y="1269" width="0.0718%" height="15" fill="rgb(226,174,6)" fg:x="24820" fg:w="25"/><text x="71.5677%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_block_executor::aptos_vm::AptosVM&gt; (25 samples, 0.07%)</title><rect x="71.3177%" y="1253" width="0.0718%" height="15" fill="rgb(213,150,20)" fg:x="24820" fg:w="25"/><text x="71.5677%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_block_executor::aptos_vm_impl::AptosVMImpl&gt; (25 samples, 0.07%)</title><rect x="71.3177%" y="1237" width="0.0718%" height="15" fill="rgb(222,124,42)" fg:x="24820" fg:w="25"/><text x="71.5677%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;aptos_block_executor::move_vm_ext::vm::MoveVmExt&gt;&gt; (25 samples, 0.07%)</title><rect x="71.3177%" y="1221" width="0.0718%" height="15" fill="rgb(250,19,47)" fg:x="24820" fg:w="25"/><text x="71.5677%" y="1231.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.07%)</title><rect x="71.3177%" y="1205" width="0.0718%" height="15" fill="rgb(241,217,19)" fg:x="24820" fg:w="25"/><text x="71.5677%" y="1215.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (25 samples, 0.07%)</title><rect x="71.3177%" y="1189" width="0.0718%" height="15" fill="rgb(207,210,34)" fg:x="24820" fg:w="25"/><text x="71.5677%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_block_executor::move_vm_ext::vm::MoveVmExt&gt; (25 samples, 0.07%)</title><rect x="71.3177%" y="1173" width="0.0718%" height="15" fill="rgb(244,45,4)" fg:x="24820" fg:w="25"/><text x="71.5677%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::move_vm::MoveVM&gt; (25 samples, 0.07%)</title><rect x="71.3177%" y="1157" width="0.0718%" height="15" fill="rgb(252,134,50)" fg:x="24820" fg:w="25"/><text x="71.5677%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::runtime::VMRuntime&gt; (25 samples, 0.07%)</title><rect x="71.3177%" y="1141" width="0.0718%" height="15" fill="rgb(238,74,2)" fg:x="24820" fg:w="25"/><text x="71.5677%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::loader::Loader&gt; (25 samples, 0.07%)</title><rect x="71.3177%" y="1125" width="0.0718%" height="15" fill="rgb(226,58,46)" fg:x="24820" fg:w="25"/><text x="71.5677%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLock&lt;parking_lot::raw_rwlock::RawRwLock,move_vm_runtime::loader::ModuleCache&gt;&gt; (25 samples, 0.07%)</title><rect x="71.3177%" y="1109" width="0.0718%" height="15" fill="rgb(232,83,35)" fg:x="24820" fg:w="25"/><text x="71.5677%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;move_vm_runtime::loader::ModuleCache&gt;&gt; (25 samples, 0.07%)</title><rect x="71.3177%" y="1093" width="0.0718%" height="15" fill="rgb(212,148,47)" fg:x="24820" fg:w="25"/><text x="71.5677%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::loader::ModuleCache&gt; (25 samples, 0.07%)</title><rect x="71.3177%" y="1077" width="0.0718%" height="15" fill="rgb(235,29,1)" fg:x="24820" fg:w="25"/><text x="71.5677%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::loader::BinaryCache&lt;move_core_types::language_storage::ModuleId,move_vm_runtime::loader::Module&gt;&gt; (15 samples, 0.04%)</title><rect x="71.3465%" y="1061" width="0.0431%" height="15" fill="rgb(247,55,37)" fg:x="24830" fg:w="15"/><text x="71.5965%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;move_vm_runtime::loader::Module&gt;&gt;&gt; (15 samples, 0.04%)</title><rect x="71.3465%" y="1045" width="0.0431%" height="15" fill="rgb(222,48,3)" fg:x="24830" fg:w="15"/><text x="71.5965%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.04%)</title><rect x="71.3465%" y="1029" width="0.0431%" height="15" fill="rgb(234,21,33)" fg:x="24830" fg:w="15"/><text x="71.5965%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::sync::Arc&lt;move_vm_runtime::loader::Module&gt;]&gt; (15 samples, 0.04%)</title><rect x="71.3465%" y="1013" width="0.0431%" height="15" fill="rgb(247,178,53)" fg:x="24830" fg:w="15"/><text x="71.5965%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;move_vm_runtime::loader::Module&gt;&gt; (15 samples, 0.04%)</title><rect x="71.3465%" y="997" width="0.0431%" height="15" fill="rgb(225,75,7)" fg:x="24830" fg:w="15"/><text x="71.5965%" y="1007.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.04%)</title><rect x="71.3465%" y="981" width="0.0431%" height="15" fill="rgb(219,199,7)" fg:x="24830" fg:w="15"/><text x="71.5965%" y="991.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (15 samples, 0.04%)</title><rect x="71.3465%" y="965" width="0.0431%" height="15" fill="rgb(209,93,42)" fg:x="24830" fg:w="15"/><text x="71.5965%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;move_vm_runtime::loader::Module&gt; (15 samples, 0.04%)</title><rect x="71.3465%" y="949" width="0.0431%" height="15" fill="rgb(240,175,17)" fg:x="24830" fg:w="15"/><text x="71.5965%" y="959.50"></text></g><g><title>aptos_executor::components::chunk_output::ChunkOutput::execute_block (19,846 samples, 57.03%)</title><rect x="14.3986%" y="1333" width="57.0255%" height="15" fill="rgb(232,106,7)" fg:x="5011" fg:w="19846"/><text x="14.6486%" y="1343.50">aptos_executor::components::chunk_output::ChunkOutput::execute_block</text></g><g><title>&lt;aptos_block_executor::aptos_vm::AptosVM as aptos_block_executor::VMExecutor&gt;::execute_block (19,846 samples, 57.03%)</title><rect x="14.3986%" y="1317" width="57.0255%" height="15" fill="rgb(242,106,43)" fg:x="5011" fg:w="19846"/><text x="14.6486%" y="1327.50">&lt;aptos_block_executor::aptos_vm::AptosVM as aptos_block_executor::VMExecutor&gt;::execute_block</text></g><g><title>aptos_block_executor::block_executor::BlockAptosVM::execute_block (19,846 samples, 57.03%)</title><rect x="14.3986%" y="1301" width="57.0255%" height="15" fill="rgb(242,61,37)" fg:x="5011" fg:w="19846"/><text x="14.6486%" y="1311.50">aptos_block_executor::block_executor::BlockAptosVM::execute_block</text></g><g><title>aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_sequential (19,846 samples, 57.03%)</title><rect x="14.3986%" y="1285" width="57.0255%" height="15" fill="rgb(205,72,10)" fg:x="5011" fg:w="19846"/><text x="14.6486%" y="1295.50">aptos_block_executor::executor::BlockExecutor&lt;T,E,S&gt;::execute_transactions_sequential</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;aptos_types::write_set::WriteOp&gt;&gt; (12 samples, 0.03%)</title><rect x="71.3896%" y="1269" width="0.0345%" height="15" fill="rgb(214,184,36)" fg:x="24845" fg:w="12"/><text x="71.6396%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::write_set::WriteOp&gt; (7 samples, 0.02%)</title><rect x="71.4039%" y="1253" width="0.0201%" height="15" fill="rgb(206,107,18)" fg:x="24850" fg:w="7"/><text x="71.6539%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (7 samples, 0.02%)</title><rect x="71.4039%" y="1237" width="0.0201%" height="15" fill="rgb(210,75,5)" fg:x="24850" fg:w="7"/><text x="71.6539%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (7 samples, 0.02%)</title><rect x="71.4039%" y="1221" width="0.0201%" height="15" fill="rgb(205,3,19)" fg:x="24850" fg:w="7"/><text x="71.6539%" y="1231.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.02%)</title><rect x="71.4039%" y="1205" width="0.0201%" height="15" fill="rgb(207,181,42)" fg:x="24850" fg:w="7"/><text x="71.6539%" y="1215.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.02%)</title><rect x="71.4039%" y="1189" width="0.0201%" height="15" fill="rgb(229,179,43)" fg:x="24850" fg:w="7"/><text x="71.6539%" y="1199.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.02%)</title><rect x="71.4039%" y="1173" width="0.0201%" height="15" fill="rgb(246,95,30)" fg:x="24850" fg:w="7"/><text x="71.6539%" y="1183.50"></text></g><g><title>sdallocx (5 samples, 0.01%)</title><rect x="71.4097%" y="1157" width="0.0144%" height="15" fill="rgb(234,144,45)" fg:x="24852" fg:w="5"/><text x="71.6597%" y="1167.50"></text></g><g><title>isfree (5 samples, 0.01%)</title><rect x="71.4097%" y="1141" width="0.0144%" height="15" fill="rgb(250,54,25)" fg:x="24852" fg:w="5"/><text x="71.6597%" y="1151.50"></text></g><g><title>prometheus::vec::MetricVecCore&lt;T&gt;::hash_label_values (5 samples, 0.01%)</title><rect x="71.4298%" y="1269" width="0.0144%" height="15" fill="rgb(215,195,40)" fg:x="24859" fg:w="5"/><text x="71.6798%" y="1279.50"></text></g><g><title>&lt;fnv::FnvHasher as core::hash::Hasher&gt;::write (5 samples, 0.01%)</title><rect x="71.4298%" y="1253" width="0.0144%" height="15" fill="rgb(233,188,42)" fg:x="24859" fg:w="5"/><text x="71.6798%" y="1263.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (5 samples, 0.01%)</title><rect x="71.4298%" y="1237" width="0.0144%" height="15" fill="rgb(247,227,35)" fg:x="24859" fg:w="5"/><text x="71.6798%" y="1247.50"></text></g><g><title>aptos_executor::components::chunk_output::ChunkOutput::by_transaction_execution (19,859 samples, 57.06%)</title><rect x="14.3842%" y="1349" width="57.0628%" height="15" fill="rgb(249,124,27)" fg:x="5006" fg:w="19859"/><text x="14.6342%" y="1359.50">aptos_executor::components::chunk_output::ChunkOutput::by_transaction_execution</text></g><g><title>aptos_executor::components::chunk_output::update_counters_for_processed_chunk (8 samples, 0.02%)</title><rect x="71.4241%" y="1333" width="0.0230%" height="15" fill="rgb(219,207,25)" fg:x="24857" fg:w="8"/><text x="71.6741%" y="1343.50"></text></g><g><title>prometheus::vec::MetricVec&lt;T&gt;::with_label_values (6 samples, 0.02%)</title><rect x="71.4298%" y="1317" width="0.0172%" height="15" fill="rgb(241,216,47)" fg:x="24859" fg:w="6"/><text x="71.6798%" y="1327.50"></text></g><g><title>prometheus::vec::MetricVec&lt;T&gt;::get_metric_with_label_values (6 samples, 0.02%)</title><rect x="71.4298%" y="1301" width="0.0172%" height="15" fill="rgb(233,82,50)" fg:x="24859" fg:w="6"/><text x="71.6798%" y="1311.50"></text></g><g><title>prometheus::vec::MetricVecCore&lt;T&gt;::get_metric_with_label_values (6 samples, 0.02%)</title><rect x="71.4298%" y="1285" width="0.0172%" height="15" fill="rgb(232,63,2)" fg:x="24859" fg:w="6"/><text x="71.6798%" y="1295.50"></text></g><g><title>&lt;aptos_executor::block_executor::BlockExecutor&lt;V&gt; as aptos_executor_types::BlockExecutorTrait&gt;::execute_block (24,021 samples, 69.02%)</title><rect x="2.4424%" y="1381" width="69.0219%" height="15" fill="rgb(236,184,28)" fg:x="850" fg:w="24021"/><text x="2.6924%" y="1391.50">&lt;aptos_executor::block_executor::BlockExecutor&lt;V&gt; as aptos_executor_types::BlockExecutorTrait&gt;::execute_block</text></g><g><title>aptos_executor::block_executor::BlockExecutorInner&lt;V&gt;::execute_block (24,021 samples, 69.02%)</title><rect x="2.4424%" y="1365" width="69.0219%" height="15" fill="rgb(254,63,27)" fg:x="850" fg:w="24021"/><text x="2.6924%" y="1375.50">aptos_executor::block_executor::BlockExecutorInner&lt;V&gt;::execute_block</text></g><g><title>&lt;aptos_types::transaction::Transaction as core::clone::Clone&gt;::clone (4 samples, 0.01%)</title><rect x="71.4643%" y="1317" width="0.0115%" height="15" fill="rgb(253,106,28)" fg:x="24871" fg:w="4"/><text x="71.7143%" y="1327.50"></text></g><g><title>&lt;aptos_types::transaction::SignedTransaction as core::clone::Clone&gt;::clone (4 samples, 0.01%)</title><rect x="71.4643%" y="1301" width="0.0115%" height="15" fill="rgb(225,141,39)" fg:x="24871" fg:w="4"/><text x="71.7143%" y="1311.50"></text></g><g><title>&lt;aptos_types::transaction::RawTransaction as core::clone::Clone&gt;::clone (4 samples, 0.01%)</title><rect x="71.4643%" y="1285" width="0.0115%" height="15" fill="rgb(222,157,20)" fg:x="24871" fg:w="4"/><text x="71.7143%" y="1295.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (9 samples, 0.03%)</title><rect x="71.4643%" y="1381" width="0.0259%" height="15" fill="rgb(210,190,9)" fg:x="24871" fg:w="9"/><text x="71.7143%" y="1391.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9 samples, 0.03%)</title><rect x="71.4643%" y="1365" width="0.0259%" height="15" fill="rgb(242,167,7)" fg:x="24871" fg:w="9"/><text x="71.7143%" y="1375.50"></text></g><g><title>alloc::slice::hack::to_vec (9 samples, 0.03%)</title><rect x="71.4643%" y="1349" width="0.0259%" height="15" fill="rgb(227,82,41)" fg:x="24871" fg:w="9"/><text x="71.7143%" y="1359.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9 samples, 0.03%)</title><rect x="71.4643%" y="1333" width="0.0259%" height="15" fill="rgb(222,131,13)" fg:x="24871" fg:w="9"/><text x="71.7143%" y="1343.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5 samples, 0.01%)</title><rect x="71.4758%" y="1317" width="0.0144%" height="15" fill="rgb(221,98,26)" fg:x="24875" fg:w="5"/><text x="71.7258%" y="1327.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.01%)</title><rect x="71.4758%" y="1301" width="0.0144%" height="15" fill="rgb(251,63,52)" fg:x="24875" fg:w="5"/><text x="71.7258%" y="1311.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (5 samples, 0.01%)</title><rect x="71.4758%" y="1285" width="0.0144%" height="15" fill="rgb(246,25,43)" fg:x="24875" fg:w="5"/><text x="71.7258%" y="1295.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.01%)</title><rect x="71.4758%" y="1269" width="0.0144%" height="15" fill="rgb(247,167,15)" fg:x="24875" fg:w="5"/><text x="71.7258%" y="1279.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.01%)</title><rect x="71.4758%" y="1253" width="0.0144%" height="15" fill="rgb(240,104,42)" fg:x="24875" fg:w="5"/><text x="71.7258%" y="1263.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.01%)</title><rect x="71.4758%" y="1237" width="0.0144%" height="15" fill="rgb(224,54,6)" fg:x="24875" fg:w="5"/><text x="71.7258%" y="1247.50"></text></g><g><title>mallocx (5 samples, 0.01%)</title><rect x="71.4758%" y="1221" width="0.0144%" height="15" fill="rgb(244,108,35)" fg:x="24875" fg:w="5"/><text x="71.7258%" y="1231.50"></text></g><g><title>imalloc (5 samples, 0.01%)</title><rect x="71.4758%" y="1205" width="0.0144%" height="15" fill="rgb(216,154,2)" fg:x="24875" fg:w="5"/><text x="71.7258%" y="1215.50"></text></g><g><title>imalloc_body (5 samples, 0.01%)</title><rect x="71.4758%" y="1189" width="0.0144%" height="15" fill="rgb(222,8,47)" fg:x="24875" fg:w="5"/><text x="71.7258%" y="1199.50"></text></g><g><title>imalloc_no_sample (5 samples, 0.01%)</title><rect x="71.4758%" y="1173" width="0.0144%" height="15" fill="rgb(252,93,1)" fg:x="24875" fg:w="5"/><text x="71.7258%" y="1183.50"></text></g><g><title>iallocztm (5 samples, 0.01%)</title><rect x="71.4758%" y="1157" width="0.0144%" height="15" fill="rgb(223,226,51)" fg:x="24875" fg:w="5"/><text x="71.7258%" y="1167.50"></text></g><g><title>arena_malloc (5 samples, 0.01%)</title><rect x="71.4758%" y="1141" width="0.0144%" height="15" fill="rgb(206,147,9)" fg:x="24875" fg:w="5"/><text x="71.7258%" y="1151.50"></text></g><g><title>_rjem_je_large_palloc (5 samples, 0.01%)</title><rect x="71.4758%" y="1125" width="0.0144%" height="15" fill="rgb(248,180,41)" fg:x="24875" fg:w="5"/><text x="71.7258%" y="1135.50"></text></g><g><title>_rjem_je_arena_extent_alloc_large (5 samples, 0.01%)</title><rect x="71.4758%" y="1109" width="0.0144%" height="15" fill="rgb(209,47,50)" fg:x="24875" fg:w="5"/><text x="71.7258%" y="1119.50"></text></g><g><title>extent_recycle (5 samples, 0.01%)</title><rect x="71.4758%" y="1093" width="0.0144%" height="15" fill="rgb(243,65,31)" fg:x="24875" fg:w="5"/><text x="71.7258%" y="1103.50"></text></g><g><title>extent_recycle_split (5 samples, 0.01%)</title><rect x="71.4758%" y="1077" width="0.0144%" height="15" fill="rgb(228,128,1)" fg:x="24875" fg:w="5"/><text x="71.7258%" y="1087.50"></text></g><g><title>extent_split_interior (5 samples, 0.01%)</title><rect x="71.4758%" y="1061" width="0.0144%" height="15" fill="rgb(231,192,16)" fg:x="24875" fg:w="5"/><text x="71.7258%" y="1071.50"></text></g><g><title>extent_split_impl (5 samples, 0.01%)</title><rect x="71.4758%" y="1045" width="0.0144%" height="15" fill="rgb(224,26,40)" fg:x="24875" fg:w="5"/><text x="71.7258%" y="1055.50"></text></g><g><title>_rjem_je_extent_alloc (5 samples, 0.01%)</title><rect x="71.4758%" y="1029" width="0.0144%" height="15" fill="rgb(214,192,17)" fg:x="24875" fg:w="5"/><text x="71.7258%" y="1039.50"></text></g><g><title>_rjem_je_extent_avail_first (5 samples, 0.01%)</title><rect x="71.4758%" y="1013" width="0.0144%" height="15" fill="rgb(225,147,18)" fg:x="24875" fg:w="5"/><text x="71.7258%" y="1023.50"></text></g><g><title>extent_esnead_comp (5 samples, 0.01%)</title><rect x="71.4758%" y="997" width="0.0144%" height="15" fill="rgb(205,35,11)" fg:x="24875" fg:w="5"/><text x="71.7258%" y="1007.50"></text></g><g><title>extent_esn_comp (5 samples, 0.01%)</title><rect x="71.4758%" y="981" width="0.0144%" height="15" fill="rgb(242,40,42)" fg:x="24875" fg:w="5"/><text x="71.7258%" y="991.50"></text></g><g><title>extent_esn_get (5 samples, 0.01%)</title><rect x="71.4758%" y="965" width="0.0144%" height="15" fill="rgb(250,170,13)" fg:x="24875" fg:w="5"/><text x="71.7258%" y="975.50"></text></g><g><title>__rust_dealloc (4 samples, 0.01%)</title><rect x="71.4988%" y="901" width="0.0115%" height="15" fill="rgb(240,161,28)" fg:x="24883" fg:w="4"/><text x="71.7488%" y="911.50"></text></g><g><title>_rjem_je_tcache_event_hard (4 samples, 0.01%)</title><rect x="71.5103%" y="901" width="0.0115%" height="15" fill="rgb(245,179,12)" fg:x="24887" fg:w="4"/><text x="71.7603%" y="911.50"></text></g><g><title>_rjem_je_tcache_bin_flush_large (4 samples, 0.01%)</title><rect x="71.5103%" y="885" width="0.0115%" height="15" fill="rgb(250,92,32)" fg:x="24887" fg:w="4"/><text x="71.7603%" y="895.50"></text></g><g><title>extent_can_coalesce (9 samples, 0.03%)</title><rect x="71.5419%" y="725" width="0.0259%" height="15" fill="rgb(233,10,40)" fg:x="24898" fg:w="9"/><text x="71.7919%" y="735.50"></text></g><g><title>extent_arena_get (9 samples, 0.03%)</title><rect x="71.5419%" y="709" width="0.0259%" height="15" fill="rgb(217,98,1)" fg:x="24898" fg:w="9"/><text x="71.7919%" y="719.50"></text></g><g><title>atomic_load_p (9 samples, 0.03%)</title><rect x="71.5419%" y="693" width="0.0259%" height="15" fill="rgb(238,202,7)" fg:x="24898" fg:w="9"/><text x="71.7919%" y="703.50"></text></g><g><title>tcache_dalloc_large (25 samples, 0.07%)</title><rect x="71.5218%" y="837" width="0.0718%" height="15" fill="rgb(222,91,3)" fg:x="24891" fg:w="25"/><text x="71.7718%" y="847.50"></text></g><g><title>_rjem_je_tcache_bin_flush_large (25 samples, 0.07%)</title><rect x="71.5218%" y="821" width="0.0718%" height="15" fill="rgb(211,170,49)" fg:x="24891" fg:w="25"/><text x="71.7718%" y="831.50"></text></g><g><title>_rjem_je_large_dalloc_finish (21 samples, 0.06%)</title><rect x="71.5332%" y="805" width="0.0603%" height="15" fill="rgb(253,139,18)" fg:x="24895" fg:w="21"/><text x="71.7832%" y="815.50"></text></g><g><title>large_dalloc_finish_impl (21 samples, 0.06%)</title><rect x="71.5332%" y="789" width="0.0603%" height="15" fill="rgb(222,4,43)" fg:x="24895" fg:w="21"/><text x="71.7832%" y="799.50"></text></g><g><title>_rjem_je_arena_extents_dirty_dalloc (21 samples, 0.06%)</title><rect x="71.5332%" y="773" width="0.0603%" height="15" fill="rgb(207,205,12)" fg:x="24895" fg:w="21"/><text x="71.7832%" y="783.50"></text></g><g><title>extent_record (21 samples, 0.06%)</title><rect x="71.5332%" y="757" width="0.0603%" height="15" fill="rgb(216,159,46)" fg:x="24895" fg:w="21"/><text x="71.7832%" y="767.50"></text></g><g><title>extent_try_coalesce (18 samples, 0.05%)</title><rect x="71.5419%" y="741" width="0.0517%" height="15" fill="rgb(236,115,1)" fg:x="24898" fg:w="18"/><text x="71.7919%" y="751.50"></text></g><g><title>extent_lock_from_addr (7 samples, 0.02%)</title><rect x="71.5735%" y="725" width="0.0201%" height="15" fill="rgb(251,35,33)" fg:x="24909" fg:w="7"/><text x="71.8235%" y="735.50"></text></g><g><title>extent_rtree_leaf_elm_try_lock (7 samples, 0.02%)</title><rect x="71.5735%" y="709" width="0.0201%" height="15" fill="rgb(248,62,51)" fg:x="24909" fg:w="7"/><text x="71.8235%" y="719.50"></text></g><g><title>extent_lock (7 samples, 0.02%)</title><rect x="71.5735%" y="693" width="0.0201%" height="15" fill="rgb(254,180,19)" fg:x="24909" fg:w="7"/><text x="71.8235%" y="703.50"></text></g><g><title>mutex_pool_lock (7 samples, 0.02%)</title><rect x="71.5735%" y="677" width="0.0201%" height="15" fill="rgb(217,100,32)" fg:x="24909" fg:w="7"/><text x="71.8235%" y="687.50"></text></g><g><title>mutex_pool_mutex (7 samples, 0.02%)</title><rect x="71.5735%" y="661" width="0.0201%" height="15" fill="rgb(224,71,22)" fg:x="24909" fg:w="7"/><text x="71.8235%" y="671.50"></text></g><g><title>hash (7 samples, 0.02%)</title><rect x="71.5735%" y="645" width="0.0201%" height="15" fill="rgb(251,185,33)" fg:x="24909" fg:w="7"/><text x="71.8235%" y="655.50"></text></g><g><title>hash_x64_128 (7 samples, 0.02%)</title><rect x="71.5735%" y="629" width="0.0201%" height="15" fill="rgb(209,75,48)" fg:x="24909" fg:w="7"/><text x="71.8235%" y="639.50"></text></g><g><title>hash_fmix_64 (7 samples, 0.02%)</title><rect x="71.5735%" y="613" width="0.0201%" height="15" fill="rgb(253,190,16)" fg:x="24909" fg:w="7"/><text x="71.8235%" y="623.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_junked_locked (8 samples, 0.02%)</title><rect x="71.6913%" y="805" width="0.0230%" height="15" fill="rgb(226,140,1)" fg:x="24950" fg:w="8"/><text x="71.9413%" y="815.50"></text></g><g><title>arena_dalloc_bin_locked_impl (8 samples, 0.02%)</title><rect x="71.6913%" y="789" width="0.0230%" height="15" fill="rgb(206,75,30)" fg:x="24950" fg:w="8"/><text x="71.9413%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_schemadb::SchemaBatch&gt; (81 samples, 0.23%)</title><rect x="71.4959%" y="1253" width="0.2327%" height="15" fill="rgb(231,208,37)" fg:x="24882" fg:w="81"/><text x="71.7459%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_infallible::mutex::Mutex&lt;std::collections::hash::map::HashMap&lt;&amp;str,alloc::vec::Vec&lt;aptos_schemadb::WriteOp&gt;&gt;&gt;&gt; (81 samples, 0.23%)</title><rect x="71.4959%" y="1237" width="0.2327%" height="15" fill="rgb(238,136,40)" fg:x="24882" fg:w="81"/><text x="71.7459%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::Mutex&lt;std::collections::hash::map::HashMap&lt;&amp;str,alloc::vec::Vec&lt;aptos_schemadb::WriteOp&gt;&gt;&gt;&gt; (81 samples, 0.23%)</title><rect x="71.4959%" y="1221" width="0.2327%" height="15" fill="rgb(247,137,17)" fg:x="24882" fg:w="81"/><text x="71.7459%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;std::collections::hash::map::HashMap&lt;&amp;str,alloc::vec::Vec&lt;aptos_schemadb::WriteOp&gt;&gt;&gt;&gt; (81 samples, 0.23%)</title><rect x="71.4959%" y="1205" width="0.2327%" height="15" fill="rgb(240,60,40)" fg:x="24882" fg:w="81"/><text x="71.7459%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;&amp;str,alloc::vec::Vec&lt;aptos_schemadb::WriteOp&gt;&gt;&gt; (81 samples, 0.23%)</title><rect x="71.4959%" y="1189" width="0.2327%" height="15" fill="rgb(236,68,50)" fg:x="24882" fg:w="81"/><text x="71.7459%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;&amp;str,alloc::vec::Vec&lt;aptos_schemadb::WriteOp&gt;,std::hash::random::RandomState&gt;&gt; (81 samples, 0.23%)</title><rect x="71.4959%" y="1173" width="0.2327%" height="15" fill="rgb(230,42,12)" fg:x="24882" fg:w="81"/><text x="71.7459%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(&amp;str,alloc::vec::Vec&lt;aptos_schemadb::WriteOp&gt;)&gt;&gt; (81 samples, 0.23%)</title><rect x="71.4959%" y="1157" width="0.2327%" height="15" fill="rgb(219,16,16)" fg:x="24882" fg:w="81"/><text x="71.7459%" y="1167.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (81 samples, 0.23%)</title><rect x="71.4959%" y="1141" width="0.2327%" height="15" fill="rgb(220,38,35)" fg:x="24882" fg:w="81"/><text x="71.7459%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (81 samples, 0.23%)</title><rect x="71.4959%" y="1125" width="0.2327%" height="15" fill="rgb(228,33,1)" fg:x="24882" fg:w="81"/><text x="71.7459%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (81 samples, 0.23%)</title><rect x="71.4959%" y="1109" width="0.2327%" height="15" fill="rgb(241,46,31)" fg:x="24882" fg:w="81"/><text x="71.7459%" y="1119.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (81 samples, 0.23%)</title><rect x="71.4959%" y="1093" width="0.2327%" height="15" fill="rgb(232,58,20)" fg:x="24882" fg:w="81"/><text x="71.7459%" y="1103.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (81 samples, 0.23%)</title><rect x="71.4959%" y="1077" width="0.2327%" height="15" fill="rgb(206,228,53)" fg:x="24882" fg:w="81"/><text x="71.7459%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;(&amp;str,alloc::vec::Vec&lt;aptos_schemadb::WriteOp&gt;)&gt; (81 samples, 0.23%)</title><rect x="71.4959%" y="1061" width="0.2327%" height="15" fill="rgb(206,88,33)" fg:x="24882" fg:w="81"/><text x="71.7459%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;aptos_schemadb::WriteOp&gt;&gt; (81 samples, 0.23%)</title><rect x="71.4959%" y="1045" width="0.2327%" height="15" fill="rgb(238,69,7)" fg:x="24882" fg:w="81"/><text x="71.7459%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (81 samples, 0.23%)</title><rect x="71.4959%" y="1029" width="0.2327%" height="15" fill="rgb(250,21,46)" fg:x="24882" fg:w="81"/><text x="71.7459%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;[aptos_schemadb::WriteOp]&gt; (81 samples, 0.23%)</title><rect x="71.4959%" y="1013" width="0.2327%" height="15" fill="rgb(215,212,21)" fg:x="24882" fg:w="81"/><text x="71.7459%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_schemadb::WriteOp&gt; (81 samples, 0.23%)</title><rect x="71.4959%" y="997" width="0.2327%" height="15" fill="rgb(211,35,12)" fg:x="24882" fg:w="81"/><text x="71.7459%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (81 samples, 0.23%)</title><rect x="71.4959%" y="981" width="0.2327%" height="15" fill="rgb(231,184,16)" fg:x="24882" fg:w="81"/><text x="71.7459%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (81 samples, 0.23%)</title><rect x="71.4959%" y="965" width="0.2327%" height="15" fill="rgb(242,140,15)" fg:x="24882" fg:w="81"/><text x="71.7459%" y="975.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (81 samples, 0.23%)</title><rect x="71.4959%" y="949" width="0.2327%" height="15" fill="rgb(220,37,14)" fg:x="24882" fg:w="81"/><text x="71.7459%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (81 samples, 0.23%)</title><rect x="71.4959%" y="933" width="0.2327%" height="15" fill="rgb(223,146,22)" fg:x="24882" fg:w="81"/><text x="71.7459%" y="943.50"></text></g><g><title>alloc::alloc::dealloc (81 samples, 0.23%)</title><rect x="71.4959%" y="917" width="0.2327%" height="15" fill="rgb(216,132,15)" fg:x="24882" fg:w="81"/><text x="71.7459%" y="927.50"></text></g><g><title>sdallocx (72 samples, 0.21%)</title><rect x="71.5218%" y="901" width="0.2069%" height="15" fill="rgb(248,83,5)" fg:x="24891" fg:w="72"/><text x="71.7718%" y="911.50"></text></g><g><title>isfree (72 samples, 0.21%)</title><rect x="71.5218%" y="885" width="0.2069%" height="15" fill="rgb(231,206,48)" fg:x="24891" fg:w="72"/><text x="71.7718%" y="895.50"></text></g><g><title>isdalloct (72 samples, 0.21%)</title><rect x="71.5218%" y="869" width="0.2069%" height="15" fill="rgb(253,185,37)" fg:x="24891" fg:w="72"/><text x="71.7718%" y="879.50"></text></g><g><title>arena_sdalloc (72 samples, 0.21%)</title><rect x="71.5218%" y="853" width="0.2069%" height="15" fill="rgb(208,21,44)" fg:x="24891" fg:w="72"/><text x="71.7718%" y="863.50"></text></g><g><title>tcache_dalloc_small (47 samples, 0.14%)</title><rect x="71.5936%" y="837" width="0.1350%" height="15" fill="rgb(236,125,4)" fg:x="24916" fg:w="47"/><text x="71.8436%" y="847.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (35 samples, 0.10%)</title><rect x="71.6281%" y="821" width="0.1006%" height="15" fill="rgb(226,134,25)" fg:x="24928" fg:w="35"/><text x="71.8781%" y="831.50"></text></g><g><title>arena_decay_ticks (5 samples, 0.01%)</title><rect x="71.7143%" y="805" width="0.0144%" height="15" fill="rgb(250,201,12)" fg:x="24958" fg:w="5"/><text x="71.9643%" y="815.50"></text></g><g><title>prometheus::histogram::Histogram::observe (11 samples, 0.03%)</title><rect x="71.7286%" y="1253" width="0.0316%" height="15" fill="rgb(225,92,18)" fg:x="24963" fg:w="11"/><text x="71.9786%" y="1263.50"></text></g><g><title>prometheus::histogram::HistogramCore::observe (11 samples, 0.03%)</title><rect x="71.7286%" y="1237" width="0.0316%" height="15" fill="rgb(227,35,22)" fg:x="24963" fg:w="11"/><text x="71.9786%" y="1247.50"></text></g><g><title>&lt;prometheus::atomic64::AtomicF64 as prometheus::atomic64::Atomic&gt;::inc_by (11 samples, 0.03%)</title><rect x="71.7286%" y="1221" width="0.0316%" height="15" fill="rgb(214,180,52)" fg:x="24963" fg:w="11"/><text x="71.9786%" y="1231.50"></text></g><g><title>prometheus::vec::MetricVec&lt;T&gt;::with_label_values (42 samples, 0.12%)</title><rect x="71.7602%" y="1253" width="0.1207%" height="15" fill="rgb(233,55,38)" fg:x="24974" fg:w="42"/><text x="72.0102%" y="1263.50"></text></g><g><title>prometheus::vec::MetricVec&lt;T&gt;::get_metric_with_label_values (42 samples, 0.12%)</title><rect x="71.7602%" y="1237" width="0.1207%" height="15" fill="rgb(249,171,43)" fg:x="24974" fg:w="42"/><text x="72.0102%" y="1247.50"></text></g><g><title>prometheus::vec::MetricVecCore&lt;T&gt;::get_metric_with_label_values (42 samples, 0.12%)</title><rect x="71.7602%" y="1221" width="0.1207%" height="15" fill="rgb(239,87,2)" fg:x="24974" fg:w="42"/><text x="72.0102%" y="1231.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (42 samples, 0.12%)</title><rect x="71.7602%" y="1205" width="0.1207%" height="15" fill="rgb(248,141,5)" fg:x="24974" fg:w="42"/><text x="72.0102%" y="1215.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (42 samples, 0.12%)</title><rect x="71.7602%" y="1189" width="0.1207%" height="15" fill="rgb(238,33,42)" fg:x="24974" fg:w="42"/><text x="72.0102%" y="1199.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (42 samples, 0.12%)</title><rect x="71.7602%" y="1173" width="0.1207%" height="15" fill="rgb(231,57,19)" fg:x="24974" fg:w="42"/><text x="72.0102%" y="1183.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (42 samples, 0.12%)</title><rect x="71.7602%" y="1157" width="0.1207%" height="15" fill="rgb(214,78,53)" fg:x="24974" fg:w="42"/><text x="72.0102%" y="1167.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (42 samples, 0.12%)</title><rect x="71.7602%" y="1141" width="0.1207%" height="15" fill="rgb(206,132,29)" fg:x="24974" fg:w="42"/><text x="72.0102%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_inner (42 samples, 0.12%)</title><rect x="71.7602%" y="1125" width="0.1207%" height="15" fill="rgb(248,174,31)" fg:x="24974" fg:w="42"/><text x="72.0102%" y="1135.50"></text></g><g><title>hashbrown::raw::h2 (42 samples, 0.12%)</title><rect x="71.7602%" y="1109" width="0.1207%" height="15" fill="rgb(221,87,13)" fg:x="24974" fg:w="42"/><text x="72.0102%" y="1119.50"></text></g><g><title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;, unsigned int, rocksdb::Env::IOPriority) (8 samples, 0.02%)</title><rect x="71.8867%" y="1125" width="0.0230%" height="15" fill="rgb(223,197,17)" fg:x="25018" fg:w="8"/><text x="72.1367%" y="1135.50"></text></g><g><title>rocksdb::crc32c::Crc32cCombine(unsigned int, unsigned int, unsigned long) (45 samples, 0.13%)</title><rect x="71.9097%" y="1125" width="0.1293%" height="15" fill="rgb(220,144,50)" fg:x="25026" fg:w="45"/><text x="72.1597%" y="1135.50"></text></g><g><title>Crc32AppendZeroes (45 samples, 0.13%)</title><rect x="71.9097%" y="1109" width="0.1293%" height="15" fill="rgb(244,201,11)" fg:x="25026" fg:w="45"/><text x="72.1597%" y="1119.50"></text></g><g><title>gf_multiply_sw (45 samples, 0.13%)</title><rect x="71.9097%" y="1093" width="0.1293%" height="15" fill="rgb(249,81,34)" fg:x="25026" fg:w="45"/><text x="72.1597%" y="1103.50"></text></g><g><title>gf_multiply_sw_1 (45 samples, 0.13%)</title><rect x="71.9097%" y="1077" width="0.1293%" height="15" fill="rgb(205,161,12)" fg:x="25026" fg:w="45"/><text x="72.1597%" y="1087.50"></text></g><g><title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long, rocksdb::DBImpl::LogFileNumberSize&amp;) (2,069 samples, 5.95%)</title><rect x="71.8838%" y="1189" width="5.9451%" height="15" fill="rgb(252,139,50)" fg:x="25017" fg:w="2069"/><text x="72.1338%" y="1199.50">rocksdb:..</text></g><g><title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*, rocksdb::Env::IOPriority, rocksdb::DBImpl::LogFileNumberSize&amp;) (2,069 samples, 5.95%)</title><rect x="71.8838%" y="1173" width="5.9451%" height="15" fill="rgb(205,169,14)" fg:x="25017" fg:w="2069"/><text x="72.1338%" y="1183.50">rocksdb:..</text></g><g><title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;, rocksdb::Env::IOPriority) (2,069 samples, 5.95%)</title><rect x="71.8838%" y="1157" width="5.9451%" height="15" fill="rgb(248,198,33)" fg:x="25017" fg:w="2069"/><text x="72.1338%" y="1167.50">rocksdb:..</text></g><g><title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long, rocksdb::Env::IOPriority) (2,068 samples, 5.94%)</title><rect x="71.8867%" y="1141" width="5.9422%" height="15" fill="rgb(236,23,21)" fg:x="25018" fg:w="2068"/><text x="72.1367%" y="1151.50">rocksdb:..</text></g><g><title>rocksdb::crc32c::Value(char const*, unsigned long) (2,015 samples, 5.79%)</title><rect x="72.0390%" y="1125" width="5.7899%" height="15" fill="rgb(231,13,38)" fg:x="25071" fg:w="2015"/><text x="72.2890%" y="1135.50">rocksdb..</text></g><g><title>ExtendImpl&lt;rocksdb::crc32c::Slow_CRC32&gt; (2,015 samples, 5.79%)</title><rect x="72.0390%" y="1109" width="5.7899%" height="15" fill="rgb(239,139,21)" fg:x="25071" fg:w="2015"/><text x="72.2890%" y="1119.50">ExtendI..</text></g><g><title>Slow_CRC32 (2,015 samples, 5.79%)</title><rect x="72.0390%" y="1093" width="5.7899%" height="15" fill="rgb(222,164,45)" fg:x="25071" fg:w="2015"/><text x="72.2890%" y="1103.50">Slow_CR..</text></g><g><title>CheckMemtableFull (10 samples, 0.03%)</title><rect x="77.9409%" y="1109" width="0.0287%" height="15" fill="rgb(230,52,27)" fg:x="27125" fg:w="10"/><text x="78.1909%" y="1119.50"></text></g><g><title>SeekToColumnFamily (9 samples, 0.03%)</title><rect x="77.9697%" y="1109" width="0.0259%" height="15" fill="rgb(227,143,42)" fg:x="27135" fg:w="9"/><text x="78.2197%" y="1119.50"></text></g><g><title>rocksdb::ColumnFamilyMemTablesImpl::Seek(unsigned int) (6 samples, 0.02%)</title><rect x="77.9783%" y="1093" width="0.0172%" height="15" fill="rgb(249,127,1)" fg:x="27138" fg:w="6"/><text x="78.2283%" y="1103.50"></text></g><g><title>rocksdb::ColumnFamilySet::GetColumnFamily(unsigned int) const (4 samples, 0.01%)</title><rect x="77.9840%" y="1077" width="0.0115%" height="15" fill="rgb(243,107,26)" fg:x="27140" fg:w="4"/><text x="78.2340%" y="1087.50"></text></g><g><title>std::unordered_map&lt;unsigned int, rocksdb::ColumnFamilyData*, std::hash&lt;unsigned int&gt;, std::equal_to&lt;unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned int const, rocksdb::ColumnFamilyData*&gt; &gt; &gt;::find(unsigned int const&amp;) const (4 samples, 0.01%)</title><rect x="77.9840%" y="1061" width="0.0115%" height="15" fill="rgb(225,7,45)" fg:x="27140" fg:w="4"/><text x="78.2340%" y="1071.50"></text></g><g><title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, rocksdb::ColumnFamilyData*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, rocksdb::ColumnFamilyData*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find(unsigned int const&amp;) const (4 samples, 0.01%)</title><rect x="77.9840%" y="1045" width="0.0115%" height="15" fill="rgb(241,88,38)" fg:x="27140" fg:w="4"/><text x="78.2340%" y="1055.50"></text></g><g><title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, rocksdb::ColumnFamilyData*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, rocksdb::ColumnFamilyData*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node(unsigned long, unsigned int const&amp;, unsigned long) const (4 samples, 0.01%)</title><rect x="77.9840%" y="1029" width="0.0115%" height="15" fill="rgb(226,121,9)" fg:x="27140" fg:w="4"/><text x="78.2340%" y="1039.50"></text></g><g><title>std::_Hashtable&lt;unsigned int, std::pair&lt;unsigned int const, rocksdb::ColumnFamilyData*&gt;, std::allocator&lt;std::pair&lt;unsigned int const, rocksdb::ColumnFamilyData*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node(unsigned long, unsigned int const&amp;, unsigned long) const (4 samples, 0.01%)</title><rect x="77.9840%" y="1013" width="0.0115%" height="15" fill="rgb(253,60,29)" fg:x="27140" fg:w="4"/><text x="78.2340%" y="1023.50"></text></g><g><title>std::__detail::_Hashtable_base&lt;unsigned int, std::pair&lt;unsigned int const, rocksdb::ColumnFamilyData*&gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned int&gt;, std::hash&lt;unsigned int&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals(unsigned int const&amp;, unsigned long, std::__detail::_Hash_node_value&lt;std::pair&lt;unsigned int const, rocksdb::ColumnFamilyData*&gt;, false&gt; const&amp;) const (4 samples, 0.01%)</title><rect x="77.9840%" y="997" width="0.0115%" height="15" fill="rgb(244,181,39)" fg:x="27140" fg:w="4"/><text x="78.2340%" y="1007.50"></text></g><g><title>std::equal_to&lt;unsigned int&gt;::operator()(unsigned int const&amp;, unsigned int const&amp;) const (4 samples, 0.01%)</title><rect x="77.9840%" y="981" width="0.0115%" height="15" fill="rgb(252,203,31)" fg:x="27140" fg:w="4"/><text x="78.2340%" y="991.50"></text></g><g><title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*)::{lambda()#1}::operator()() const (4 samples, 0.01%)</title><rect x="78.0185%" y="1013" width="0.0115%" height="15" fill="rgb(224,120,8)" fg:x="27152" fg:w="4"/><text x="78.2685%" y="1023.50"></text></g><g><title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::AllocateNode(unsigned long, int) (20 samples, 0.06%)</title><rect x="78.0013%" y="1061" width="0.0575%" height="15" fill="rgb(205,171,54)" fg:x="27146" fg:w="20"/><text x="78.2513%" y="1071.50"></text></g><g><title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (14 samples, 0.04%)</title><rect x="78.0185%" y="1045" width="0.0402%" height="15" fill="rgb(235,89,11)" fg:x="27152" fg:w="14"/><text x="78.2685%" y="1055.50"></text></g><g><title>char* rocksdb::ConcurrentArena::AllocateImpl&lt;rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*)::{lambda()#1}&gt;(unsigned long, bool, rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*)::{lambda()#1} const&amp;) (14 samples, 0.04%)</title><rect x="78.0185%" y="1029" width="0.0402%" height="15" fill="rgb(212,180,28)" fg:x="27152" fg:w="14"/><text x="78.2685%" y="1039.50"></text></g><g><title>std::unique_lock&lt;rocksdb::SpinMutex&gt;::try_lock() (10 samples, 0.03%)</title><rect x="78.0300%" y="1013" width="0.0287%" height="15" fill="rgb(247,84,49)" fg:x="27156" fg:w="10"/><text x="78.2800%" y="1023.50"></text></g><g><title>rocksdb::SpinMutex::try_lock() (10 samples, 0.03%)</title><rect x="78.0300%" y="997" width="0.0287%" height="15" fill="rgb(236,187,52)" fg:x="27156" fg:w="10"/><text x="78.2800%" y="1007.50"></text></g><g><title>std::atomic&lt;bool&gt;::compare_exchange_weak(bool&amp;, bool, std::memory_order, std::memory_order) (10 samples, 0.03%)</title><rect x="78.0300%" y="981" width="0.0287%" height="15" fill="rgb(227,24,15)" fg:x="27156" fg:w="10"/><text x="78.2800%" y="991.50"></text></g><g><title>std::__atomic_base&lt;bool&gt;::compare_exchange_weak(bool&amp;, bool, std::memory_order, std::memory_order) (10 samples, 0.03%)</title><rect x="78.0300%" y="965" width="0.0287%" height="15" fill="rgb(227,211,13)" fg:x="27156" fg:w="10"/><text x="78.2800%" y="975.50"></text></g><g><title>Allocate (23 samples, 0.07%)</title><rect x="78.0013%" y="1093" width="0.0661%" height="15" fill="rgb(245,52,14)" fg:x="27146" fg:w="23"/><text x="78.2513%" y="1103.50"></text></g><g><title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::AllocateKey(unsigned long) (23 samples, 0.07%)</title><rect x="78.0013%" y="1077" width="0.0661%" height="15" fill="rgb(225,185,13)" fg:x="27146" fg:w="23"/><text x="78.2513%" y="1087.50"></text></g><g><title>rocksdb::GetLengthPrefixedSlice(char const*) (5 samples, 0.01%)</title><rect x="78.1334%" y="1045" width="0.0144%" height="15" fill="rgb(217,160,29)" fg:x="27192" fg:w="5"/><text x="78.3834%" y="1055.50"></text></g><g><title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::KeyIsAfterNode(rocksdb::Slice const&amp;, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Node*) const (8 samples, 0.02%)</title><rect x="78.1334%" y="1077" width="0.0230%" height="15" fill="rgb(216,115,53)" fg:x="27192" fg:w="8"/><text x="78.3834%" y="1087.50"></text></g><g><title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (8 samples, 0.02%)</title><rect x="78.1334%" y="1061" width="0.0230%" height="15" fill="rgb(236,99,5)" fg:x="27192" fg:w="8"/><text x="78.3834%" y="1071.50"></text></g><g><title>Compare (9 samples, 0.03%)</title><rect x="78.7139%" y="981" width="0.0259%" height="15" fill="rgb(222,60,38)" fg:x="27394" fg:w="9"/><text x="78.9639%" y="991.50"></text></g><g><title>rocksdb::Slice::compare(rocksdb::Slice const&amp;) const (9 samples, 0.03%)</title><rect x="78.7139%" y="965" width="0.0259%" height="15" fill="rgb(212,82,22)" fg:x="27394" fg:w="9"/><text x="78.9639%" y="975.50"></text></g><g><title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::RecomputeSpliceLevels(rocksdb::Slice const&amp;, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, int) (211 samples, 0.61%)</title><rect x="78.1564%" y="1077" width="0.6063%" height="15" fill="rgb(214,48,28)" fg:x="27200" fg:w="211"/><text x="78.4064%" y="1087.50"></text></g><g><title>void rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindSpliceForLevel&lt;true&gt;(rocksdb::Slice const&amp;, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Node*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Node*, int, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Node**, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Node**) (211 samples, 0.61%)</title><rect x="78.1564%" y="1061" width="0.6063%" height="15" fill="rgb(245,196,50)" fg:x="27200" fg:w="211"/><text x="78.4064%" y="1071.50"></text></g><g><title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::KeyIsAfterNode(rocksdb::Slice const&amp;, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Node*) const (87 samples, 0.25%)</title><rect x="78.5127%" y="1045" width="0.2500%" height="15" fill="rgb(225,159,46)" fg:x="27324" fg:w="87"/><text x="78.7627%" y="1055.50"></text></g><g><title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (76 samples, 0.22%)</title><rect x="78.5443%" y="1029" width="0.2184%" height="15" fill="rgb(207,195,48)" fg:x="27335" fg:w="76"/><text x="78.7943%" y="1039.50"></text></g><g><title>rocksdb::InternalKeyComparator::CompareKeySeq(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (23 samples, 0.07%)</title><rect x="78.6966%" y="1013" width="0.0661%" height="15" fill="rgb(240,73,3)" fg:x="27388" fg:w="23"/><text x="78.9466%" y="1023.50"></text></g><g><title>rocksdb::UserComparatorWrapper::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (23 samples, 0.07%)</title><rect x="78.6966%" y="997" width="0.0661%" height="15" fill="rgb(245,57,23)" fg:x="27388" fg:w="23"/><text x="78.9466%" y="1007.50"></text></g><g><title>__tls_init (8 samples, 0.02%)</title><rect x="78.7397%" y="981" width="0.0230%" height="15" fill="rgb(240,75,18)" fg:x="27403" fg:w="8"/><text x="78.9897%" y="991.50"></text></g><g><title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (258 samples, 0.74%)</title><rect x="78.0674%" y="1093" width="0.7413%" height="15" fill="rgb(238,168,12)" fg:x="27169" fg:w="258"/><text x="78.3174%" y="1103.50"></text></g><g><title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (16 samples, 0.05%)</title><rect x="78.7627%" y="1077" width="0.0460%" height="15" fill="rgb(226,20,40)" fg:x="27411" fg:w="16"/><text x="79.0127%" y="1087.50"></text></g><g><title>rocksdb::InternalKeyComparator::CompareKeySeq(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (8 samples, 0.02%)</title><rect x="78.7857%" y="1061" width="0.0230%" height="15" fill="rgb(224,130,35)" fg:x="27419" fg:w="8"/><text x="79.0357%" y="1071.50"></text></g><g><title>rocksdb::UserComparatorWrapper::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (8 samples, 0.02%)</title><rect x="78.7857%" y="1045" width="0.0230%" height="15" fill="rgb(225,63,41)" fg:x="27419" fg:w="8"/><text x="79.0357%" y="1055.50"></text></g><g><title>rocksdb::MemTable::UpdateFlushState() (11 samples, 0.03%)</title><rect x="78.8087%" y="1093" width="0.0316%" height="15" fill="rgb(219,3,3)" fg:x="27427" fg:w="11"/><text x="79.0587%" y="1103.50"></text></g><g><title>rocksdb::MemTable::ShouldFlushNow() (8 samples, 0.02%)</title><rect x="78.8173%" y="1077" width="0.0230%" height="15" fill="rgb(218,157,4)" fg:x="27430" fg:w="8"/><text x="79.0673%" y="1087.50"></text></g><g><title>PutCFImpl (344 samples, 0.99%)</title><rect x="77.9036%" y="1125" width="0.9884%" height="15" fill="rgb(232,76,36)" fg:x="27112" fg:w="344"/><text x="78.1536%" y="1135.50"></text></g><g><title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ProtectionInfoKVOS&lt;unsigned long&gt; const*, bool, rocksdb::MemTablePostProcessInfo*, void**) (310 samples, 0.89%)</title><rect x="78.0013%" y="1109" width="0.8908%" height="15" fill="rgb(247,36,0)" fg:x="27146" fg:w="310"/><text x="78.2513%" y="1119.50"></text></g><g><title>std::unique_ptr&lt;rocksdb::MemTableRep, std::default_delete&lt;rocksdb::MemTableRep&gt; &gt;::operator-&gt;() const (17 samples, 0.05%)</title><rect x="78.8432%" y="1093" width="0.0488%" height="15" fill="rgb(205,2,34)" fg:x="27439" fg:w="17"/><text x="79.0932%" y="1103.50"></text></g><g><title>std::unique_ptr&lt;rocksdb::MemTableRep, std::default_delete&lt;rocksdb::MemTableRep&gt; &gt;::get() const (17 samples, 0.05%)</title><rect x="78.8432%" y="1077" width="0.0488%" height="15" fill="rgb(239,136,13)" fg:x="27439" fg:w="17"/><text x="79.0932%" y="1087.50"></text></g><g><title>std::__uniq_ptr_impl&lt;rocksdb::MemTableRep, std::default_delete&lt;rocksdb::MemTableRep&gt; &gt;::_M_ptr() const (17 samples, 0.05%)</title><rect x="78.8432%" y="1061" width="0.0488%" height="15" fill="rgb(253,122,12)" fg:x="27439" fg:w="17"/><text x="79.0932%" y="1071.50"></text></g><g><title>PutCF (351 samples, 1.01%)</title><rect x="77.9007%" y="1141" width="1.0086%" height="15" fill="rgb(222,174,7)" fg:x="27111" fg:w="351"/><text x="78.1507%" y="1151.50"></text></g><g><title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (6 samples, 0.02%)</title><rect x="78.8920%" y="1125" width="0.0172%" height="15" fill="rgb(208,191,42)" fg:x="27456" fg:w="6"/><text x="79.1420%" y="1135.50"></text></g><g><title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (26 samples, 0.07%)</title><rect x="78.9093%" y="1141" width="0.0747%" height="15" fill="rgb(237,212,15)" fg:x="27462" fg:w="26"/><text x="79.1593%" y="1151.50"></text></g><g><title>rocksdb::GetLengthPrefixedSlice(rocksdb::Slice*, rocksdb::Slice*) (18 samples, 0.05%)</title><rect x="78.9322%" y="1125" width="0.0517%" height="15" fill="rgb(215,65,20)" fg:x="27470" fg:w="18"/><text x="79.1822%" y="1135.50"></text></g><g><title>rocksdb::db::DBCommon&lt;T,rocksdb::db::DBWithThreadModeInner&gt;::write_opt (2,479 samples, 7.12%)</title><rect x="71.8809%" y="1253" width="7.1232%" height="15" fill="rgb(232,103,11)" fg:x="25016" fg:w="2479"/><text x="72.1309%" y="1263.50">rocksdb::d..</text></g><g><title>rocksdb_write (2,479 samples, 7.12%)</title><rect x="71.8809%" y="1237" width="7.1232%" height="15" fill="rgb(235,148,18)" fg:x="25016" fg:w="2479"/><text x="72.1309%" y="1247.50">rocksdb_wr..</text></g><g><title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (2,479 samples, 7.12%)</title><rect x="71.8809%" y="1221" width="7.1232%" height="15" fill="rgb(240,173,7)" fg:x="25016" fg:w="2479"/><text x="72.1309%" y="1231.50">rocksdb::D..</text></g><g><title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*, rocksdb::PostMemTableCallback*) (2,479 samples, 7.12%)</title><rect x="71.8809%" y="1205" width="7.1232%" height="15" fill="rgb(228,182,25)" fg:x="25016" fg:w="2479"/><text x="72.1309%" y="1215.50">rocksdb::D..</text></g><g><title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (409 samples, 1.18%)</title><rect x="77.8289%" y="1189" width="1.1752%" height="15" fill="rgb(247,3,52)" fg:x="27086" fg:w="409"/><text x="78.0789%" y="1199.50"></text></g><g><title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (409 samples, 1.18%)</title><rect x="77.8289%" y="1173" width="1.1752%" height="15" fill="rgb(226,155,8)" fg:x="27086" fg:w="409"/><text x="78.0789%" y="1183.50"></text></g><g><title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch*::Handler, unsigned long, unsigned long) (409 samples, 1.18%)</title><rect x="77.8289%" y="1157" width="1.1752%" height="15" fill="rgb(243,195,38)" fg:x="27086" fg:w="409"/><text x="78.0789%" y="1167.50"></text></g><g><title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (7 samples, 0.02%)</title><rect x="78.9840%" y="1141" width="0.0201%" height="15" fill="rgb(254,181,33)" fg:x="27488" fg:w="7"/><text x="79.2340%" y="1151.50"></text></g><g><title>rocksdb::WriteBatchInternal::GetColumnFamilyIdAndTimestampSize(rocksdb::WriteBatch*, rocksdb::ColumnFamilyHandle*) (11 samples, 0.03%)</title><rect x="79.0615%" y="1205" width="0.0316%" height="15" fill="rgb(232,98,23)" fg:x="27515" fg:w="11"/><text x="79.3115%" y="1215.50"></text></g><g><title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (5 samples, 0.01%)</title><rect x="79.0788%" y="1189" width="0.0144%" height="15" fill="rgb(205,23,10)" fg:x="27521" fg:w="5"/><text x="79.3288%" y="1199.50"></text></g><g><title>rocksdb::ColumnFamilyHandleImpl::GetID() const (5 samples, 0.01%)</title><rect x="79.0788%" y="1173" width="0.0144%" height="15" fill="rgb(212,124,38)" fg:x="27521" fg:w="5"/><text x="79.3288%" y="1183.50"></text></g><g><title>rocksdb::LocalSavePoint::commit() (5 samples, 0.01%)</title><rect x="79.0932%" y="1189" width="0.0144%" height="15" fill="rgb(228,207,2)" fg:x="27526" fg:w="5"/><text x="79.3432%" y="1199.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append(char const*, unsigned long) (14 samples, 0.04%)</title><rect x="79.1161%" y="1141" width="0.0402%" height="15" fill="rgb(215,120,22)" fg:x="27534" fg:w="14"/><text x="79.3661%" y="1151.50"></text></g><g><title>rocksdb::PutVarint32(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, unsigned int) (23 samples, 0.07%)</title><rect x="79.1075%" y="1173" width="0.0661%" height="15" fill="rgb(251,172,33)" fg:x="27531" fg:w="23"/><text x="79.3575%" y="1183.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append(char const*, unsigned long) (20 samples, 0.06%)</title><rect x="79.1161%" y="1157" width="0.0575%" height="15" fill="rgb(250,83,2)" fg:x="27534" fg:w="20"/><text x="79.3661%" y="1167.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length(unsigned long, unsigned long, char const*) const (6 samples, 0.02%)</title><rect x="79.1564%" y="1141" width="0.0172%" height="15" fill="rgb(210,132,53)" fg:x="27548" fg:w="6"/><text x="79.4064%" y="1151.50"></text></g><g><title>rocksdb::PutLengthPrefixedSlice(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, rocksdb::Slice const&amp;) (24 samples, 0.07%)</title><rect x="79.1075%" y="1189" width="0.0690%" height="15" fill="rgb(221,208,36)" fg:x="27531" fg:w="24"/><text x="79.3575%" y="1199.50"></text></g><g><title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (30 samples, 0.09%)</title><rect x="79.0932%" y="1205" width="0.0862%" height="15" fill="rgb(205,192,46)" fg:x="27526" fg:w="30"/><text x="79.3432%" y="1215.50"></text></g><g><title>aptos_db::AptosDB::commit (2,686 samples, 7.72%)</title><rect x="71.4930%" y="1285" width="7.7179%" height="15" fill="rgb(223,163,14)" fg:x="24881" fg:w="2686"/><text x="71.7430%" y="1295.50">aptos_db::A..</text></g><g><title>aptos_schemadb::DB::write_schemas (2,686 samples, 7.72%)</title><rect x="71.4930%" y="1269" width="7.7179%" height="15" fill="rgb(218,41,28)" fg:x="24881" fg:w="2686"/><text x="71.7430%" y="1279.50">aptos_schem..</text></g><g><title>rocksdb::write_batch::WriteBatchWithTransaction&lt;_&gt;::put_cf (72 samples, 0.21%)</title><rect x="79.0041%" y="1253" width="0.2069%" height="15" fill="rgb(235,104,10)" fg:x="27495" fg:w="72"/><text x="79.2541%" y="1263.50"></text></g><g><title>rocksdb_writebatch_put_cf (56 samples, 0.16%)</title><rect x="79.0501%" y="1237" width="0.1609%" height="15" fill="rgb(246,17,4)" fg:x="27511" fg:w="56"/><text x="79.3001%" y="1247.50"></text></g><g><title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (52 samples, 0.15%)</title><rect x="79.0615%" y="1221" width="0.1494%" height="15" fill="rgb(240,7,16)" fg:x="27515" fg:w="52"/><text x="79.3115%" y="1231.50"></text></g><g><title>std::enable_if&lt;(__assignable&lt;rocksdb::Status, unsigned int, unsigned long&gt;)(), std::tuple&lt;rocksdb::Status&amp;, unsigned int&amp;, unsigned long&amp;&gt;&amp;&gt;::type std::tuple&lt;rocksdb::Status&amp;, unsigned int&amp;, unsigned long&amp;&gt;::operator=&lt;rocksdb::Status, unsigned int, unsigned long&gt;(std::tuple&lt;rocksdb::Status, unsigned int, unsigned long&gt;&amp;&amp;) (11 samples, 0.03%)</title><rect x="79.1794%" y="1205" width="0.0316%" height="15" fill="rgb(213,160,23)" fg:x="27556" fg:w="11"/><text x="79.4294%" y="1215.50"></text></g><g><title>void std::_Tuple_impl&lt;(unsigned long)0, rocksdb::Status&amp;, unsigned int&amp;, unsigned long&amp;&gt;::_M_assign&lt;rocksdb::Status, unsigned int, unsigned long&gt;(std::_Tuple_impl&lt;(unsigned long)0, rocksdb::Status, unsigned int, unsigned long&gt;&amp;&amp;) (11 samples, 0.03%)</title><rect x="79.1794%" y="1189" width="0.0316%" height="15" fill="rgb(251,179,49)" fg:x="27556" fg:w="11"/><text x="79.4294%" y="1199.50"></text></g><g><title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (11 samples, 0.03%)</title><rect x="79.1794%" y="1173" width="0.0316%" height="15" fill="rgb(247,198,10)" fg:x="27556" fg:w="11"/><text x="79.4294%" y="1183.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::clone::Clone&gt;::clone (16 samples, 0.05%)</title><rect x="79.2138%" y="981" width="0.0460%" height="15" fill="rgb(220,65,29)" fg:x="27568" fg:w="16"/><text x="79.4638%" y="991.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::clone::Clone&gt;::clone (4 samples, 0.01%)</title><rect x="79.2483%" y="965" width="0.0115%" height="15" fill="rgb(237,171,28)" fg:x="27580" fg:w="4"/><text x="79.4983%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.01%)</title><rect x="79.2483%" y="949" width="0.0115%" height="15" fill="rgb(228,44,26)" fg:x="27580" fg:w="4"/><text x="79.4983%" y="959.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.01%)</title><rect x="79.2483%" y="933" width="0.0115%" height="15" fill="rgb(216,210,27)" fg:x="27580" fg:w="4"/><text x="79.4983%" y="943.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.01%)</title><rect x="79.2483%" y="917" width="0.0115%" height="15" fill="rgb(252,10,17)" fg:x="27580" fg:w="4"/><text x="79.4983%" y="927.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.01%)</title><rect x="79.2483%" y="901" width="0.0115%" height="15" fill="rgb(214,172,30)" fg:x="27580" fg:w="4"/><text x="79.4983%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.01%)</title><rect x="79.2483%" y="885" width="0.0115%" height="15" fill="rgb(253,130,48)" fg:x="27580" fg:w="4"/><text x="79.4983%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.01%)</title><rect x="79.2483%" y="869" width="0.0115%" height="15" fill="rgb(226,99,43)" fg:x="27580" fg:w="4"/><text x="79.4983%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (4 samples, 0.01%)</title><rect x="79.2483%" y="853" width="0.0115%" height="15" fill="rgb(239,111,26)" fg:x="27580" fg:w="4"/><text x="79.4983%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.01%)</title><rect x="79.2483%" y="837" width="0.0115%" height="15" fill="rgb(240,27,53)" fg:x="27580" fg:w="4"/><text x="79.4983%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.01%)</title><rect x="79.2483%" y="821" width="0.0115%" height="15" fill="rgb(254,163,12)" fg:x="27580" fg:w="4"/><text x="79.4983%" y="831.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.01%)</title><rect x="79.2483%" y="805" width="0.0115%" height="15" fill="rgb(225,51,48)" fg:x="27580" fg:w="4"/><text x="79.4983%" y="815.50"></text></g><g><title>aptos_db::test_helper::gen_snapshot_version::{{closure}} (17 samples, 0.05%)</title><rect x="79.2138%" y="1093" width="0.0488%" height="15" fill="rgb(205,19,32)" fg:x="27568" fg:w="17"/><text x="79.4638%" y="1103.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (17 samples, 0.05%)</title><rect x="79.2138%" y="1077" width="0.0488%" height="15" fill="rgb(218,119,26)" fg:x="27568" fg:w="17"/><text x="79.4638%" y="1087.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (17 samples, 0.05%)</title><rect x="79.2138%" y="1061" width="0.0488%" height="15" fill="rgb(231,173,33)" fg:x="27568" fg:w="17"/><text x="79.4638%" y="1071.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (17 samples, 0.05%)</title><rect x="79.2138%" y="1045" width="0.0488%" height="15" fill="rgb(241,100,29)" fg:x="27568" fg:w="17"/><text x="79.4638%" y="1055.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (17 samples, 0.05%)</title><rect x="79.2138%" y="1029" width="0.0488%" height="15" fill="rgb(250,194,34)" fg:x="27568" fg:w="17"/><text x="79.4638%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (17 samples, 0.05%)</title><rect x="79.2138%" y="1013" width="0.0488%" height="15" fill="rgb(215,23,50)" fg:x="27568" fg:w="17"/><text x="79.4638%" y="1023.50"></text></g><g><title>core::clone::Clone::clone (17 samples, 0.05%)</title><rect x="79.2138%" y="997" width="0.0488%" height="15" fill="rgb(206,49,37)" fg:x="27568" fg:w="17"/><text x="79.4638%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::option::Option&lt;aptos_types::state_store::state_value::StateValue&gt;&gt;&gt; (4 samples, 0.01%)</title><rect x="79.2627%" y="965" width="0.0115%" height="15" fill="rgb(247,39,21)" fg:x="27585" fg:w="4"/><text x="79.5127%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;aptos_types::state_store::state_value::StateValue&gt;&gt; (4 samples, 0.01%)</title><rect x="79.2627%" y="949" width="0.0115%" height="15" fill="rgb(209,220,15)" fg:x="27585" fg:w="4"/><text x="79.5127%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::state_store::state_value::StateValue&gt; (4 samples, 0.01%)</title><rect x="79.2627%" y="933" width="0.0115%" height="15" fill="rgb(206,41,33)" fg:x="27585" fg:w="4"/><text x="79.5127%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::state_store::state_value::StateValueInner&gt; (4 samples, 0.01%)</title><rect x="79.2627%" y="917" width="0.0115%" height="15" fill="rgb(221,225,45)" fg:x="27585" fg:w="4"/><text x="79.5127%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (4 samples, 0.01%)</title><rect x="79.2627%" y="901" width="0.0115%" height="15" fill="rgb(216,27,18)" fg:x="27585" fg:w="4"/><text x="79.5127%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (4 samples, 0.01%)</title><rect x="79.2627%" y="885" width="0.0115%" height="15" fill="rgb(250,193,34)" fg:x="27585" fg:w="4"/><text x="79.5127%" y="895.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="79.2627%" y="869" width="0.0115%" height="15" fill="rgb(227,215,20)" fg:x="27585" fg:w="4"/><text x="79.5127%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.01%)</title><rect x="79.2627%" y="853" width="0.0115%" height="15" fill="rgb(242,211,27)" fg:x="27585" fg:w="4"/><text x="79.5127%" y="863.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.01%)</title><rect x="79.2627%" y="837" width="0.0115%" height="15" fill="rgb(229,190,30)" fg:x="27585" fg:w="4"/><text x="79.5127%" y="847.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::hash::Hash&gt;::hash (6 samples, 0.02%)</title><rect x="79.2828%" y="901" width="0.0172%" height="15" fill="rgb(253,31,29)" fg:x="27592" fg:w="6"/><text x="79.5328%" y="911.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::hash::Hash&gt;::hash (5 samples, 0.01%)</title><rect x="79.2857%" y="885" width="0.0144%" height="15" fill="rgb(229,177,52)" fg:x="27593" fg:w="5"/><text x="79.5357%" y="895.50"></text></g><g><title>&lt;move_core_types::account_address::AccountAddress as core::hash::Hash&gt;::hash (5 samples, 0.01%)</title><rect x="79.2857%" y="869" width="0.0144%" height="15" fill="rgb(226,88,8)" fg:x="27593" fg:w="5"/><text x="79.5357%" y="879.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T (5 samples, 0.01%)</title><rect x="79.2857%" y="853" width="0.0144%" height="15" fill="rgb(214,55,27)" fg:x="27593" fg:w="5"/><text x="79.5357%" y="863.50"></text></g><g><title> N]&gt;::hash (5 samples, 0.01%)</title><rect x="79.2857%" y="837" width="0.0144%" height="15" fill="rgb(233,202,5)" fg:x="27593" fg:w="5"/><text x="79.5357%" y="847.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (5 samples, 0.01%)</title><rect x="79.2857%" y="821" width="0.0144%" height="15" fill="rgb(251,49,30)" fg:x="27593" fg:w="5"/><text x="79.5357%" y="831.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (5 samples, 0.01%)</title><rect x="79.2857%" y="805" width="0.0144%" height="15" fill="rgb(235,18,52)" fg:x="27593" fg:w="5"/><text x="79.5357%" y="815.50"></text></g><g><title>&lt;std::hash::random::DefaultHasher as core::hash::Hasher&gt;::write (5 samples, 0.01%)</title><rect x="79.2857%" y="789" width="0.0144%" height="15" fill="rgb(250,111,51)" fg:x="27593" fg:w="5"/><text x="79.5357%" y="799.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (5 samples, 0.01%)</title><rect x="79.2857%" y="773" width="0.0144%" height="15" fill="rgb(218,13,25)" fg:x="27593" fg:w="5"/><text x="79.5357%" y="783.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.01%)</title><rect x="79.2857%" y="757" width="0.0144%" height="15" fill="rgb(248,96,7)" fg:x="27593" fg:w="5"/><text x="79.5357%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (5 samples, 0.01%)</title><rect x="79.2857%" y="741" width="0.0144%" height="15" fill="rgb(217,31,15)" fg:x="27593" fg:w="5"/><text x="79.5357%" y="751.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (5 samples, 0.01%)</title><rect x="79.2857%" y="725" width="0.0144%" height="15" fill="rgb(228,59,49)" fg:x="27593" fg:w="5"/><text x="79.5357%" y="735.50"></text></g><g><title>hashbrown::map::make_hash (12 samples, 0.03%)</title><rect x="79.2771%" y="949" width="0.0345%" height="15" fill="rgb(210,152,38)" fg:x="27590" fg:w="12"/><text x="79.5271%" y="959.50"></text></g><g><title>core::hash::BuildHasher::hash_one (12 samples, 0.03%)</title><rect x="79.2771%" y="933" width="0.0345%" height="15" fill="rgb(206,71,11)" fg:x="27590" fg:w="12"/><text x="79.5271%" y="943.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (11 samples, 0.03%)</title><rect x="79.2799%" y="917" width="0.0316%" height="15" fill="rgb(244,199,5)" fg:x="27591" fg:w="11"/><text x="79.5299%" y="927.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 0.01%)</title><rect x="79.3000%" y="901" width="0.0115%" height="15" fill="rgb(253,49,1)" fg:x="27598" fg:w="4"/><text x="79.5500%" y="911.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4 samples, 0.01%)</title><rect x="79.3000%" y="885" width="0.0115%" height="15" fill="rgb(225,206,40)" fg:x="27598" fg:w="4"/><text x="79.5500%" y="895.50"></text></g><g><title>&lt;aptos_db::AptosDB as aptos_block_executor::state_view::DbWriter&gt;::save_transactions (2,730 samples, 7.84%)</title><rect x="71.4930%" y="1333" width="7.8444%" height="15" fill="rgb(243,116,47)" fg:x="24881" fg:w="2730"/><text x="71.7430%" y="1343.50">&lt;aptos_db::..</text></g><g><title>aptos_db::gauged_api (2,730 samples, 7.84%)</title><rect x="71.4930%" y="1317" width="7.8444%" height="15" fill="rgb(219,225,16)" fg:x="24881" fg:w="2730"/><text x="71.7430%" y="1327.50">aptos_db::g..</text></g><g><title>&lt;aptos_db::AptosDB as aptos_block_executor::state_view::DbWriter&gt;::save_transactions::{{closure}} (2,730 samples, 7.84%)</title><rect x="71.4930%" y="1301" width="7.8444%" height="15" fill="rgb(233,29,47)" fg:x="24881" fg:w="2730"/><text x="71.7430%" y="1311.50">&lt;aptos_db::..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (43 samples, 0.12%)</title><rect x="79.2138%" y="1285" width="0.1236%" height="15" fill="rgb(250,179,18)" fg:x="27568" fg:w="43"/><text x="79.4638%" y="1295.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (43 samples, 0.12%)</title><rect x="79.2138%" y="1269" width="0.1236%" height="15" fill="rgb(215,176,6)" fg:x="27568" fg:w="43"/><text x="79.4638%" y="1279.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (43 samples, 0.12%)</title><rect x="79.2138%" y="1253" width="0.1236%" height="15" fill="rgb(214,117,39)" fg:x="27568" fg:w="43"/><text x="79.4638%" y="1263.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (43 samples, 0.12%)</title><rect x="79.2138%" y="1237" width="0.1236%" height="15" fill="rgb(247,183,36)" fg:x="27568" fg:w="43"/><text x="79.4638%" y="1247.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (43 samples, 0.12%)</title><rect x="79.2138%" y="1221" width="0.1236%" height="15" fill="rgb(237,200,3)" fg:x="27568" fg:w="43"/><text x="79.4638%" y="1231.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (43 samples, 0.12%)</title><rect x="79.2138%" y="1205" width="0.1236%" height="15" fill="rgb(212,220,24)" fg:x="27568" fg:w="43"/><text x="79.4638%" y="1215.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold (43 samples, 0.12%)</title><rect x="79.2138%" y="1189" width="0.1236%" height="15" fill="rgb(245,216,20)" fg:x="27568" fg:w="43"/><text x="79.4638%" y="1199.50"></text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_fold (43 samples, 0.12%)</title><rect x="79.2138%" y="1173" width="0.1236%" height="15" fill="rgb(219,124,7)" fg:x="27568" fg:w="43"/><text x="79.4638%" y="1183.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (43 samples, 0.12%)</title><rect x="79.2138%" y="1157" width="0.1236%" height="15" fill="rgb(227,167,8)" fg:x="27568" fg:w="43"/><text x="79.4638%" y="1167.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (43 samples, 0.12%)</title><rect x="79.2138%" y="1141" width="0.1236%" height="15" fill="rgb(241,37,2)" fg:x="27568" fg:w="43"/><text x="79.4638%" y="1151.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::fold (43 samples, 0.12%)</title><rect x="79.2138%" y="1125" width="0.1236%" height="15" fill="rgb(238,134,33)" fg:x="27568" fg:w="43"/><text x="79.4638%" y="1135.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (43 samples, 0.12%)</title><rect x="79.2138%" y="1109" width="0.1236%" height="15" fill="rgb(248,48,27)" fg:x="27568" fg:w="43"/><text x="79.4638%" y="1119.50"></text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_fold::flatten::{{closure}} (26 samples, 0.07%)</title><rect x="79.2627%" y="1093" width="0.0747%" height="15" fill="rgb(212,14,16)" fg:x="27585" fg:w="26"/><text x="79.5127%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::fold::flatten::{{closure}} (26 samples, 0.07%)</title><rect x="79.2627%" y="1077" width="0.0747%" height="15" fill="rgb(217,205,37)" fg:x="27585" fg:w="26"/><text x="79.5127%" y="1087.50"></text></g><g><title>&lt;std::collections::hash::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::fold (26 samples, 0.07%)</title><rect x="79.2627%" y="1061" width="0.0747%" height="15" fill="rgb(233,185,47)" fg:x="27585" fg:w="26"/><text x="79.5127%" y="1071.50"></text></g><g><title>&lt;hashbrown::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::fold (26 samples, 0.07%)</title><rect x="79.2627%" y="1045" width="0.0747%" height="15" fill="rgb(244,88,8)" fg:x="27585" fg:w="26"/><text x="79.5127%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (26 samples, 0.07%)</title><rect x="79.2627%" y="1029" width="0.0747%" height="15" fill="rgb(213,0,20)" fg:x="27585" fg:w="26"/><text x="79.5127%" y="1039.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (26 samples, 0.07%)</title><rect x="79.2627%" y="1013" width="0.0747%" height="15" fill="rgb(238,159,36)" fg:x="27585" fg:w="26"/><text x="79.5127%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (26 samples, 0.07%)</title><rect x="79.2627%" y="997" width="0.0747%" height="15" fill="rgb(253,173,17)" fg:x="27585" fg:w="26"/><text x="79.5127%" y="1007.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (26 samples, 0.07%)</title><rect x="79.2627%" y="981" width="0.0747%" height="15" fill="rgb(221,23,28)" fg:x="27585" fg:w="26"/><text x="79.5127%" y="991.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (22 samples, 0.06%)</title><rect x="79.2742%" y="965" width="0.0632%" height="15" fill="rgb(218,113,15)" fg:x="27589" fg:w="22"/><text x="79.5242%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot (9 samples, 0.03%)</title><rect x="79.3115%" y="949" width="0.0259%" height="15" fill="rgb(233,58,3)" fg:x="27602" fg:w="9"/><text x="79.5615%" y="959.50"></text></g><g><title>hashbrown::raw::RawTableInner::find_or_find_insert_slot_inner (9 samples, 0.03%)</title><rect x="79.3115%" y="933" width="0.0259%" height="15" fill="rgb(250,46,35)" fg:x="27602" fg:w="9"/><text x="79.5615%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find_or_find_insert_slot::{{closure}} (9 samples, 0.03%)</title><rect x="79.3115%" y="917" width="0.0259%" height="15" fill="rgb(210,169,11)" fg:x="27602" fg:w="9"/><text x="79.5615%" y="927.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (9 samples, 0.03%)</title><rect x="79.3115%" y="901" width="0.0259%" height="15" fill="rgb(246,88,19)" fg:x="27602" fg:w="9"/><text x="79.5615%" y="911.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (9 samples, 0.03%)</title><rect x="79.3115%" y="885" width="0.0259%" height="15" fill="rgb(206,81,49)" fg:x="27602" fg:w="9"/><text x="79.5615%" y="895.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (9 samples, 0.03%)</title><rect x="79.3115%" y="869" width="0.0259%" height="15" fill="rgb(232,144,18)" fg:x="27602" fg:w="9"/><text x="79.5615%" y="879.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::cmp::PartialEq&gt;::eq (9 samples, 0.03%)</title><rect x="79.3115%" y="853" width="0.0259%" height="15" fill="rgb(235,2,27)" fg:x="27602" fg:w="9"/><text x="79.5615%" y="863.50"></text></g><g><title>&lt;aptos_types::transaction::Transaction as core::clone::Clone&gt;::clone (16 samples, 0.05%)</title><rect x="79.3374%" y="805" width="0.0460%" height="15" fill="rgb(239,157,39)" fg:x="27611" fg:w="16"/><text x="79.5874%" y="815.50"></text></g><g><title>&lt;aptos_types::transaction::SignedTransaction as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="79.3690%" y="789" width="0.0144%" height="15" fill="rgb(220,11,17)" fg:x="27622" fg:w="5"/><text x="79.6190%" y="799.50"></text></g><g><title>&lt;aptos_types::transaction::RawTransaction as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="79.3690%" y="773" width="0.0144%" height="15" fill="rgb(243,94,50)" fg:x="27622" fg:w="5"/><text x="79.6190%" y="783.50"></text></g><g><title>&lt;aptos_types::transaction::TransactionPayload as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="79.3690%" y="757" width="0.0144%" height="15" fill="rgb(218,22,0)" fg:x="27622" fg:w="5"/><text x="79.6190%" y="767.50"></text></g><g><title>&lt;aptos_types::transaction::ethereum::EthTransactionPayload as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="79.3690%" y="741" width="0.0144%" height="15" fill="rgb(249,70,21)" fg:x="27622" fg:w="5"/><text x="79.6190%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (5 samples, 0.01%)</title><rect x="79.3690%" y="725" width="0.0144%" height="15" fill="rgb(245,111,46)" fg:x="27622" fg:w="5"/><text x="79.6190%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 0.01%)</title><rect x="79.3690%" y="709" width="0.0144%" height="15" fill="rgb(244,183,12)" fg:x="27622" fg:w="5"/><text x="79.6190%" y="719.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.01%)</title><rect x="79.3690%" y="693" width="0.0144%" height="15" fill="rgb(207,117,0)" fg:x="27622" fg:w="5"/><text x="79.6190%" y="703.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.01%)</title><rect x="79.3690%" y="677" width="0.0144%" height="15" fill="rgb(206,20,43)" fg:x="27622" fg:w="5"/><text x="79.6190%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5 samples, 0.01%)</title><rect x="79.3690%" y="661" width="0.0144%" height="15" fill="rgb(221,104,11)" fg:x="27622" fg:w="5"/><text x="79.6190%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.01%)</title><rect x="79.3690%" y="645" width="0.0144%" height="15" fill="rgb(254,36,50)" fg:x="27622" fg:w="5"/><text x="79.6190%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (5 samples, 0.01%)</title><rect x="79.3690%" y="629" width="0.0144%" height="15" fill="rgb(252,17,15)" fg:x="27622" fg:w="5"/><text x="79.6190%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.01%)</title><rect x="79.3690%" y="613" width="0.0144%" height="15" fill="rgb(219,129,43)" fg:x="27622" fg:w="5"/><text x="79.6190%" y="623.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.01%)</title><rect x="79.3690%" y="597" width="0.0144%" height="15" fill="rgb(205,34,45)" fg:x="27622" fg:w="5"/><text x="79.6190%" y="607.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.01%)</title><rect x="79.3690%" y="581" width="0.0144%" height="15" fill="rgb(251,201,32)" fg:x="27622" fg:w="5"/><text x="79.6190%" y="591.50"></text></g><g><title>__rust_alloc (4 samples, 0.01%)</title><rect x="79.3719%" y="565" width="0.0115%" height="15" fill="rgb(205,56,0)" fg:x="27623" fg:w="4"/><text x="79.6219%" y="575.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::clone::Clone&gt;::clone (6 samples, 0.02%)</title><rect x="79.3834%" y="725" width="0.0172%" height="15" fill="rgb(211,193,27)" fg:x="27627" fg:w="6"/><text x="79.6334%" y="735.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::clone::Clone&gt;::clone (6 samples, 0.02%)</title><rect x="79.3834%" y="709" width="0.0172%" height="15" fill="rgb(231,100,42)" fg:x="27627" fg:w="6"/><text x="79.6334%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.02%)</title><rect x="79.3834%" y="693" width="0.0172%" height="15" fill="rgb(245,85,27)" fg:x="27627" fg:w="6"/><text x="79.6334%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6 samples, 0.02%)</title><rect x="79.3834%" y="677" width="0.0172%" height="15" fill="rgb(241,76,24)" fg:x="27627" fg:w="6"/><text x="79.6334%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.02%)</title><rect x="79.3834%" y="661" width="0.0172%" height="15" fill="rgb(249,157,15)" fg:x="27627" fg:w="6"/><text x="79.6334%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.02%)</title><rect x="79.3834%" y="645" width="0.0172%" height="15" fill="rgb(222,218,25)" fg:x="27627" fg:w="6"/><text x="79.6334%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.02%)</title><rect x="79.3834%" y="629" width="0.0172%" height="15" fill="rgb(252,156,52)" fg:x="27627" fg:w="6"/><text x="79.6334%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.02%)</title><rect x="79.3834%" y="613" width="0.0172%" height="15" fill="rgb(211,185,7)" fg:x="27627" fg:w="6"/><text x="79.6334%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (6 samples, 0.02%)</title><rect x="79.3834%" y="597" width="0.0172%" height="15" fill="rgb(234,108,24)" fg:x="27627" fg:w="6"/><text x="79.6334%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.02%)</title><rect x="79.3834%" y="581" width="0.0172%" height="15" fill="rgb(227,218,2)" fg:x="27627" fg:w="6"/><text x="79.6334%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.02%)</title><rect x="79.3834%" y="565" width="0.0172%" height="15" fill="rgb(224,0,36)" fg:x="27627" fg:w="6"/><text x="79.6334%" y="575.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.02%)</title><rect x="79.3834%" y="549" width="0.0172%" height="15" fill="rgb(233,201,10)" fg:x="27627" fg:w="6"/><text x="79.6334%" y="559.50"></text></g><g><title>mallocx (5 samples, 0.01%)</title><rect x="79.3862%" y="533" width="0.0144%" height="15" fill="rgb(252,209,14)" fg:x="27628" fg:w="5"/><text x="79.6362%" y="543.50"></text></g><g><title>imalloc (5 samples, 0.01%)</title><rect x="79.3862%" y="517" width="0.0144%" height="15" fill="rgb(205,93,49)" fg:x="27628" fg:w="5"/><text x="79.6362%" y="527.50"></text></g><g><title>imalloc_body (5 samples, 0.01%)</title><rect x="79.3862%" y="501" width="0.0144%" height="15" fill="rgb(234,116,45)" fg:x="27628" fg:w="5"/><text x="79.6362%" y="511.50"></text></g><g><title>imalloc_no_sample (5 samples, 0.01%)</title><rect x="79.3862%" y="485" width="0.0144%" height="15" fill="rgb(248,89,35)" fg:x="27628" fg:w="5"/><text x="79.6362%" y="495.50"></text></g><g><title>iallocztm (5 samples, 0.01%)</title><rect x="79.3862%" y="469" width="0.0144%" height="15" fill="rgb(233,167,45)" fg:x="27628" fg:w="5"/><text x="79.6362%" y="479.50"></text></g><g><title>arena_malloc (5 samples, 0.01%)</title><rect x="79.3862%" y="453" width="0.0144%" height="15" fill="rgb(248,228,14)" fg:x="27628" fg:w="5"/><text x="79.6362%" y="463.50"></text></g><g><title>tcache_alloc_small (5 samples, 0.01%)</title><rect x="79.3862%" y="437" width="0.0144%" height="15" fill="rgb(246,91,14)" fg:x="27628" fg:w="5"/><text x="79.6362%" y="447.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (5 samples, 0.01%)</title><rect x="79.3862%" y="421" width="0.0144%" height="15" fill="rgb(227,142,5)" fg:x="27628" fg:w="5"/><text x="79.6362%" y="431.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (5 samples, 0.01%)</title><rect x="79.3862%" y="405" width="0.0144%" height="15" fill="rgb(221,63,33)" fg:x="27628" fg:w="5"/><text x="79.6362%" y="415.50"></text></g><g><title>arena_slab_reg_alloc (5 samples, 0.01%)</title><rect x="79.3862%" y="389" width="0.0144%" height="15" fill="rgb(233,49,0)" fg:x="27628" fg:w="5"/><text x="79.6362%" y="399.50"></text></g><g><title>bitmap_sfu (5 samples, 0.01%)</title><rect x="79.3862%" y="373" width="0.0144%" height="15" fill="rgb(251,115,38)" fg:x="27628" fg:w="5"/><text x="79.6362%" y="383.50"></text></g><g><title>__rust_alloc (4 samples, 0.01%)</title><rect x="79.4006%" y="549" width="0.0115%" height="15" fill="rgb(231,214,32)" fg:x="27633" fg:w="4"/><text x="79.6506%" y="559.50"></text></g><g><title>_rjem_je_extent_alloc_wrapper (6 samples, 0.02%)</title><rect x="79.4121%" y="405" width="0.0172%" height="15" fill="rgb(248,73,46)" fg:x="27637" fg:w="6"/><text x="79.6621%" y="415.50"></text></g><g><title>extent_alloc_retained (6 samples, 0.02%)</title><rect x="79.4121%" y="389" width="0.0172%" height="15" fill="rgb(237,156,4)" fg:x="27637" fg:w="6"/><text x="79.6621%" y="399.50"></text></g><g><title>extent_recycle (6 samples, 0.02%)</title><rect x="79.4121%" y="373" width="0.0172%" height="15" fill="rgb(227,132,2)" fg:x="27637" fg:w="6"/><text x="79.6621%" y="383.50"></text></g><g><title>extent_recycle_split (6 samples, 0.02%)</title><rect x="79.4121%" y="357" width="0.0172%" height="15" fill="rgb(248,161,9)" fg:x="27637" fg:w="6"/><text x="79.6621%" y="367.50"></text></g><g><title>extent_split_interior (5 samples, 0.01%)</title><rect x="79.4150%" y="341" width="0.0144%" height="15" fill="rgb(238,77,38)" fg:x="27638" fg:w="5"/><text x="79.6650%" y="351.50"></text></g><g><title>extent_split_impl (5 samples, 0.01%)</title><rect x="79.4150%" y="325" width="0.0144%" height="15" fill="rgb(222,166,40)" fg:x="27638" fg:w="5"/><text x="79.6650%" y="335.50"></text></g><g><title>_rjem_je_extent_avail_remove (4 samples, 0.01%)</title><rect x="79.4437%" y="325" width="0.0115%" height="15" fill="rgb(214,168,45)" fg:x="27648" fg:w="4"/><text x="79.6937%" y="335.50"></text></g><g><title>_rjem_je_extent_alloc (6 samples, 0.02%)</title><rect x="79.4437%" y="341" width="0.0172%" height="15" fill="rgb(226,64,37)" fg:x="27648" fg:w="6"/><text x="79.6937%" y="351.50"></text></g><g><title>_rjem_je_arena_extent_alloc_large (18 samples, 0.05%)</title><rect x="79.4121%" y="421" width="0.0517%" height="15" fill="rgb(232,210,43)" fg:x="27637" fg:w="18"/><text x="79.6621%" y="431.50"></text></g><g><title>extent_recycle (12 samples, 0.03%)</title><rect x="79.4293%" y="405" width="0.0345%" height="15" fill="rgb(214,76,33)" fg:x="27643" fg:w="12"/><text x="79.6793%" y="415.50"></text></g><g><title>extent_recycle_split (10 samples, 0.03%)</title><rect x="79.4351%" y="389" width="0.0287%" height="15" fill="rgb(210,78,5)" fg:x="27645" fg:w="10"/><text x="79.6851%" y="399.50"></text></g><g><title>extent_split_interior (9 samples, 0.03%)</title><rect x="79.4380%" y="373" width="0.0259%" height="15" fill="rgb(211,107,37)" fg:x="27646" fg:w="9"/><text x="79.6880%" y="383.50"></text></g><g><title>extent_split_impl (8 samples, 0.02%)</title><rect x="79.4408%" y="357" width="0.0230%" height="15" fill="rgb(249,67,16)" fg:x="27647" fg:w="8"/><text x="79.6908%" y="367.50"></text></g><g><title>_rjem_je_large_palloc (19 samples, 0.05%)</title><rect x="79.4121%" y="437" width="0.0546%" height="15" fill="rgb(222,114,31)" fg:x="27637" fg:w="19"/><text x="79.6621%" y="447.50"></text></g><g><title>tcache_alloc_large (20 samples, 0.06%)</title><rect x="79.4121%" y="453" width="0.0575%" height="15" fill="rgb(242,118,19)" fg:x="27637" fg:w="20"/><text x="79.6621%" y="463.50"></text></g><g><title>imalloc_no_sample (21 samples, 0.06%)</title><rect x="79.4121%" y="501" width="0.0603%" height="15" fill="rgb(223,115,1)" fg:x="27637" fg:w="21"/><text x="79.6621%" y="511.50"></text></g><g><title>iallocztm (21 samples, 0.06%)</title><rect x="79.4121%" y="485" width="0.0603%" height="15" fill="rgb(241,182,54)" fg:x="27637" fg:w="21"/><text x="79.6621%" y="495.50"></text></g><g><title>arena_malloc (21 samples, 0.06%)</title><rect x="79.4121%" y="469" width="0.0603%" height="15" fill="rgb(244,166,36)" fg:x="27637" fg:w="21"/><text x="79.6621%" y="479.50"></text></g><g><title>&lt;aptos_types::write_set::WriteOp as core::clone::Clone&gt;::clone (36 samples, 0.10%)</title><rect x="79.4006%" y="725" width="0.1034%" height="15" fill="rgb(241,52,43)" fg:x="27633" fg:w="36"/><text x="79.6506%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (36 samples, 0.10%)</title><rect x="79.4006%" y="709" width="0.1034%" height="15" fill="rgb(236,82,9)" fg:x="27633" fg:w="36"/><text x="79.6506%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (36 samples, 0.10%)</title><rect x="79.4006%" y="693" width="0.1034%" height="15" fill="rgb(241,119,0)" fg:x="27633" fg:w="36"/><text x="79.6506%" y="703.50"></text></g><g><title>alloc::slice::hack::to_vec (36 samples, 0.10%)</title><rect x="79.4006%" y="677" width="0.1034%" height="15" fill="rgb(221,19,22)" fg:x="27633" fg:w="36"/><text x="79.6506%" y="687.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (36 samples, 0.10%)</title><rect x="79.4006%" y="661" width="0.1034%" height="15" fill="rgb(254,144,35)" fg:x="27633" fg:w="36"/><text x="79.6506%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (36 samples, 0.10%)</title><rect x="79.4006%" y="645" width="0.1034%" height="15" fill="rgb(246,132,30)" fg:x="27633" fg:w="36"/><text x="79.6506%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (36 samples, 0.10%)</title><rect x="79.4006%" y="629" width="0.1034%" height="15" fill="rgb(234,69,28)" fg:x="27633" fg:w="36"/><text x="79.6506%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (36 samples, 0.10%)</title><rect x="79.4006%" y="613" width="0.1034%" height="15" fill="rgb(219,106,47)" fg:x="27633" fg:w="36"/><text x="79.6506%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (36 samples, 0.10%)</title><rect x="79.4006%" y="597" width="0.1034%" height="15" fill="rgb(218,79,24)" fg:x="27633" fg:w="36"/><text x="79.6506%" y="607.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (36 samples, 0.10%)</title><rect x="79.4006%" y="581" width="0.1034%" height="15" fill="rgb(225,26,21)" fg:x="27633" fg:w="36"/><text x="79.6506%" y="591.50"></text></g><g><title>alloc::alloc::alloc (36 samples, 0.10%)</title><rect x="79.4006%" y="565" width="0.1034%" height="15" fill="rgb(217,68,49)" fg:x="27633" fg:w="36"/><text x="79.6506%" y="575.50"></text></g><g><title>mallocx (32 samples, 0.09%)</title><rect x="79.4121%" y="549" width="0.0919%" height="15" fill="rgb(220,204,28)" fg:x="27637" fg:w="32"/><text x="79.6621%" y="559.50"></text></g><g><title>imalloc (32 samples, 0.09%)</title><rect x="79.4121%" y="533" width="0.0919%" height="15" fill="rgb(237,208,43)" fg:x="27637" fg:w="32"/><text x="79.6621%" y="543.50"></text></g><g><title>imalloc_body (32 samples, 0.09%)</title><rect x="79.4121%" y="517" width="0.0919%" height="15" fill="rgb(213,97,42)" fg:x="27637" fg:w="32"/><text x="79.6621%" y="527.50"></text></g><g><title>sz_size2index (11 samples, 0.03%)</title><rect x="79.4724%" y="501" width="0.0316%" height="15" fill="rgb(238,96,52)" fg:x="27658" fg:w="11"/><text x="79.7224%" y="511.50"></text></g><g><title>sz_size2index_lookup (11 samples, 0.03%)</title><rect x="79.4724%" y="485" width="0.0316%" height="15" fill="rgb(228,14,13)" fg:x="27658" fg:w="11"/><text x="79.7224%" y="495.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSet as core::clone::Clone&gt;::clone (85 samples, 0.24%)</title><rect x="79.3834%" y="805" width="0.2442%" height="15" fill="rgb(219,123,13)" fg:x="27627" fg:w="85"/><text x="79.6334%" y="815.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSetV0 as core::clone::Clone&gt;::clone (85 samples, 0.24%)</title><rect x="79.3834%" y="789" width="0.2442%" height="15" fill="rgb(216,144,17)" fg:x="27627" fg:w="85"/><text x="79.6334%" y="799.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSetMut as core::clone::Clone&gt;::clone (85 samples, 0.24%)</title><rect x="79.3834%" y="773" width="0.2442%" height="15" fill="rgb(230,228,29)" fg:x="27627" fg:w="85"/><text x="79.6334%" y="783.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone (85 samples, 0.24%)</title><rect x="79.3834%" y="757" width="0.2442%" height="15" fill="rgb(233,18,5)" fg:x="27627" fg:w="85"/><text x="79.6334%" y="767.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::clone::Clone&gt;::clone::clone_subtree (85 samples, 0.24%)</title><rect x="79.3834%" y="741" width="0.2442%" height="15" fill="rgb(233,197,12)" fg:x="27627" fg:w="85"/><text x="79.6334%" y="751.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;::new (43 samples, 0.12%)</title><rect x="79.5041%" y="725" width="0.1236%" height="15" fill="rgb(234,140,29)" fg:x="27669" fg:w="43"/><text x="79.7541%" y="735.50"></text></g><g><title>alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Owned,K,V,alloc::collections::btree::node::marker::Leaf&gt;::new_leaf (43 samples, 0.12%)</title><rect x="79.5041%" y="709" width="0.1236%" height="15" fill="rgb(233,113,19)" fg:x="27669" fg:w="43"/><text x="79.7541%" y="719.50"></text></g><g><title>alloc::collections::btree::node::LeafNode&lt;K,V&gt;::new (43 samples, 0.12%)</title><rect x="79.5041%" y="693" width="0.1236%" height="15" fill="rgb(246,209,13)" fg:x="27669" fg:w="43"/><text x="79.7541%" y="703.50"></text></g><g><title>alloc::boxed::Box&lt;T,A&gt;::new_uninit_in (43 samples, 0.12%)</title><rect x="79.5041%" y="677" width="0.1236%" height="15" fill="rgb(242,79,54)" fg:x="27669" fg:w="43"/><text x="79.7541%" y="687.50"></text></g><g><title>&lt;aptos_types::state_store::state_key::StateKey as core::clone::Clone&gt;::clone (7 samples, 0.02%)</title><rect x="79.7052%" y="709" width="0.0201%" height="15" fill="rgb(219,73,16)" fg:x="27739" fg:w="7"/><text x="79.9552%" y="719.50"></text></g><g><title>&lt;aptos_types::access_path::AccessPath as core::clone::Clone&gt;::clone (7 samples, 0.02%)</title><rect x="79.7052%" y="693" width="0.0201%" height="15" fill="rgb(224,52,10)" fg:x="27739" fg:w="7"/><text x="79.9552%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (7 samples, 0.02%)</title><rect x="79.7052%" y="677" width="0.0201%" height="15" fill="rgb(237,179,5)" fg:x="27739" fg:w="7"/><text x="79.9552%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (7 samples, 0.02%)</title><rect x="79.7052%" y="661" width="0.0201%" height="15" fill="rgb(231,20,6)" fg:x="27739" fg:w="7"/><text x="79.9552%" y="671.50"></text></g><g><title>alloc::slice::hack::to_vec (7 samples, 0.02%)</title><rect x="79.7052%" y="645" width="0.0201%" height="15" fill="rgb(253,171,45)" fg:x="27739" fg:w="7"/><text x="79.9552%" y="655.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (7 samples, 0.02%)</title><rect x="79.7052%" y="629" width="0.0201%" height="15" fill="rgb(230,75,49)" fg:x="27739" fg:w="7"/><text x="79.9552%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (7 samples, 0.02%)</title><rect x="79.7052%" y="613" width="0.0201%" height="15" fill="rgb(216,83,46)" fg:x="27739" fg:w="7"/><text x="79.9552%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (7 samples, 0.02%)</title><rect x="79.7052%" y="597" width="0.0201%" height="15" fill="rgb(236,56,9)" fg:x="27739" fg:w="7"/><text x="79.9552%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (7 samples, 0.02%)</title><rect x="79.7052%" y="581" width="0.0201%" height="15" fill="rgb(215,28,34)" fg:x="27739" fg:w="7"/><text x="79.9552%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.02%)</title><rect x="79.7052%" y="565" width="0.0201%" height="15" fill="rgb(230,222,20)" fg:x="27739" fg:w="7"/><text x="79.9552%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.02%)</title><rect x="79.7052%" y="549" width="0.0201%" height="15" fill="rgb(235,209,51)" fg:x="27739" fg:w="7"/><text x="79.9552%" y="559.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.02%)</title><rect x="79.7052%" y="533" width="0.0201%" height="15" fill="rgb(235,167,1)" fg:x="27739" fg:w="7"/><text x="79.9552%" y="543.50"></text></g><g><title>mallocx (5 samples, 0.01%)</title><rect x="79.7109%" y="517" width="0.0144%" height="15" fill="rgb(248,220,0)" fg:x="27741" fg:w="5"/><text x="79.9609%" y="527.50"></text></g><g><title>imalloc (5 samples, 0.01%)</title><rect x="79.7109%" y="501" width="0.0144%" height="15" fill="rgb(239,0,18)" fg:x="27741" fg:w="5"/><text x="79.9609%" y="511.50"></text></g><g><title>tsd_fetch (5 samples, 0.01%)</title><rect x="79.7109%" y="485" width="0.0144%" height="15" fill="rgb(229,179,11)" fg:x="27741" fg:w="5"/><text x="79.9609%" y="495.50"></text></g><g><title>tsd_fetch_impl (5 samples, 0.01%)</title><rect x="79.7109%" y="469" width="0.0144%" height="15" fill="rgb(226,116,53)" fg:x="27741" fg:w="5"/><text x="79.9609%" y="479.50"></text></g><g><title>_rjem_je_extent_alloc_wrapper (5 samples, 0.01%)</title><rect x="79.7339%" y="357" width="0.0144%" height="15" fill="rgb(218,1,49)" fg:x="27749" fg:w="5"/><text x="79.9839%" y="367.50"></text></g><g><title>extent_alloc_retained (5 samples, 0.01%)</title><rect x="79.7339%" y="341" width="0.0144%" height="15" fill="rgb(208,184,47)" fg:x="27749" fg:w="5"/><text x="79.9839%" y="351.50"></text></g><g><title>extent_recycle (5 samples, 0.01%)</title><rect x="79.7339%" y="325" width="0.0144%" height="15" fill="rgb(238,174,3)" fg:x="27749" fg:w="5"/><text x="79.9839%" y="335.50"></text></g><g><title>extent_recycle_split (4 samples, 0.01%)</title><rect x="79.7368%" y="309" width="0.0115%" height="15" fill="rgb(247,188,6)" fg:x="27750" fg:w="4"/><text x="79.9868%" y="319.50"></text></g><g><title>extent_split_interior (4 samples, 0.01%)</title><rect x="79.7368%" y="293" width="0.0115%" height="15" fill="rgb(211,165,46)" fg:x="27750" fg:w="4"/><text x="79.9868%" y="303.50"></text></g><g><title>extent_split_impl (4 samples, 0.01%)</title><rect x="79.7368%" y="277" width="0.0115%" height="15" fill="rgb(222,190,10)" fg:x="27750" fg:w="4"/><text x="79.9868%" y="287.50"></text></g><g><title>_rjem_je_extent_alloc (4 samples, 0.01%)</title><rect x="79.7655%" y="293" width="0.0115%" height="15" fill="rgb(206,185,3)" fg:x="27760" fg:w="4"/><text x="80.0155%" y="303.50"></text></g><g><title>tcache_alloc_large (16 samples, 0.05%)</title><rect x="79.7339%" y="405" width="0.0460%" height="15" fill="rgb(244,125,37)" fg:x="27749" fg:w="16"/><text x="79.9839%" y="415.50"></text></g><g><title>_rjem_je_large_palloc (16 samples, 0.05%)</title><rect x="79.7339%" y="389" width="0.0460%" height="15" fill="rgb(211,43,7)" fg:x="27749" fg:w="16"/><text x="79.9839%" y="399.50"></text></g><g><title>_rjem_je_arena_extent_alloc_large (16 samples, 0.05%)</title><rect x="79.7339%" y="373" width="0.0460%" height="15" fill="rgb(250,41,42)" fg:x="27749" fg:w="16"/><text x="79.9839%" y="383.50"></text></g><g><title>extent_recycle (9 samples, 0.03%)</title><rect x="79.7540%" y="357" width="0.0259%" height="15" fill="rgb(254,54,42)" fg:x="27756" fg:w="9"/><text x="80.0040%" y="367.50"></text></g><g><title>extent_recycle_split (5 samples, 0.01%)</title><rect x="79.7655%" y="341" width="0.0144%" height="15" fill="rgb(213,71,43)" fg:x="27760" fg:w="5"/><text x="80.0155%" y="351.50"></text></g><g><title>extent_split_interior (5 samples, 0.01%)</title><rect x="79.7655%" y="325" width="0.0144%" height="15" fill="rgb(249,3,44)" fg:x="27760" fg:w="5"/><text x="80.0155%" y="335.50"></text></g><g><title>extent_split_impl (5 samples, 0.01%)</title><rect x="79.7655%" y="309" width="0.0144%" height="15" fill="rgb(229,80,41)" fg:x="27760" fg:w="5"/><text x="80.0155%" y="319.50"></text></g><g><title>arena_bin_malloc_hard (4 samples, 0.01%)</title><rect x="79.7799%" y="357" width="0.0115%" height="15" fill="rgb(231,25,28)" fg:x="27765" fg:w="4"/><text x="80.0299%" y="367.50"></text></g><g><title>arena_bin_nonfull_slab_get (4 samples, 0.01%)</title><rect x="79.7799%" y="341" width="0.0115%" height="15" fill="rgb(208,79,48)" fg:x="27765" fg:w="4"/><text x="80.0299%" y="351.50"></text></g><g><title>arena_slab_alloc (4 samples, 0.01%)</title><rect x="79.7799%" y="325" width="0.0115%" height="15" fill="rgb(207,196,38)" fg:x="27765" fg:w="4"/><text x="80.0299%" y="335.50"></text></g><g><title>extent_recycle (4 samples, 0.01%)</title><rect x="79.7799%" y="309" width="0.0115%" height="15" fill="rgb(228,105,49)" fg:x="27765" fg:w="4"/><text x="80.0299%" y="319.50"></text></g><g><title>extent_recycle_extract (4 samples, 0.01%)</title><rect x="79.7799%" y="293" width="0.0115%" height="15" fill="rgb(237,99,15)" fg:x="27765" fg:w="4"/><text x="80.0299%" y="303.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as hashbrown::raw::RawTableClone&gt;::clone_from_spec (56 samples, 0.16%)</title><rect x="79.6448%" y="757" width="0.1609%" height="15" fill="rgb(224,207,46)" fg:x="27718" fg:w="56"/><text x="79.8948%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clone_from_impl (56 samples, 0.16%)</title><rect x="79.6448%" y="741" width="0.1609%" height="15" fill="rgb(249,117,50)" fg:x="27718" fg:w="56"/><text x="79.8948%" y="751.50"></text></g><g><title>core::clone::Clone::clone (35 samples, 0.10%)</title><rect x="79.7052%" y="725" width="0.1006%" height="15" fill="rgb(248,17,13)" fg:x="27739" fg:w="35"/><text x="79.9552%" y="735.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (28 samples, 0.08%)</title><rect x="79.7253%" y="709" width="0.0805%" height="15" fill="rgb(228,187,36)" fg:x="27746" fg:w="28"/><text x="79.9753%" y="719.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::StateValue as core::clone::Clone&gt;::clone (28 samples, 0.08%)</title><rect x="79.7253%" y="693" width="0.0805%" height="15" fill="rgb(234,132,20)" fg:x="27746" fg:w="28"/><text x="79.9753%" y="703.50"></text></g><g><title>&lt;aptos_types::state_store::state_value::StateValueInner as core::clone::Clone&gt;::clone (28 samples, 0.08%)</title><rect x="79.7253%" y="677" width="0.0805%" height="15" fill="rgb(209,170,46)" fg:x="27746" fg:w="28"/><text x="79.9753%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (28 samples, 0.08%)</title><rect x="79.7253%" y="661" width="0.0805%" height="15" fill="rgb(237,23,19)" fg:x="27746" fg:w="28"/><text x="79.9753%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (28 samples, 0.08%)</title><rect x="79.7253%" y="645" width="0.0805%" height="15" fill="rgb(227,21,26)" fg:x="27746" fg:w="28"/><text x="79.9753%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (28 samples, 0.08%)</title><rect x="79.7253%" y="629" width="0.0805%" height="15" fill="rgb(222,220,48)" fg:x="27746" fg:w="28"/><text x="79.9753%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (28 samples, 0.08%)</title><rect x="79.7253%" y="613" width="0.0805%" height="15" fill="rgb(214,9,16)" fg:x="27746" fg:w="28"/><text x="79.9753%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (28 samples, 0.08%)</title><rect x="79.7253%" y="597" width="0.0805%" height="15" fill="rgb(209,73,30)" fg:x="27746" fg:w="28"/><text x="79.9753%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (28 samples, 0.08%)</title><rect x="79.7253%" y="581" width="0.0805%" height="15" fill="rgb(207,20,33)" fg:x="27746" fg:w="28"/><text x="79.9753%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_allocate_in (28 samples, 0.08%)</title><rect x="79.7253%" y="565" width="0.0805%" height="15" fill="rgb(219,153,12)" fg:x="27746" fg:w="28"/><text x="79.9753%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (28 samples, 0.08%)</title><rect x="79.7253%" y="549" width="0.0805%" height="15" fill="rgb(235,97,25)" fg:x="27746" fg:w="28"/><text x="79.9753%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (28 samples, 0.08%)</title><rect x="79.7253%" y="533" width="0.0805%" height="15" fill="rgb(244,30,34)" fg:x="27746" fg:w="28"/><text x="79.9753%" y="543.50"></text></g><g><title>alloc::alloc::alloc (28 samples, 0.08%)</title><rect x="79.7253%" y="517" width="0.0805%" height="15" fill="rgb(214,106,45)" fg:x="27746" fg:w="28"/><text x="79.9753%" y="527.50"></text></g><g><title>mallocx (25 samples, 0.07%)</title><rect x="79.7339%" y="501" width="0.0718%" height="15" fill="rgb(226,41,9)" fg:x="27749" fg:w="25"/><text x="79.9839%" y="511.50"></text></g><g><title>imalloc (25 samples, 0.07%)</title><rect x="79.7339%" y="485" width="0.0718%" height="15" fill="rgb(253,139,29)" fg:x="27749" fg:w="25"/><text x="79.9839%" y="495.50"></text></g><g><title>imalloc_body (25 samples, 0.07%)</title><rect x="79.7339%" y="469" width="0.0718%" height="15" fill="rgb(213,205,39)" fg:x="27749" fg:w="25"/><text x="79.9839%" y="479.50"></text></g><g><title>imalloc_no_sample (25 samples, 0.07%)</title><rect x="79.7339%" y="453" width="0.0718%" height="15" fill="rgb(209,27,10)" fg:x="27749" fg:w="25"/><text x="79.9839%" y="463.50"></text></g><g><title>iallocztm (25 samples, 0.07%)</title><rect x="79.7339%" y="437" width="0.0718%" height="15" fill="rgb(249,142,16)" fg:x="27749" fg:w="25"/><text x="79.9839%" y="447.50"></text></g><g><title>arena_malloc (25 samples, 0.07%)</title><rect x="79.7339%" y="421" width="0.0718%" height="15" fill="rgb(242,65,12)" fg:x="27749" fg:w="25"/><text x="79.9839%" y="431.50"></text></g><g><title>tcache_alloc_small (9 samples, 0.03%)</title><rect x="79.7799%" y="405" width="0.0259%" height="15" fill="rgb(232,48,10)" fg:x="27765" fg:w="9"/><text x="80.0299%" y="415.50"></text></g><g><title>_rjem_je_tcache_alloc_small_hard (9 samples, 0.03%)</title><rect x="79.7799%" y="389" width="0.0259%" height="15" fill="rgb(253,67,19)" fg:x="27765" fg:w="9"/><text x="80.0299%" y="399.50"></text></g><g><title>_rjem_je_arena_tcache_fill_small (9 samples, 0.03%)</title><rect x="79.7799%" y="373" width="0.0259%" height="15" fill="rgb(227,93,29)" fg:x="27765" fg:w="9"/><text x="80.0299%" y="383.50"></text></g><g><title>arena_slab_reg_alloc (5 samples, 0.01%)</title><rect x="79.7914%" y="357" width="0.0144%" height="15" fill="rgb(226,189,53)" fg:x="27769" fg:w="5"/><text x="80.0414%" y="367.50"></text></g><g><title>bitmap_sfu (5 samples, 0.01%)</title><rect x="79.7914%" y="341" width="0.0144%" height="15" fill="rgb(223,224,1)" fg:x="27769" fg:w="5"/><text x="80.0414%" y="351.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (167 samples, 0.48%)</title><rect x="79.3374%" y="1333" width="0.4799%" height="15" fill="rgb(221,84,32)" fg:x="27611" fg:w="167"/><text x="79.5874%" y="1343.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (167 samples, 0.48%)</title><rect x="79.3374%" y="1317" width="0.4799%" height="15" fill="rgb(214,189,28)" fg:x="27611" fg:w="167"/><text x="79.5874%" y="1327.50"></text></g><g><title>core::iter::adapters::try_process (167 samples, 0.48%)</title><rect x="79.3374%" y="1301" width="0.4799%" height="15" fill="rgb(234,7,52)" fg:x="27611" fg:w="167"/><text x="79.5874%" y="1311.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (167 samples, 0.48%)</title><rect x="79.3374%" y="1285" width="0.4799%" height="15" fill="rgb(249,73,31)" fg:x="27611" fg:w="167"/><text x="79.5874%" y="1295.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (167 samples, 0.48%)</title><rect x="79.3374%" y="1269" width="0.4799%" height="15" fill="rgb(253,153,41)" fg:x="27611" fg:w="167"/><text x="79.5874%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (167 samples, 0.48%)</title><rect x="79.3374%" y="1253" width="0.4799%" height="15" fill="rgb(249,52,34)" fg:x="27611" fg:w="167"/><text x="79.5874%" y="1263.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (167 samples, 0.48%)</title><rect x="79.3374%" y="1237" width="0.4799%" height="15" fill="rgb(236,177,47)" fg:x="27611" fg:w="167"/><text x="79.5874%" y="1247.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (167 samples, 0.48%)</title><rect x="79.3374%" y="1221" width="0.4799%" height="15" fill="rgb(252,185,45)" fg:x="27611" fg:w="167"/><text x="79.5874%" y="1231.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (167 samples, 0.48%)</title><rect x="79.3374%" y="1205" width="0.4799%" height="15" fill="rgb(251,15,30)" fg:x="27611" fg:w="167"/><text x="79.5874%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (167 samples, 0.48%)</title><rect x="79.3374%" y="1189" width="0.4799%" height="15" fill="rgb(233,31,4)" fg:x="27611" fg:w="167"/><text x="79.5874%" y="1199.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (167 samples, 0.48%)</title><rect x="79.3374%" y="1173" width="0.4799%" height="15" fill="rgb(254,44,24)" fg:x="27611" fg:w="167"/><text x="79.5874%" y="1183.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (167 samples, 0.48%)</title><rect x="79.3374%" y="1157" width="0.4799%" height="15" fill="rgb(218,54,1)" fg:x="27611" fg:w="167"/><text x="79.5874%" y="1167.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (167 samples, 0.48%)</title><rect x="79.3374%" y="1141" width="0.4799%" height="15" fill="rgb(243,209,39)" fg:x="27611" fg:w="167"/><text x="79.5874%" y="1151.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (167 samples, 0.48%)</title><rect x="79.3374%" y="1125" width="0.4799%" height="15" fill="rgb(206,75,33)" fg:x="27611" fg:w="167"/><text x="79.5874%" y="1135.50"></text></g><g><title>aptos_executor::block_executor::BlockExecutorInner&lt;V&gt;::commit_blocks_ext::{{closure}} (167 samples, 0.48%)</title><rect x="79.3374%" y="1109" width="0.4799%" height="15" fill="rgb(223,108,18)" fg:x="27611" fg:w="167"/><text x="79.5874%" y="1119.50"></text></g><g><title>aptos_executor_types::executed_chunk::ExecutedChunk::transactions_to_commit (167 samples, 0.48%)</title><rect x="79.3374%" y="1093" width="0.4799%" height="15" fill="rgb(244,89,31)" fg:x="27611" fg:w="167"/><text x="79.5874%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (167 samples, 0.48%)</title><rect x="79.3374%" y="1077" width="0.4799%" height="15" fill="rgb(222,167,27)" fg:x="27611" fg:w="167"/><text x="79.5874%" y="1087.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (167 samples, 0.48%)</title><rect x="79.3374%" y="1061" width="0.4799%" height="15" fill="rgb(247,41,16)" fg:x="27611" fg:w="167"/><text x="79.5874%" y="1071.50"></text></g><g><title>core::iter::adapters::try_process (167 samples, 0.48%)</title><rect x="79.3374%" y="1045" width="0.4799%" height="15" fill="rgb(233,168,40)" fg:x="27611" fg:w="167"/><text x="79.5874%" y="1055.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (167 samples, 0.48%)</title><rect x="79.3374%" y="1029" width="0.4799%" height="15" fill="rgb(205,211,8)" fg:x="27611" fg:w="167"/><text x="79.5874%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (167 samples, 0.48%)</title><rect x="79.3374%" y="1013" width="0.4799%" height="15" fill="rgb(238,105,11)" fg:x="27611" fg:w="167"/><text x="79.5874%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (167 samples, 0.48%)</title><rect x="79.3374%" y="997" width="0.4799%" height="15" fill="rgb(223,142,52)" fg:x="27611" fg:w="167"/><text x="79.5874%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (167 samples, 0.48%)</title><rect x="79.3374%" y="981" width="0.4799%" height="15" fill="rgb(238,51,33)" fg:x="27611" fg:w="167"/><text x="79.5874%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (167 samples, 0.48%)</title><rect x="79.3374%" y="965" width="0.4799%" height="15" fill="rgb(231,188,43)" fg:x="27611" fg:w="167"/><text x="79.5874%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (167 samples, 0.48%)</title><rect x="79.3374%" y="949" width="0.4799%" height="15" fill="rgb(216,92,17)" fg:x="27611" fg:w="167"/><text x="79.5874%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (167 samples, 0.48%)</title><rect x="79.3374%" y="933" width="0.4799%" height="15" fill="rgb(228,2,40)" fg:x="27611" fg:w="167"/><text x="79.5874%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (167 samples, 0.48%)</title><rect x="79.3374%" y="917" width="0.4799%" height="15" fill="rgb(226,73,15)" fg:x="27611" fg:w="167"/><text x="79.5874%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (167 samples, 0.48%)</title><rect x="79.3374%" y="901" width="0.4799%" height="15" fill="rgb(227,66,46)" fg:x="27611" fg:w="167"/><text x="79.5874%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (167 samples, 0.48%)</title><rect x="79.3374%" y="885" width="0.4799%" height="15" fill="rgb(209,71,6)" fg:x="27611" fg:w="167"/><text x="79.5874%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (167 samples, 0.48%)</title><rect x="79.3374%" y="869" width="0.4799%" height="15" fill="rgb(246,100,25)" fg:x="27611" fg:w="167"/><text x="79.5874%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (167 samples, 0.48%)</title><rect x="79.3374%" y="853" width="0.4799%" height="15" fill="rgb(248,185,27)" fg:x="27611" fg:w="167"/><text x="79.5874%" y="863.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (167 samples, 0.48%)</title><rect x="79.3374%" y="837" width="0.4799%" height="15" fill="rgb(225,118,47)" fg:x="27611" fg:w="167"/><text x="79.5874%" y="847.50"></text></g><g><title>aptos_executor_types::executed_chunk::ExecutedChunk::transactions_to_commit::{{closure}} (167 samples, 0.48%)</title><rect x="79.3374%" y="821" width="0.4799%" height="15" fill="rgb(220,185,44)" fg:x="27611" fg:w="167"/><text x="79.5874%" y="831.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (66 samples, 0.19%)</title><rect x="79.6276%" y="805" width="0.1896%" height="15" fill="rgb(227,95,24)" fg:x="27712" fg:w="66"/><text x="79.8776%" y="815.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::clone::Clone&gt;::clone (66 samples, 0.19%)</title><rect x="79.6276%" y="789" width="0.1896%" height="15" fill="rgb(252,84,24)" fg:x="27712" fg:w="66"/><text x="79.8776%" y="799.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (60 samples, 0.17%)</title><rect x="79.6448%" y="773" width="0.1724%" height="15" fill="rgb(240,34,44)" fg:x="27718" fg:w="60"/><text x="79.8948%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::new_uninitialized (4 samples, 0.01%)</title><rect x="79.8058%" y="757" width="0.0115%" height="15" fill="rgb(209,72,54)" fg:x="27774" fg:w="4"/><text x="80.0558%" y="767.50"></text></g><g><title>hashbrown::raw::RawTableInner::new_uninitialized (4 samples, 0.01%)</title><rect x="79.8058%" y="741" width="0.0115%" height="15" fill="rgb(226,19,45)" fg:x="27774" fg:w="4"/><text x="80.0558%" y="751.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (4 samples, 0.01%)</title><rect x="79.8058%" y="725" width="0.0115%" height="15" fill="rgb(246,7,45)" fg:x="27774" fg:w="4"/><text x="80.0558%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.01%)</title><rect x="79.8058%" y="709" width="0.0115%" height="15" fill="rgb(225,45,2)" fg:x="27774" fg:w="4"/><text x="80.0558%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.01%)</title><rect x="79.8058%" y="693" width="0.0115%" height="15" fill="rgb(221,80,29)" fg:x="27774" fg:w="4"/><text x="80.0558%" y="703.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.01%)</title><rect x="79.8058%" y="677" width="0.0115%" height="15" fill="rgb(228,11,19)" fg:x="27774" fg:w="4"/><text x="80.0558%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;aptos_types::contract_event::ContractEvent&gt;&gt; (5 samples, 0.01%)</title><rect x="79.8201%" y="1173" width="0.0144%" height="15" fill="rgb(243,17,21)" fg:x="27779" fg:w="5"/><text x="80.0701%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.01%)</title><rect x="79.8201%" y="1157" width="0.0144%" height="15" fill="rgb(243,88,8)" fg:x="27779" fg:w="5"/><text x="80.0701%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::state_store::state_key::StateKey&gt; (15 samples, 0.04%)</title><rect x="79.8431%" y="1013" width="0.0431%" height="15" fill="rgb(214,17,9)" fg:x="27787" fg:w="15"/><text x="80.0931%" y="1023.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.02%)</title><rect x="79.8690%" y="997" width="0.0172%" height="15" fill="rgb(232,169,15)" fg:x="27796" fg:w="6"/><text x="80.1190%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.02%)</title><rect x="79.8690%" y="981" width="0.0172%" height="15" fill="rgb(232,86,53)" fg:x="27796" fg:w="6"/><text x="80.1190%" y="991.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.02%)</title><rect x="79.8690%" y="965" width="0.0172%" height="15" fill="rgb(222,100,4)" fg:x="27796" fg:w="6"/><text x="80.1190%" y="975.50"></text></g><g><title>sdallocx (5 samples, 0.01%)</title><rect x="79.8718%" y="949" width="0.0144%" height="15" fill="rgb(253,151,38)" fg:x="27797" fg:w="5"/><text x="80.1218%" y="959.50"></text></g><g><title>isfree (5 samples, 0.01%)</title><rect x="79.8718%" y="933" width="0.0144%" height="15" fill="rgb(238,215,29)" fg:x="27797" fg:w="5"/><text x="80.1218%" y="943.50"></text></g><g><title>isdalloct (5 samples, 0.01%)</title><rect x="79.8718%" y="917" width="0.0144%" height="15" fill="rgb(205,128,53)" fg:x="27797" fg:w="5"/><text x="80.1218%" y="927.50"></text></g><g><title>arena_sdalloc (5 samples, 0.01%)</title><rect x="79.8718%" y="901" width="0.0144%" height="15" fill="rgb(248,183,14)" fg:x="27797" fg:w="5"/><text x="80.1218%" y="911.50"></text></g><g><title>tcache_dalloc_small (5 samples, 0.01%)</title><rect x="79.8718%" y="885" width="0.0144%" height="15" fill="rgb(244,172,35)" fg:x="27797" fg:w="5"/><text x="80.1218%" y="895.50"></text></g><g><title>_rjem_je_large_dalloc_finish (8 samples, 0.02%)</title><rect x="79.8862%" y="821" width="0.0230%" height="15" fill="rgb(234,93,19)" fg:x="27802" fg:w="8"/><text x="80.1362%" y="831.50"></text></g><g><title>large_dalloc_finish_impl (8 samples, 0.02%)</title><rect x="79.8862%" y="805" width="0.0230%" height="15" fill="rgb(227,109,7)" fg:x="27802" fg:w="8"/><text x="80.1362%" y="815.50"></text></g><g><title>_rjem_je_arena_extents_dirty_dalloc (8 samples, 0.02%)</title><rect x="79.8862%" y="789" width="0.0230%" height="15" fill="rgb(233,136,54)" fg:x="27802" fg:w="8"/><text x="80.1362%" y="799.50"></text></g><g><title>extent_record (7 samples, 0.02%)</title><rect x="79.8891%" y="773" width="0.0201%" height="15" fill="rgb(233,19,40)" fg:x="27803" fg:w="7"/><text x="80.1391%" y="783.50"></text></g><g><title>extent_try_coalesce (7 samples, 0.02%)</title><rect x="79.8891%" y="757" width="0.0201%" height="15" fill="rgb(247,41,18)" fg:x="27803" fg:w="7"/><text x="80.1391%" y="767.50"></text></g><g><title>extent_coalesce (5 samples, 0.01%)</title><rect x="79.8948%" y="741" width="0.0144%" height="15" fill="rgb(220,34,34)" fg:x="27805" fg:w="5"/><text x="80.1448%" y="751.50"></text></g><g><title>extent_merge_impl (4 samples, 0.01%)</title><rect x="79.8977%" y="725" width="0.0115%" height="15" fill="rgb(222,135,32)" fg:x="27806" fg:w="4"/><text x="80.1477%" y="735.50"></text></g><g><title>tcache_dalloc_large (11 samples, 0.03%)</title><rect x="79.8862%" y="853" width="0.0316%" height="15" fill="rgb(214,80,19)" fg:x="27802" fg:w="11"/><text x="80.1362%" y="863.50"></text></g><g><title>_rjem_je_tcache_bin_flush_large (11 samples, 0.03%)</title><rect x="79.8862%" y="837" width="0.0316%" height="15" fill="rgb(234,54,46)" fg:x="27802" fg:w="11"/><text x="80.1362%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::write_set::WriteSet&gt; (31 samples, 0.09%)</title><rect x="79.8345%" y="1173" width="0.0891%" height="15" fill="rgb(251,48,23)" fg:x="27784" fg:w="31"/><text x="80.0845%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::write_set::WriteSetV0&gt; (31 samples, 0.09%)</title><rect x="79.8345%" y="1157" width="0.0891%" height="15" fill="rgb(254,109,52)" fg:x="27784" fg:w="31"/><text x="80.0845%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::write_set::WriteSetMut&gt; (31 samples, 0.09%)</title><rect x="79.8345%" y="1141" width="0.0891%" height="15" fill="rgb(240,186,19)" fg:x="27784" fg:w="31"/><text x="80.0845%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;aptos_types::state_store::state_key::StateKey,aptos_types::write_set::WriteOp&gt;&gt; (31 samples, 0.09%)</title><rect x="79.8345%" y="1125" width="0.0891%" height="15" fill="rgb(246,187,17)" fg:x="27784" fg:w="31"/><text x="80.0845%" y="1135.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.09%)</title><rect x="79.8345%" y="1109" width="0.0891%" height="15" fill="rgb(212,21,5)" fg:x="27784" fg:w="31"/><text x="80.0845%" y="1119.50"></text></g><g><title>core::mem::drop (31 samples, 0.09%)</title><rect x="79.8345%" y="1093" width="0.0891%" height="15" fill="rgb(225,185,18)" fg:x="27784" fg:w="31"/><text x="80.0845%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;aptos_types::state_store::state_key::StateKey,aptos_types::write_set::WriteOp&gt;&gt; (31 samples, 0.09%)</title><rect x="79.8345%" y="1077" width="0.0891%" height="15" fill="rgb(245,114,17)" fg:x="27784" fg:w="31"/><text x="80.0845%" y="1087.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.09%)</title><rect x="79.8345%" y="1061" width="0.0891%" height="15" fill="rgb(223,164,24)" fg:x="27784" fg:w="31"/><text x="80.0845%" y="1071.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (28 samples, 0.08%)</title><rect x="79.8431%" y="1045" width="0.0805%" height="15" fill="rgb(211,228,3)" fg:x="27787" fg:w="28"/><text x="80.0931%" y="1055.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (28 samples, 0.08%)</title><rect x="79.8431%" y="1029" width="0.0805%" height="15" fill="rgb(223,16,38)" fg:x="27787" fg:w="28"/><text x="80.0931%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::write_set::WriteOp&gt; (13 samples, 0.04%)</title><rect x="79.8862%" y="1013" width="0.0374%" height="15" fill="rgb(207,31,54)" fg:x="27802" fg:w="13"/><text x="80.1362%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (13 samples, 0.04%)</title><rect x="79.8862%" y="997" width="0.0374%" height="15" fill="rgb(220,39,11)" fg:x="27802" fg:w="13"/><text x="80.1362%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (13 samples, 0.04%)</title><rect x="79.8862%" y="981" width="0.0374%" height="15" fill="rgb(235,185,0)" fg:x="27802" fg:w="13"/><text x="80.1362%" y="991.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.04%)</title><rect x="79.8862%" y="965" width="0.0374%" height="15" fill="rgb(249,39,18)" fg:x="27802" fg:w="13"/><text x="80.1362%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.04%)</title><rect x="79.8862%" y="949" width="0.0374%" height="15" fill="rgb(240,110,33)" fg:x="27802" fg:w="13"/><text x="80.1362%" y="959.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.04%)</title><rect x="79.8862%" y="933" width="0.0374%" height="15" fill="rgb(210,92,42)" fg:x="27802" fg:w="13"/><text x="80.1362%" y="943.50"></text></g><g><title>sdallocx (13 samples, 0.04%)</title><rect x="79.8862%" y="917" width="0.0374%" height="15" fill="rgb(218,215,28)" fg:x="27802" fg:w="13"/><text x="80.1362%" y="927.50"></text></g><g><title>isfree (13 samples, 0.04%)</title><rect x="79.8862%" y="901" width="0.0374%" height="15" fill="rgb(238,215,36)" fg:x="27802" fg:w="13"/><text x="80.1362%" y="911.50"></text></g><g><title>isdalloct (13 samples, 0.04%)</title><rect x="79.8862%" y="885" width="0.0374%" height="15" fill="rgb(220,31,10)" fg:x="27802" fg:w="13"/><text x="80.1362%" y="895.50"></text></g><g><title>arena_sdalloc (13 samples, 0.04%)</title><rect x="79.8862%" y="869" width="0.0374%" height="15" fill="rgb(212,93,14)" fg:x="27802" fg:w="13"/><text x="80.1362%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::state_store::state_key::StateKey&gt; (25 samples, 0.07%)</title><rect x="79.9236%" y="1029" width="0.0718%" height="15" fill="rgb(254,207,2)" fg:x="27815" fg:w="25"/><text x="80.1736%" y="1039.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.03%)</title><rect x="79.9695%" y="1013" width="0.0259%" height="15" fill="rgb(205,57,44)" fg:x="27831" fg:w="9"/><text x="80.2195%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (9 samples, 0.03%)</title><rect x="79.9695%" y="997" width="0.0259%" height="15" fill="rgb(226,151,19)" fg:x="27831" fg:w="9"/><text x="80.2195%" y="1007.50"></text></g><g><title>alloc::alloc::dealloc (9 samples, 0.03%)</title><rect x="79.9695%" y="981" width="0.0259%" height="15" fill="rgb(230,72,30)" fg:x="27831" fg:w="9"/><text x="80.2195%" y="991.50"></text></g><g><title>sdallocx (9 samples, 0.03%)</title><rect x="79.9695%" y="965" width="0.0259%" height="15" fill="rgb(244,0,8)" fg:x="27831" fg:w="9"/><text x="80.2195%" y="975.50"></text></g><g><title>isfree (9 samples, 0.03%)</title><rect x="79.9695%" y="949" width="0.0259%" height="15" fill="rgb(230,192,6)" fg:x="27831" fg:w="9"/><text x="80.2195%" y="959.50"></text></g><g><title>isdalloct (9 samples, 0.03%)</title><rect x="79.9695%" y="933" width="0.0259%" height="15" fill="rgb(233,207,13)" fg:x="27831" fg:w="9"/><text x="80.2195%" y="943.50"></text></g><g><title>arena_sdalloc (9 samples, 0.03%)</title><rect x="79.9695%" y="917" width="0.0259%" height="15" fill="rgb(206,227,7)" fg:x="27831" fg:w="9"/><text x="80.2195%" y="927.50"></text></g><g><title>tcache_dalloc_small (6 samples, 0.02%)</title><rect x="79.9782%" y="901" width="0.0172%" height="15" fill="rgb(213,217,25)" fg:x="27834" fg:w="6"/><text x="80.2282%" y="911.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (6 samples, 0.02%)</title><rect x="79.9782%" y="885" width="0.0172%" height="15" fill="rgb(249,75,4)" fg:x="27834" fg:w="6"/><text x="80.2282%" y="895.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_junked_locked (6 samples, 0.02%)</title><rect x="79.9782%" y="869" width="0.0172%" height="15" fill="rgb(225,114,18)" fg:x="27834" fg:w="6"/><text x="80.2282%" y="879.50"></text></g><g><title>extent_coalesce (4 samples, 0.01%)</title><rect x="80.0040%" y="725" width="0.0115%" height="15" fill="rgb(211,162,40)" fg:x="27843" fg:w="4"/><text x="80.2540%" y="735.50"></text></g><g><title>_rjem_je_large_dalloc_finish (10 samples, 0.03%)</title><rect x="79.9954%" y="805" width="0.0287%" height="15" fill="rgb(206,49,29)" fg:x="27840" fg:w="10"/><text x="80.2454%" y="815.50"></text></g><g><title>large_dalloc_finish_impl (10 samples, 0.03%)</title><rect x="79.9954%" y="789" width="0.0287%" height="15" fill="rgb(244,8,6)" fg:x="27840" fg:w="10"/><text x="80.2454%" y="799.50"></text></g><g><title>_rjem_je_arena_extents_dirty_dalloc (10 samples, 0.03%)</title><rect x="79.9954%" y="773" width="0.0287%" height="15" fill="rgb(231,194,28)" fg:x="27840" fg:w="10"/><text x="80.2454%" y="783.50"></text></g><g><title>extent_record (10 samples, 0.03%)</title><rect x="79.9954%" y="757" width="0.0287%" height="15" fill="rgb(210,69,5)" fg:x="27840" fg:w="10"/><text x="80.2454%" y="767.50"></text></g><g><title>extent_try_coalesce (7 samples, 0.02%)</title><rect x="80.0040%" y="741" width="0.0201%" height="15" fill="rgb(216,186,12)" fg:x="27843" fg:w="7"/><text x="80.2540%" y="751.50"></text></g><g><title>tcache_dalloc_large (15 samples, 0.04%)</title><rect x="79.9954%" y="837" width="0.0431%" height="15" fill="rgb(238,61,15)" fg:x="27840" fg:w="15"/><text x="80.2454%" y="847.50"></text></g><g><title>_rjem_je_tcache_bin_flush_large (15 samples, 0.04%)</title><rect x="79.9954%" y="821" width="0.0431%" height="15" fill="rgb(226,104,1)" fg:x="27840" fg:w="15"/><text x="80.2454%" y="831.50"></text></g><g><title>iealloc (5 samples, 0.01%)</title><rect x="80.0241%" y="805" width="0.0144%" height="15" fill="rgb(229,128,15)" fg:x="27850" fg:w="5"/><text x="80.2741%" y="815.50"></text></g><g><title>rtree_extent_read (5 samples, 0.01%)</title><rect x="80.0241%" y="789" width="0.0144%" height="15" fill="rgb(247,110,15)" fg:x="27850" fg:w="5"/><text x="80.2741%" y="799.50"></text></g><g><title>rtree_leaf_elm_extent_read (5 samples, 0.01%)</title><rect x="80.0241%" y="773" width="0.0144%" height="15" fill="rgb(210,74,48)" fg:x="27850" fg:w="5"/><text x="80.2741%" y="783.50"></text></g><g><title>rtree_leaf_elm_bits_extent_get (5 samples, 0.01%)</title><rect x="80.0241%" y="757" width="0.0144%" height="15" fill="rgb(246,121,10)" fg:x="27850" fg:w="5"/><text x="80.2741%" y="767.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (45 samples, 0.13%)</title><rect x="79.9236%" y="1125" width="0.1293%" height="15" fill="rgb(214,156,37)" fg:x="27815" fg:w="45"/><text x="80.1736%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (45 samples, 0.13%)</title><rect x="79.9236%" y="1109" width="0.1293%" height="15" fill="rgb(214,210,34)" fg:x="27815" fg:w="45"/><text x="80.1736%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (45 samples, 0.13%)</title><rect x="79.9236%" y="1093" width="0.1293%" height="15" fill="rgb(237,93,35)" fg:x="27815" fg:w="45"/><text x="80.1736%" y="1103.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (45 samples, 0.13%)</title><rect x="79.9236%" y="1077" width="0.1293%" height="15" fill="rgb(206,36,8)" fg:x="27815" fg:w="45"/><text x="80.1736%" y="1087.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (45 samples, 0.13%)</title><rect x="79.9236%" y="1061" width="0.1293%" height="15" fill="rgb(208,151,12)" fg:x="27815" fg:w="45"/><text x="80.1736%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;(aptos_types::state_store::state_key::StateKey,core::option::Option&lt;aptos_types::state_store::state_value::StateValue&gt;)&gt; (45 samples, 0.13%)</title><rect x="79.9236%" y="1045" width="0.1293%" height="15" fill="rgb(225,133,52)" fg:x="27815" fg:w="45"/><text x="80.1736%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;aptos_types::state_store::state_value::StateValue&gt;&gt; (20 samples, 0.06%)</title><rect x="79.9954%" y="1029" width="0.0575%" height="15" fill="rgb(231,71,53)" fg:x="27840" fg:w="20"/><text x="80.2454%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::state_store::state_value::StateValue&gt; (20 samples, 0.06%)</title><rect x="79.9954%" y="1013" width="0.0575%" height="15" fill="rgb(243,76,21)" fg:x="27840" fg:w="20"/><text x="80.2454%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::state_store::state_value::StateValueInner&gt; (20 samples, 0.06%)</title><rect x="79.9954%" y="997" width="0.0575%" height="15" fill="rgb(252,144,3)" fg:x="27840" fg:w="20"/><text x="80.2454%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (20 samples, 0.06%)</title><rect x="79.9954%" y="981" width="0.0575%" height="15" fill="rgb(231,199,10)" fg:x="27840" fg:w="20"/><text x="80.2454%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (20 samples, 0.06%)</title><rect x="79.9954%" y="965" width="0.0575%" height="15" fill="rgb(215,18,11)" fg:x="27840" fg:w="20"/><text x="80.2454%" y="975.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20 samples, 0.06%)</title><rect x="79.9954%" y="949" width="0.0575%" height="15" fill="rgb(241,65,24)" fg:x="27840" fg:w="20"/><text x="80.2454%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (20 samples, 0.06%)</title><rect x="79.9954%" y="933" width="0.0575%" height="15" fill="rgb(251,192,38)" fg:x="27840" fg:w="20"/><text x="80.2454%" y="943.50"></text></g><g><title>alloc::alloc::dealloc (20 samples, 0.06%)</title><rect x="79.9954%" y="917" width="0.0575%" height="15" fill="rgb(205,9,35)" fg:x="27840" fg:w="20"/><text x="80.2454%" y="927.50"></text></g><g><title>sdallocx (20 samples, 0.06%)</title><rect x="79.9954%" y="901" width="0.0575%" height="15" fill="rgb(229,225,49)" fg:x="27840" fg:w="20"/><text x="80.2454%" y="911.50"></text></g><g><title>isfree (20 samples, 0.06%)</title><rect x="79.9954%" y="885" width="0.0575%" height="15" fill="rgb(207,125,39)" fg:x="27840" fg:w="20"/><text x="80.2454%" y="895.50"></text></g><g><title>isdalloct (20 samples, 0.06%)</title><rect x="79.9954%" y="869" width="0.0575%" height="15" fill="rgb(222,78,19)" fg:x="27840" fg:w="20"/><text x="80.2454%" y="879.50"></text></g><g><title>arena_sdalloc (20 samples, 0.06%)</title><rect x="79.9954%" y="853" width="0.0575%" height="15" fill="rgb(248,207,20)" fg:x="27840" fg:w="20"/><text x="80.2454%" y="863.50"></text></g><g><title>tcache_dalloc_small (5 samples, 0.01%)</title><rect x="80.0385%" y="837" width="0.0144%" height="15" fill="rgb(205,103,49)" fg:x="27855" fg:w="5"/><text x="80.2885%" y="847.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (5 samples, 0.01%)</title><rect x="80.0385%" y="821" width="0.0144%" height="15" fill="rgb(216,42,28)" fg:x="27855" fg:w="5"/><text x="80.2885%" y="831.50"></text></g><g><title>iealloc (5 samples, 0.01%)</title><rect x="80.0385%" y="805" width="0.0144%" height="15" fill="rgb(213,205,53)" fg:x="27855" fg:w="5"/><text x="80.2885%" y="815.50"></text></g><g><title>rtree_extent_read (5 samples, 0.01%)</title><rect x="80.0385%" y="789" width="0.0144%" height="15" fill="rgb(239,140,53)" fg:x="27855" fg:w="5"/><text x="80.2885%" y="799.50"></text></g><g><title>rtree_read (5 samples, 0.01%)</title><rect x="80.0385%" y="773" width="0.0144%" height="15" fill="rgb(248,95,9)" fg:x="27855" fg:w="5"/><text x="80.2885%" y="783.50"></text></g><g><title>rtree_leaf_elm_lookup (5 samples, 0.01%)</title><rect x="80.0385%" y="757" width="0.0144%" height="15" fill="rgb(254,58,47)" fg:x="27855" fg:w="5"/><text x="80.2885%" y="767.50"></text></g><g><title>rtree_subkey (5 samples, 0.01%)</title><rect x="80.0385%" y="741" width="0.0144%" height="15" fill="rgb(234,227,14)" fg:x="27855" fg:w="5"/><text x="80.2885%" y="751.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_junked_locked (4 samples, 0.01%)</title><rect x="80.0557%" y="1029" width="0.0115%" height="15" fill="rgb(205,192,45)" fg:x="27861" fg:w="4"/><text x="80.3057%" y="1039.50"></text></g><g><title>arena_dalloc_bin_locked_impl (4 samples, 0.01%)</title><rect x="80.0557%" y="1013" width="0.0115%" height="15" fill="rgb(253,187,31)" fg:x="27861" fg:w="4"/><text x="80.3057%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_executor_types::TransactionData&gt; (91 samples, 0.26%)</title><rect x="79.8173%" y="1189" width="0.2615%" height="15" fill="rgb(222,6,32)" fg:x="27778" fg:w="91"/><text x="80.0673%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;aptos_types::state_store::state_key::StateKey,core::option::Option&lt;aptos_types::state_store::state_value::StateValue&gt;&gt;&gt; (54 samples, 0.16%)</title><rect x="79.9236%" y="1173" width="0.1552%" height="15" fill="rgb(249,190,19)" fg:x="27815" fg:w="54"/><text x="80.1736%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;aptos_types::state_store::state_key::StateKey,core::option::Option&lt;aptos_types::state_store::state_value::StateValue&gt;,std::hash::random::RandomState&gt;&gt; (54 samples, 0.16%)</title><rect x="79.9236%" y="1157" width="0.1552%" height="15" fill="rgb(251,28,20)" fg:x="27815" fg:w="54"/><text x="80.1736%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(aptos_types::state_store::state_key::StateKey,core::option::Option&lt;aptos_types::state_store::state_value::StateValue&gt;)&gt;&gt; (54 samples, 0.16%)</title><rect x="79.9236%" y="1141" width="0.1552%" height="15" fill="rgb(210,223,40)" fg:x="27815" fg:w="54"/><text x="80.1736%" y="1151.50"></text></g><g><title>sdallocx (9 samples, 0.03%)</title><rect x="80.0529%" y="1125" width="0.0259%" height="15" fill="rgb(216,137,22)" fg:x="27860" fg:w="9"/><text x="80.3029%" y="1135.50"></text></g><g><title>isfree (8 samples, 0.02%)</title><rect x="80.0557%" y="1109" width="0.0230%" height="15" fill="rgb(247,39,34)" fg:x="27861" fg:w="8"/><text x="80.3057%" y="1119.50"></text></g><g><title>isdalloct (8 samples, 0.02%)</title><rect x="80.0557%" y="1093" width="0.0230%" height="15" fill="rgb(239,43,50)" fg:x="27861" fg:w="8"/><text x="80.3057%" y="1103.50"></text></g><g><title>arena_sdalloc (8 samples, 0.02%)</title><rect x="80.0557%" y="1077" width="0.0230%" height="15" fill="rgb(241,212,9)" fg:x="27861" fg:w="8"/><text x="80.3057%" y="1087.50"></text></g><g><title>tcache_dalloc_small (8 samples, 0.02%)</title><rect x="80.0557%" y="1061" width="0.0230%" height="15" fill="rgb(205,8,2)" fg:x="27861" fg:w="8"/><text x="80.3057%" y="1071.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (8 samples, 0.02%)</title><rect x="80.0557%" y="1045" width="0.0230%" height="15" fill="rgb(217,173,54)" fg:x="27861" fg:w="8"/><text x="80.3057%" y="1055.50"></text></g><g><title>extent_arena_get (4 samples, 0.01%)</title><rect x="80.0672%" y="1029" width="0.0115%" height="15" fill="rgb(208,149,52)" fg:x="27865" fg:w="4"/><text x="80.3172%" y="1039.50"></text></g><g><title>atomic_load_p (4 samples, 0.01%)</title><rect x="80.0672%" y="1013" width="0.0115%" height="15" fill="rgb(239,99,40)" fg:x="27865" fg:w="4"/><text x="80.3172%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;aptos_executor::components::block_tree::Block&gt;&gt; (93 samples, 0.27%)</title><rect x="79.8173%" y="1333" width="0.2672%" height="15" fill="rgb(233,214,26)" fg:x="27778" fg:w="93"/><text x="80.0673%" y="1343.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (93 samples, 0.27%)</title><rect x="79.8173%" y="1317" width="0.2672%" height="15" fill="rgb(231,225,37)" fg:x="27778" fg:w="93"/><text x="80.0673%" y="1327.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (93 samples, 0.27%)</title><rect x="79.8173%" y="1301" width="0.2672%" height="15" fill="rgb(252,55,35)" fg:x="27778" fg:w="93"/><text x="80.0673%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_executor::components::block_tree::Block&gt; (93 samples, 0.27%)</title><rect x="79.8173%" y="1285" width="0.2672%" height="15" fill="rgb(239,43,18)" fg:x="27778" fg:w="93"/><text x="80.0673%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_executor_types::executed_chunk::ExecutedChunk&gt; (93 samples, 0.27%)</title><rect x="79.8173%" y="1269" width="0.2672%" height="15" fill="rgb(251,125,49)" fg:x="27778" fg:w="93"/><text x="80.0673%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(aptos_types::transaction::Transaction,aptos_executor_types::TransactionData)&gt;&gt; (93 samples, 0.27%)</title><rect x="79.8173%" y="1253" width="0.2672%" height="15" fill="rgb(212,83,54)" fg:x="27778" fg:w="93"/><text x="80.0673%" y="1263.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (93 samples, 0.27%)</title><rect x="79.8173%" y="1237" width="0.2672%" height="15" fill="rgb(250,75,6)" fg:x="27778" fg:w="93"/><text x="80.0673%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;[(aptos_types::transaction::Transaction,aptos_executor_types::TransactionData)]&gt; (93 samples, 0.27%)</title><rect x="79.8173%" y="1221" width="0.2672%" height="15" fill="rgb(252,36,40)" fg:x="27778" fg:w="93"/><text x="80.0673%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;(aptos_types::transaction::Transaction,aptos_executor_types::TransactionData)&gt; (93 samples, 0.27%)</title><rect x="79.8173%" y="1205" width="0.2672%" height="15" fill="rgb(230,91,51)" fg:x="27778" fg:w="93"/><text x="80.0673%" y="1215.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (4 samples, 0.01%)</title><rect x="80.0931%" y="1141" width="0.0115%" height="15" fill="rgb(212,92,28)" fg:x="27874" fg:w="4"/><text x="80.3431%" y="1151.50"></text></g><g><title>sz_size2index (4 samples, 0.01%)</title><rect x="80.1247%" y="949" width="0.0115%" height="15" fill="rgb(227,13,22)" fg:x="27885" fg:w="4"/><text x="80.3747%" y="959.50"></text></g><g><title>sz_size2index_compute (4 samples, 0.01%)</title><rect x="80.1247%" y="933" width="0.0115%" height="15" fill="rgb(239,204,32)" fg:x="27885" fg:w="4"/><text x="80.3747%" y="943.50"></text></g><g><title>extent_lock_from_addr (5 samples, 0.01%)</title><rect x="80.1448%" y="837" width="0.0144%" height="15" fill="rgb(228,49,41)" fg:x="27892" fg:w="5"/><text x="80.3948%" y="847.50"></text></g><g><title>extent_rtree_leaf_elm_try_lock (5 samples, 0.01%)</title><rect x="80.1448%" y="821" width="0.0144%" height="15" fill="rgb(206,95,6)" fg:x="27892" fg:w="5"/><text x="80.3948%" y="831.50"></text></g><g><title>extent_lock (5 samples, 0.01%)</title><rect x="80.1448%" y="805" width="0.0144%" height="15" fill="rgb(251,20,14)" fg:x="27892" fg:w="5"/><text x="80.3948%" y="815.50"></text></g><g><title>mutex_pool_lock (5 samples, 0.01%)</title><rect x="80.1448%" y="789" width="0.0144%" height="15" fill="rgb(214,99,28)" fg:x="27892" fg:w="5"/><text x="80.3948%" y="799.50"></text></g><g><title>mutex_pool_mutex (5 samples, 0.01%)</title><rect x="80.1448%" y="773" width="0.0144%" height="15" fill="rgb(239,122,54)" fg:x="27892" fg:w="5"/><text x="80.3948%" y="783.50"></text></g><g><title>hash (5 samples, 0.01%)</title><rect x="80.1448%" y="757" width="0.0144%" height="15" fill="rgb(218,217,46)" fg:x="27892" fg:w="5"/><text x="80.3948%" y="767.50"></text></g><g><title>hash_x64_128 (5 samples, 0.01%)</title><rect x="80.1448%" y="741" width="0.0144%" height="15" fill="rgb(249,106,28)" fg:x="27892" fg:w="5"/><text x="80.3948%" y="751.50"></text></g><g><title>_rjem_je_large_dalloc_finish (13 samples, 0.04%)</title><rect x="80.1362%" y="917" width="0.0374%" height="15" fill="rgb(250,158,18)" fg:x="27889" fg:w="13"/><text x="80.3862%" y="927.50"></text></g><g><title>large_dalloc_finish_impl (13 samples, 0.04%)</title><rect x="80.1362%" y="901" width="0.0374%" height="15" fill="rgb(226,137,29)" fg:x="27889" fg:w="13"/><text x="80.3862%" y="911.50"></text></g><g><title>_rjem_je_arena_extents_dirty_dalloc (13 samples, 0.04%)</title><rect x="80.1362%" y="885" width="0.0374%" height="15" fill="rgb(210,188,1)" fg:x="27889" fg:w="13"/><text x="80.3862%" y="895.50"></text></g><g><title>extent_record (13 samples, 0.04%)</title><rect x="80.1362%" y="869" width="0.0374%" height="15" fill="rgb(227,84,42)" fg:x="27889" fg:w="13"/><text x="80.3862%" y="879.50"></text></g><g><title>extent_try_coalesce (12 samples, 0.03%)</title><rect x="80.1391%" y="853" width="0.0345%" height="15" fill="rgb(222,147,48)" fg:x="27890" fg:w="12"/><text x="80.3891%" y="863.50"></text></g><g><title>extent_unlock (5 samples, 0.01%)</title><rect x="80.1592%" y="837" width="0.0144%" height="15" fill="rgb(241,150,43)" fg:x="27897" fg:w="5"/><text x="80.4092%" y="847.50"></text></g><g><title>mutex_pool_unlock (5 samples, 0.01%)</title><rect x="80.1592%" y="821" width="0.0144%" height="15" fill="rgb(206,139,52)" fg:x="27897" fg:w="5"/><text x="80.4092%" y="831.50"></text></g><g><title>mutex_pool_mutex (5 samples, 0.01%)</title><rect x="80.1592%" y="805" width="0.0144%" height="15" fill="rgb(230,63,14)" fg:x="27897" fg:w="5"/><text x="80.4092%" y="815.50"></text></g><g><title>hash (5 samples, 0.01%)</title><rect x="80.1592%" y="789" width="0.0144%" height="15" fill="rgb(247,8,20)" fg:x="27897" fg:w="5"/><text x="80.4092%" y="799.50"></text></g><g><title>hash_x64_128 (5 samples, 0.01%)</title><rect x="80.1592%" y="773" width="0.0144%" height="15" fill="rgb(213,115,4)" fg:x="27897" fg:w="5"/><text x="80.4092%" y="783.50"></text></g><g><title>hash_fmix_64 (5 samples, 0.01%)</title><rect x="80.1592%" y="757" width="0.0144%" height="15" fill="rgb(241,79,49)" fg:x="27897" fg:w="5"/><text x="80.4092%" y="767.50"></text></g><g><title>tcache_dalloc_large (15 samples, 0.04%)</title><rect x="80.1362%" y="949" width="0.0431%" height="15" fill="rgb(222,42,35)" fg:x="27889" fg:w="15"/><text x="80.3862%" y="959.50"></text></g><g><title>_rjem_je_tcache_bin_flush_large (15 samples, 0.04%)</title><rect x="80.1362%" y="933" width="0.0431%" height="15" fill="rgb(247,59,23)" fg:x="27889" fg:w="15"/><text x="80.3862%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::write_set::WriteSet&gt; (35 samples, 0.10%)</title><rect x="80.0931%" y="1269" width="0.1006%" height="15" fill="rgb(247,93,18)" fg:x="27874" fg:w="35"/><text x="80.3431%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::write_set::WriteSetV0&gt; (35 samples, 0.10%)</title><rect x="80.0931%" y="1253" width="0.1006%" height="15" fill="rgb(249,107,47)" fg:x="27874" fg:w="35"/><text x="80.3431%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::write_set::WriteSetMut&gt; (35 samples, 0.10%)</title><rect x="80.0931%" y="1237" width="0.1006%" height="15" fill="rgb(219,27,1)" fg:x="27874" fg:w="35"/><text x="80.3431%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::BTreeMap&lt;aptos_types::state_store::state_key::StateKey,aptos_types::write_set::WriteOp&gt;&gt; (35 samples, 0.10%)</title><rect x="80.0931%" y="1221" width="0.1006%" height="15" fill="rgb(217,82,32)" fg:x="27874" fg:w="35"/><text x="80.3431%" y="1231.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 0.10%)</title><rect x="80.0931%" y="1205" width="0.1006%" height="15" fill="rgb(250,129,47)" fg:x="27874" fg:w="35"/><text x="80.3431%" y="1215.50"></text></g><g><title>core::mem::drop (35 samples, 0.10%)</title><rect x="80.0931%" y="1189" width="0.1006%" height="15" fill="rgb(253,88,35)" fg:x="27874" fg:w="35"/><text x="80.3431%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;aptos_types::state_store::state_key::StateKey,aptos_types::write_set::WriteOp&gt;&gt; (35 samples, 0.10%)</title><rect x="80.0931%" y="1173" width="0.1006%" height="15" fill="rgb(245,221,14)" fg:x="27874" fg:w="35"/><text x="80.3431%" y="1183.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 0.10%)</title><rect x="80.0931%" y="1157" width="0.1006%" height="15" fill="rgb(217,119,54)" fg:x="27874" fg:w="35"/><text x="80.3431%" y="1167.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,NodeType&gt;,alloc::collections::btree::node::marker::KV&gt;::drop_key_val (31 samples, 0.09%)</title><rect x="80.1046%" y="1141" width="0.0891%" height="15" fill="rgb(247,128,31)" fg:x="27878" fg:w="31"/><text x="80.3546%" y="1151.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (31 samples, 0.09%)</title><rect x="80.1046%" y="1125" width="0.0891%" height="15" fill="rgb(211,99,22)" fg:x="27878" fg:w="31"/><text x="80.3546%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::write_set::WriteOp&gt; (31 samples, 0.09%)</title><rect x="80.1046%" y="1109" width="0.0891%" height="15" fill="rgb(212,20,17)" fg:x="27878" fg:w="31"/><text x="80.3546%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (25 samples, 0.07%)</title><rect x="80.1218%" y="1093" width="0.0718%" height="15" fill="rgb(209,159,29)" fg:x="27884" fg:w="25"/><text x="80.3718%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (25 samples, 0.07%)</title><rect x="80.1218%" y="1077" width="0.0718%" height="15" fill="rgb(222,177,53)" fg:x="27884" fg:w="25"/><text x="80.3718%" y="1087.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.07%)</title><rect x="80.1218%" y="1061" width="0.0718%" height="15" fill="rgb(234,46,43)" fg:x="27884" fg:w="25"/><text x="80.3718%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (25 samples, 0.07%)</title><rect x="80.1218%" y="1045" width="0.0718%" height="15" fill="rgb(208,108,14)" fg:x="27884" fg:w="25"/><text x="80.3718%" y="1055.50"></text></g><g><title>alloc::alloc::dealloc (25 samples, 0.07%)</title><rect x="80.1218%" y="1029" width="0.0718%" height="15" fill="rgb(226,78,53)" fg:x="27884" fg:w="25"/><text x="80.3718%" y="1039.50"></text></g><g><title>sdallocx (24 samples, 0.07%)</title><rect x="80.1247%" y="1013" width="0.0690%" height="15" fill="rgb(230,20,41)" fg:x="27885" fg:w="24"/><text x="80.3747%" y="1023.50"></text></g><g><title>isfree (24 samples, 0.07%)</title><rect x="80.1247%" y="997" width="0.0690%" height="15" fill="rgb(213,195,35)" fg:x="27885" fg:w="24"/><text x="80.3747%" y="1007.50"></text></g><g><title>isdalloct (24 samples, 0.07%)</title><rect x="80.1247%" y="981" width="0.0690%" height="15" fill="rgb(242,62,36)" fg:x="27885" fg:w="24"/><text x="80.3747%" y="991.50"></text></g><g><title>arena_sdalloc (24 samples, 0.07%)</title><rect x="80.1247%" y="965" width="0.0690%" height="15" fill="rgb(222,210,37)" fg:x="27885" fg:w="24"/><text x="80.3747%" y="975.50"></text></g><g><title>tcache_dalloc_small (5 samples, 0.01%)</title><rect x="80.1793%" y="949" width="0.0144%" height="15" fill="rgb(232,107,19)" fg:x="27904" fg:w="5"/><text x="80.4293%" y="959.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (5 samples, 0.01%)</title><rect x="80.1793%" y="933" width="0.0144%" height="15" fill="rgb(235,85,17)" fg:x="27904" fg:w="5"/><text x="80.4293%" y="943.50"></text></g><g><title>_rjem_je_arena_dalloc_bin_junked_locked (5 samples, 0.01%)</title><rect x="80.2511%" y="965" width="0.0144%" height="15" fill="rgb(219,195,31)" fg:x="27929" fg:w="5"/><text x="80.5011%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::state_store::state_key::StateKey&gt; (30 samples, 0.09%)</title><rect x="80.1937%" y="1125" width="0.0862%" height="15" fill="rgb(231,183,30)" fg:x="27909" fg:w="30"/><text x="80.4437%" y="1135.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.04%)</title><rect x="80.2425%" y="1109" width="0.0374%" height="15" fill="rgb(212,0,11)" fg:x="27926" fg:w="13"/><text x="80.4925%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.04%)</title><rect x="80.2425%" y="1093" width="0.0374%" height="15" fill="rgb(249,53,54)" fg:x="27926" fg:w="13"/><text x="80.4925%" y="1103.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.04%)</title><rect x="80.2425%" y="1077" width="0.0374%" height="15" fill="rgb(211,118,13)" fg:x="27926" fg:w="13"/><text x="80.4925%" y="1087.50"></text></g><g><title>sdallocx (10 samples, 0.03%)</title><rect x="80.2511%" y="1061" width="0.0287%" height="15" fill="rgb(237,42,9)" fg:x="27929" fg:w="10"/><text x="80.5011%" y="1071.50"></text></g><g><title>isfree (10 samples, 0.03%)</title><rect x="80.2511%" y="1045" width="0.0287%" height="15" fill="rgb(227,68,32)" fg:x="27929" fg:w="10"/><text x="80.5011%" y="1055.50"></text></g><g><title>isdalloct (10 samples, 0.03%)</title><rect x="80.2511%" y="1029" width="0.0287%" height="15" fill="rgb(238,10,7)" fg:x="27929" fg:w="10"/><text x="80.5011%" y="1039.50"></text></g><g><title>arena_sdalloc (10 samples, 0.03%)</title><rect x="80.2511%" y="1013" width="0.0287%" height="15" fill="rgb(224,42,12)" fg:x="27929" fg:w="10"/><text x="80.5011%" y="1023.50"></text></g><g><title>tcache_dalloc_small (10 samples, 0.03%)</title><rect x="80.2511%" y="997" width="0.0287%" height="15" fill="rgb(252,190,5)" fg:x="27929" fg:w="10"/><text x="80.5011%" y="1007.50"></text></g><g><title>_rjem_je_tcache_bin_flush_small (10 samples, 0.03%)</title><rect x="80.2511%" y="981" width="0.0287%" height="15" fill="rgb(220,214,39)" fg:x="27929" fg:w="10"/><text x="80.5011%" y="991.50"></text></g><g><title>extent_arena_get (5 samples, 0.01%)</title><rect x="80.2655%" y="965" width="0.0144%" height="15" fill="rgb(247,98,4)" fg:x="27934" fg:w="5"/><text x="80.5155%" y="975.50"></text></g><g><title>atomic_load_p (5 samples, 0.01%)</title><rect x="80.2655%" y="949" width="0.0144%" height="15" fill="rgb(211,60,12)" fg:x="27934" fg:w="5"/><text x="80.5155%" y="959.50"></text></g><g><title>inallocx (4 samples, 0.01%)</title><rect x="80.2827%" y="981" width="0.0115%" height="15" fill="rgb(224,42,10)" fg:x="27940" fg:w="4"/><text x="80.5327%" y="991.50"></text></g><g><title>sz_s2u (4 samples, 0.01%)</title><rect x="80.2827%" y="965" width="0.0115%" height="15" fill="rgb(217,167,4)" fg:x="27940" fg:w="4"/><text x="80.5327%" y="975.50"></text></g><g><title>sz_s2u_lookup (4 samples, 0.01%)</title><rect x="80.2827%" y="949" width="0.0115%" height="15" fill="rgb(253,18,17)" fg:x="27940" fg:w="4"/><text x="80.5327%" y="959.50"></text></g><g><title>sz_size2index_lookup (4 samples, 0.01%)</title><rect x="80.2827%" y="933" width="0.0115%" height="15" fill="rgb(249,186,44)" fg:x="27940" fg:w="4"/><text x="80.5327%" y="943.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 0.11%)</title><rect x="80.1937%" y="1221" width="0.1092%" height="15" fill="rgb(254,124,54)" fg:x="27909" fg:w="38"/><text x="80.4437%" y="1231.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_inner_table (38 samples, 0.11%)</title><rect x="80.1937%" y="1205" width="0.1092%" height="15" fill="rgb(220,124,39)" fg:x="27909" fg:w="38"/><text x="80.4437%" y="1215.50"></text></g><g><title>hashbrown::raw::RawTableInner::drop_elements (38 samples, 0.11%)</title><rect x="80.1937%" y="1189" width="0.1092%" height="15" fill="rgb(225,96,46)" fg:x="27909" fg:w="38"/><text x="80.4437%" y="1199.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (38 samples, 0.11%)</title><rect x="80.1937%" y="1173" width="0.1092%" height="15" fill="rgb(221,106,12)" fg:x="27909" fg:w="38"/><text x="80.4437%" y="1183.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (38 samples, 0.11%)</title><rect x="80.1937%" y="1157" width="0.1092%" height="15" fill="rgb(227,133,23)" fg:x="27909" fg:w="38"/><text x="80.4437%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;(aptos_types::state_store::state_key::StateKey,core::option::Option&lt;aptos_types::state_store::state_value::StateValue&gt;)&gt; (38 samples, 0.11%)</title><rect x="80.1937%" y="1141" width="0.1092%" height="15" fill="rgb(216,44,52)" fg:x="27909" fg:w="38"/><text x="80.4437%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;aptos_types::state_store::state_value::StateValue&gt;&gt; (8 samples, 0.02%)</title><rect x="80.2799%" y="1125" width="0.0230%" height="15" fill="rgb(239,149,7)" fg:x="27939" fg:w="8"/><text x="80.5299%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::state_store::state_value::StateValue&gt; (8 samples, 0.02%)</title><rect x="80.2799%" y="1109" width="0.0230%" height="15" fill="rgb(211,157,31)" fg:x="27939" fg:w="8"/><text x="80.5299%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::state_store::state_value::StateValueInner&gt; (8 samples, 0.02%)</title><rect x="80.2799%" y="1093" width="0.0230%" height="15" fill="rgb(206,215,22)" fg:x="27939" fg:w="8"/><text x="80.5299%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (8 samples, 0.02%)</title><rect x="80.2799%" y="1077" width="0.0230%" height="15" fill="rgb(208,113,15)" fg:x="27939" fg:w="8"/><text x="80.5299%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (8 samples, 0.02%)</title><rect x="80.2799%" y="1061" width="0.0230%" height="15" fill="rgb(207,189,15)" fg:x="27939" fg:w="8"/><text x="80.5299%" y="1071.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.02%)</title><rect x="80.2799%" y="1045" width="0.0230%" height="15" fill="rgb(231,115,4)" fg:x="27939" fg:w="8"/><text x="80.5299%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (8 samples, 0.02%)</title><rect x="80.2799%" y="1029" width="0.0230%" height="15" fill="rgb(253,117,2)" fg:x="27939" fg:w="8"/><text x="80.5299%" y="1039.50"></text></g><g><title>alloc::alloc::dealloc (8 samples, 0.02%)</title><rect x="80.2799%" y="1013" width="0.0230%" height="15" fill="rgb(248,48,24)" fg:x="27939" fg:w="8"/><text x="80.5299%" y="1023.50"></text></g><g><title>sdallocx (7 samples, 0.02%)</title><rect x="80.2827%" y="997" width="0.0201%" height="15" fill="rgb(241,28,46)" fg:x="27940" fg:w="7"/><text x="80.5327%" y="1007.50"></text></g><g><title>aptos_executor_types::BlockExecutorTrait::commit_blocks (3,067 samples, 8.81%)</title><rect x="71.4930%" y="1381" width="8.8127%" height="15" fill="rgb(216,165,52)" fg:x="24881" fg:w="3067"/><text x="71.7430%" y="1391.50">aptos_execut..</text></g><g><title>&lt;aptos_executor::block_executor::BlockExecutor&lt;V&gt; as aptos_executor_types::BlockExecutorTrait&gt;::commit_blocks_ext (3,067 samples, 8.81%)</title><rect x="71.4930%" y="1365" width="8.8127%" height="15" fill="rgb(220,222,34)" fg:x="24881" fg:w="3067"/><text x="71.7430%" y="1375.50">&lt;aptos_execu..</text></g><g><title>aptos_executor::block_executor::BlockExecutorInner&lt;V&gt;::commit_blocks_ext (3,067 samples, 8.81%)</title><rect x="71.4930%" y="1349" width="8.8127%" height="15" fill="rgb(247,222,49)" fg:x="24881" fg:w="3067"/><text x="71.7430%" y="1359.50">aptos_execut..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;aptos_types::transaction::TransactionToCommit&gt;&gt; (77 samples, 0.22%)</title><rect x="80.0845%" y="1333" width="0.2213%" height="15" fill="rgb(240,10,31)" fg:x="27871" fg:w="77"/><text x="80.3345%" y="1343.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (77 samples, 0.22%)</title><rect x="80.0845%" y="1317" width="0.2213%" height="15" fill="rgb(221,199,35)" fg:x="27871" fg:w="77"/><text x="80.3345%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;[aptos_types::transaction::TransactionToCommit]&gt; (77 samples, 0.22%)</title><rect x="80.0845%" y="1301" width="0.2213%" height="15" fill="rgb(230,223,11)" fg:x="27871" fg:w="77"/><text x="80.3345%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_types::transaction::TransactionToCommit&gt; (77 samples, 0.22%)</title><rect x="80.0845%" y="1285" width="0.2213%" height="15" fill="rgb(218,82,45)" fg:x="27871" fg:w="77"/><text x="80.3345%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;aptos_types::state_store::state_key::StateKey,core::option::Option&lt;aptos_types::state_store::state_value::StateValue&gt;&gt;&gt; (39 samples, 0.11%)</title><rect x="80.1937%" y="1269" width="0.1121%" height="15" fill="rgb(233,213,33)" fg:x="27909" fg:w="39"/><text x="80.4437%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;aptos_types::state_store::state_key::StateKey,core::option::Option&lt;aptos_types::state_store::state_value::StateValue&gt;,std::hash::random::RandomState&gt;&gt; (39 samples, 0.11%)</title><rect x="80.1937%" y="1253" width="0.1121%" height="15" fill="rgb(210,143,52)" fg:x="27909" fg:w="39"/><text x="80.4437%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(aptos_types::state_store::state_key::StateKey,core::option::Option&lt;aptos_types::state_store::state_value::StateValue&gt;)&gt;&gt; (39 samples, 0.11%)</title><rect x="80.1937%" y="1237" width="0.1121%" height="15" fill="rgb(206,95,4)" fg:x="27909" fg:w="39"/><text x="80.4437%" y="1247.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (27,945 samples, 80.30%)</title><rect x="0.0144%" y="2725" width="80.2971%" height="15" fill="rgb(246,164,46)" fg:x="5" fg:w="27945"/><text x="0.2644%" y="2735.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (27,945 samples, 80.30%)</title><rect x="0.0144%" y="2709" width="80.2971%" height="15" fill="rgb(213,210,47)" fg:x="5" fg:w="27945"/><text x="0.2644%" y="2719.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (27,945 samples, 80.30%)</title><rect x="0.0144%" y="2693" width="80.2971%" height="15" fill="rgb(210,12,38)" fg:x="5" fg:w="27945"/><text x="0.2644%" y="2703.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (27,945 samples, 80.30%)</title><rect x="0.0144%" y="2677" width="80.2971%" height="15" fill="rgb(252,192,54)" fg:x="5" fg:w="27945"/><text x="0.2644%" y="2687.50">std::thread::Builder::spawn_unchecked_::{{closure}}</text></g><g><title>std::panic::catch_unwind (27,945 samples, 80.30%)</title><rect x="0.0144%" y="2661" width="80.2971%" height="15" fill="rgb(242,92,6)" fg:x="5" fg:w="27945"/><text x="0.2644%" y="2671.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (27,945 samples, 80.30%)</title><rect x="0.0144%" y="2645" width="80.2971%" height="15" fill="rgb(253,154,15)" fg:x="5" fg:w="27945"/><text x="0.2644%" y="2655.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (27,945 samples, 80.30%)</title><rect x="0.0144%" y="2629" width="80.2971%" height="15" fill="rgb(209,20,43)" fg:x="5" fg:w="27945"/><text x="0.2644%" y="2639.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (27,945 samples, 80.30%)</title><rect x="0.0144%" y="2613" width="80.2971%" height="15" fill="rgb(232,28,49)" fg:x="5" fg:w="27945"/><text x="0.2644%" y="2623.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (27,945 samples, 80.30%)</title><rect x="0.0144%" y="2597" width="80.2971%" height="15" fill="rgb(248,131,53)" fg:x="5" fg:w="27945"/><text x="0.2644%" y="2607.50">std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (27,945 samples, 80.30%)</title><rect x="0.0144%" y="2581" width="80.2971%" height="15" fill="rgb(214,16,30)" fg:x="5" fg:w="27945"/><text x="0.2644%" y="2591.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (27,100 samples, 77.87%)</title><rect x="2.4424%" y="2565" width="77.8691%" height="15" fill="rgb(245,16,0)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="2575.50">tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}}</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (27,100 samples, 77.87%)</title><rect x="2.4424%" y="2549" width="77.8691%" height="15" fill="rgb(245,17,35)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="2559.50">tokio::runtime::blocking::pool::Inner::run</text></g><g><title>tokio::runtime::blocking::pool::Task::run (27,100 samples, 77.87%)</title><rect x="2.4424%" y="2533" width="77.8691%" height="15" fill="rgb(249,27,53)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="2543.50">tokio::runtime::blocking::pool::Task::run</text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (27,100 samples, 77.87%)</title><rect x="2.4424%" y="2517" width="77.8691%" height="15" fill="rgb(214,73,24)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="2527.50">tokio::runtime::task::UnownedTask&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (27,100 samples, 77.87%)</title><rect x="2.4424%" y="2501" width="77.8691%" height="15" fill="rgb(223,84,37)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="2511.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (27,100 samples, 77.87%)</title><rect x="2.4424%" y="2485" width="77.8691%" height="15" fill="rgb(210,109,28)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="2495.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (27,100 samples, 77.87%)</title><rect x="2.4424%" y="2469" width="77.8691%" height="15" fill="rgb(208,186,6)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="2479.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>tokio::runtime::task::harness::poll_future (27,100 samples, 77.87%)</title><rect x="2.4424%" y="2453" width="77.8691%" height="15" fill="rgb(235,201,30)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="2463.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (27,100 samples, 77.87%)</title><rect x="2.4424%" y="2437" width="77.8691%" height="15" fill="rgb(216,198,48)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="2447.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (27,100 samples, 77.87%)</title><rect x="2.4424%" y="2421" width="77.8691%" height="15" fill="rgb(254,186,25)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="2431.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (27,100 samples, 77.87%)</title><rect x="2.4424%" y="2405" width="77.8691%" height="15" fill="rgb(227,87,5)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="2415.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (27,100 samples, 77.87%)</title><rect x="2.4424%" y="2389" width="77.8691%" height="15" fill="rgb(236,205,25)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="2399.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (27,100 samples, 77.87%)</title><rect x="2.4424%" y="2373" width="77.8691%" height="15" fill="rgb(229,99,32)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="2383.50">tokio::runtime::task::harness::poll_future::{{closure}}</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (27,100 samples, 77.87%)</title><rect x="2.4424%" y="2357" width="77.8691%" height="15" fill="rgb(231,177,31)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="2367.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (27,100 samples, 77.87%)</title><rect x="2.4424%" y="2341" width="77.8691%" height="15" fill="rgb(246,15,2)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="2351.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (27,100 samples, 77.87%)</title><rect x="2.4424%" y="2325" width="77.8691%" height="15" fill="rgb(207,39,15)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="2335.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}}</text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (27,100 samples, 77.87%)</title><rect x="2.4424%" y="2309" width="77.8691%" height="15" fill="rgb(207,44,9)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="2319.50">&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::{{closure}} (27,100 samples, 77.87%)</title><rect x="2.4424%" y="2293" width="77.8691%" height="15" fill="rgb(225,224,33)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="2303.50">tokio::runtime::scheduler::multi_thread::worker::Launch::launch::{{closure}}</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (27,100 samples, 77.87%)</title><rect x="2.4424%" y="2277" width="77.8691%" height="15" fill="rgb(252,151,3)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="2287.50">tokio::runtime::scheduler::multi_thread::worker::run</text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (27,100 samples, 77.87%)</title><rect x="2.4424%" y="2261" width="77.8691%" height="15" fill="rgb(211,140,13)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="2271.50">tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}} (27,100 samples, 77.87%)</title><rect x="2.4424%" y="2245" width="77.8691%" height="15" fill="rgb(239,225,17)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="2255.50">tokio::runtime::scheduler::multi_thread::worker::run::{{closure}}</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (27,100 samples, 77.87%)</title><rect x="2.4424%" y="2229" width="77.8691%" height="15" fill="rgb(223,170,52)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="2239.50">tokio::runtime::scheduler::multi_thread::worker::Context::run</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (27,100 samples, 77.87%)</title><rect x="2.4424%" y="2213" width="77.8691%" height="15" fill="rgb(212,64,21)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="2223.50">tokio::runtime::scheduler::multi_thread::worker::Context::run_task</text></g><g><title>tokio::runtime::coop::budget (27,100 samples, 77.87%)</title><rect x="2.4424%" y="2197" width="77.8691%" height="15" fill="rgb(236,126,48)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="2207.50">tokio::runtime::coop::budget</text></g><g><title>tokio::runtime::coop::with_budget (27,100 samples, 77.87%)</title><rect x="2.4424%" y="2181" width="77.8691%" height="15" fill="rgb(209,135,11)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="2191.50">tokio::runtime::coop::with_budget</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task::{{closure}} (27,100 samples, 77.87%)</title><rect x="2.4424%" y="2165" width="77.8691%" height="15" fill="rgb(228,126,40)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="2175.50">tokio::runtime::scheduler::multi_thread::worker::Context::run_task::{{closure}}</text></g><g><title>tokio::runtime::task::LocalNotified&lt;S&gt;::run (27,100 samples, 77.87%)</title><rect x="2.4424%" y="2149" width="77.8691%" height="15" fill="rgb(205,196,36)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="2159.50">tokio::runtime::task::LocalNotified&lt;S&gt;::run</text></g><g><title>tokio::runtime::task::raw::RawTask::poll (27,100 samples, 77.87%)</title><rect x="2.4424%" y="2133" width="77.8691%" height="15" fill="rgb(243,160,33)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="2143.50">tokio::runtime::task::raw::RawTask::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (27,100 samples, 77.87%)</title><rect x="2.4424%" y="2117" width="77.8691%" height="15" fill="rgb(210,84,20)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="2127.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (27,100 samples, 77.87%)</title><rect x="2.4424%" y="2101" width="77.8691%" height="15" fill="rgb(228,213,30)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="2111.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner</text></g><g><title>tokio::runtime::task::harness::poll_future (27,100 samples, 77.87%)</title><rect x="2.4424%" y="2085" width="77.8691%" height="15" fill="rgb(252,33,45)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="2095.50">tokio::runtime::task::harness::poll_future</text></g><g><title>std::panic::catch_unwind (27,100 samples, 77.87%)</title><rect x="2.4424%" y="2069" width="77.8691%" height="15" fill="rgb(254,227,20)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="2079.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (27,100 samples, 77.87%)</title><rect x="2.4424%" y="2053" width="77.8691%" height="15" fill="rgb(228,192,2)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="2063.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (27,100 samples, 77.87%)</title><rect x="2.4424%" y="2037" width="77.8691%" height="15" fill="rgb(233,32,8)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="2047.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (27,100 samples, 77.87%)</title><rect x="2.4424%" y="2021" width="77.8691%" height="15" fill="rgb(220,146,47)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="2031.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once</text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (27,100 samples, 77.87%)</title><rect x="2.4424%" y="2005" width="77.8691%" height="15" fill="rgb(246,194,1)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="2015.50">tokio::runtime::task::harness::poll_future::{{closure}}</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (27,100 samples, 77.87%)</title><rect x="2.4424%" y="1989" width="77.8691%" height="15" fill="rgb(218,203,9)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="1999.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (27,100 samples, 77.87%)</title><rect x="2.4424%" y="1973" width="77.8691%" height="15" fill="rgb(237,97,14)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="1983.50">tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (27,100 samples, 77.87%)</title><rect x="2.4424%" y="1957" width="77.8691%" height="15" fill="rgb(239,76,15)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="1967.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}}</text></g><g><title>jsonrpsee_server::server::Server&lt;B,L&gt;::start_inner::{{closure}} (27,100 samples, 77.87%)</title><rect x="2.4424%" y="1941" width="77.8691%" height="15" fill="rgb(222,53,45)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="1951.50">jsonrpsee_server::server::Server&lt;B,L&gt;::start_inner::{{closure}}</text></g><g><title>jsonrpsee_server::future::FutureDriver&lt;F&gt;::select_with::{{closure}} (27,100 samples, 77.87%)</title><rect x="2.4424%" y="1925" width="77.8691%" height="15" fill="rgb(237,88,5)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="1935.50">jsonrpsee_server::future::FutureDriver&lt;F&gt;::select_with::{{closure}}</text></g><g><title>&lt;jsonrpsee_server::future::DriverSelect&lt;R,F&gt; as core::future::future::Future&gt;::poll (27,100 samples, 77.87%)</title><rect x="2.4424%" y="1909" width="77.8691%" height="15" fill="rgb(218,223,35)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="1919.50">&lt;jsonrpsee_server::future::DriverSelect&lt;R,F&gt; as core::future::future::Future&gt;::poll</text></g><g><title>jsonrpsee_server::future::FutureDriver&lt;F&gt;::drive (27,100 samples, 77.87%)</title><rect x="2.4424%" y="1893" width="77.8691%" height="15" fill="rgb(243,229,38)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="1903.50">jsonrpsee_server::future::FutureDriver&lt;F&gt;::drive</text></g><g><title>futures_util::future::future::FutureExt::poll_unpin (27,100 samples, 77.87%)</title><rect x="2.4424%" y="1877" width="77.8691%" height="15" fill="rgb(240,75,41)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="1887.50">futures_util::future::future::FutureExt::poll_unpin</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (27,100 samples, 77.87%)</title><rect x="2.4424%" y="1861" width="77.8691%" height="15" fill="rgb(209,110,37)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="1871.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll</text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (27,100 samples, 77.87%)</title><rect x="2.4424%" y="1845" width="77.8691%" height="15" fill="rgb(221,130,46)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="1855.50">&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>jsonrpsee_server::server::try_accept_connection::{{closure}} (27,100 samples, 77.87%)</title><rect x="2.4424%" y="1829" width="77.8691%" height="15" fill="rgb(237,160,20)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="1839.50">jsonrpsee_server::server::try_accept_connection::{{closure}}</text></g><g><title>&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (27,100 samples, 77.87%)</title><rect x="2.4424%" y="1813" width="77.8691%" height="15" fill="rgb(234,126,24)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="1823.50">&lt;tokio::future::poll_fn::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll</text></g><g><title>jsonrpsee_server::server::try_accept_connection::{{closure}}::{{closure}} (27,100 samples, 77.87%)</title><rect x="2.4424%" y="1797" width="77.8691%" height="15" fill="rgb(207,177,9)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="1807.50">jsonrpsee_server::server::try_accept_connection::{{closure}}::{{closure}}</text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (27,100 samples, 77.87%)</title><rect x="2.4424%" y="1781" width="77.8691%" height="15" fill="rgb(231,191,33)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="1791.50">&lt;&amp;mut F as core::future::future::Future&gt;::poll</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (27,100 samples, 77.87%)</title><rect x="2.4424%" y="1765" width="77.8691%" height="15" fill="rgb(207,42,1)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="1775.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll</text></g><g><title>&lt;hyper::server::conn::upgrades::UpgradeableConnection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll (27,100 samples, 77.87%)</title><rect x="2.4424%" y="1749" width="77.8691%" height="15" fill="rgb(218,34,50)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="1759.50">&lt;hyper::server::conn::upgrades::UpgradeableConnection&lt;I,S,E&gt; as core::future::future::Future&gt;::poll</text></g><g><title>&lt;hyper::server::conn::ProtoServer&lt;T,B,S,E&gt; as core::future::future::Future&gt;::poll (27,100 samples, 77.87%)</title><rect x="2.4424%" y="1733" width="77.8691%" height="15" fill="rgb(254,126,39)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="1743.50">&lt;hyper::server::conn::ProtoServer&lt;T,B,S,E&gt; as core::future::future::Future&gt;::poll</text></g><g><title>&lt;hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt; as core::future::future::Future&gt;::poll (27,100 samples, 77.87%)</title><rect x="2.4424%" y="1717" width="77.8691%" height="15" fill="rgb(251,17,26)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="1727.50">&lt;hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch (27,100 samples, 77.87%)</title><rect x="2.4424%" y="1701" width="77.8691%" height="15" fill="rgb(252,215,34)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="1711.50">hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_inner (27,100 samples, 77.87%)</title><rect x="2.4424%" y="1685" width="77.8691%" height="15" fill="rgb(217,120,44)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="1695.50">hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_inner</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop (27,100 samples, 77.87%)</title><rect x="2.4424%" y="1669" width="77.8691%" height="15" fill="rgb(211,31,11)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="1679.50">hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_write (27,100 samples, 77.87%)</title><rect x="2.4424%" y="1653" width="77.8691%" height="15" fill="rgb(222,69,51)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="1663.50">hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_write</text></g><g><title>&lt;hyper::proto::h1::dispatch::Server&lt;S,hyper::body::body::Body&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::poll_msg (27,100 samples, 77.87%)</title><rect x="2.4424%" y="1637" width="77.8691%" height="15" fill="rgb(215,229,42)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="1647.50">&lt;hyper::proto::h1::dispatch::Server&lt;S,hyper::body::body::Body&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::poll_msg</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (27,100 samples, 77.87%)</title><rect x="2.4424%" y="1621" width="77.8691%" height="15" fill="rgb(212,102,15)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="1631.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll</text></g><g><title>&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (27,100 samples, 77.87%)</title><rect x="2.4424%" y="1605" width="77.8691%" height="15" fill="rgb(205,179,41)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="1615.50">&lt;futures_util::future::future::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll</text></g><g><title>&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll (27,100 samples, 77.87%)</title><rect x="2.4424%" y="1589" width="77.8691%" height="15" fill="rgb(219,148,46)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="1599.50">&lt;futures_util::future::future::map::Map&lt;Fut,F&gt; as core::future::future::Future&gt;::poll</text></g><g><title>jsonrpsee_server::transport::http::handle_request::{{closure}} (27,100 samples, 77.87%)</title><rect x="2.4424%" y="1573" width="77.8691%" height="15" fill="rgb(243,40,19)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="1583.50">jsonrpsee_server::transport::http::handle_request::{{closure}}</text></g><g><title>jsonrpsee_server::transport::http::process_validated_request::{{closure}} (27,100 samples, 77.87%)</title><rect x="2.4424%" y="1557" width="77.8691%" height="15" fill="rgb(208,206,34)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="1567.50">jsonrpsee_server::transport::http::process_validated_request::{{closure}}</text></g><g><title>jsonrpsee_server::transport::http::process_single_request::{{closure}} (27,100 samples, 77.87%)</title><rect x="2.4424%" y="1541" width="77.8691%" height="15" fill="rgb(244,184,38)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="1551.50">jsonrpsee_server::transport::http::process_single_request::{{closure}}</text></g><g><title>jsonrpsee_server::transport::http::execute_call_with_tracing::{{closure}} (27,100 samples, 77.87%)</title><rect x="2.4424%" y="1525" width="77.8691%" height="15" fill="rgb(244,151,47)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="1535.50">jsonrpsee_server::transport::http::execute_call_with_tracing::{{closure}}</text></g><g><title>&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll (27,100 samples, 77.87%)</title><rect x="2.4424%" y="1509" width="77.8691%" height="15" fill="rgb(236,134,42)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="1519.50">&lt;tracing::instrument::Instrumented&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>jsonrpsee_server::transport::http::execute_call_with_tracing::{{closure}}::{{closure}} (27,100 samples, 77.87%)</title><rect x="2.4424%" y="1493" width="77.8691%" height="15" fill="rgb(233,93,22)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="1503.50">jsonrpsee_server::transport::http::execute_call_with_tracing::{{closure}}::{{closure}}</text></g><g><title>jsonrpsee_server::transport::http::execute_call::{{closure}} (27,100 samples, 77.87%)</title><rect x="2.4424%" y="1477" width="77.8691%" height="15" fill="rgb(211,202,10)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="1487.50">jsonrpsee_server::transport::http::execute_call::{{closure}}</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (27,100 samples, 77.87%)</title><rect x="2.4424%" y="1461" width="77.8691%" height="15" fill="rgb(240,63,8)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="1471.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll</text></g><g><title>jsonrpsee_core::server::rpc_module::RpcModule&lt;Context&gt;::register_async_method::{{closure}}::{{closure}} (27,100 samples, 77.87%)</title><rect x="2.4424%" y="1445" width="77.8691%" height="15" fill="rgb(214,9,4)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="1455.50">jsonrpsee_core::server::rpc_module::RpcModule&lt;Context&gt;::register_async_method::{{closure}}::{{closure}}</text></g><g><title>ethrpc::traits::eth::EthServer::into_rpc::{{closure}}::{{closure}} (27,100 samples, 77.87%)</title><rect x="2.4424%" y="1429" width="77.8691%" height="15" fill="rgb(243,66,45)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="1439.50">ethrpc::traits::eth::EthServer::into_rpc::{{closure}}::{{closure}}</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (27,100 samples, 77.87%)</title><rect x="2.4424%" y="1413" width="77.8691%" height="15" fill="rgb(220,50,42)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="1423.50">&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll</text></g><g><title>&lt;ethrpc::impls::eth::EthHandler as ethrpc::traits::eth::EthServer&gt;::stress_test_eth_txs_uniswap::{{closure}} (27,100 samples, 77.87%)</title><rect x="2.4424%" y="1397" width="77.8691%" height="15" fill="rgb(220,134,27)" fg:x="850" fg:w="27100"/><text x="2.6924%" y="1407.50">&lt;ethrpc::impls::eth::EthHandler as ethrpc::traits::eth::EthServer&gt;::stress_test_eth_txs_uniswap::{{closure}}</text></g><g><title>api-5 (27,952 samples, 80.32%)</title><rect x="0.0000%" y="2789" width="80.3172%" height="15" fill="rgb(246,151,50)" fg:x="0" fg:w="27952"/><text x="0.2500%" y="2799.50">api-5</text></g><g><title>__GI___clone3 (27,947 samples, 80.30%)</title><rect x="0.0144%" y="2773" width="80.3029%" height="15" fill="rgb(238,216,27)" fg:x="5" fg:w="27947"/><text x="0.2644%" y="2783.50">__GI___clone3</text></g><g><title>start_thread (27,947 samples, 80.30%)</title><rect x="0.0144%" y="2757" width="80.3029%" height="15" fill="rgb(250,92,11)" fg:x="5" fg:w="27947"/><text x="0.2644%" y="2767.50">start_thread</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (27,947 samples, 80.30%)</title><rect x="0.0144%" y="2741" width="80.3029%" height="15" fill="rgb(248,183,6)" fg:x="5" fg:w="27947"/><text x="0.2644%" y="2751.50">std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (6 samples, 0.02%)</title><rect x="80.3172%" y="2357" width="0.0172%" height="15" fill="rgb(211,204,50)" fg:x="27952" fg:w="6"/><text x="80.5672%" y="2367.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal::{{closure}} (6 samples, 0.02%)</title><rect x="80.3172%" y="2341" width="0.0172%" height="15" fill="rgb(252,55,47)" fg:x="27952" fg:w="6"/><text x="80.5672%" y="2351.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (6 samples, 0.02%)</title><rect x="80.3172%" y="2325" width="0.0172%" height="15" fill="rgb(240,198,32)" fg:x="27952" fg:w="6"/><text x="80.5672%" y="2335.50"></text></g><g><title>crossbeam_epoch::default::pin (4 samples, 0.01%)</title><rect x="80.3230%" y="2309" width="0.0115%" height="15" fill="rgb(224,203,19)" fg:x="27954" fg:w="4"/><text x="80.5730%" y="2319.50"></text></g><g><title>crossbeam_epoch::default::with_handle (4 samples, 0.01%)</title><rect x="80.3230%" y="2293" width="0.0115%" height="15" fill="rgb(205,27,16)" fg:x="27954" fg:w="4"/><text x="80.5730%" y="2303.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4 samples, 0.01%)</title><rect x="80.3230%" y="2277" width="0.0115%" height="15" fill="rgb(224,226,17)" fg:x="27954" fg:w="4"/><text x="80.5730%" y="2287.50"></text></g><g><title>crossbeam_epoch::default::with_handle::{{closure}} (4 samples, 0.01%)</title><rect x="80.3230%" y="2261" width="0.0115%" height="15" fill="rgb(205,216,54)" fg:x="27954" fg:w="4"/><text x="80.5730%" y="2271.50"></text></g><g><title>crossbeam_epoch::default::pin::{{closure}} (4 samples, 0.01%)</title><rect x="80.3230%" y="2245" width="0.0115%" height="15" fill="rgb(248,168,46)" fg:x="27954" fg:w="4"/><text x="80.5730%" y="2255.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (4 samples, 0.01%)</title><rect x="80.3230%" y="2229" width="0.0115%" height="15" fill="rgb(226,111,45)" fg:x="27954" fg:w="4"/><text x="80.5730%" y="2239.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (4 samples, 0.01%)</title><rect x="80.3230%" y="2213" width="0.0115%" height="15" fill="rgb(231,15,9)" fg:x="27954" fg:w="4"/><text x="80.5730%" y="2223.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (7 samples, 0.02%)</title><rect x="80.3172%" y="2485" width="0.0201%" height="15" fill="rgb(243,168,3)" fg:x="27952" fg:w="7"/><text x="80.5672%" y="2495.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold::{{closure}} (7 samples, 0.02%)</title><rect x="80.3172%" y="2469" width="0.0201%" height="15" fill="rgb(221,220,54)" fg:x="27952" fg:w="7"/><text x="80.5672%" y="2479.50"></text></g><g><title>rayon_core::registry::WorkerThread::steal (7 samples, 0.02%)</title><rect x="80.3172%" y="2453" width="0.0201%" height="15" fill="rgb(232,174,38)" fg:x="27952" fg:w="7"/><text x="80.5672%" y="2463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (7 samples, 0.02%)</title><rect x="80.3172%" y="2437" width="0.0201%" height="15" fill="rgb(205,14,38)" fg:x="27952" fg:w="7"/><text x="80.5672%" y="2447.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (7 samples, 0.02%)</title><rect x="80.3172%" y="2421" width="0.0201%" height="15" fill="rgb(234,89,19)" fg:x="27952" fg:w="7"/><text x="80.5672%" y="2431.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (7 samples, 0.02%)</title><rect x="80.3172%" y="2405" width="0.0201%" height="15" fill="rgb(216,68,51)" fg:x="27952" fg:w="7"/><text x="80.5672%" y="2415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (7 samples, 0.02%)</title><rect x="80.3172%" y="2389" width="0.0201%" height="15" fill="rgb(213,49,2)" fg:x="27952" fg:w="7"/><text x="80.5672%" y="2399.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (7 samples, 0.02%)</title><rect x="80.3172%" y="2373" width="0.0201%" height="15" fill="rgb(242,146,30)" fg:x="27952" fg:w="7"/><text x="80.5672%" y="2383.50"></text></g><g><title>&lt;bcs::ser::MapSerializer&lt;W&gt; as serde::ser::SerializeMap&gt;::end (21 samples, 0.06%)</title><rect x="80.3373%" y="1957" width="0.0603%" height="15" fill="rgb(224,188,11)" fg:x="27959" fg:w="21"/><text x="80.5873%" y="1967.50"></text></g><g><title>std::io::Write::write_all (21 samples, 0.06%)</title><rect x="80.3373%" y="1941" width="0.0603%" height="15" fill="rgb(213,159,11)" fg:x="27959" fg:w="21"/><text x="80.5873%" y="1951.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSetHasher as std::io::Write&gt;::write (21 samples, 0.06%)</title><rect x="80.3373%" y="1925" width="0.0603%" height="15" fill="rgb(229,13,31)" fg:x="27959" fg:w="21"/><text x="80.5873%" y="1935.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (21 samples, 0.06%)</title><rect x="80.3373%" y="1909" width="0.0603%" height="15" fill="rgb(209,103,11)" fg:x="27959" fg:w="21"/><text x="80.5873%" y="1919.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (20 samples, 0.06%)</title><rect x="80.3402%" y="1893" width="0.0575%" height="15" fill="rgb(206,3,4)" fg:x="27960" fg:w="20"/><text x="80.5902%" y="1903.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (20 samples, 0.06%)</title><rect x="80.3402%" y="1877" width="0.0575%" height="15" fill="rgb(252,10,49)" fg:x="27960" fg:w="20"/><text x="80.5902%" y="1887.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (20 samples, 0.06%)</title><rect x="80.3402%" y="1861" width="0.0575%" height="15" fill="rgb(217,160,32)" fg:x="27960" fg:w="20"/><text x="80.5902%" y="1871.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (22 samples, 0.06%)</title><rect x="80.3373%" y="2277" width="0.0632%" height="15" fill="rgb(249,196,0)" fg:x="27959" fg:w="22"/><text x="80.5873%" y="2287.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (22 samples, 0.06%)</title><rect x="80.3373%" y="2261" width="0.0632%" height="15" fill="rgb(213,17,48)" fg:x="27959" fg:w="22"/><text x="80.5873%" y="2271.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (22 samples, 0.06%)</title><rect x="80.3373%" y="2245" width="0.0632%" height="15" fill="rgb(206,42,46)" fg:x="27959" fg:w="22"/><text x="80.5873%" y="2255.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (22 samples, 0.06%)</title><rect x="80.3373%" y="2229" width="0.0632%" height="15" fill="rgb(212,105,24)" fg:x="27959" fg:w="22"/><text x="80.5873%" y="2239.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.06%)</title><rect x="80.3373%" y="2213" width="0.0632%" height="15" fill="rgb(243,216,30)" fg:x="27959" fg:w="22"/><text x="80.5873%" y="2223.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (22 samples, 0.06%)</title><rect x="80.3373%" y="2197" width="0.0632%" height="15" fill="rgb(207,121,3)" fg:x="27959" fg:w="22"/><text x="80.5873%" y="2207.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (22 samples, 0.06%)</title><rect x="80.3373%" y="2181" width="0.0632%" height="15" fill="rgb(249,78,0)" fg:x="27959" fg:w="22"/><text x="80.5873%" y="2191.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (22 samples, 0.06%)</title><rect x="80.3373%" y="2165" width="0.0632%" height="15" fill="rgb(244,151,32)" fg:x="27959" fg:w="22"/><text x="80.5873%" y="2175.50"></text></g><g><title>aptos_executor::components::apply_chunk_output::ApplyChunkOutput::assemble_ledger_diff::{{closure}} (22 samples, 0.06%)</title><rect x="80.3373%" y="2149" width="0.0632%" height="15" fill="rgb(228,63,25)" fg:x="27959" fg:w="22"/><text x="80.5873%" y="2159.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSet as aptos_crypto::hash::CryptoHash&gt;::hash (22 samples, 0.06%)</title><rect x="80.3373%" y="2133" width="0.0632%" height="15" fill="rgb(231,158,23)" fg:x="27959" fg:w="22"/><text x="80.5873%" y="2143.50"></text></g><g><title>bcs::ser::serialize_into (22 samples, 0.06%)</title><rect x="80.3373%" y="2117" width="0.0632%" height="15" fill="rgb(248,107,23)" fg:x="27959" fg:w="22"/><text x="80.5873%" y="2127.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (22 samples, 0.06%)</title><rect x="80.3373%" y="2101" width="0.0632%" height="15" fill="rgb(215,168,21)" fg:x="27959" fg:w="22"/><text x="80.5873%" y="2111.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSet&gt;::serialize (22 samples, 0.06%)</title><rect x="80.3373%" y="2085" width="0.0632%" height="15" fill="rgb(227,83,22)" fg:x="27959" fg:w="22"/><text x="80.5873%" y="2095.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (22 samples, 0.06%)</title><rect x="80.3373%" y="2069" width="0.0632%" height="15" fill="rgb(217,118,43)" fg:x="27959" fg:w="22"/><text x="80.5873%" y="2079.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetV0&gt;::serialize (22 samples, 0.06%)</title><rect x="80.3373%" y="2053" width="0.0632%" height="15" fill="rgb(229,220,41)" fg:x="27959" fg:w="22"/><text x="80.5873%" y="2063.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (22 samples, 0.06%)</title><rect x="80.3373%" y="2037" width="0.0632%" height="15" fill="rgb(254,146,46)" fg:x="27959" fg:w="22"/><text x="80.5873%" y="2047.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetMut&gt;::serialize (22 samples, 0.06%)</title><rect x="80.3373%" y="2021" width="0.0632%" height="15" fill="rgb(233,208,31)" fg:x="27959" fg:w="22"/><text x="80.5873%" y="2031.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (22 samples, 0.06%)</title><rect x="80.3373%" y="2005" width="0.0632%" height="15" fill="rgb(222,162,7)" fg:x="27959" fg:w="22"/><text x="80.5873%" y="2015.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::serialize (22 samples, 0.06%)</title><rect x="80.3373%" y="1989" width="0.0632%" height="15" fill="rgb(230,117,45)" fg:x="27959" fg:w="22"/><text x="80.5873%" y="1999.50"></text></g><g><title>serde::ser::Serializer::collect_map (22 samples, 0.06%)</title><rect x="80.3373%" y="1973" width="0.0632%" height="15" fill="rgb(239,163,6)" fg:x="27959" fg:w="22"/><text x="80.5873%" y="1983.50"></text></g><g><title>&lt;bcs::ser::MapSerializer&lt;W&gt; as serde::ser::SerializeMap&gt;::end (23 samples, 0.07%)</title><rect x="80.4034%" y="1845" width="0.0661%" height="15" fill="rgb(246,130,17)" fg:x="27982" fg:w="23"/><text x="80.6534%" y="1855.50"></text></g><g><title>std::io::Write::write_all (23 samples, 0.07%)</title><rect x="80.4034%" y="1829" width="0.0661%" height="15" fill="rgb(216,84,5)" fg:x="27982" fg:w="23"/><text x="80.6534%" y="1839.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSetHasher as std::io::Write&gt;::write (23 samples, 0.07%)</title><rect x="80.4034%" y="1813" width="0.0661%" height="15" fill="rgb(230,200,21)" fg:x="27982" fg:w="23"/><text x="80.6534%" y="1823.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (23 samples, 0.07%)</title><rect x="80.4034%" y="1797" width="0.0661%" height="15" fill="rgb(224,2,8)" fg:x="27982" fg:w="23"/><text x="80.6534%" y="1807.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (22 samples, 0.06%)</title><rect x="80.4063%" y="1781" width="0.0632%" height="15" fill="rgb(238,178,10)" fg:x="27983" fg:w="22"/><text x="80.6563%" y="1791.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (22 samples, 0.06%)</title><rect x="80.4063%" y="1765" width="0.0632%" height="15" fill="rgb(242,153,24)" fg:x="27983" fg:w="22"/><text x="80.6563%" y="1775.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (22 samples, 0.06%)</title><rect x="80.4063%" y="1749" width="0.0632%" height="15" fill="rgb(242,32,48)" fg:x="27983" fg:w="22"/><text x="80.6563%" y="1759.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (24 samples, 0.07%)</title><rect x="80.4034%" y="2165" width="0.0690%" height="15" fill="rgb(227,36,0)" fg:x="27982" fg:w="24"/><text x="80.6534%" y="2175.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (24 samples, 0.07%)</title><rect x="80.4034%" y="2149" width="0.0690%" height="15" fill="rgb(251,33,35)" fg:x="27982" fg:w="24"/><text x="80.6534%" y="2159.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (24 samples, 0.07%)</title><rect x="80.4034%" y="2133" width="0.0690%" height="15" fill="rgb(232,168,51)" fg:x="27982" fg:w="24"/><text x="80.6534%" y="2143.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (24 samples, 0.07%)</title><rect x="80.4034%" y="2117" width="0.0690%" height="15" fill="rgb(228,56,10)" fg:x="27982" fg:w="24"/><text x="80.6534%" y="2127.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.07%)</title><rect x="80.4034%" y="2101" width="0.0690%" height="15" fill="rgb(231,10,26)" fg:x="27982" fg:w="24"/><text x="80.6534%" y="2111.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (24 samples, 0.07%)</title><rect x="80.4034%" y="2085" width="0.0690%" height="15" fill="rgb(226,202,12)" fg:x="27982" fg:w="24"/><text x="80.6534%" y="2095.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (24 samples, 0.07%)</title><rect x="80.4034%" y="2069" width="0.0690%" height="15" fill="rgb(251,49,21)" fg:x="27982" fg:w="24"/><text x="80.6534%" y="2079.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (24 samples, 0.07%)</title><rect x="80.4034%" y="2053" width="0.0690%" height="15" fill="rgb(206,228,28)" fg:x="27982" fg:w="24"/><text x="80.6534%" y="2063.50"></text></g><g><title>aptos_executor::components::apply_chunk_output::ApplyChunkOutput::assemble_ledger_diff::{{closure}} (24 samples, 0.07%)</title><rect x="80.4034%" y="2037" width="0.0690%" height="15" fill="rgb(205,198,31)" fg:x="27982" fg:w="24"/><text x="80.6534%" y="2047.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSet as aptos_crypto::hash::CryptoHash&gt;::hash (24 samples, 0.07%)</title><rect x="80.4034%" y="2021" width="0.0690%" height="15" fill="rgb(213,69,1)" fg:x="27982" fg:w="24"/><text x="80.6534%" y="2031.50"></text></g><g><title>bcs::ser::serialize_into (24 samples, 0.07%)</title><rect x="80.4034%" y="2005" width="0.0690%" height="15" fill="rgb(209,177,9)" fg:x="27982" fg:w="24"/><text x="80.6534%" y="2015.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (24 samples, 0.07%)</title><rect x="80.4034%" y="1989" width="0.0690%" height="15" fill="rgb(227,119,30)" fg:x="27982" fg:w="24"/><text x="80.6534%" y="1999.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSet&gt;::serialize (24 samples, 0.07%)</title><rect x="80.4034%" y="1973" width="0.0690%" height="15" fill="rgb(234,106,41)" fg:x="27982" fg:w="24"/><text x="80.6534%" y="1983.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (24 samples, 0.07%)</title><rect x="80.4034%" y="1957" width="0.0690%" height="15" fill="rgb(244,103,47)" fg:x="27982" fg:w="24"/><text x="80.6534%" y="1967.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetV0&gt;::serialize (24 samples, 0.07%)</title><rect x="80.4034%" y="1941" width="0.0690%" height="15" fill="rgb(212,211,25)" fg:x="27982" fg:w="24"/><text x="80.6534%" y="1951.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (24 samples, 0.07%)</title><rect x="80.4034%" y="1925" width="0.0690%" height="15" fill="rgb(208,63,53)" fg:x="27982" fg:w="24"/><text x="80.6534%" y="1935.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetMut&gt;::serialize (24 samples, 0.07%)</title><rect x="80.4034%" y="1909" width="0.0690%" height="15" fill="rgb(213,176,21)" fg:x="27982" fg:w="24"/><text x="80.6534%" y="1919.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (24 samples, 0.07%)</title><rect x="80.4034%" y="1893" width="0.0690%" height="15" fill="rgb(243,124,12)" fg:x="27982" fg:w="24"/><text x="80.6534%" y="1903.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::serialize (24 samples, 0.07%)</title><rect x="80.4034%" y="1877" width="0.0690%" height="15" fill="rgb(239,2,35)" fg:x="27982" fg:w="24"/><text x="80.6534%" y="1887.50"></text></g><g><title>serde::ser::Serializer::collect_map (24 samples, 0.07%)</title><rect x="80.4034%" y="1861" width="0.0690%" height="15" fill="rgb(253,169,22)" fg:x="27982" fg:w="24"/><text x="80.6534%" y="1871.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (10 samples, 0.03%)</title><rect x="80.4724%" y="2117" width="0.0287%" height="15" fill="rgb(254,51,12)" fg:x="28006" fg:w="10"/><text x="80.7224%" y="2127.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (10 samples, 0.03%)</title><rect x="80.4724%" y="2101" width="0.0287%" height="15" fill="rgb(244,17,47)" fg:x="28006" fg:w="10"/><text x="80.7224%" y="2111.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (10 samples, 0.03%)</title><rect x="80.4724%" y="2085" width="0.0287%" height="15" fill="rgb(251,45,46)" fg:x="28006" fg:w="10"/><text x="80.7224%" y="2095.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.03%)</title><rect x="80.4724%" y="2069" width="0.0287%" height="15" fill="rgb(223,87,43)" fg:x="28006" fg:w="10"/><text x="80.7224%" y="2079.50"></text></g><g><title>rayon_core::join::join_context (7 samples, 0.02%)</title><rect x="80.4810%" y="2053" width="0.0201%" height="15" fill="rgb(230,132,31)" fg:x="28009" fg:w="7"/><text x="80.7310%" y="2063.50"></text></g><g><title>rayon_core::registry::in_worker (7 samples, 0.02%)</title><rect x="80.4810%" y="2037" width="0.0201%" height="15" fill="rgb(206,99,1)" fg:x="28009" fg:w="7"/><text x="80.7310%" y="2047.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (7 samples, 0.02%)</title><rect x="80.4810%" y="2021" width="0.0201%" height="15" fill="rgb(227,110,25)" fg:x="28009" fg:w="7"/><text x="80.7310%" y="2031.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (4 samples, 0.01%)</title><rect x="80.5155%" y="1829" width="0.0115%" height="15" fill="rgb(217,182,7)" fg:x="28021" fg:w="4"/><text x="80.7655%" y="1839.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (4 samples, 0.01%)</title><rect x="80.5155%" y="1813" width="0.0115%" height="15" fill="rgb(250,176,4)" fg:x="28021" fg:w="4"/><text x="80.7655%" y="1823.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (4 samples, 0.01%)</title><rect x="80.5155%" y="1797" width="0.0115%" height="15" fill="rgb(244,98,30)" fg:x="28021" fg:w="4"/><text x="80.7655%" y="1807.50"></text></g><g><title>rayon_core::job::JobRef::execute (4 samples, 0.01%)</title><rect x="80.5155%" y="1781" width="0.0115%" height="15" fill="rgb(228,150,42)" fg:x="28021" fg:w="4"/><text x="80.7655%" y="1791.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (4 samples, 0.01%)</title><rect x="80.5155%" y="1765" width="0.0115%" height="15" fill="rgb(231,91,46)" fg:x="28021" fg:w="4"/><text x="80.7655%" y="1775.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (4 samples, 0.01%)</title><rect x="80.5155%" y="1749" width="0.0115%" height="15" fill="rgb(252,161,32)" fg:x="28021" fg:w="4"/><text x="80.7655%" y="1759.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (4 samples, 0.01%)</title><rect x="80.5155%" y="1733" width="0.0115%" height="15" fill="rgb(236,69,41)" fg:x="28021" fg:w="4"/><text x="80.7655%" y="1743.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.01%)</title><rect x="80.5155%" y="1717" width="0.0115%" height="15" fill="rgb(212,160,3)" fg:x="28021" fg:w="4"/><text x="80.7655%" y="1727.50"></text></g><g><title>std::panicking::try (4 samples, 0.01%)</title><rect x="80.5155%" y="1701" width="0.0115%" height="15" fill="rgb(216,5,50)" fg:x="28021" fg:w="4"/><text x="80.7655%" y="1711.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.01%)</title><rect x="80.5155%" y="1685" width="0.0115%" height="15" fill="rgb(241,138,25)" fg:x="28021" fg:w="4"/><text x="80.7655%" y="1695.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.01%)</title><rect x="80.5155%" y="1669" width="0.0115%" height="15" fill="rgb(239,42,18)" fg:x="28021" fg:w="4"/><text x="80.7655%" y="1679.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (4 samples, 0.01%)</title><rect x="80.5155%" y="1653" width="0.0115%" height="15" fill="rgb(239,40,7)" fg:x="28021" fg:w="4"/><text x="80.7655%" y="1663.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (4 samples, 0.01%)</title><rect x="80.5155%" y="1637" width="0.0115%" height="15" fill="rgb(239,11,31)" fg:x="28021" fg:w="4"/><text x="80.7655%" y="1647.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.01%)</title><rect x="80.5155%" y="1621" width="0.0115%" height="15" fill="rgb(224,77,40)" fg:x="28021" fg:w="4"/><text x="80.7655%" y="1631.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.01%)</title><rect x="80.5155%" y="1605" width="0.0115%" height="15" fill="rgb(226,15,5)" fg:x="28021" fg:w="4"/><text x="80.7655%" y="1615.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.01%)</title><rect x="80.5155%" y="1589" width="0.0115%" height="15" fill="rgb(254,188,5)" fg:x="28021" fg:w="4"/><text x="80.7655%" y="1599.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.01%)</title><rect x="80.5155%" y="1573" width="0.0115%" height="15" fill="rgb(241,148,52)" fg:x="28021" fg:w="4"/><text x="80.7655%" y="1583.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.01%)</title><rect x="80.5155%" y="1557" width="0.0115%" height="15" fill="rgb(251,48,36)" fg:x="28021" fg:w="4"/><text x="80.7655%" y="1567.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (4 samples, 0.01%)</title><rect x="80.5270%" y="1701" width="0.0115%" height="15" fill="rgb(243,83,13)" fg:x="28025" fg:w="4"/><text x="80.7770%" y="1711.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (4 samples, 0.01%)</title><rect x="80.5270%" y="1685" width="0.0115%" height="15" fill="rgb(210,105,0)" fg:x="28025" fg:w="4"/><text x="80.7770%" y="1695.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (4 samples, 0.01%)</title><rect x="80.5270%" y="1669" width="0.0115%" height="15" fill="rgb(239,60,36)" fg:x="28025" fg:w="4"/><text x="80.7770%" y="1679.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (4 samples, 0.01%)</title><rect x="80.5270%" y="1653" width="0.0115%" height="15" fill="rgb(210,20,0)" fg:x="28025" fg:w="4"/><text x="80.7770%" y="1663.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="80.5270%" y="1637" width="0.0115%" height="15" fill="rgb(244,26,53)" fg:x="28025" fg:w="4"/><text x="80.7770%" y="1647.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4 samples, 0.01%)</title><rect x="80.5270%" y="1621" width="0.0115%" height="15" fill="rgb(240,100,49)" fg:x="28025" fg:w="4"/><text x="80.7770%" y="1631.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (4 samples, 0.01%)</title><rect x="80.5270%" y="1605" width="0.0115%" height="15" fill="rgb(250,46,45)" fg:x="28025" fg:w="4"/><text x="80.7770%" y="1615.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (4 samples, 0.01%)</title><rect x="80.5270%" y="1589" width="0.0115%" height="15" fill="rgb(220,181,29)" fg:x="28025" fg:w="4"/><text x="80.7770%" y="1599.50"></text></g><g><title>aptos_executor::components::apply_chunk_output::ApplyChunkOutput::assemble_ledger_diff::{{closure}} (4 samples, 0.01%)</title><rect x="80.5270%" y="1573" width="0.0115%" height="15" fill="rgb(213,137,33)" fg:x="28025" fg:w="4"/><text x="80.7770%" y="1583.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSet as aptos_crypto::hash::CryptoHash&gt;::hash (4 samples, 0.01%)</title><rect x="80.5270%" y="1557" width="0.0115%" height="15" fill="rgb(213,27,48)" fg:x="28025" fg:w="4"/><text x="80.7770%" y="1567.50"></text></g><g><title>bcs::ser::serialize_into (4 samples, 0.01%)</title><rect x="80.5270%" y="1541" width="0.0115%" height="15" fill="rgb(245,180,39)" fg:x="28025" fg:w="4"/><text x="80.7770%" y="1551.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.01%)</title><rect x="80.5270%" y="1525" width="0.0115%" height="15" fill="rgb(212,158,42)" fg:x="28025" fg:w="4"/><text x="80.7770%" y="1535.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSet&gt;::serialize (4 samples, 0.01%)</title><rect x="80.5270%" y="1509" width="0.0115%" height="15" fill="rgb(228,193,18)" fg:x="28025" fg:w="4"/><text x="80.7770%" y="1519.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (4 samples, 0.01%)</title><rect x="80.5270%" y="1493" width="0.0115%" height="15" fill="rgb(245,172,29)" fg:x="28025" fg:w="4"/><text x="80.7770%" y="1503.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetV0&gt;::serialize (4 samples, 0.01%)</title><rect x="80.5270%" y="1477" width="0.0115%" height="15" fill="rgb(207,98,24)" fg:x="28025" fg:w="4"/><text x="80.7770%" y="1487.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (4 samples, 0.01%)</title><rect x="80.5270%" y="1461" width="0.0115%" height="15" fill="rgb(249,92,26)" fg:x="28025" fg:w="4"/><text x="80.7770%" y="1471.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetMut&gt;::serialize (4 samples, 0.01%)</title><rect x="80.5270%" y="1445" width="0.0115%" height="15" fill="rgb(217,176,26)" fg:x="28025" fg:w="4"/><text x="80.7770%" y="1455.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.01%)</title><rect x="80.5270%" y="1429" width="0.0115%" height="15" fill="rgb(221,8,39)" fg:x="28025" fg:w="4"/><text x="80.7770%" y="1439.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::serialize (4 samples, 0.01%)</title><rect x="80.5270%" y="1413" width="0.0115%" height="15" fill="rgb(208,90,18)" fg:x="28025" fg:w="4"/><text x="80.7770%" y="1423.50"></text></g><g><title>serde::ser::Serializer::collect_map (4 samples, 0.01%)</title><rect x="80.5270%" y="1397" width="0.0115%" height="15" fill="rgb(207,202,30)" fg:x="28025" fg:w="4"/><text x="80.7770%" y="1407.50"></text></g><g><title>&lt;bcs::ser::MapSerializer&lt;W&gt; as serde::ser::SerializeMap&gt;::end (4 samples, 0.01%)</title><rect x="80.5270%" y="1381" width="0.0115%" height="15" fill="rgb(231,124,22)" fg:x="28025" fg:w="4"/><text x="80.7770%" y="1391.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.01%)</title><rect x="80.5270%" y="1365" width="0.0115%" height="15" fill="rgb(206,15,5)" fg:x="28025" fg:w="4"/><text x="80.7770%" y="1375.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSetHasher as std::io::Write&gt;::write (4 samples, 0.01%)</title><rect x="80.5270%" y="1349" width="0.0115%" height="15" fill="rgb(239,16,52)" fg:x="28025" fg:w="4"/><text x="80.7770%" y="1359.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (4 samples, 0.01%)</title><rect x="80.5270%" y="1333" width="0.0115%" height="15" fill="rgb(245,213,29)" fg:x="28025" fg:w="4"/><text x="80.7770%" y="1343.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (4 samples, 0.01%)</title><rect x="80.5270%" y="1317" width="0.0115%" height="15" fill="rgb(213,203,36)" fg:x="28025" fg:w="4"/><text x="80.7770%" y="1327.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (4 samples, 0.01%)</title><rect x="80.5270%" y="1301" width="0.0115%" height="15" fill="rgb(209,55,18)" fg:x="28025" fg:w="4"/><text x="80.7770%" y="1311.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (4 samples, 0.01%)</title><rect x="80.5270%" y="1285" width="0.0115%" height="15" fill="rgb(207,133,49)" fg:x="28025" fg:w="4"/><text x="80.7770%" y="1295.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (18 samples, 0.05%)</title><rect x="80.5011%" y="2117" width="0.0517%" height="15" fill="rgb(240,33,46)" fg:x="28016" fg:w="18"/><text x="80.7511%" y="2127.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (18 samples, 0.05%)</title><rect x="80.5011%" y="2101" width="0.0517%" height="15" fill="rgb(212,35,2)" fg:x="28016" fg:w="18"/><text x="80.7511%" y="2111.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (18 samples, 0.05%)</title><rect x="80.5011%" y="2085" width="0.0517%" height="15" fill="rgb(231,119,28)" fg:x="28016" fg:w="18"/><text x="80.7511%" y="2095.50"></text></g><g><title>rayon_core::job::JobRef::execute (18 samples, 0.05%)</title><rect x="80.5011%" y="2069" width="0.0517%" height="15" fill="rgb(252,178,7)" fg:x="28016" fg:w="18"/><text x="80.7511%" y="2079.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (18 samples, 0.05%)</title><rect x="80.5011%" y="2053" width="0.0517%" height="15" fill="rgb(251,91,4)" fg:x="28016" fg:w="18"/><text x="80.7511%" y="2063.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (18 samples, 0.05%)</title><rect x="80.5011%" y="2037" width="0.0517%" height="15" fill="rgb(233,122,19)" fg:x="28016" fg:w="18"/><text x="80.7511%" y="2047.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (18 samples, 0.05%)</title><rect x="80.5011%" y="2021" width="0.0517%" height="15" fill="rgb(231,208,46)" fg:x="28016" fg:w="18"/><text x="80.7511%" y="2031.50"></text></g><g><title>std::panic::catch_unwind (18 samples, 0.05%)</title><rect x="80.5011%" y="2005" width="0.0517%" height="15" fill="rgb(243,15,41)" fg:x="28016" fg:w="18"/><text x="80.7511%" y="2015.50"></text></g><g><title>std::panicking::try (18 samples, 0.05%)</title><rect x="80.5011%" y="1989" width="0.0517%" height="15" fill="rgb(210,32,43)" fg:x="28016" fg:w="18"/><text x="80.7511%" y="1999.50"></text></g><g><title>std::panicking::try::do_call (18 samples, 0.05%)</title><rect x="80.5011%" y="1973" width="0.0517%" height="15" fill="rgb(222,177,15)" fg:x="28016" fg:w="18"/><text x="80.7511%" y="1983.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (18 samples, 0.05%)</title><rect x="80.5011%" y="1957" width="0.0517%" height="15" fill="rgb(244,121,34)" fg:x="28016" fg:w="18"/><text x="80.7511%" y="1967.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (18 samples, 0.05%)</title><rect x="80.5011%" y="1941" width="0.0517%" height="15" fill="rgb(234,138,4)" fg:x="28016" fg:w="18"/><text x="80.7511%" y="1951.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (18 samples, 0.05%)</title><rect x="80.5011%" y="1925" width="0.0517%" height="15" fill="rgb(240,97,48)" fg:x="28016" fg:w="18"/><text x="80.7511%" y="1935.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (18 samples, 0.05%)</title><rect x="80.5011%" y="1909" width="0.0517%" height="15" fill="rgb(237,65,54)" fg:x="28016" fg:w="18"/><text x="80.7511%" y="1919.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (18 samples, 0.05%)</title><rect x="80.5011%" y="1893" width="0.0517%" height="15" fill="rgb(214,25,24)" fg:x="28016" fg:w="18"/><text x="80.7511%" y="1903.50"></text></g><g><title>rayon_core::join::join_context (15 samples, 0.04%)</title><rect x="80.5097%" y="1877" width="0.0431%" height="15" fill="rgb(213,5,3)" fg:x="28019" fg:w="15"/><text x="80.7597%" y="1887.50"></text></g><g><title>rayon_core::registry::in_worker (15 samples, 0.04%)</title><rect x="80.5097%" y="1861" width="0.0431%" height="15" fill="rgb(219,81,29)" fg:x="28019" fg:w="15"/><text x="80.7597%" y="1871.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (15 samples, 0.04%)</title><rect x="80.5097%" y="1845" width="0.0431%" height="15" fill="rgb(220,43,48)" fg:x="28019" fg:w="15"/><text x="80.7597%" y="1855.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (9 samples, 0.03%)</title><rect x="80.5270%" y="1829" width="0.0259%" height="15" fill="rgb(239,157,2)" fg:x="28025" fg:w="9"/><text x="80.7770%" y="1839.50"></text></g><g><title>std::panic::catch_unwind (9 samples, 0.03%)</title><rect x="80.5270%" y="1813" width="0.0259%" height="15" fill="rgb(213,104,43)" fg:x="28025" fg:w="9"/><text x="80.7770%" y="1823.50"></text></g><g><title>std::panicking::try (9 samples, 0.03%)</title><rect x="80.5270%" y="1797" width="0.0259%" height="15" fill="rgb(237,84,9)" fg:x="28025" fg:w="9"/><text x="80.7770%" y="1807.50"></text></g><g><title>std::panicking::try::do_call (9 samples, 0.03%)</title><rect x="80.5270%" y="1781" width="0.0259%" height="15" fill="rgb(252,6,33)" fg:x="28025" fg:w="9"/><text x="80.7770%" y="1791.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (9 samples, 0.03%)</title><rect x="80.5270%" y="1765" width="0.0259%" height="15" fill="rgb(251,172,22)" fg:x="28025" fg:w="9"/><text x="80.7770%" y="1775.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (9 samples, 0.03%)</title><rect x="80.5270%" y="1749" width="0.0259%" height="15" fill="rgb(244,91,53)" fg:x="28025" fg:w="9"/><text x="80.7770%" y="1759.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (9 samples, 0.03%)</title><rect x="80.5270%" y="1733" width="0.0259%" height="15" fill="rgb(219,29,30)" fg:x="28025" fg:w="9"/><text x="80.7770%" y="1743.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.03%)</title><rect x="80.5270%" y="1717" width="0.0259%" height="15" fill="rgb(213,3,15)" fg:x="28025" fg:w="9"/><text x="80.7770%" y="1727.50"></text></g><g><title>rayon_core::join::join_context (5 samples, 0.01%)</title><rect x="80.5385%" y="1701" width="0.0144%" height="15" fill="rgb(208,25,28)" fg:x="28029" fg:w="5"/><text x="80.7885%" y="1711.50"></text></g><g><title>rayon_core::registry::in_worker (5 samples, 0.01%)</title><rect x="80.5385%" y="1685" width="0.0144%" height="15" fill="rgb(252,144,25)" fg:x="28029" fg:w="5"/><text x="80.7885%" y="1695.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5 samples, 0.01%)</title><rect x="80.5385%" y="1669" width="0.0144%" height="15" fill="rgb(226,220,25)" fg:x="28029" fg:w="5"/><text x="80.7885%" y="1679.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (7 samples, 0.02%)</title><rect x="80.5528%" y="1989" width="0.0201%" height="15" fill="rgb(212,131,28)" fg:x="28034" fg:w="7"/><text x="80.8028%" y="1999.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (7 samples, 0.02%)</title><rect x="80.5528%" y="1973" width="0.0201%" height="15" fill="rgb(219,143,52)" fg:x="28034" fg:w="7"/><text x="80.8028%" y="1983.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (7 samples, 0.02%)</title><rect x="80.5528%" y="1957" width="0.0201%" height="15" fill="rgb(215,56,7)" fg:x="28034" fg:w="7"/><text x="80.8028%" y="1967.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (7 samples, 0.02%)</title><rect x="80.5528%" y="1941" width="0.0201%" height="15" fill="rgb(239,59,51)" fg:x="28034" fg:w="7"/><text x="80.8028%" y="1951.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.02%)</title><rect x="80.5528%" y="1925" width="0.0201%" height="15" fill="rgb(209,215,4)" fg:x="28034" fg:w="7"/><text x="80.8028%" y="1935.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (7 samples, 0.02%)</title><rect x="80.5528%" y="1909" width="0.0201%" height="15" fill="rgb(221,118,39)" fg:x="28034" fg:w="7"/><text x="80.8028%" y="1919.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (7 samples, 0.02%)</title><rect x="80.5528%" y="1893" width="0.0201%" height="15" fill="rgb(236,6,44)" fg:x="28034" fg:w="7"/><text x="80.8028%" y="1903.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (7 samples, 0.02%)</title><rect x="80.5528%" y="1877" width="0.0201%" height="15" fill="rgb(216,122,9)" fg:x="28034" fg:w="7"/><text x="80.8028%" y="1887.50"></text></g><g><title>aptos_executor::components::apply_chunk_output::ApplyChunkOutput::assemble_ledger_diff::{{closure}} (7 samples, 0.02%)</title><rect x="80.5528%" y="1861" width="0.0201%" height="15" fill="rgb(244,134,42)" fg:x="28034" fg:w="7"/><text x="80.8028%" y="1871.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSet as aptos_crypto::hash::CryptoHash&gt;::hash (7 samples, 0.02%)</title><rect x="80.5528%" y="1845" width="0.0201%" height="15" fill="rgb(209,189,35)" fg:x="28034" fg:w="7"/><text x="80.8028%" y="1855.50"></text></g><g><title>bcs::ser::serialize_into (6 samples, 0.02%)</title><rect x="80.5557%" y="1829" width="0.0172%" height="15" fill="rgb(250,47,36)" fg:x="28035" fg:w="6"/><text x="80.8057%" y="1839.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.02%)</title><rect x="80.5557%" y="1813" width="0.0172%" height="15" fill="rgb(252,112,4)" fg:x="28035" fg:w="6"/><text x="80.8057%" y="1823.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSet&gt;::serialize (6 samples, 0.02%)</title><rect x="80.5557%" y="1797" width="0.0172%" height="15" fill="rgb(221,79,51)" fg:x="28035" fg:w="6"/><text x="80.8057%" y="1807.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (6 samples, 0.02%)</title><rect x="80.5557%" y="1781" width="0.0172%" height="15" fill="rgb(232,65,53)" fg:x="28035" fg:w="6"/><text x="80.8057%" y="1791.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetV0&gt;::serialize (6 samples, 0.02%)</title><rect x="80.5557%" y="1765" width="0.0172%" height="15" fill="rgb(211,37,7)" fg:x="28035" fg:w="6"/><text x="80.8057%" y="1775.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (6 samples, 0.02%)</title><rect x="80.5557%" y="1749" width="0.0172%" height="15" fill="rgb(234,221,18)" fg:x="28035" fg:w="6"/><text x="80.8057%" y="1759.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetMut&gt;::serialize (6 samples, 0.02%)</title><rect x="80.5557%" y="1733" width="0.0172%" height="15" fill="rgb(220,158,26)" fg:x="28035" fg:w="6"/><text x="80.8057%" y="1743.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.02%)</title><rect x="80.5557%" y="1717" width="0.0172%" height="15" fill="rgb(220,70,6)" fg:x="28035" fg:w="6"/><text x="80.8057%" y="1727.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::serialize (6 samples, 0.02%)</title><rect x="80.5557%" y="1701" width="0.0172%" height="15" fill="rgb(250,39,48)" fg:x="28035" fg:w="6"/><text x="80.8057%" y="1711.50"></text></g><g><title>serde::ser::Serializer::collect_map (6 samples, 0.02%)</title><rect x="80.5557%" y="1685" width="0.0172%" height="15" fill="rgb(206,40,27)" fg:x="28035" fg:w="6"/><text x="80.8057%" y="1695.50"></text></g><g><title>&lt;bcs::ser::MapSerializer&lt;W&gt; as serde::ser::SerializeMap&gt;::end (6 samples, 0.02%)</title><rect x="80.5557%" y="1669" width="0.0172%" height="15" fill="rgb(247,80,36)" fg:x="28035" fg:w="6"/><text x="80.8057%" y="1679.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.02%)</title><rect x="80.5557%" y="1653" width="0.0172%" height="15" fill="rgb(222,9,20)" fg:x="28035" fg:w="6"/><text x="80.8057%" y="1663.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSetHasher as std::io::Write&gt;::write (6 samples, 0.02%)</title><rect x="80.5557%" y="1637" width="0.0172%" height="15" fill="rgb(217,26,45)" fg:x="28035" fg:w="6"/><text x="80.8057%" y="1647.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (6 samples, 0.02%)</title><rect x="80.5557%" y="1621" width="0.0172%" height="15" fill="rgb(221,67,14)" fg:x="28035" fg:w="6"/><text x="80.8057%" y="1631.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (6 samples, 0.02%)</title><rect x="80.5557%" y="1605" width="0.0172%" height="15" fill="rgb(248,100,24)" fg:x="28035" fg:w="6"/><text x="80.8057%" y="1615.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (6 samples, 0.02%)</title><rect x="80.5557%" y="1589" width="0.0172%" height="15" fill="rgb(230,187,16)" fg:x="28035" fg:w="6"/><text x="80.8057%" y="1599.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (6 samples, 0.02%)</title><rect x="80.5557%" y="1573" width="0.0172%" height="15" fill="rgb(205,108,13)" fg:x="28035" fg:w="6"/><text x="80.8057%" y="1583.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (5 samples, 0.01%)</title><rect x="80.5902%" y="1765" width="0.0144%" height="15" fill="rgb(235,71,51)" fg:x="28047" fg:w="5"/><text x="80.8402%" y="1775.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (5 samples, 0.01%)</title><rect x="80.5902%" y="1749" width="0.0144%" height="15" fill="rgb(251,172,48)" fg:x="28047" fg:w="5"/><text x="80.8402%" y="1759.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (5 samples, 0.01%)</title><rect x="80.5902%" y="1733" width="0.0144%" height="15" fill="rgb(240,96,49)" fg:x="28047" fg:w="5"/><text x="80.8402%" y="1743.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (5 samples, 0.01%)</title><rect x="80.5902%" y="1717" width="0.0144%" height="15" fill="rgb(235,46,36)" fg:x="28047" fg:w="5"/><text x="80.8402%" y="1727.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.01%)</title><rect x="80.5931%" y="1701" width="0.0115%" height="15" fill="rgb(244,3,49)" fg:x="28048" fg:w="4"/><text x="80.8431%" y="1711.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.01%)</title><rect x="80.5931%" y="1685" width="0.0115%" height="15" fill="rgb(206,78,54)" fg:x="28048" fg:w="4"/><text x="80.8431%" y="1695.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.01%)</title><rect x="80.5931%" y="1669" width="0.0115%" height="15" fill="rgb(208,85,42)" fg:x="28048" fg:w="4"/><text x="80.8431%" y="1679.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (4 samples, 0.01%)</title><rect x="80.5931%" y="1653" width="0.0115%" height="15" fill="rgb(219,196,21)" fg:x="28048" fg:w="4"/><text x="80.8431%" y="1663.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.01%)</title><rect x="80.5931%" y="1637" width="0.0115%" height="15" fill="rgb(238,19,9)" fg:x="28048" fg:w="4"/><text x="80.8431%" y="1647.50"></text></g><g><title>std::panicking::try (4 samples, 0.01%)</title><rect x="80.5931%" y="1621" width="0.0115%" height="15" fill="rgb(206,86,13)" fg:x="28048" fg:w="4"/><text x="80.8431%" y="1631.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.01%)</title><rect x="80.5931%" y="1605" width="0.0115%" height="15" fill="rgb(214,123,40)" fg:x="28048" fg:w="4"/><text x="80.8431%" y="1615.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.01%)</title><rect x="80.5931%" y="1589" width="0.0115%" height="15" fill="rgb(243,53,5)" fg:x="28048" fg:w="4"/><text x="80.8431%" y="1599.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (4 samples, 0.01%)</title><rect x="80.5931%" y="1573" width="0.0115%" height="15" fill="rgb(254,186,31)" fg:x="28048" fg:w="4"/><text x="80.8431%" y="1583.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.01%)</title><rect x="80.5931%" y="1557" width="0.0115%" height="15" fill="rgb(221,216,25)" fg:x="28048" fg:w="4"/><text x="80.8431%" y="1567.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.01%)</title><rect x="80.5931%" y="1541" width="0.0115%" height="15" fill="rgb(248,107,42)" fg:x="28048" fg:w="4"/><text x="80.8431%" y="1551.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (71 samples, 0.20%)</title><rect x="80.4034%" y="2229" width="0.2040%" height="15" fill="rgb(221,85,43)" fg:x="27982" fg:w="71"/><text x="80.6534%" y="2239.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (71 samples, 0.20%)</title><rect x="80.4034%" y="2213" width="0.2040%" height="15" fill="rgb(225,34,24)" fg:x="27982" fg:w="71"/><text x="80.6534%" y="2223.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (71 samples, 0.20%)</title><rect x="80.4034%" y="2197" width="0.2040%" height="15" fill="rgb(211,119,1)" fg:x="27982" fg:w="71"/><text x="80.6534%" y="2207.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (71 samples, 0.20%)</title><rect x="80.4034%" y="2181" width="0.2040%" height="15" fill="rgb(254,216,46)" fg:x="27982" fg:w="71"/><text x="80.6534%" y="2191.50"></text></g><g><title>rayon_core::join::join_context (47 samples, 0.14%)</title><rect x="80.4724%" y="2165" width="0.1350%" height="15" fill="rgb(238,11,38)" fg:x="28006" fg:w="47"/><text x="80.7224%" y="2175.50"></text></g><g><title>rayon_core::registry::in_worker (47 samples, 0.14%)</title><rect x="80.4724%" y="2149" width="0.1350%" height="15" fill="rgb(233,50,15)" fg:x="28006" fg:w="47"/><text x="80.7224%" y="2159.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (47 samples, 0.14%)</title><rect x="80.4724%" y="2133" width="0.1350%" height="15" fill="rgb(217,181,29)" fg:x="28006" fg:w="47"/><text x="80.7224%" y="2143.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (19 samples, 0.05%)</title><rect x="80.5528%" y="2117" width="0.0546%" height="15" fill="rgb(214,56,3)" fg:x="28034" fg:w="19"/><text x="80.8028%" y="2127.50"></text></g><g><title>std::panic::catch_unwind (19 samples, 0.05%)</title><rect x="80.5528%" y="2101" width="0.0546%" height="15" fill="rgb(230,69,45)" fg:x="28034" fg:w="19"/><text x="80.8028%" y="2111.50"></text></g><g><title>std::panicking::try (19 samples, 0.05%)</title><rect x="80.5528%" y="2085" width="0.0546%" height="15" fill="rgb(224,201,50)" fg:x="28034" fg:w="19"/><text x="80.8028%" y="2095.50"></text></g><g><title>std::panicking::try::do_call (19 samples, 0.05%)</title><rect x="80.5528%" y="2069" width="0.0546%" height="15" fill="rgb(217,228,18)" fg:x="28034" fg:w="19"/><text x="80.8028%" y="2079.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (19 samples, 0.05%)</title><rect x="80.5528%" y="2053" width="0.0546%" height="15" fill="rgb(239,33,44)" fg:x="28034" fg:w="19"/><text x="80.8028%" y="2063.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (19 samples, 0.05%)</title><rect x="80.5528%" y="2037" width="0.0546%" height="15" fill="rgb(248,210,23)" fg:x="28034" fg:w="19"/><text x="80.8028%" y="2047.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (19 samples, 0.05%)</title><rect x="80.5528%" y="2021" width="0.0546%" height="15" fill="rgb(253,135,8)" fg:x="28034" fg:w="19"/><text x="80.8028%" y="2031.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (19 samples, 0.05%)</title><rect x="80.5528%" y="2005" width="0.0546%" height="15" fill="rgb(217,98,21)" fg:x="28034" fg:w="19"/><text x="80.8028%" y="2015.50"></text></g><g><title>rayon_core::join::join_context (12 samples, 0.03%)</title><rect x="80.5730%" y="1989" width="0.0345%" height="15" fill="rgb(253,130,21)" fg:x="28041" fg:w="12"/><text x="80.8230%" y="1999.50"></text></g><g><title>rayon_core::registry::in_worker (12 samples, 0.03%)</title><rect x="80.5730%" y="1973" width="0.0345%" height="15" fill="rgb(207,81,54)" fg:x="28041" fg:w="12"/><text x="80.8230%" y="1983.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (12 samples, 0.03%)</title><rect x="80.5730%" y="1957" width="0.0345%" height="15" fill="rgb(232,48,33)" fg:x="28041" fg:w="12"/><text x="80.8230%" y="1967.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (8 samples, 0.02%)</title><rect x="80.5844%" y="1941" width="0.0230%" height="15" fill="rgb(211,9,35)" fg:x="28045" fg:w="8"/><text x="80.8344%" y="1951.50"></text></g><g><title>std::panic::catch_unwind (8 samples, 0.02%)</title><rect x="80.5844%" y="1925" width="0.0230%" height="15" fill="rgb(205,152,21)" fg:x="28045" fg:w="8"/><text x="80.8344%" y="1935.50"></text></g><g><title>std::panicking::try (8 samples, 0.02%)</title><rect x="80.5844%" y="1909" width="0.0230%" height="15" fill="rgb(249,21,27)" fg:x="28045" fg:w="8"/><text x="80.8344%" y="1919.50"></text></g><g><title>std::panicking::try::do_call (8 samples, 0.02%)</title><rect x="80.5844%" y="1893" width="0.0230%" height="15" fill="rgb(252,29,24)" fg:x="28045" fg:w="8"/><text x="80.8344%" y="1903.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (8 samples, 0.02%)</title><rect x="80.5844%" y="1877" width="0.0230%" height="15" fill="rgb(230,130,50)" fg:x="28045" fg:w="8"/><text x="80.8344%" y="1887.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (8 samples, 0.02%)</title><rect x="80.5844%" y="1861" width="0.0230%" height="15" fill="rgb(239,144,14)" fg:x="28045" fg:w="8"/><text x="80.8344%" y="1871.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (8 samples, 0.02%)</title><rect x="80.5844%" y="1845" width="0.0230%" height="15" fill="rgb(227,111,50)" fg:x="28045" fg:w="8"/><text x="80.8344%" y="1855.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (8 samples, 0.02%)</title><rect x="80.5844%" y="1829" width="0.0230%" height="15" fill="rgb(254,84,20)" fg:x="28045" fg:w="8"/><text x="80.8344%" y="1839.50"></text></g><g><title>rayon_core::join::join_context (6 samples, 0.02%)</title><rect x="80.5902%" y="1813" width="0.0172%" height="15" fill="rgb(232,90,48)" fg:x="28047" fg:w="6"/><text x="80.8402%" y="1823.50"></text></g><g><title>rayon_core::registry::in_worker (6 samples, 0.02%)</title><rect x="80.5902%" y="1797" width="0.0172%" height="15" fill="rgb(253,63,47)" fg:x="28047" fg:w="6"/><text x="80.8402%" y="1807.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (6 samples, 0.02%)</title><rect x="80.5902%" y="1781" width="0.0172%" height="15" fill="rgb(251,146,35)" fg:x="28047" fg:w="6"/><text x="80.8402%" y="1791.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (17 samples, 0.05%)</title><rect x="80.6074%" y="1989" width="0.0488%" height="15" fill="rgb(229,192,35)" fg:x="28053" fg:w="17"/><text x="80.8574%" y="1999.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (17 samples, 0.05%)</title><rect x="80.6074%" y="1973" width="0.0488%" height="15" fill="rgb(225,68,9)" fg:x="28053" fg:w="17"/><text x="80.8574%" y="1983.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (17 samples, 0.05%)</title><rect x="80.6074%" y="1957" width="0.0488%" height="15" fill="rgb(214,97,34)" fg:x="28053" fg:w="17"/><text x="80.8574%" y="1967.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (17 samples, 0.05%)</title><rect x="80.6074%" y="1941" width="0.0488%" height="15" fill="rgb(253,31,26)" fg:x="28053" fg:w="17"/><text x="80.8574%" y="1951.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.05%)</title><rect x="80.6074%" y="1925" width="0.0488%" height="15" fill="rgb(225,151,47)" fg:x="28053" fg:w="17"/><text x="80.8574%" y="1935.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (17 samples, 0.05%)</title><rect x="80.6074%" y="1909" width="0.0488%" height="15" fill="rgb(206,185,9)" fg:x="28053" fg:w="17"/><text x="80.8574%" y="1919.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (17 samples, 0.05%)</title><rect x="80.6074%" y="1893" width="0.0488%" height="15" fill="rgb(249,65,17)" fg:x="28053" fg:w="17"/><text x="80.8574%" y="1903.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (17 samples, 0.05%)</title><rect x="80.6074%" y="1877" width="0.0488%" height="15" fill="rgb(220,110,10)" fg:x="28053" fg:w="17"/><text x="80.8574%" y="1887.50"></text></g><g><title>aptos_executor::components::apply_chunk_output::ApplyChunkOutput::assemble_ledger_diff::{{closure}} (17 samples, 0.05%)</title><rect x="80.6074%" y="1861" width="0.0488%" height="15" fill="rgb(222,198,49)" fg:x="28053" fg:w="17"/><text x="80.8574%" y="1871.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSet as aptos_crypto::hash::CryptoHash&gt;::hash (17 samples, 0.05%)</title><rect x="80.6074%" y="1845" width="0.0488%" height="15" fill="rgb(239,81,13)" fg:x="28053" fg:w="17"/><text x="80.8574%" y="1855.50"></text></g><g><title>bcs::ser::serialize_into (17 samples, 0.05%)</title><rect x="80.6074%" y="1829" width="0.0488%" height="15" fill="rgb(216,128,11)" fg:x="28053" fg:w="17"/><text x="80.8574%" y="1839.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (17 samples, 0.05%)</title><rect x="80.6074%" y="1813" width="0.0488%" height="15" fill="rgb(247,156,8)" fg:x="28053" fg:w="17"/><text x="80.8574%" y="1823.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSet&gt;::serialize (17 samples, 0.05%)</title><rect x="80.6074%" y="1797" width="0.0488%" height="15" fill="rgb(219,173,1)" fg:x="28053" fg:w="17"/><text x="80.8574%" y="1807.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (17 samples, 0.05%)</title><rect x="80.6074%" y="1781" width="0.0488%" height="15" fill="rgb(227,42,24)" fg:x="28053" fg:w="17"/><text x="80.8574%" y="1791.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetV0&gt;::serialize (17 samples, 0.05%)</title><rect x="80.6074%" y="1765" width="0.0488%" height="15" fill="rgb(253,219,50)" fg:x="28053" fg:w="17"/><text x="80.8574%" y="1775.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (17 samples, 0.05%)</title><rect x="80.6074%" y="1749" width="0.0488%" height="15" fill="rgb(215,191,54)" fg:x="28053" fg:w="17"/><text x="80.8574%" y="1759.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetMut&gt;::serialize (17 samples, 0.05%)</title><rect x="80.6074%" y="1733" width="0.0488%" height="15" fill="rgb(238,83,12)" fg:x="28053" fg:w="17"/><text x="80.8574%" y="1743.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (17 samples, 0.05%)</title><rect x="80.6074%" y="1717" width="0.0488%" height="15" fill="rgb(205,124,9)" fg:x="28053" fg:w="17"/><text x="80.8574%" y="1727.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::serialize (17 samples, 0.05%)</title><rect x="80.6074%" y="1701" width="0.0488%" height="15" fill="rgb(253,174,7)" fg:x="28053" fg:w="17"/><text x="80.8574%" y="1711.50"></text></g><g><title>serde::ser::Serializer::collect_map (17 samples, 0.05%)</title><rect x="80.6074%" y="1685" width="0.0488%" height="15" fill="rgb(206,134,49)" fg:x="28053" fg:w="17"/><text x="80.8574%" y="1695.50"></text></g><g><title>&lt;bcs::ser::MapSerializer&lt;W&gt; as serde::ser::SerializeMap&gt;::end (17 samples, 0.05%)</title><rect x="80.6074%" y="1669" width="0.0488%" height="15" fill="rgb(221,89,20)" fg:x="28053" fg:w="17"/><text x="80.8574%" y="1679.50"></text></g><g><title>std::io::Write::write_all (17 samples, 0.05%)</title><rect x="80.6074%" y="1653" width="0.0488%" height="15" fill="rgb(240,205,13)" fg:x="28053" fg:w="17"/><text x="80.8574%" y="1663.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSetHasher as std::io::Write&gt;::write (17 samples, 0.05%)</title><rect x="80.6074%" y="1637" width="0.0488%" height="15" fill="rgb(237,174,32)" fg:x="28053" fg:w="17"/><text x="80.8574%" y="1647.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (17 samples, 0.05%)</title><rect x="80.6074%" y="1621" width="0.0488%" height="15" fill="rgb(226,12,15)" fg:x="28053" fg:w="17"/><text x="80.8574%" y="1631.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (17 samples, 0.05%)</title><rect x="80.6074%" y="1605" width="0.0488%" height="15" fill="rgb(245,160,52)" fg:x="28053" fg:w="17"/><text x="80.8574%" y="1615.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (17 samples, 0.05%)</title><rect x="80.6074%" y="1589" width="0.0488%" height="15" fill="rgb(253,80,21)" fg:x="28053" fg:w="17"/><text x="80.8574%" y="1599.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (17 samples, 0.05%)</title><rect x="80.6074%" y="1573" width="0.0488%" height="15" fill="rgb(231,225,22)" fg:x="28053" fg:w="17"/><text x="80.8574%" y="1583.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (10 samples, 0.03%)</title><rect x="80.6276%" y="1557" width="0.0287%" height="15" fill="rgb(253,185,12)" fg:x="28060" fg:w="10"/><text x="80.8776%" y="1567.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (7 samples, 0.02%)</title><rect x="80.6592%" y="1877" width="0.0201%" height="15" fill="rgb(234,197,21)" fg:x="28071" fg:w="7"/><text x="80.9092%" y="1887.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (7 samples, 0.02%)</title><rect x="80.6592%" y="1861" width="0.0201%" height="15" fill="rgb(210,47,30)" fg:x="28071" fg:w="7"/><text x="80.9092%" y="1871.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (7 samples, 0.02%)</title><rect x="80.6592%" y="1845" width="0.0201%" height="15" fill="rgb(246,139,27)" fg:x="28071" fg:w="7"/><text x="80.9092%" y="1855.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (7 samples, 0.02%)</title><rect x="80.6592%" y="1829" width="0.0201%" height="15" fill="rgb(226,130,16)" fg:x="28071" fg:w="7"/><text x="80.9092%" y="1839.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.02%)</title><rect x="80.6592%" y="1813" width="0.0201%" height="15" fill="rgb(237,208,20)" fg:x="28071" fg:w="7"/><text x="80.9092%" y="1823.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (7 samples, 0.02%)</title><rect x="80.6592%" y="1797" width="0.0201%" height="15" fill="rgb(245,186,28)" fg:x="28071" fg:w="7"/><text x="80.9092%" y="1807.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (7 samples, 0.02%)</title><rect x="80.6592%" y="1781" width="0.0201%" height="15" fill="rgb(238,105,39)" fg:x="28071" fg:w="7"/><text x="80.9092%" y="1791.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (7 samples, 0.02%)</title><rect x="80.6592%" y="1765" width="0.0201%" height="15" fill="rgb(253,228,11)" fg:x="28071" fg:w="7"/><text x="80.9092%" y="1775.50"></text></g><g><title>aptos_executor::components::apply_chunk_output::ApplyChunkOutput::assemble_ledger_diff::{{closure}} (7 samples, 0.02%)</title><rect x="80.6592%" y="1749" width="0.0201%" height="15" fill="rgb(224,136,38)" fg:x="28071" fg:w="7"/><text x="80.9092%" y="1759.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSet as aptos_crypto::hash::CryptoHash&gt;::hash (7 samples, 0.02%)</title><rect x="80.6592%" y="1733" width="0.0201%" height="15" fill="rgb(211,3,25)" fg:x="28071" fg:w="7"/><text x="80.9092%" y="1743.50"></text></g><g><title>bcs::ser::serialize_into (7 samples, 0.02%)</title><rect x="80.6592%" y="1717" width="0.0201%" height="15" fill="rgb(238,66,34)" fg:x="28071" fg:w="7"/><text x="80.9092%" y="1727.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.02%)</title><rect x="80.6592%" y="1701" width="0.0201%" height="15" fill="rgb(223,188,11)" fg:x="28071" fg:w="7"/><text x="80.9092%" y="1711.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSet&gt;::serialize (7 samples, 0.02%)</title><rect x="80.6592%" y="1685" width="0.0201%" height="15" fill="rgb(221,10,35)" fg:x="28071" fg:w="7"/><text x="80.9092%" y="1695.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (7 samples, 0.02%)</title><rect x="80.6592%" y="1669" width="0.0201%" height="15" fill="rgb(223,18,44)" fg:x="28071" fg:w="7"/><text x="80.9092%" y="1679.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetV0&gt;::serialize (7 samples, 0.02%)</title><rect x="80.6592%" y="1653" width="0.0201%" height="15" fill="rgb(220,97,41)" fg:x="28071" fg:w="7"/><text x="80.9092%" y="1663.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (7 samples, 0.02%)</title><rect x="80.6592%" y="1637" width="0.0201%" height="15" fill="rgb(206,95,45)" fg:x="28071" fg:w="7"/><text x="80.9092%" y="1647.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetMut&gt;::serialize (7 samples, 0.02%)</title><rect x="80.6592%" y="1621" width="0.0201%" height="15" fill="rgb(209,96,13)" fg:x="28071" fg:w="7"/><text x="80.9092%" y="1631.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (7 samples, 0.02%)</title><rect x="80.6592%" y="1605" width="0.0201%" height="15" fill="rgb(237,39,34)" fg:x="28071" fg:w="7"/><text x="80.9092%" y="1615.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::serialize (7 samples, 0.02%)</title><rect x="80.6592%" y="1589" width="0.0201%" height="15" fill="rgb(213,49,47)" fg:x="28071" fg:w="7"/><text x="80.9092%" y="1599.50"></text></g><g><title>serde::ser::Serializer::collect_map (7 samples, 0.02%)</title><rect x="80.6592%" y="1573" width="0.0201%" height="15" fill="rgb(205,107,27)" fg:x="28071" fg:w="7"/><text x="80.9092%" y="1583.50"></text></g><g><title>&lt;bcs::ser::MapSerializer&lt;W&gt; as serde::ser::SerializeMap&gt;::end (7 samples, 0.02%)</title><rect x="80.6592%" y="1557" width="0.0201%" height="15" fill="rgb(212,142,9)" fg:x="28071" fg:w="7"/><text x="80.9092%" y="1567.50"></text></g><g><title>std::io::Write::write_all (7 samples, 0.02%)</title><rect x="80.6592%" y="1541" width="0.0201%" height="15" fill="rgb(226,182,0)" fg:x="28071" fg:w="7"/><text x="80.9092%" y="1551.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSetHasher as std::io::Write&gt;::write (7 samples, 0.02%)</title><rect x="80.6592%" y="1525" width="0.0201%" height="15" fill="rgb(231,3,53)" fg:x="28071" fg:w="7"/><text x="80.9092%" y="1535.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (7 samples, 0.02%)</title><rect x="80.6592%" y="1509" width="0.0201%" height="15" fill="rgb(246,111,28)" fg:x="28071" fg:w="7"/><text x="80.9092%" y="1519.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (7 samples, 0.02%)</title><rect x="80.6592%" y="1493" width="0.0201%" height="15" fill="rgb(254,183,7)" fg:x="28071" fg:w="7"/><text x="80.9092%" y="1503.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (7 samples, 0.02%)</title><rect x="80.6592%" y="1477" width="0.0201%" height="15" fill="rgb(247,177,28)" fg:x="28071" fg:w="7"/><text x="80.9092%" y="1487.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (7 samples, 0.02%)</title><rect x="80.6592%" y="1461" width="0.0201%" height="15" fill="rgb(244,43,1)" fg:x="28071" fg:w="7"/><text x="80.9092%" y="1471.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (15 samples, 0.04%)</title><rect x="80.6592%" y="1941" width="0.0431%" height="15" fill="rgb(207,2,35)" fg:x="28071" fg:w="15"/><text x="80.9092%" y="1951.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (15 samples, 0.04%)</title><rect x="80.6592%" y="1925" width="0.0431%" height="15" fill="rgb(213,83,22)" fg:x="28071" fg:w="15"/><text x="80.9092%" y="1935.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (15 samples, 0.04%)</title><rect x="80.6592%" y="1909" width="0.0431%" height="15" fill="rgb(246,212,13)" fg:x="28071" fg:w="15"/><text x="80.9092%" y="1919.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (15 samples, 0.04%)</title><rect x="80.6592%" y="1893" width="0.0431%" height="15" fill="rgb(213,127,46)" fg:x="28071" fg:w="15"/><text x="80.9092%" y="1903.50"></text></g><g><title>rayon_core::join::join_context (8 samples, 0.02%)</title><rect x="80.6793%" y="1877" width="0.0230%" height="15" fill="rgb(219,215,39)" fg:x="28078" fg:w="8"/><text x="80.9293%" y="1887.50"></text></g><g><title>rayon_core::registry::in_worker (8 samples, 0.02%)</title><rect x="80.6793%" y="1861" width="0.0230%" height="15" fill="rgb(227,99,17)" fg:x="28078" fg:w="8"/><text x="80.9293%" y="1871.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (8 samples, 0.02%)</title><rect x="80.6793%" y="1845" width="0.0230%" height="15" fill="rgb(208,155,18)" fg:x="28078" fg:w="8"/><text x="80.9293%" y="1855.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (5 samples, 0.01%)</title><rect x="80.6879%" y="1829" width="0.0144%" height="15" fill="rgb(223,204,38)" fg:x="28081" fg:w="5"/><text x="80.9379%" y="1839.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.01%)</title><rect x="80.6879%" y="1813" width="0.0144%" height="15" fill="rgb(212,114,21)" fg:x="28081" fg:w="5"/><text x="80.9379%" y="1823.50"></text></g><g><title>std::panicking::try (5 samples, 0.01%)</title><rect x="80.6879%" y="1797" width="0.0144%" height="15" fill="rgb(250,74,13)" fg:x="28081" fg:w="5"/><text x="80.9379%" y="1807.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.01%)</title><rect x="80.6879%" y="1781" width="0.0144%" height="15" fill="rgb(234,7,1)" fg:x="28081" fg:w="5"/><text x="80.9379%" y="1791.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5 samples, 0.01%)</title><rect x="80.6879%" y="1765" width="0.0144%" height="15" fill="rgb(207,138,31)" fg:x="28081" fg:w="5"/><text x="80.9379%" y="1775.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (5 samples, 0.01%)</title><rect x="80.6879%" y="1749" width="0.0144%" height="15" fill="rgb(215,186,42)" fg:x="28081" fg:w="5"/><text x="80.9379%" y="1759.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (5 samples, 0.01%)</title><rect x="80.6879%" y="1733" width="0.0144%" height="15" fill="rgb(229,205,49)" fg:x="28081" fg:w="5"/><text x="80.9379%" y="1743.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (5 samples, 0.01%)</title><rect x="80.6879%" y="1717" width="0.0144%" height="15" fill="rgb(216,156,32)" fg:x="28081" fg:w="5"/><text x="80.9379%" y="1727.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.01%)</title><rect x="80.6908%" y="1701" width="0.0115%" height="15" fill="rgb(238,7,21)" fg:x="28082" fg:w="4"/><text x="80.9408%" y="1711.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.01%)</title><rect x="80.6908%" y="1685" width="0.0115%" height="15" fill="rgb(249,190,22)" fg:x="28082" fg:w="4"/><text x="80.9408%" y="1695.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.01%)</title><rect x="80.6908%" y="1669" width="0.0115%" height="15" fill="rgb(253,51,31)" fg:x="28082" fg:w="4"/><text x="80.9408%" y="1679.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (6 samples, 0.02%)</title><rect x="80.7051%" y="1701" width="0.0172%" height="15" fill="rgb(237,90,54)" fg:x="28087" fg:w="6"/><text x="80.9551%" y="1711.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (6 samples, 0.02%)</title><rect x="80.7051%" y="1685" width="0.0172%" height="15" fill="rgb(250,214,33)" fg:x="28087" fg:w="6"/><text x="80.9551%" y="1695.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (6 samples, 0.02%)</title><rect x="80.7051%" y="1669" width="0.0172%" height="15" fill="rgb(237,10,49)" fg:x="28087" fg:w="6"/><text x="80.9551%" y="1679.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (6 samples, 0.02%)</title><rect x="80.7051%" y="1653" width="0.0172%" height="15" fill="rgb(241,56,36)" fg:x="28087" fg:w="6"/><text x="80.9551%" y="1663.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.02%)</title><rect x="80.7051%" y="1637" width="0.0172%" height="15" fill="rgb(227,164,12)" fg:x="28087" fg:w="6"/><text x="80.9551%" y="1647.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (6 samples, 0.02%)</title><rect x="80.7051%" y="1621" width="0.0172%" height="15" fill="rgb(249,149,35)" fg:x="28087" fg:w="6"/><text x="80.9551%" y="1631.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (6 samples, 0.02%)</title><rect x="80.7051%" y="1605" width="0.0172%" height="15" fill="rgb(238,227,50)" fg:x="28087" fg:w="6"/><text x="80.9551%" y="1615.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (6 samples, 0.02%)</title><rect x="80.7051%" y="1589" width="0.0172%" height="15" fill="rgb(235,102,45)" fg:x="28087" fg:w="6"/><text x="80.9551%" y="1599.50"></text></g><g><title>aptos_executor::components::apply_chunk_output::ApplyChunkOutput::assemble_ledger_diff::{{closure}} (6 samples, 0.02%)</title><rect x="80.7051%" y="1573" width="0.0172%" height="15" fill="rgb(211,10,38)" fg:x="28087" fg:w="6"/><text x="80.9551%" y="1583.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSet as aptos_crypto::hash::CryptoHash&gt;::hash (6 samples, 0.02%)</title><rect x="80.7051%" y="1557" width="0.0172%" height="15" fill="rgb(219,77,48)" fg:x="28087" fg:w="6"/><text x="80.9551%" y="1567.50"></text></g><g><title>bcs::ser::serialize_into (6 samples, 0.02%)</title><rect x="80.7051%" y="1541" width="0.0172%" height="15" fill="rgb(246,6,15)" fg:x="28087" fg:w="6"/><text x="80.9551%" y="1551.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.02%)</title><rect x="80.7051%" y="1525" width="0.0172%" height="15" fill="rgb(207,220,2)" fg:x="28087" fg:w="6"/><text x="80.9551%" y="1535.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSet&gt;::serialize (6 samples, 0.02%)</title><rect x="80.7051%" y="1509" width="0.0172%" height="15" fill="rgb(242,48,14)" fg:x="28087" fg:w="6"/><text x="80.9551%" y="1519.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (6 samples, 0.02%)</title><rect x="80.7051%" y="1493" width="0.0172%" height="15" fill="rgb(218,19,27)" fg:x="28087" fg:w="6"/><text x="80.9551%" y="1503.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetV0&gt;::serialize (6 samples, 0.02%)</title><rect x="80.7051%" y="1477" width="0.0172%" height="15" fill="rgb(228,0,35)" fg:x="28087" fg:w="6"/><text x="80.9551%" y="1487.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (6 samples, 0.02%)</title><rect x="80.7051%" y="1461" width="0.0172%" height="15" fill="rgb(244,142,54)" fg:x="28087" fg:w="6"/><text x="80.9551%" y="1471.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetMut&gt;::serialize (6 samples, 0.02%)</title><rect x="80.7051%" y="1445" width="0.0172%" height="15" fill="rgb(243,217,40)" fg:x="28087" fg:w="6"/><text x="80.9551%" y="1455.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.02%)</title><rect x="80.7051%" y="1429" width="0.0172%" height="15" fill="rgb(207,114,16)" fg:x="28087" fg:w="6"/><text x="80.9551%" y="1439.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::serialize (6 samples, 0.02%)</title><rect x="80.7051%" y="1413" width="0.0172%" height="15" fill="rgb(224,33,25)" fg:x="28087" fg:w="6"/><text x="80.9551%" y="1423.50"></text></g><g><title>serde::ser::Serializer::collect_map (6 samples, 0.02%)</title><rect x="80.7051%" y="1397" width="0.0172%" height="15" fill="rgb(230,93,54)" fg:x="28087" fg:w="6"/><text x="80.9551%" y="1407.50"></text></g><g><title>&lt;bcs::ser::MapSerializer&lt;W&gt; as serde::ser::SerializeMap&gt;::end (6 samples, 0.02%)</title><rect x="80.7051%" y="1381" width="0.0172%" height="15" fill="rgb(224,56,24)" fg:x="28087" fg:w="6"/><text x="80.9551%" y="1391.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.02%)</title><rect x="80.7051%" y="1365" width="0.0172%" height="15" fill="rgb(235,189,50)" fg:x="28087" fg:w="6"/><text x="80.9551%" y="1375.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSetHasher as std::io::Write&gt;::write (6 samples, 0.02%)</title><rect x="80.7051%" y="1349" width="0.0172%" height="15" fill="rgb(242,173,8)" fg:x="28087" fg:w="6"/><text x="80.9551%" y="1359.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (6 samples, 0.02%)</title><rect x="80.7051%" y="1333" width="0.0172%" height="15" fill="rgb(209,206,10)" fg:x="28087" fg:w="6"/><text x="80.9551%" y="1343.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (6 samples, 0.02%)</title><rect x="80.7051%" y="1317" width="0.0172%" height="15" fill="rgb(213,182,44)" fg:x="28087" fg:w="6"/><text x="80.9551%" y="1327.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (6 samples, 0.02%)</title><rect x="80.7051%" y="1301" width="0.0172%" height="15" fill="rgb(243,51,15)" fg:x="28087" fg:w="6"/><text x="80.9551%" y="1311.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (6 samples, 0.02%)</title><rect x="80.7051%" y="1285" width="0.0172%" height="15" fill="rgb(241,13,14)" fg:x="28087" fg:w="6"/><text x="80.9551%" y="1295.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (5 samples, 0.01%)</title><rect x="80.7224%" y="1653" width="0.0144%" height="15" fill="rgb(239,147,24)" fg:x="28093" fg:w="5"/><text x="80.9724%" y="1663.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (5 samples, 0.01%)</title><rect x="80.7224%" y="1637" width="0.0144%" height="15" fill="rgb(223,129,16)" fg:x="28093" fg:w="5"/><text x="80.9724%" y="1647.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (5 samples, 0.01%)</title><rect x="80.7224%" y="1621" width="0.0144%" height="15" fill="rgb(209,169,13)" fg:x="28093" fg:w="5"/><text x="80.9724%" y="1631.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (5 samples, 0.01%)</title><rect x="80.7224%" y="1605" width="0.0144%" height="15" fill="rgb(235,159,41)" fg:x="28093" fg:w="5"/><text x="80.9724%" y="1615.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (6 samples, 0.02%)</title><rect x="80.7367%" y="1653" width="0.0172%" height="15" fill="rgb(223,219,48)" fg:x="28098" fg:w="6"/><text x="80.9867%" y="1663.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (6 samples, 0.02%)</title><rect x="80.7367%" y="1637" width="0.0172%" height="15" fill="rgb(236,80,13)" fg:x="28098" fg:w="6"/><text x="80.9867%" y="1647.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (6 samples, 0.02%)</title><rect x="80.7367%" y="1621" width="0.0172%" height="15" fill="rgb(213,5,6)" fg:x="28098" fg:w="6"/><text x="80.9867%" y="1631.50"></text></g><g><title>rayon_core::job::JobRef::execute (6 samples, 0.02%)</title><rect x="80.7367%" y="1605" width="0.0172%" height="15" fill="rgb(205,59,21)" fg:x="28098" fg:w="6"/><text x="80.9867%" y="1615.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (6 samples, 0.02%)</title><rect x="80.7367%" y="1589" width="0.0172%" height="15" fill="rgb(247,137,35)" fg:x="28098" fg:w="6"/><text x="80.9867%" y="1599.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (6 samples, 0.02%)</title><rect x="80.7367%" y="1573" width="0.0172%" height="15" fill="rgb(242,208,28)" fg:x="28098" fg:w="6"/><text x="80.9867%" y="1583.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (6 samples, 0.02%)</title><rect x="80.7367%" y="1557" width="0.0172%" height="15" fill="rgb(245,62,25)" fg:x="28098" fg:w="6"/><text x="80.9867%" y="1567.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.02%)</title><rect x="80.7367%" y="1541" width="0.0172%" height="15" fill="rgb(233,99,54)" fg:x="28098" fg:w="6"/><text x="80.9867%" y="1551.50"></text></g><g><title>std::panicking::try (6 samples, 0.02%)</title><rect x="80.7367%" y="1525" width="0.0172%" height="15" fill="rgb(213,10,37)" fg:x="28098" fg:w="6"/><text x="80.9867%" y="1535.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.02%)</title><rect x="80.7367%" y="1509" width="0.0172%" height="15" fill="rgb(235,143,30)" fg:x="28098" fg:w="6"/><text x="80.9867%" y="1519.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6 samples, 0.02%)</title><rect x="80.7367%" y="1493" width="0.0172%" height="15" fill="rgb(250,146,33)" fg:x="28098" fg:w="6"/><text x="80.9867%" y="1503.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (6 samples, 0.02%)</title><rect x="80.7367%" y="1477" width="0.0172%" height="15" fill="rgb(226,198,42)" fg:x="28098" fg:w="6"/><text x="80.9867%" y="1487.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (6 samples, 0.02%)</title><rect x="80.7367%" y="1461" width="0.0172%" height="15" fill="rgb(222,55,6)" fg:x="28098" fg:w="6"/><text x="80.9867%" y="1471.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (6 samples, 0.02%)</title><rect x="80.7367%" y="1445" width="0.0172%" height="15" fill="rgb(213,224,31)" fg:x="28098" fg:w="6"/><text x="80.9867%" y="1455.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (6 samples, 0.02%)</title><rect x="80.7367%" y="1429" width="0.0172%" height="15" fill="rgb(226,103,35)" fg:x="28098" fg:w="6"/><text x="80.9867%" y="1439.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.01%)</title><rect x="80.7425%" y="1413" width="0.0115%" height="15" fill="rgb(205,66,45)" fg:x="28100" fg:w="4"/><text x="80.9925%" y="1423.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.01%)</title><rect x="80.7425%" y="1397" width="0.0115%" height="15" fill="rgb(226,51,42)" fg:x="28100" fg:w="4"/><text x="80.9925%" y="1407.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.01%)</title><rect x="80.7425%" y="1381" width="0.0115%" height="15" fill="rgb(206,69,1)" fg:x="28100" fg:w="4"/><text x="80.9925%" y="1391.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (30 samples, 0.09%)</title><rect x="80.7023%" y="1941" width="0.0862%" height="15" fill="rgb(213,228,47)" fg:x="28086" fg:w="30"/><text x="80.9523%" y="1951.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (30 samples, 0.09%)</title><rect x="80.7023%" y="1925" width="0.0862%" height="15" fill="rgb(224,204,18)" fg:x="28086" fg:w="30"/><text x="80.9523%" y="1935.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (29 samples, 0.08%)</title><rect x="80.7051%" y="1909" width="0.0833%" height="15" fill="rgb(253,187,47)" fg:x="28087" fg:w="29"/><text x="80.9551%" y="1919.50"></text></g><g><title>rayon_core::job::JobRef::execute (29 samples, 0.08%)</title><rect x="80.7051%" y="1893" width="0.0833%" height="15" fill="rgb(232,61,2)" fg:x="28087" fg:w="29"/><text x="80.9551%" y="1903.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (29 samples, 0.08%)</title><rect x="80.7051%" y="1877" width="0.0833%" height="15" fill="rgb(213,132,35)" fg:x="28087" fg:w="29"/><text x="80.9551%" y="1887.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (29 samples, 0.08%)</title><rect x="80.7051%" y="1861" width="0.0833%" height="15" fill="rgb(247,33,21)" fg:x="28087" fg:w="29"/><text x="80.9551%" y="1871.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (29 samples, 0.08%)</title><rect x="80.7051%" y="1845" width="0.0833%" height="15" fill="rgb(233,71,46)" fg:x="28087" fg:w="29"/><text x="80.9551%" y="1855.50"></text></g><g><title>std::panic::catch_unwind (29 samples, 0.08%)</title><rect x="80.7051%" y="1829" width="0.0833%" height="15" fill="rgb(222,173,43)" fg:x="28087" fg:w="29"/><text x="80.9551%" y="1839.50"></text></g><g><title>std::panicking::try (29 samples, 0.08%)</title><rect x="80.7051%" y="1813" width="0.0833%" height="15" fill="rgb(249,218,47)" fg:x="28087" fg:w="29"/><text x="80.9551%" y="1823.50"></text></g><g><title>std::panicking::try::do_call (29 samples, 0.08%)</title><rect x="80.7051%" y="1797" width="0.0833%" height="15" fill="rgb(254,185,48)" fg:x="28087" fg:w="29"/><text x="80.9551%" y="1807.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (29 samples, 0.08%)</title><rect x="80.7051%" y="1781" width="0.0833%" height="15" fill="rgb(252,165,50)" fg:x="28087" fg:w="29"/><text x="80.9551%" y="1791.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (29 samples, 0.08%)</title><rect x="80.7051%" y="1765" width="0.0833%" height="15" fill="rgb(206,219,6)" fg:x="28087" fg:w="29"/><text x="80.9551%" y="1775.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (29 samples, 0.08%)</title><rect x="80.7051%" y="1749" width="0.0833%" height="15" fill="rgb(212,212,45)" fg:x="28087" fg:w="29"/><text x="80.9551%" y="1759.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (29 samples, 0.08%)</title><rect x="80.7051%" y="1733" width="0.0833%" height="15" fill="rgb(221,31,9)" fg:x="28087" fg:w="29"/><text x="80.9551%" y="1743.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (29 samples, 0.08%)</title><rect x="80.7051%" y="1717" width="0.0833%" height="15" fill="rgb(234,198,39)" fg:x="28087" fg:w="29"/><text x="80.9551%" y="1727.50"></text></g><g><title>rayon_core::join::join_context (23 samples, 0.07%)</title><rect x="80.7224%" y="1701" width="0.0661%" height="15" fill="rgb(252,145,46)" fg:x="28093" fg:w="23"/><text x="80.9724%" y="1711.50"></text></g><g><title>rayon_core::registry::in_worker (23 samples, 0.07%)</title><rect x="80.7224%" y="1685" width="0.0661%" height="15" fill="rgb(237,149,0)" fg:x="28093" fg:w="23"/><text x="80.9724%" y="1695.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (23 samples, 0.07%)</title><rect x="80.7224%" y="1669" width="0.0661%" height="15" fill="rgb(229,65,5)" fg:x="28093" fg:w="23"/><text x="80.9724%" y="1679.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (12 samples, 0.03%)</title><rect x="80.7540%" y="1653" width="0.0345%" height="15" fill="rgb(235,60,36)" fg:x="28104" fg:w="12"/><text x="81.0040%" y="1663.50"></text></g><g><title>std::panic::catch_unwind (12 samples, 0.03%)</title><rect x="80.7540%" y="1637" width="0.0345%" height="15" fill="rgb(222,47,18)" fg:x="28104" fg:w="12"/><text x="81.0040%" y="1647.50"></text></g><g><title>std::panicking::try (12 samples, 0.03%)</title><rect x="80.7540%" y="1621" width="0.0345%" height="15" fill="rgb(235,114,22)" fg:x="28104" fg:w="12"/><text x="81.0040%" y="1631.50"></text></g><g><title>std::panicking::try::do_call (12 samples, 0.03%)</title><rect x="80.7540%" y="1605" width="0.0345%" height="15" fill="rgb(209,167,11)" fg:x="28104" fg:w="12"/><text x="81.0040%" y="1615.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (12 samples, 0.03%)</title><rect x="80.7540%" y="1589" width="0.0345%" height="15" fill="rgb(251,73,18)" fg:x="28104" fg:w="12"/><text x="81.0040%" y="1599.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (12 samples, 0.03%)</title><rect x="80.7540%" y="1573" width="0.0345%" height="15" fill="rgb(217,60,17)" fg:x="28104" fg:w="12"/><text x="81.0040%" y="1583.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (12 samples, 0.03%)</title><rect x="80.7540%" y="1557" width="0.0345%" height="15" fill="rgb(224,36,37)" fg:x="28104" fg:w="12"/><text x="81.0040%" y="1567.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.03%)</title><rect x="80.7540%" y="1541" width="0.0345%" height="15" fill="rgb(211,21,32)" fg:x="28104" fg:w="12"/><text x="81.0040%" y="1551.50"></text></g><g><title>rayon_core::join::join_context (9 samples, 0.03%)</title><rect x="80.7626%" y="1525" width="0.0259%" height="15" fill="rgb(231,55,48)" fg:x="28107" fg:w="9"/><text x="81.0126%" y="1535.50"></text></g><g><title>rayon_core::registry::in_worker (9 samples, 0.03%)</title><rect x="80.7626%" y="1509" width="0.0259%" height="15" fill="rgb(227,42,18)" fg:x="28107" fg:w="9"/><text x="81.0126%" y="1519.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (9 samples, 0.03%)</title><rect x="80.7626%" y="1493" width="0.0259%" height="15" fill="rgb(217,2,27)" fg:x="28107" fg:w="9"/><text x="81.0126%" y="1503.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (5 samples, 0.01%)</title><rect x="80.7741%" y="1477" width="0.0144%" height="15" fill="rgb(251,138,23)" fg:x="28111" fg:w="5"/><text x="81.0241%" y="1487.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.01%)</title><rect x="80.7741%" y="1461" width="0.0144%" height="15" fill="rgb(226,184,11)" fg:x="28111" fg:w="5"/><text x="81.0241%" y="1471.50"></text></g><g><title>std::panicking::try (5 samples, 0.01%)</title><rect x="80.7741%" y="1445" width="0.0144%" height="15" fill="rgb(242,142,12)" fg:x="28111" fg:w="5"/><text x="81.0241%" y="1455.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.01%)</title><rect x="80.7741%" y="1429" width="0.0144%" height="15" fill="rgb(234,187,18)" fg:x="28111" fg:w="5"/><text x="81.0241%" y="1439.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5 samples, 0.01%)</title><rect x="80.7741%" y="1413" width="0.0144%" height="15" fill="rgb(237,44,42)" fg:x="28111" fg:w="5"/><text x="81.0241%" y="1423.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (5 samples, 0.01%)</title><rect x="80.7741%" y="1397" width="0.0144%" height="15" fill="rgb(211,90,23)" fg:x="28111" fg:w="5"/><text x="81.0241%" y="1407.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (5 samples, 0.01%)</title><rect x="80.7741%" y="1381" width="0.0144%" height="15" fill="rgb(207,81,18)" fg:x="28111" fg:w="5"/><text x="81.0241%" y="1391.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (5 samples, 0.01%)</title><rect x="80.7741%" y="1365" width="0.0144%" height="15" fill="rgb(222,107,28)" fg:x="28111" fg:w="5"/><text x="81.0241%" y="1375.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (19 samples, 0.05%)</title><rect x="80.7885%" y="1813" width="0.0546%" height="15" fill="rgb(237,83,52)" fg:x="28116" fg:w="19"/><text x="81.0385%" y="1823.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (19 samples, 0.05%)</title><rect x="80.7885%" y="1797" width="0.0546%" height="15" fill="rgb(208,67,11)" fg:x="28116" fg:w="19"/><text x="81.0385%" y="1807.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (19 samples, 0.05%)</title><rect x="80.7885%" y="1781" width="0.0546%" height="15" fill="rgb(249,157,49)" fg:x="28116" fg:w="19"/><text x="81.0385%" y="1791.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (19 samples, 0.05%)</title><rect x="80.7885%" y="1765" width="0.0546%" height="15" fill="rgb(243,200,1)" fg:x="28116" fg:w="19"/><text x="81.0385%" y="1775.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.05%)</title><rect x="80.7885%" y="1749" width="0.0546%" height="15" fill="rgb(225,162,37)" fg:x="28116" fg:w="19"/><text x="81.0385%" y="1759.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (19 samples, 0.05%)</title><rect x="80.7885%" y="1733" width="0.0546%" height="15" fill="rgb(242,92,13)" fg:x="28116" fg:w="19"/><text x="81.0385%" y="1743.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (19 samples, 0.05%)</title><rect x="80.7885%" y="1717" width="0.0546%" height="15" fill="rgb(220,43,36)" fg:x="28116" fg:w="19"/><text x="81.0385%" y="1727.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (19 samples, 0.05%)</title><rect x="80.7885%" y="1701" width="0.0546%" height="15" fill="rgb(213,165,48)" fg:x="28116" fg:w="19"/><text x="81.0385%" y="1711.50"></text></g><g><title>aptos_executor::components::apply_chunk_output::ApplyChunkOutput::assemble_ledger_diff::{{closure}} (19 samples, 0.05%)</title><rect x="80.7885%" y="1685" width="0.0546%" height="15" fill="rgb(227,200,9)" fg:x="28116" fg:w="19"/><text x="81.0385%" y="1695.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSet as aptos_crypto::hash::CryptoHash&gt;::hash (19 samples, 0.05%)</title><rect x="80.7885%" y="1669" width="0.0546%" height="15" fill="rgb(221,222,28)" fg:x="28116" fg:w="19"/><text x="81.0385%" y="1679.50"></text></g><g><title>bcs::ser::serialize_into (19 samples, 0.05%)</title><rect x="80.7885%" y="1653" width="0.0546%" height="15" fill="rgb(223,142,26)" fg:x="28116" fg:w="19"/><text x="81.0385%" y="1663.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (19 samples, 0.05%)</title><rect x="80.7885%" y="1637" width="0.0546%" height="15" fill="rgb(243,46,9)" fg:x="28116" fg:w="19"/><text x="81.0385%" y="1647.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSet&gt;::serialize (19 samples, 0.05%)</title><rect x="80.7885%" y="1621" width="0.0546%" height="15" fill="rgb(250,56,11)" fg:x="28116" fg:w="19"/><text x="81.0385%" y="1631.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (19 samples, 0.05%)</title><rect x="80.7885%" y="1605" width="0.0546%" height="15" fill="rgb(229,113,5)" fg:x="28116" fg:w="19"/><text x="81.0385%" y="1615.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetV0&gt;::serialize (19 samples, 0.05%)</title><rect x="80.7885%" y="1589" width="0.0546%" height="15" fill="rgb(244,108,28)" fg:x="28116" fg:w="19"/><text x="81.0385%" y="1599.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (19 samples, 0.05%)</title><rect x="80.7885%" y="1573" width="0.0546%" height="15" fill="rgb(242,119,50)" fg:x="28116" fg:w="19"/><text x="81.0385%" y="1583.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetMut&gt;::serialize (19 samples, 0.05%)</title><rect x="80.7885%" y="1557" width="0.0546%" height="15" fill="rgb(224,164,23)" fg:x="28116" fg:w="19"/><text x="81.0385%" y="1567.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (19 samples, 0.05%)</title><rect x="80.7885%" y="1541" width="0.0546%" height="15" fill="rgb(214,227,44)" fg:x="28116" fg:w="19"/><text x="81.0385%" y="1551.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::serialize (19 samples, 0.05%)</title><rect x="80.7885%" y="1525" width="0.0546%" height="15" fill="rgb(238,202,4)" fg:x="28116" fg:w="19"/><text x="81.0385%" y="1535.50"></text></g><g><title>serde::ser::Serializer::collect_map (19 samples, 0.05%)</title><rect x="80.7885%" y="1509" width="0.0546%" height="15" fill="rgb(213,190,30)" fg:x="28116" fg:w="19"/><text x="81.0385%" y="1519.50"></text></g><g><title>&lt;bcs::ser::MapSerializer&lt;W&gt; as serde::ser::SerializeMap&gt;::end (19 samples, 0.05%)</title><rect x="80.7885%" y="1493" width="0.0546%" height="15" fill="rgb(239,15,2)" fg:x="28116" fg:w="19"/><text x="81.0385%" y="1503.50"></text></g><g><title>std::io::Write::write_all (19 samples, 0.05%)</title><rect x="80.7885%" y="1477" width="0.0546%" height="15" fill="rgb(249,229,4)" fg:x="28116" fg:w="19"/><text x="81.0385%" y="1487.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSetHasher as std::io::Write&gt;::write (19 samples, 0.05%)</title><rect x="80.7885%" y="1461" width="0.0546%" height="15" fill="rgb(239,75,44)" fg:x="28116" fg:w="19"/><text x="81.0385%" y="1471.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (19 samples, 0.05%)</title><rect x="80.7885%" y="1445" width="0.0546%" height="15" fill="rgb(251,206,23)" fg:x="28116" fg:w="19"/><text x="81.0385%" y="1455.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (19 samples, 0.05%)</title><rect x="80.7885%" y="1429" width="0.0546%" height="15" fill="rgb(215,208,0)" fg:x="28116" fg:w="19"/><text x="81.0385%" y="1439.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (19 samples, 0.05%)</title><rect x="80.7885%" y="1413" width="0.0546%" height="15" fill="rgb(230,75,50)" fg:x="28116" fg:w="19"/><text x="81.0385%" y="1423.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (19 samples, 0.05%)</title><rect x="80.7885%" y="1397" width="0.0546%" height="15" fill="rgb(246,180,39)" fg:x="28116" fg:w="19"/><text x="81.0385%" y="1407.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (5 samples, 0.01%)</title><rect x="80.8287%" y="1381" width="0.0144%" height="15" fill="rgb(249,175,24)" fg:x="28130" fg:w="5"/><text x="81.0787%" y="1391.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (7 samples, 0.02%)</title><rect x="80.8431%" y="1765" width="0.0201%" height="15" fill="rgb(247,176,22)" fg:x="28135" fg:w="7"/><text x="81.0931%" y="1775.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (7 samples, 0.02%)</title><rect x="80.8431%" y="1749" width="0.0201%" height="15" fill="rgb(241,100,24)" fg:x="28135" fg:w="7"/><text x="81.0931%" y="1759.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (7 samples, 0.02%)</title><rect x="80.8431%" y="1733" width="0.0201%" height="15" fill="rgb(233,4,35)" fg:x="28135" fg:w="7"/><text x="81.0931%" y="1743.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (7 samples, 0.02%)</title><rect x="80.8431%" y="1717" width="0.0201%" height="15" fill="rgb(211,164,46)" fg:x="28135" fg:w="7"/><text x="81.0931%" y="1727.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (8 samples, 0.02%)</title><rect x="80.8632%" y="1765" width="0.0230%" height="15" fill="rgb(242,99,53)" fg:x="28142" fg:w="8"/><text x="81.1132%" y="1775.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (8 samples, 0.02%)</title><rect x="80.8632%" y="1749" width="0.0230%" height="15" fill="rgb(243,45,33)" fg:x="28142" fg:w="8"/><text x="81.1132%" y="1759.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (8 samples, 0.02%)</title><rect x="80.8632%" y="1733" width="0.0230%" height="15" fill="rgb(217,55,21)" fg:x="28142" fg:w="8"/><text x="81.1132%" y="1743.50"></text></g><g><title>rayon_core::job::JobRef::execute (8 samples, 0.02%)</title><rect x="80.8632%" y="1717" width="0.0230%" height="15" fill="rgb(245,145,46)" fg:x="28142" fg:w="8"/><text x="81.1132%" y="1727.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (8 samples, 0.02%)</title><rect x="80.8632%" y="1701" width="0.0230%" height="15" fill="rgb(215,112,45)" fg:x="28142" fg:w="8"/><text x="81.1132%" y="1711.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (8 samples, 0.02%)</title><rect x="80.8632%" y="1685" width="0.0230%" height="15" fill="rgb(228,104,16)" fg:x="28142" fg:w="8"/><text x="81.1132%" y="1695.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (8 samples, 0.02%)</title><rect x="80.8632%" y="1669" width="0.0230%" height="15" fill="rgb(239,186,38)" fg:x="28142" fg:w="8"/><text x="81.1132%" y="1679.50"></text></g><g><title>std::panic::catch_unwind (8 samples, 0.02%)</title><rect x="80.8632%" y="1653" width="0.0230%" height="15" fill="rgb(228,38,35)" fg:x="28142" fg:w="8"/><text x="81.1132%" y="1663.50"></text></g><g><title>std::panicking::try (8 samples, 0.02%)</title><rect x="80.8632%" y="1637" width="0.0230%" height="15" fill="rgb(251,42,40)" fg:x="28142" fg:w="8"/><text x="81.1132%" y="1647.50"></text></g><g><title>std::panicking::try::do_call (8 samples, 0.02%)</title><rect x="80.8632%" y="1621" width="0.0230%" height="15" fill="rgb(210,51,19)" fg:x="28142" fg:w="8"/><text x="81.1132%" y="1631.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (8 samples, 0.02%)</title><rect x="80.8632%" y="1605" width="0.0230%" height="15" fill="rgb(236,94,42)" fg:x="28142" fg:w="8"/><text x="81.1132%" y="1615.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (8 samples, 0.02%)</title><rect x="80.8632%" y="1589" width="0.0230%" height="15" fill="rgb(239,167,16)" fg:x="28142" fg:w="8"/><text x="81.1132%" y="1599.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (8 samples, 0.02%)</title><rect x="80.8632%" y="1573" width="0.0230%" height="15" fill="rgb(252,175,31)" fg:x="28142" fg:w="8"/><text x="81.1132%" y="1583.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (8 samples, 0.02%)</title><rect x="80.8632%" y="1557" width="0.0230%" height="15" fill="rgb(206,166,30)" fg:x="28142" fg:w="8"/><text x="81.1132%" y="1567.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (8 samples, 0.02%)</title><rect x="80.8632%" y="1541" width="0.0230%" height="15" fill="rgb(206,209,37)" fg:x="28142" fg:w="8"/><text x="81.1132%" y="1551.50"></text></g><g><title>rayon_core::join::join_context (5 samples, 0.01%)</title><rect x="80.8718%" y="1525" width="0.0144%" height="15" fill="rgb(226,91,4)" fg:x="28145" fg:w="5"/><text x="81.1218%" y="1535.50"></text></g><g><title>rayon_core::registry::in_worker (5 samples, 0.01%)</title><rect x="80.8718%" y="1509" width="0.0144%" height="15" fill="rgb(222,167,0)" fg:x="28145" fg:w="5"/><text x="81.1218%" y="1519.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5 samples, 0.01%)</title><rect x="80.8718%" y="1493" width="0.0144%" height="15" fill="rgb(211,70,14)" fg:x="28145" fg:w="5"/><text x="81.1218%" y="1503.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (4 samples, 0.01%)</title><rect x="80.8747%" y="1477" width="0.0115%" height="15" fill="rgb(214,84,42)" fg:x="28146" fg:w="4"/><text x="81.1247%" y="1487.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.01%)</title><rect x="80.8747%" y="1461" width="0.0115%" height="15" fill="rgb(235,157,37)" fg:x="28146" fg:w="4"/><text x="81.1247%" y="1471.50"></text></g><g><title>std::panicking::try (4 samples, 0.01%)</title><rect x="80.8747%" y="1445" width="0.0115%" height="15" fill="rgb(225,13,6)" fg:x="28146" fg:w="4"/><text x="81.1247%" y="1455.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.01%)</title><rect x="80.8747%" y="1429" width="0.0115%" height="15" fill="rgb(205,202,1)" fg:x="28146" fg:w="4"/><text x="81.1247%" y="1439.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.01%)</title><rect x="80.8747%" y="1413" width="0.0115%" height="15" fill="rgb(232,195,26)" fg:x="28146" fg:w="4"/><text x="81.1247%" y="1423.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (4 samples, 0.01%)</title><rect x="80.8747%" y="1397" width="0.0115%" height="15" fill="rgb(208,102,26)" fg:x="28146" fg:w="4"/><text x="81.1247%" y="1407.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.01%)</title><rect x="80.8747%" y="1381" width="0.0115%" height="15" fill="rgb(215,41,39)" fg:x="28146" fg:w="4"/><text x="81.1247%" y="1391.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.01%)</title><rect x="80.8747%" y="1365" width="0.0115%" height="15" fill="rgb(247,139,11)" fg:x="28146" fg:w="4"/><text x="81.1247%" y="1375.50"></text></g><g><title>&lt;bcs::ser::MapSerializer&lt;W&gt; as serde::ser::SerializeMap&gt;::end (7 samples, 0.02%)</title><rect x="80.8862%" y="1317" width="0.0201%" height="15" fill="rgb(243,99,6)" fg:x="28150" fg:w="7"/><text x="81.1362%" y="1327.50"></text></g><g><title>std::io::Write::write_all (7 samples, 0.02%)</title><rect x="80.8862%" y="1301" width="0.0201%" height="15" fill="rgb(230,168,48)" fg:x="28150" fg:w="7"/><text x="81.1362%" y="1311.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSetHasher as std::io::Write&gt;::write (7 samples, 0.02%)</title><rect x="80.8862%" y="1285" width="0.0201%" height="15" fill="rgb(238,227,13)" fg:x="28150" fg:w="7"/><text x="81.1362%" y="1295.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (7 samples, 0.02%)</title><rect x="80.8862%" y="1269" width="0.0201%" height="15" fill="rgb(209,109,13)" fg:x="28150" fg:w="7"/><text x="81.1362%" y="1279.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (7 samples, 0.02%)</title><rect x="80.8862%" y="1253" width="0.0201%" height="15" fill="rgb(228,195,1)" fg:x="28150" fg:w="7"/><text x="81.1362%" y="1263.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (7 samples, 0.02%)</title><rect x="80.8862%" y="1237" width="0.0201%" height="15" fill="rgb(230,218,0)" fg:x="28150" fg:w="7"/><text x="81.1362%" y="1247.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (7 samples, 0.02%)</title><rect x="80.8862%" y="1221" width="0.0201%" height="15" fill="rgb(206,1,45)" fg:x="28150" fg:w="7"/><text x="81.1362%" y="1231.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (8 samples, 0.02%)</title><rect x="80.8862%" y="1637" width="0.0230%" height="15" fill="rgb(209,124,26)" fg:x="28150" fg:w="8"/><text x="81.1362%" y="1647.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (8 samples, 0.02%)</title><rect x="80.8862%" y="1621" width="0.0230%" height="15" fill="rgb(220,59,8)" fg:x="28150" fg:w="8"/><text x="81.1362%" y="1631.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (8 samples, 0.02%)</title><rect x="80.8862%" y="1605" width="0.0230%" height="15" fill="rgb(251,41,37)" fg:x="28150" fg:w="8"/><text x="81.1362%" y="1615.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (8 samples, 0.02%)</title><rect x="80.8862%" y="1589" width="0.0230%" height="15" fill="rgb(239,152,21)" fg:x="28150" fg:w="8"/><text x="81.1362%" y="1599.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.02%)</title><rect x="80.8862%" y="1573" width="0.0230%" height="15" fill="rgb(226,32,1)" fg:x="28150" fg:w="8"/><text x="81.1362%" y="1583.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (8 samples, 0.02%)</title><rect x="80.8862%" y="1557" width="0.0230%" height="15" fill="rgb(230,154,36)" fg:x="28150" fg:w="8"/><text x="81.1362%" y="1567.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (8 samples, 0.02%)</title><rect x="80.8862%" y="1541" width="0.0230%" height="15" fill="rgb(208,228,43)" fg:x="28150" fg:w="8"/><text x="81.1362%" y="1551.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (8 samples, 0.02%)</title><rect x="80.8862%" y="1525" width="0.0230%" height="15" fill="rgb(214,203,3)" fg:x="28150" fg:w="8"/><text x="81.1362%" y="1535.50"></text></g><g><title>aptos_executor::components::apply_chunk_output::ApplyChunkOutput::assemble_ledger_diff::{{closure}} (8 samples, 0.02%)</title><rect x="80.8862%" y="1509" width="0.0230%" height="15" fill="rgb(207,149,29)" fg:x="28150" fg:w="8"/><text x="81.1362%" y="1519.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSet as aptos_crypto::hash::CryptoHash&gt;::hash (8 samples, 0.02%)</title><rect x="80.8862%" y="1493" width="0.0230%" height="15" fill="rgb(250,105,7)" fg:x="28150" fg:w="8"/><text x="81.1362%" y="1503.50"></text></g><g><title>bcs::ser::serialize_into (8 samples, 0.02%)</title><rect x="80.8862%" y="1477" width="0.0230%" height="15" fill="rgb(232,222,16)" fg:x="28150" fg:w="8"/><text x="81.1362%" y="1487.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (8 samples, 0.02%)</title><rect x="80.8862%" y="1461" width="0.0230%" height="15" fill="rgb(209,32,24)" fg:x="28150" fg:w="8"/><text x="81.1362%" y="1471.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSet&gt;::serialize (8 samples, 0.02%)</title><rect x="80.8862%" y="1445" width="0.0230%" height="15" fill="rgb(225,13,6)" fg:x="28150" fg:w="8"/><text x="81.1362%" y="1455.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (8 samples, 0.02%)</title><rect x="80.8862%" y="1429" width="0.0230%" height="15" fill="rgb(245,226,26)" fg:x="28150" fg:w="8"/><text x="81.1362%" y="1439.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetV0&gt;::serialize (8 samples, 0.02%)</title><rect x="80.8862%" y="1413" width="0.0230%" height="15" fill="rgb(229,178,27)" fg:x="28150" fg:w="8"/><text x="81.1362%" y="1423.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (8 samples, 0.02%)</title><rect x="80.8862%" y="1397" width="0.0230%" height="15" fill="rgb(205,227,28)" fg:x="28150" fg:w="8"/><text x="81.1362%" y="1407.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetMut&gt;::serialize (8 samples, 0.02%)</title><rect x="80.8862%" y="1381" width="0.0230%" height="15" fill="rgb(210,191,45)" fg:x="28150" fg:w="8"/><text x="81.1362%" y="1391.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (8 samples, 0.02%)</title><rect x="80.8862%" y="1365" width="0.0230%" height="15" fill="rgb(206,124,16)" fg:x="28150" fg:w="8"/><text x="81.1362%" y="1375.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::serialize (8 samples, 0.02%)</title><rect x="80.8862%" y="1349" width="0.0230%" height="15" fill="rgb(210,162,0)" fg:x="28150" fg:w="8"/><text x="81.1362%" y="1359.50"></text></g><g><title>serde::ser::Serializer::collect_map (8 samples, 0.02%)</title><rect x="80.8862%" y="1333" width="0.0230%" height="15" fill="rgb(211,54,38)" fg:x="28150" fg:w="8"/><text x="81.1362%" y="1343.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (4 samples, 0.01%)</title><rect x="80.9178%" y="1477" width="0.0115%" height="15" fill="rgb(248,192,3)" fg:x="28161" fg:w="4"/><text x="81.1678%" y="1487.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (4 samples, 0.01%)</title><rect x="80.9178%" y="1461" width="0.0115%" height="15" fill="rgb(233,187,18)" fg:x="28161" fg:w="4"/><text x="81.1678%" y="1471.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.01%)</title><rect x="80.9178%" y="1445" width="0.0115%" height="15" fill="rgb(237,208,14)" fg:x="28161" fg:w="4"/><text x="81.1678%" y="1455.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.01%)</title><rect x="80.9178%" y="1429" width="0.0115%" height="15" fill="rgb(212,77,1)" fg:x="28161" fg:w="4"/><text x="81.1678%" y="1439.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (9 samples, 0.03%)</title><rect x="80.9091%" y="1589" width="0.0259%" height="15" fill="rgb(210,163,22)" fg:x="28158" fg:w="9"/><text x="81.1591%" y="1599.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (9 samples, 0.03%)</title><rect x="80.9091%" y="1573" width="0.0259%" height="15" fill="rgb(250,58,28)" fg:x="28158" fg:w="9"/><text x="81.1591%" y="1583.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (9 samples, 0.03%)</title><rect x="80.9091%" y="1557" width="0.0259%" height="15" fill="rgb(254,28,41)" fg:x="28158" fg:w="9"/><text x="81.1591%" y="1567.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.03%)</title><rect x="80.9091%" y="1541" width="0.0259%" height="15" fill="rgb(237,162,36)" fg:x="28158" fg:w="9"/><text x="81.1591%" y="1551.50"></text></g><g><title>rayon_core::join::join_context (6 samples, 0.02%)</title><rect x="80.9178%" y="1525" width="0.0172%" height="15" fill="rgb(232,56,6)" fg:x="28161" fg:w="6"/><text x="81.1678%" y="1535.50"></text></g><g><title>rayon_core::registry::in_worker (6 samples, 0.02%)</title><rect x="80.9178%" y="1509" width="0.0172%" height="15" fill="rgb(216,127,42)" fg:x="28161" fg:w="6"/><text x="81.1678%" y="1519.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (6 samples, 0.02%)</title><rect x="80.9178%" y="1493" width="0.0172%" height="15" fill="rgb(241,69,15)" fg:x="28161" fg:w="6"/><text x="81.1678%" y="1503.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (4 samples, 0.01%)</title><rect x="80.9379%" y="1461" width="0.0115%" height="15" fill="rgb(227,180,19)" fg:x="28168" fg:w="4"/><text x="81.1879%" y="1471.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (4 samples, 0.01%)</title><rect x="80.9379%" y="1445" width="0.0115%" height="15" fill="rgb(231,188,29)" fg:x="28168" fg:w="4"/><text x="81.1879%" y="1455.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (4 samples, 0.01%)</title><rect x="80.9379%" y="1429" width="0.0115%" height="15" fill="rgb(224,176,27)" fg:x="28168" fg:w="4"/><text x="81.1879%" y="1439.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (4 samples, 0.01%)</title><rect x="80.9379%" y="1413" width="0.0115%" height="15" fill="rgb(249,214,19)" fg:x="28168" fg:w="4"/><text x="81.1879%" y="1423.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="80.9379%" y="1397" width="0.0115%" height="15" fill="rgb(240,0,4)" fg:x="28168" fg:w="4"/><text x="81.1879%" y="1407.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4 samples, 0.01%)</title><rect x="80.9379%" y="1381" width="0.0115%" height="15" fill="rgb(233,28,41)" fg:x="28168" fg:w="4"/><text x="81.1879%" y="1391.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (4 samples, 0.01%)</title><rect x="80.9379%" y="1365" width="0.0115%" height="15" fill="rgb(220,90,51)" fg:x="28168" fg:w="4"/><text x="81.1879%" y="1375.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (4 samples, 0.01%)</title><rect x="80.9379%" y="1349" width="0.0115%" height="15" fill="rgb(250,52,22)" fg:x="28168" fg:w="4"/><text x="81.1879%" y="1359.50"></text></g><g><title>aptos_executor::components::apply_chunk_output::ApplyChunkOutput::assemble_ledger_diff::{{closure}} (4 samples, 0.01%)</title><rect x="80.9379%" y="1333" width="0.0115%" height="15" fill="rgb(231,152,36)" fg:x="28168" fg:w="4"/><text x="81.1879%" y="1343.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSet as aptos_crypto::hash::CryptoHash&gt;::hash (4 samples, 0.01%)</title><rect x="80.9379%" y="1317" width="0.0115%" height="15" fill="rgb(250,218,4)" fg:x="28168" fg:w="4"/><text x="81.1879%" y="1327.50"></text></g><g><title>bcs::ser::serialize_into (4 samples, 0.01%)</title><rect x="80.9379%" y="1301" width="0.0115%" height="15" fill="rgb(210,38,21)" fg:x="28168" fg:w="4"/><text x="81.1879%" y="1311.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.01%)</title><rect x="80.9379%" y="1285" width="0.0115%" height="15" fill="rgb(230,75,13)" fg:x="28168" fg:w="4"/><text x="81.1879%" y="1295.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSet&gt;::serialize (4 samples, 0.01%)</title><rect x="80.9379%" y="1269" width="0.0115%" height="15" fill="rgb(250,68,53)" fg:x="28168" fg:w="4"/><text x="81.1879%" y="1279.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (4 samples, 0.01%)</title><rect x="80.9379%" y="1253" width="0.0115%" height="15" fill="rgb(250,210,16)" fg:x="28168" fg:w="4"/><text x="81.1879%" y="1263.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetV0&gt;::serialize (4 samples, 0.01%)</title><rect x="80.9379%" y="1237" width="0.0115%" height="15" fill="rgb(240,132,5)" fg:x="28168" fg:w="4"/><text x="81.1879%" y="1247.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (4 samples, 0.01%)</title><rect x="80.9379%" y="1221" width="0.0115%" height="15" fill="rgb(222,148,48)" fg:x="28168" fg:w="4"/><text x="81.1879%" y="1231.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetMut&gt;::serialize (4 samples, 0.01%)</title><rect x="80.9379%" y="1205" width="0.0115%" height="15" fill="rgb(247,181,24)" fg:x="28168" fg:w="4"/><text x="81.1879%" y="1215.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.01%)</title><rect x="80.9379%" y="1189" width="0.0115%" height="15" fill="rgb(239,5,31)" fg:x="28168" fg:w="4"/><text x="81.1879%" y="1199.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::serialize (4 samples, 0.01%)</title><rect x="80.9379%" y="1173" width="0.0115%" height="15" fill="rgb(241,152,38)" fg:x="28168" fg:w="4"/><text x="81.1879%" y="1183.50"></text></g><g><title>serde::ser::Serializer::collect_map (4 samples, 0.01%)</title><rect x="80.9379%" y="1157" width="0.0115%" height="15" fill="rgb(246,200,37)" fg:x="28168" fg:w="4"/><text x="81.1879%" y="1167.50"></text></g><g><title>&lt;bcs::ser::MapSerializer&lt;W&gt; as serde::ser::SerializeMap&gt;::end (4 samples, 0.01%)</title><rect x="80.9379%" y="1141" width="0.0115%" height="15" fill="rgb(243,210,26)" fg:x="28168" fg:w="4"/><text x="81.1879%" y="1151.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.01%)</title><rect x="80.9379%" y="1125" width="0.0115%" height="15" fill="rgb(222,22,22)" fg:x="28168" fg:w="4"/><text x="81.1879%" y="1135.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSetHasher as std::io::Write&gt;::write (4 samples, 0.01%)</title><rect x="80.9379%" y="1109" width="0.0115%" height="15" fill="rgb(208,129,28)" fg:x="28168" fg:w="4"/><text x="81.1879%" y="1119.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (4 samples, 0.01%)</title><rect x="80.9379%" y="1093" width="0.0115%" height="15" fill="rgb(254,169,28)" fg:x="28168" fg:w="4"/><text x="81.1879%" y="1103.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (4 samples, 0.01%)</title><rect x="80.9379%" y="1077" width="0.0115%" height="15" fill="rgb(225,45,17)" fg:x="28168" fg:w="4"/><text x="81.1879%" y="1087.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (4 samples, 0.01%)</title><rect x="80.9379%" y="1061" width="0.0115%" height="15" fill="rgb(232,199,2)" fg:x="28168" fg:w="4"/><text x="81.1879%" y="1071.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (4 samples, 0.01%)</title><rect x="80.9379%" y="1045" width="0.0115%" height="15" fill="rgb(235,33,40)" fg:x="28168" fg:w="4"/><text x="81.1879%" y="1055.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (4 samples, 0.01%)</title><rect x="80.9522%" y="1413" width="0.0115%" height="15" fill="rgb(237,89,50)" fg:x="28173" fg:w="4"/><text x="81.2022%" y="1423.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (4 samples, 0.01%)</title><rect x="80.9522%" y="1397" width="0.0115%" height="15" fill="rgb(238,126,5)" fg:x="28173" fg:w="4"/><text x="81.2022%" y="1407.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.01%)</title><rect x="80.9522%" y="1381" width="0.0115%" height="15" fill="rgb(247,214,42)" fg:x="28173" fg:w="4"/><text x="81.2022%" y="1391.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.01%)</title><rect x="80.9522%" y="1365" width="0.0115%" height="15" fill="rgb(238,60,45)" fg:x="28173" fg:w="4"/><text x="81.2022%" y="1375.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (127 samples, 0.36%)</title><rect x="80.6074%" y="2197" width="0.3649%" height="15" fill="rgb(225,69,44)" fg:x="28053" fg:w="127"/><text x="80.8574%" y="2207.50"></text></g><g><title>rayon_core::job::JobRef::execute (127 samples, 0.36%)</title><rect x="80.6074%" y="2181" width="0.3649%" height="15" fill="rgb(241,13,44)" fg:x="28053" fg:w="127"/><text x="80.8574%" y="2191.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (127 samples, 0.36%)</title><rect x="80.6074%" y="2165" width="0.3649%" height="15" fill="rgb(227,121,22)" fg:x="28053" fg:w="127"/><text x="80.8574%" y="2175.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (127 samples, 0.36%)</title><rect x="80.6074%" y="2149" width="0.3649%" height="15" fill="rgb(231,160,23)" fg:x="28053" fg:w="127"/><text x="80.8574%" y="2159.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (127 samples, 0.36%)</title><rect x="80.6074%" y="2133" width="0.3649%" height="15" fill="rgb(250,179,43)" fg:x="28053" fg:w="127"/><text x="80.8574%" y="2143.50"></text></g><g><title>std::panic::catch_unwind (127 samples, 0.36%)</title><rect x="80.6074%" y="2117" width="0.3649%" height="15" fill="rgb(233,54,46)" fg:x="28053" fg:w="127"/><text x="80.8574%" y="2127.50"></text></g><g><title>std::panicking::try (127 samples, 0.36%)</title><rect x="80.6074%" y="2101" width="0.3649%" height="15" fill="rgb(247,120,42)" fg:x="28053" fg:w="127"/><text x="80.8574%" y="2111.50"></text></g><g><title>std::panicking::try::do_call (127 samples, 0.36%)</title><rect x="80.6074%" y="2085" width="0.3649%" height="15" fill="rgb(221,219,12)" fg:x="28053" fg:w="127"/><text x="80.8574%" y="2095.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (127 samples, 0.36%)</title><rect x="80.6074%" y="2069" width="0.3649%" height="15" fill="rgb(211,126,8)" fg:x="28053" fg:w="127"/><text x="80.8574%" y="2079.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (127 samples, 0.36%)</title><rect x="80.6074%" y="2053" width="0.3649%" height="15" fill="rgb(218,154,33)" fg:x="28053" fg:w="127"/><text x="80.8574%" y="2063.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (127 samples, 0.36%)</title><rect x="80.6074%" y="2037" width="0.3649%" height="15" fill="rgb(212,199,16)" fg:x="28053" fg:w="127"/><text x="80.8574%" y="2047.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (127 samples, 0.36%)</title><rect x="80.6074%" y="2021" width="0.3649%" height="15" fill="rgb(236,215,46)" fg:x="28053" fg:w="127"/><text x="80.8574%" y="2031.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (127 samples, 0.36%)</title><rect x="80.6074%" y="2005" width="0.3649%" height="15" fill="rgb(232,32,22)" fg:x="28053" fg:w="127"/><text x="80.8574%" y="2015.50"></text></g><g><title>rayon_core::join::join_context (109 samples, 0.31%)</title><rect x="80.6592%" y="1989" width="0.3132%" height="15" fill="rgb(234,79,15)" fg:x="28071" fg:w="109"/><text x="80.9092%" y="1999.50"></text></g><g><title>rayon_core::registry::in_worker (109 samples, 0.31%)</title><rect x="80.6592%" y="1973" width="0.3132%" height="15" fill="rgb(235,187,47)" fg:x="28071" fg:w="109"/><text x="80.9092%" y="1983.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (109 samples, 0.31%)</title><rect x="80.6592%" y="1957" width="0.3132%" height="15" fill="rgb(244,69,37)" fg:x="28071" fg:w="109"/><text x="80.9092%" y="1967.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (64 samples, 0.18%)</title><rect x="80.7885%" y="1941" width="0.1839%" height="15" fill="rgb(249,140,25)" fg:x="28116" fg:w="64"/><text x="81.0385%" y="1951.50"></text></g><g><title>std::panic::catch_unwind (64 samples, 0.18%)</title><rect x="80.7885%" y="1925" width="0.1839%" height="15" fill="rgb(213,69,8)" fg:x="28116" fg:w="64"/><text x="81.0385%" y="1935.50"></text></g><g><title>std::panicking::try (64 samples, 0.18%)</title><rect x="80.7885%" y="1909" width="0.1839%" height="15" fill="rgb(220,136,2)" fg:x="28116" fg:w="64"/><text x="81.0385%" y="1919.50"></text></g><g><title>std::panicking::try::do_call (64 samples, 0.18%)</title><rect x="80.7885%" y="1893" width="0.1839%" height="15" fill="rgb(237,50,36)" fg:x="28116" fg:w="64"/><text x="81.0385%" y="1903.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (64 samples, 0.18%)</title><rect x="80.7885%" y="1877" width="0.1839%" height="15" fill="rgb(226,18,11)" fg:x="28116" fg:w="64"/><text x="81.0385%" y="1887.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (64 samples, 0.18%)</title><rect x="80.7885%" y="1861" width="0.1839%" height="15" fill="rgb(243,156,2)" fg:x="28116" fg:w="64"/><text x="81.0385%" y="1871.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (64 samples, 0.18%)</title><rect x="80.7885%" y="1845" width="0.1839%" height="15" fill="rgb(218,8,34)" fg:x="28116" fg:w="64"/><text x="81.0385%" y="1855.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (64 samples, 0.18%)</title><rect x="80.7885%" y="1829" width="0.1839%" height="15" fill="rgb(250,94,35)" fg:x="28116" fg:w="64"/><text x="81.0385%" y="1839.50"></text></g><g><title>rayon_core::join::join_context (45 samples, 0.13%)</title><rect x="80.8431%" y="1813" width="0.1293%" height="15" fill="rgb(229,127,21)" fg:x="28135" fg:w="45"/><text x="81.0931%" y="1823.50"></text></g><g><title>rayon_core::registry::in_worker (45 samples, 0.13%)</title><rect x="80.8431%" y="1797" width="0.1293%" height="15" fill="rgb(234,49,5)" fg:x="28135" fg:w="45"/><text x="81.0931%" y="1807.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (45 samples, 0.13%)</title><rect x="80.8431%" y="1781" width="0.1293%" height="15" fill="rgb(248,12,16)" fg:x="28135" fg:w="45"/><text x="81.0931%" y="1791.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (30 samples, 0.09%)</title><rect x="80.8862%" y="1765" width="0.0862%" height="15" fill="rgb(208,220,31)" fg:x="28150" fg:w="30"/><text x="81.1362%" y="1775.50"></text></g><g><title>std::panic::catch_unwind (30 samples, 0.09%)</title><rect x="80.8862%" y="1749" width="0.0862%" height="15" fill="rgb(243,184,0)" fg:x="28150" fg:w="30"/><text x="81.1362%" y="1759.50"></text></g><g><title>std::panicking::try (30 samples, 0.09%)</title><rect x="80.8862%" y="1733" width="0.0862%" height="15" fill="rgb(217,38,21)" fg:x="28150" fg:w="30"/><text x="81.1362%" y="1743.50"></text></g><g><title>std::panicking::try::do_call (30 samples, 0.09%)</title><rect x="80.8862%" y="1717" width="0.0862%" height="15" fill="rgb(239,120,45)" fg:x="28150" fg:w="30"/><text x="81.1362%" y="1727.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (30 samples, 0.09%)</title><rect x="80.8862%" y="1701" width="0.0862%" height="15" fill="rgb(235,33,2)" fg:x="28150" fg:w="30"/><text x="81.1362%" y="1711.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (30 samples, 0.09%)</title><rect x="80.8862%" y="1685" width="0.0862%" height="15" fill="rgb(249,161,5)" fg:x="28150" fg:w="30"/><text x="81.1362%" y="1695.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (30 samples, 0.09%)</title><rect x="80.8862%" y="1669" width="0.0862%" height="15" fill="rgb(250,165,48)" fg:x="28150" fg:w="30"/><text x="81.1362%" y="1679.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (30 samples, 0.09%)</title><rect x="80.8862%" y="1653" width="0.0862%" height="15" fill="rgb(221,23,45)" fg:x="28150" fg:w="30"/><text x="81.1362%" y="1663.50"></text></g><g><title>rayon_core::join::join_context (22 samples, 0.06%)</title><rect x="80.9091%" y="1637" width="0.0632%" height="15" fill="rgb(217,108,46)" fg:x="28158" fg:w="22"/><text x="81.1591%" y="1647.50"></text></g><g><title>rayon_core::registry::in_worker (22 samples, 0.06%)</title><rect x="80.9091%" y="1621" width="0.0632%" height="15" fill="rgb(254,26,35)" fg:x="28158" fg:w="22"/><text x="81.1591%" y="1631.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (22 samples, 0.06%)</title><rect x="80.9091%" y="1605" width="0.0632%" height="15" fill="rgb(218,223,28)" fg:x="28158" fg:w="22"/><text x="81.1591%" y="1615.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (12 samples, 0.03%)</title><rect x="80.9379%" y="1589" width="0.0345%" height="15" fill="rgb(242,27,47)" fg:x="28168" fg:w="12"/><text x="81.1879%" y="1599.50"></text></g><g><title>std::panic::catch_unwind (12 samples, 0.03%)</title><rect x="80.9379%" y="1573" width="0.0345%" height="15" fill="rgb(218,39,35)" fg:x="28168" fg:w="12"/><text x="81.1879%" y="1583.50"></text></g><g><title>std::panicking::try (12 samples, 0.03%)</title><rect x="80.9379%" y="1557" width="0.0345%" height="15" fill="rgb(232,127,16)" fg:x="28168" fg:w="12"/><text x="81.1879%" y="1567.50"></text></g><g><title>std::panicking::try::do_call (12 samples, 0.03%)</title><rect x="80.9379%" y="1541" width="0.0345%" height="15" fill="rgb(231,219,51)" fg:x="28168" fg:w="12"/><text x="81.1879%" y="1551.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (12 samples, 0.03%)</title><rect x="80.9379%" y="1525" width="0.0345%" height="15" fill="rgb(217,220,46)" fg:x="28168" fg:w="12"/><text x="81.1879%" y="1535.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (12 samples, 0.03%)</title><rect x="80.9379%" y="1509" width="0.0345%" height="15" fill="rgb(230,75,1)" fg:x="28168" fg:w="12"/><text x="81.1879%" y="1519.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (12 samples, 0.03%)</title><rect x="80.9379%" y="1493" width="0.0345%" height="15" fill="rgb(218,2,8)" fg:x="28168" fg:w="12"/><text x="81.1879%" y="1503.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.03%)</title><rect x="80.9379%" y="1477" width="0.0345%" height="15" fill="rgb(206,111,30)" fg:x="28168" fg:w="12"/><text x="81.1879%" y="1487.50"></text></g><g><title>rayon_core::join::join_context (7 samples, 0.02%)</title><rect x="80.9522%" y="1461" width="0.0201%" height="15" fill="rgb(209,135,6)" fg:x="28173" fg:w="7"/><text x="81.2022%" y="1471.50"></text></g><g><title>rayon_core::registry::in_worker (7 samples, 0.02%)</title><rect x="80.9522%" y="1445" width="0.0201%" height="15" fill="rgb(205,169,10)" fg:x="28173" fg:w="7"/><text x="81.2022%" y="1455.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (7 samples, 0.02%)</title><rect x="80.9522%" y="1429" width="0.0201%" height="15" fill="rgb(212,204,38)" fg:x="28173" fg:w="7"/><text x="81.2022%" y="1439.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (128 samples, 0.37%)</title><rect x="80.6074%" y="2229" width="0.3678%" height="15" fill="rgb(205,199,14)" fg:x="28053" fg:w="128"/><text x="80.8574%" y="2239.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (128 samples, 0.37%)</title><rect x="80.6074%" y="2213" width="0.3678%" height="15" fill="rgb(212,4,6)" fg:x="28053" fg:w="128"/><text x="80.8574%" y="2223.50"></text></g><g><title>&lt;bcs::ser::MapSerializer&lt;W&gt; as serde::ser::SerializeMap&gt;::end (27 samples, 0.08%)</title><rect x="80.9752%" y="1781" width="0.0776%" height="15" fill="rgb(250,15,10)" fg:x="28181" fg:w="27"/><text x="81.2252%" y="1791.50"></text></g><g><title>std::io::Write::write_all (27 samples, 0.08%)</title><rect x="80.9752%" y="1765" width="0.0776%" height="15" fill="rgb(212,49,51)" fg:x="28181" fg:w="27"/><text x="81.2252%" y="1775.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSetHasher as std::io::Write&gt;::write (27 samples, 0.08%)</title><rect x="80.9752%" y="1749" width="0.0776%" height="15" fill="rgb(235,21,9)" fg:x="28181" fg:w="27"/><text x="81.2252%" y="1759.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (27 samples, 0.08%)</title><rect x="80.9752%" y="1733" width="0.0776%" height="15" fill="rgb(251,31,32)" fg:x="28181" fg:w="27"/><text x="81.2252%" y="1743.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (27 samples, 0.08%)</title><rect x="80.9752%" y="1717" width="0.0776%" height="15" fill="rgb(246,23,9)" fg:x="28181" fg:w="27"/><text x="81.2252%" y="1727.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (27 samples, 0.08%)</title><rect x="80.9752%" y="1701" width="0.0776%" height="15" fill="rgb(225,216,14)" fg:x="28181" fg:w="27"/><text x="81.2252%" y="1711.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (27 samples, 0.08%)</title><rect x="80.9752%" y="1685" width="0.0776%" height="15" fill="rgb(215,200,26)" fg:x="28181" fg:w="27"/><text x="81.2252%" y="1695.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.01%)</title><rect x="81.0413%" y="1669" width="0.0115%" height="15" fill="rgb(237,130,47)" fg:x="28204" fg:w="4"/><text x="81.2913%" y="1679.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (29 samples, 0.08%)</title><rect x="80.9752%" y="2101" width="0.0833%" height="15" fill="rgb(247,74,14)" fg:x="28181" fg:w="29"/><text x="81.2252%" y="2111.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (29 samples, 0.08%)</title><rect x="80.9752%" y="2085" width="0.0833%" height="15" fill="rgb(254,97,46)" fg:x="28181" fg:w="29"/><text x="81.2252%" y="2095.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (29 samples, 0.08%)</title><rect x="80.9752%" y="2069" width="0.0833%" height="15" fill="rgb(234,191,1)" fg:x="28181" fg:w="29"/><text x="81.2252%" y="2079.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (29 samples, 0.08%)</title><rect x="80.9752%" y="2053" width="0.0833%" height="15" fill="rgb(215,165,14)" fg:x="28181" fg:w="29"/><text x="81.2252%" y="2063.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.08%)</title><rect x="80.9752%" y="2037" width="0.0833%" height="15" fill="rgb(230,182,6)" fg:x="28181" fg:w="29"/><text x="81.2252%" y="2047.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (29 samples, 0.08%)</title><rect x="80.9752%" y="2021" width="0.0833%" height="15" fill="rgb(210,127,39)" fg:x="28181" fg:w="29"/><text x="81.2252%" y="2031.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (29 samples, 0.08%)</title><rect x="80.9752%" y="2005" width="0.0833%" height="15" fill="rgb(223,212,51)" fg:x="28181" fg:w="29"/><text x="81.2252%" y="2015.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (29 samples, 0.08%)</title><rect x="80.9752%" y="1989" width="0.0833%" height="15" fill="rgb(226,176,43)" fg:x="28181" fg:w="29"/><text x="81.2252%" y="1999.50"></text></g><g><title>aptos_executor::components::apply_chunk_output::ApplyChunkOutput::assemble_ledger_diff::{{closure}} (29 samples, 0.08%)</title><rect x="80.9752%" y="1973" width="0.0833%" height="15" fill="rgb(222,155,4)" fg:x="28181" fg:w="29"/><text x="81.2252%" y="1983.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSet as aptos_crypto::hash::CryptoHash&gt;::hash (29 samples, 0.08%)</title><rect x="80.9752%" y="1957" width="0.0833%" height="15" fill="rgb(215,149,7)" fg:x="28181" fg:w="29"/><text x="81.2252%" y="1967.50"></text></g><g><title>bcs::ser::serialize_into (29 samples, 0.08%)</title><rect x="80.9752%" y="1941" width="0.0833%" height="15" fill="rgb(252,199,23)" fg:x="28181" fg:w="29"/><text x="81.2252%" y="1951.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (29 samples, 0.08%)</title><rect x="80.9752%" y="1925" width="0.0833%" height="15" fill="rgb(245,52,29)" fg:x="28181" fg:w="29"/><text x="81.2252%" y="1935.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSet&gt;::serialize (29 samples, 0.08%)</title><rect x="80.9752%" y="1909" width="0.0833%" height="15" fill="rgb(221,228,19)" fg:x="28181" fg:w="29"/><text x="81.2252%" y="1919.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (29 samples, 0.08%)</title><rect x="80.9752%" y="1893" width="0.0833%" height="15" fill="rgb(253,101,6)" fg:x="28181" fg:w="29"/><text x="81.2252%" y="1903.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetV0&gt;::serialize (29 samples, 0.08%)</title><rect x="80.9752%" y="1877" width="0.0833%" height="15" fill="rgb(211,130,8)" fg:x="28181" fg:w="29"/><text x="81.2252%" y="1887.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (29 samples, 0.08%)</title><rect x="80.9752%" y="1861" width="0.0833%" height="15" fill="rgb(238,37,53)" fg:x="28181" fg:w="29"/><text x="81.2252%" y="1871.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetMut&gt;::serialize (29 samples, 0.08%)</title><rect x="80.9752%" y="1845" width="0.0833%" height="15" fill="rgb(235,145,5)" fg:x="28181" fg:w="29"/><text x="81.2252%" y="1855.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (29 samples, 0.08%)</title><rect x="80.9752%" y="1829" width="0.0833%" height="15" fill="rgb(244,12,43)" fg:x="28181" fg:w="29"/><text x="81.2252%" y="1839.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::serialize (29 samples, 0.08%)</title><rect x="80.9752%" y="1813" width="0.0833%" height="15" fill="rgb(246,195,24)" fg:x="28181" fg:w="29"/><text x="81.2252%" y="1823.50"></text></g><g><title>serde::ser::Serializer::collect_map (29 samples, 0.08%)</title><rect x="80.9752%" y="1797" width="0.0833%" height="15" fill="rgb(235,163,6)" fg:x="28181" fg:w="29"/><text x="81.2252%" y="1807.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (20 samples, 0.06%)</title><rect x="81.0586%" y="1989" width="0.0575%" height="15" fill="rgb(236,218,17)" fg:x="28210" fg:w="20"/><text x="81.3086%" y="1999.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (20 samples, 0.06%)</title><rect x="81.0586%" y="1973" width="0.0575%" height="15" fill="rgb(235,12,38)" fg:x="28210" fg:w="20"/><text x="81.3086%" y="1983.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (20 samples, 0.06%)</title><rect x="81.0586%" y="1957" width="0.0575%" height="15" fill="rgb(225,195,33)" fg:x="28210" fg:w="20"/><text x="81.3086%" y="1967.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (20 samples, 0.06%)</title><rect x="81.0586%" y="1941" width="0.0575%" height="15" fill="rgb(238,54,35)" fg:x="28210" fg:w="20"/><text x="81.3086%" y="1951.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.06%)</title><rect x="81.0586%" y="1925" width="0.0575%" height="15" fill="rgb(238,33,7)" fg:x="28210" fg:w="20"/><text x="81.3086%" y="1935.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (20 samples, 0.06%)</title><rect x="81.0586%" y="1909" width="0.0575%" height="15" fill="rgb(245,5,14)" fg:x="28210" fg:w="20"/><text x="81.3086%" y="1919.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (20 samples, 0.06%)</title><rect x="81.0586%" y="1893" width="0.0575%" height="15" fill="rgb(251,95,31)" fg:x="28210" fg:w="20"/><text x="81.3086%" y="1903.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (20 samples, 0.06%)</title><rect x="81.0586%" y="1877" width="0.0575%" height="15" fill="rgb(222,15,46)" fg:x="28210" fg:w="20"/><text x="81.3086%" y="1887.50"></text></g><g><title>aptos_executor::components::apply_chunk_output::ApplyChunkOutput::assemble_ledger_diff::{{closure}} (20 samples, 0.06%)</title><rect x="81.0586%" y="1861" width="0.0575%" height="15" fill="rgb(226,182,24)" fg:x="28210" fg:w="20"/><text x="81.3086%" y="1871.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSet as aptos_crypto::hash::CryptoHash&gt;::hash (20 samples, 0.06%)</title><rect x="81.0586%" y="1845" width="0.0575%" height="15" fill="rgb(229,105,41)" fg:x="28210" fg:w="20"/><text x="81.3086%" y="1855.50"></text></g><g><title>bcs::ser::serialize_into (20 samples, 0.06%)</title><rect x="81.0586%" y="1829" width="0.0575%" height="15" fill="rgb(216,99,53)" fg:x="28210" fg:w="20"/><text x="81.3086%" y="1839.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (20 samples, 0.06%)</title><rect x="81.0586%" y="1813" width="0.0575%" height="15" fill="rgb(253,26,20)" fg:x="28210" fg:w="20"/><text x="81.3086%" y="1823.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSet&gt;::serialize (20 samples, 0.06%)</title><rect x="81.0586%" y="1797" width="0.0575%" height="15" fill="rgb(249,155,28)" fg:x="28210" fg:w="20"/><text x="81.3086%" y="1807.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (20 samples, 0.06%)</title><rect x="81.0586%" y="1781" width="0.0575%" height="15" fill="rgb(241,221,2)" fg:x="28210" fg:w="20"/><text x="81.3086%" y="1791.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetV0&gt;::serialize (20 samples, 0.06%)</title><rect x="81.0586%" y="1765" width="0.0575%" height="15" fill="rgb(219,124,6)" fg:x="28210" fg:w="20"/><text x="81.3086%" y="1775.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (20 samples, 0.06%)</title><rect x="81.0586%" y="1749" width="0.0575%" height="15" fill="rgb(233,37,6)" fg:x="28210" fg:w="20"/><text x="81.3086%" y="1759.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetMut&gt;::serialize (20 samples, 0.06%)</title><rect x="81.0586%" y="1733" width="0.0575%" height="15" fill="rgb(238,20,14)" fg:x="28210" fg:w="20"/><text x="81.3086%" y="1743.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (20 samples, 0.06%)</title><rect x="81.0586%" y="1717" width="0.0575%" height="15" fill="rgb(232,106,27)" fg:x="28210" fg:w="20"/><text x="81.3086%" y="1727.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::serialize (20 samples, 0.06%)</title><rect x="81.0586%" y="1701" width="0.0575%" height="15" fill="rgb(246,157,24)" fg:x="28210" fg:w="20"/><text x="81.3086%" y="1711.50"></text></g><g><title>serde::ser::Serializer::collect_map (20 samples, 0.06%)</title><rect x="81.0586%" y="1685" width="0.0575%" height="15" fill="rgb(214,153,10)" fg:x="28210" fg:w="20"/><text x="81.3086%" y="1695.50"></text></g><g><title>&lt;bcs::ser::MapSerializer&lt;W&gt; as serde::ser::SerializeMap&gt;::end (20 samples, 0.06%)</title><rect x="81.0586%" y="1669" width="0.0575%" height="15" fill="rgb(212,94,6)" fg:x="28210" fg:w="20"/><text x="81.3086%" y="1679.50"></text></g><g><title>std::io::Write::write_all (20 samples, 0.06%)</title><rect x="81.0586%" y="1653" width="0.0575%" height="15" fill="rgb(254,25,27)" fg:x="28210" fg:w="20"/><text x="81.3086%" y="1663.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSetHasher as std::io::Write&gt;::write (20 samples, 0.06%)</title><rect x="81.0586%" y="1637" width="0.0575%" height="15" fill="rgb(250,43,52)" fg:x="28210" fg:w="20"/><text x="81.3086%" y="1647.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (20 samples, 0.06%)</title><rect x="81.0586%" y="1621" width="0.0575%" height="15" fill="rgb(221,226,40)" fg:x="28210" fg:w="20"/><text x="81.3086%" y="1631.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (20 samples, 0.06%)</title><rect x="81.0586%" y="1605" width="0.0575%" height="15" fill="rgb(235,162,34)" fg:x="28210" fg:w="20"/><text x="81.3086%" y="1615.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (20 samples, 0.06%)</title><rect x="81.0586%" y="1589" width="0.0575%" height="15" fill="rgb(239,24,26)" fg:x="28210" fg:w="20"/><text x="81.3086%" y="1599.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (20 samples, 0.06%)</title><rect x="81.0586%" y="1573" width="0.0575%" height="15" fill="rgb(244,226,11)" fg:x="28210" fg:w="20"/><text x="81.3086%" y="1583.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (7 samples, 0.02%)</title><rect x="81.0959%" y="1557" width="0.0201%" height="15" fill="rgb(225,23,10)" fg:x="28223" fg:w="7"/><text x="81.3459%" y="1567.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (6 samples, 0.02%)</title><rect x="81.1160%" y="1877" width="0.0172%" height="15" fill="rgb(249,125,6)" fg:x="28230" fg:w="6"/><text x="81.3660%" y="1887.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (6 samples, 0.02%)</title><rect x="81.1160%" y="1861" width="0.0172%" height="15" fill="rgb(246,212,12)" fg:x="28230" fg:w="6"/><text x="81.3660%" y="1871.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (6 samples, 0.02%)</title><rect x="81.1160%" y="1845" width="0.0172%" height="15" fill="rgb(230,43,32)" fg:x="28230" fg:w="6"/><text x="81.3660%" y="1855.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (6 samples, 0.02%)</title><rect x="81.1160%" y="1829" width="0.0172%" height="15" fill="rgb(210,95,23)" fg:x="28230" fg:w="6"/><text x="81.3660%" y="1839.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.02%)</title><rect x="81.1160%" y="1813" width="0.0172%" height="15" fill="rgb(229,103,33)" fg:x="28230" fg:w="6"/><text x="81.3660%" y="1823.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (6 samples, 0.02%)</title><rect x="81.1160%" y="1797" width="0.0172%" height="15" fill="rgb(222,104,27)" fg:x="28230" fg:w="6"/><text x="81.3660%" y="1807.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (6 samples, 0.02%)</title><rect x="81.1160%" y="1781" width="0.0172%" height="15" fill="rgb(239,221,23)" fg:x="28230" fg:w="6"/><text x="81.3660%" y="1791.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (6 samples, 0.02%)</title><rect x="81.1160%" y="1765" width="0.0172%" height="15" fill="rgb(222,98,21)" fg:x="28230" fg:w="6"/><text x="81.3660%" y="1775.50"></text></g><g><title>aptos_executor::components::apply_chunk_output::ApplyChunkOutput::assemble_ledger_diff::{{closure}} (6 samples, 0.02%)</title><rect x="81.1160%" y="1749" width="0.0172%" height="15" fill="rgb(231,101,20)" fg:x="28230" fg:w="6"/><text x="81.3660%" y="1759.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSet as aptos_crypto::hash::CryptoHash&gt;::hash (6 samples, 0.02%)</title><rect x="81.1160%" y="1733" width="0.0172%" height="15" fill="rgb(215,150,22)" fg:x="28230" fg:w="6"/><text x="81.3660%" y="1743.50"></text></g><g><title>bcs::ser::serialize_into (6 samples, 0.02%)</title><rect x="81.1160%" y="1717" width="0.0172%" height="15" fill="rgb(248,3,34)" fg:x="28230" fg:w="6"/><text x="81.3660%" y="1727.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.02%)</title><rect x="81.1160%" y="1701" width="0.0172%" height="15" fill="rgb(220,141,21)" fg:x="28230" fg:w="6"/><text x="81.3660%" y="1711.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSet&gt;::serialize (6 samples, 0.02%)</title><rect x="81.1160%" y="1685" width="0.0172%" height="15" fill="rgb(223,41,48)" fg:x="28230" fg:w="6"/><text x="81.3660%" y="1695.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (6 samples, 0.02%)</title><rect x="81.1160%" y="1669" width="0.0172%" height="15" fill="rgb(247,12,5)" fg:x="28230" fg:w="6"/><text x="81.3660%" y="1679.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetV0&gt;::serialize (6 samples, 0.02%)</title><rect x="81.1160%" y="1653" width="0.0172%" height="15" fill="rgb(206,173,10)" fg:x="28230" fg:w="6"/><text x="81.3660%" y="1663.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (6 samples, 0.02%)</title><rect x="81.1160%" y="1637" width="0.0172%" height="15" fill="rgb(233,214,37)" fg:x="28230" fg:w="6"/><text x="81.3660%" y="1647.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetMut&gt;::serialize (6 samples, 0.02%)</title><rect x="81.1160%" y="1621" width="0.0172%" height="15" fill="rgb(238,86,43)" fg:x="28230" fg:w="6"/><text x="81.3660%" y="1631.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.02%)</title><rect x="81.1160%" y="1605" width="0.0172%" height="15" fill="rgb(212,182,8)" fg:x="28230" fg:w="6"/><text x="81.3660%" y="1615.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::serialize (6 samples, 0.02%)</title><rect x="81.1160%" y="1589" width="0.0172%" height="15" fill="rgb(240,91,47)" fg:x="28230" fg:w="6"/><text x="81.3660%" y="1599.50"></text></g><g><title>serde::ser::Serializer::collect_map (6 samples, 0.02%)</title><rect x="81.1160%" y="1573" width="0.0172%" height="15" fill="rgb(209,138,26)" fg:x="28230" fg:w="6"/><text x="81.3660%" y="1583.50"></text></g><g><title>&lt;bcs::ser::MapSerializer&lt;W&gt; as serde::ser::SerializeMap&gt;::end (6 samples, 0.02%)</title><rect x="81.1160%" y="1557" width="0.0172%" height="15" fill="rgb(231,163,20)" fg:x="28230" fg:w="6"/><text x="81.3660%" y="1567.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.02%)</title><rect x="81.1160%" y="1541" width="0.0172%" height="15" fill="rgb(214,91,54)" fg:x="28230" fg:w="6"/><text x="81.3660%" y="1551.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSetHasher as std::io::Write&gt;::write (6 samples, 0.02%)</title><rect x="81.1160%" y="1525" width="0.0172%" height="15" fill="rgb(230,32,17)" fg:x="28230" fg:w="6"/><text x="81.3660%" y="1535.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (6 samples, 0.02%)</title><rect x="81.1160%" y="1509" width="0.0172%" height="15" fill="rgb(231,34,34)" fg:x="28230" fg:w="6"/><text x="81.3660%" y="1519.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (6 samples, 0.02%)</title><rect x="81.1160%" y="1493" width="0.0172%" height="15" fill="rgb(224,228,27)" fg:x="28230" fg:w="6"/><text x="81.3660%" y="1503.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (6 samples, 0.02%)</title><rect x="81.1160%" y="1477" width="0.0172%" height="15" fill="rgb(219,35,40)" fg:x="28230" fg:w="6"/><text x="81.3660%" y="1487.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (6 samples, 0.02%)</title><rect x="81.1160%" y="1461" width="0.0172%" height="15" fill="rgb(234,42,8)" fg:x="28230" fg:w="6"/><text x="81.3660%" y="1471.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (14 samples, 0.04%)</title><rect x="81.1160%" y="1941" width="0.0402%" height="15" fill="rgb(226,75,22)" fg:x="28230" fg:w="14"/><text x="81.3660%" y="1951.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (14 samples, 0.04%)</title><rect x="81.1160%" y="1925" width="0.0402%" height="15" fill="rgb(242,203,28)" fg:x="28230" fg:w="14"/><text x="81.3660%" y="1935.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (14 samples, 0.04%)</title><rect x="81.1160%" y="1909" width="0.0402%" height="15" fill="rgb(221,3,9)" fg:x="28230" fg:w="14"/><text x="81.3660%" y="1919.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (14 samples, 0.04%)</title><rect x="81.1160%" y="1893" width="0.0402%" height="15" fill="rgb(214,34,31)" fg:x="28230" fg:w="14"/><text x="81.3660%" y="1903.50"></text></g><g><title>rayon_core::join::join_context (8 samples, 0.02%)</title><rect x="81.1333%" y="1877" width="0.0230%" height="15" fill="rgb(252,119,15)" fg:x="28236" fg:w="8"/><text x="81.3833%" y="1887.50"></text></g><g><title>rayon_core::registry::in_worker (8 samples, 0.02%)</title><rect x="81.1333%" y="1861" width="0.0230%" height="15" fill="rgb(244,224,31)" fg:x="28236" fg:w="8"/><text x="81.3833%" y="1871.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (8 samples, 0.02%)</title><rect x="81.1333%" y="1845" width="0.0230%" height="15" fill="rgb(215,8,51)" fg:x="28236" fg:w="8"/><text x="81.3833%" y="1855.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (8 samples, 0.02%)</title><rect x="81.1563%" y="1941" width="0.0230%" height="15" fill="rgb(207,24,1)" fg:x="28244" fg:w="8"/><text x="81.4063%" y="1951.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (8 samples, 0.02%)</title><rect x="81.1563%" y="1925" width="0.0230%" height="15" fill="rgb(245,90,0)" fg:x="28244" fg:w="8"/><text x="81.4063%" y="1935.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (8 samples, 0.02%)</title><rect x="81.1563%" y="1909" width="0.0230%" height="15" fill="rgb(246,43,48)" fg:x="28244" fg:w="8"/><text x="81.4063%" y="1919.50"></text></g><g><title>rayon_core::job::JobRef::execute (8 samples, 0.02%)</title><rect x="81.1563%" y="1893" width="0.0230%" height="15" fill="rgb(252,218,10)" fg:x="28244" fg:w="8"/><text x="81.4063%" y="1903.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (8 samples, 0.02%)</title><rect x="81.1563%" y="1877" width="0.0230%" height="15" fill="rgb(231,24,35)" fg:x="28244" fg:w="8"/><text x="81.4063%" y="1887.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (8 samples, 0.02%)</title><rect x="81.1563%" y="1861" width="0.0230%" height="15" fill="rgb(225,66,19)" fg:x="28244" fg:w="8"/><text x="81.4063%" y="1871.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (8 samples, 0.02%)</title><rect x="81.1563%" y="1845" width="0.0230%" height="15" fill="rgb(214,96,51)" fg:x="28244" fg:w="8"/><text x="81.4063%" y="1855.50"></text></g><g><title>std::panic::catch_unwind (8 samples, 0.02%)</title><rect x="81.1563%" y="1829" width="0.0230%" height="15" fill="rgb(251,151,47)" fg:x="28244" fg:w="8"/><text x="81.4063%" y="1839.50"></text></g><g><title>std::panicking::try (8 samples, 0.02%)</title><rect x="81.1563%" y="1813" width="0.0230%" height="15" fill="rgb(236,79,14)" fg:x="28244" fg:w="8"/><text x="81.4063%" y="1823.50"></text></g><g><title>std::panicking::try::do_call (8 samples, 0.02%)</title><rect x="81.1563%" y="1797" width="0.0230%" height="15" fill="rgb(210,205,11)" fg:x="28244" fg:w="8"/><text x="81.4063%" y="1807.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (8 samples, 0.02%)</title><rect x="81.1563%" y="1781" width="0.0230%" height="15" fill="rgb(233,142,53)" fg:x="28244" fg:w="8"/><text x="81.4063%" y="1791.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (8 samples, 0.02%)</title><rect x="81.1563%" y="1765" width="0.0230%" height="15" fill="rgb(212,116,48)" fg:x="28244" fg:w="8"/><text x="81.4063%" y="1775.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (8 samples, 0.02%)</title><rect x="81.1563%" y="1749" width="0.0230%" height="15" fill="rgb(234,55,33)" fg:x="28244" fg:w="8"/><text x="81.4063%" y="1759.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (8 samples, 0.02%)</title><rect x="81.1563%" y="1733" width="0.0230%" height="15" fill="rgb(253,92,27)" fg:x="28244" fg:w="8"/><text x="81.4063%" y="1743.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (8 samples, 0.02%)</title><rect x="81.1563%" y="1717" width="0.0230%" height="15" fill="rgb(220,7,35)" fg:x="28244" fg:w="8"/><text x="81.4063%" y="1727.50"></text></g><g><title>rayon_core::join::join_context (7 samples, 0.02%)</title><rect x="81.1591%" y="1701" width="0.0201%" height="15" fill="rgb(246,124,6)" fg:x="28245" fg:w="7"/><text x="81.4091%" y="1711.50"></text></g><g><title>rayon_core::registry::in_worker (7 samples, 0.02%)</title><rect x="81.1591%" y="1685" width="0.0201%" height="15" fill="rgb(212,111,51)" fg:x="28245" fg:w="7"/><text x="81.4091%" y="1695.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (7 samples, 0.02%)</title><rect x="81.1591%" y="1669" width="0.0201%" height="15" fill="rgb(253,116,7)" fg:x="28245" fg:w="7"/><text x="81.4091%" y="1679.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (5 samples, 0.01%)</title><rect x="81.1649%" y="1653" width="0.0144%" height="15" fill="rgb(213,145,18)" fg:x="28247" fg:w="5"/><text x="81.4149%" y="1663.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.01%)</title><rect x="81.1649%" y="1637" width="0.0144%" height="15" fill="rgb(219,149,7)" fg:x="28247" fg:w="5"/><text x="81.4149%" y="1647.50"></text></g><g><title>std::panicking::try (5 samples, 0.01%)</title><rect x="81.1649%" y="1621" width="0.0144%" height="15" fill="rgb(225,156,20)" fg:x="28247" fg:w="5"/><text x="81.4149%" y="1631.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.01%)</title><rect x="81.1649%" y="1605" width="0.0144%" height="15" fill="rgb(211,98,19)" fg:x="28247" fg:w="5"/><text x="81.4149%" y="1615.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5 samples, 0.01%)</title><rect x="81.1649%" y="1589" width="0.0144%" height="15" fill="rgb(231,192,31)" fg:x="28247" fg:w="5"/><text x="81.4149%" y="1599.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (5 samples, 0.01%)</title><rect x="81.1649%" y="1573" width="0.0144%" height="15" fill="rgb(249,95,19)" fg:x="28247" fg:w="5"/><text x="81.4149%" y="1583.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (5 samples, 0.01%)</title><rect x="81.1649%" y="1557" width="0.0144%" height="15" fill="rgb(247,101,36)" fg:x="28247" fg:w="5"/><text x="81.4149%" y="1567.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (5 samples, 0.01%)</title><rect x="81.1649%" y="1541" width="0.0144%" height="15" fill="rgb(221,45,43)" fg:x="28247" fg:w="5"/><text x="81.4149%" y="1551.50"></text></g><g><title>rayon_core::join::join_context (5 samples, 0.01%)</title><rect x="81.1649%" y="1525" width="0.0144%" height="15" fill="rgb(220,42,1)" fg:x="28247" fg:w="5"/><text x="81.4149%" y="1535.50"></text></g><g><title>rayon_core::registry::in_worker (5 samples, 0.01%)</title><rect x="81.1649%" y="1509" width="0.0144%" height="15" fill="rgb(236,19,24)" fg:x="28247" fg:w="5"/><text x="81.4149%" y="1519.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5 samples, 0.01%)</title><rect x="81.1649%" y="1493" width="0.0144%" height="15" fill="rgb(225,192,6)" fg:x="28247" fg:w="5"/><text x="81.4149%" y="1503.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (12 samples, 0.03%)</title><rect x="81.1792%" y="1813" width="0.0345%" height="15" fill="rgb(242,30,19)" fg:x="28252" fg:w="12"/><text x="81.4292%" y="1823.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (12 samples, 0.03%)</title><rect x="81.1792%" y="1797" width="0.0345%" height="15" fill="rgb(240,36,6)" fg:x="28252" fg:w="12"/><text x="81.4292%" y="1807.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (12 samples, 0.03%)</title><rect x="81.1792%" y="1781" width="0.0345%" height="15" fill="rgb(246,40,28)" fg:x="28252" fg:w="12"/><text x="81.4292%" y="1791.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (12 samples, 0.03%)</title><rect x="81.1792%" y="1765" width="0.0345%" height="15" fill="rgb(225,155,33)" fg:x="28252" fg:w="12"/><text x="81.4292%" y="1775.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.03%)</title><rect x="81.1792%" y="1749" width="0.0345%" height="15" fill="rgb(240,65,18)" fg:x="28252" fg:w="12"/><text x="81.4292%" y="1759.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (12 samples, 0.03%)</title><rect x="81.1792%" y="1733" width="0.0345%" height="15" fill="rgb(217,0,48)" fg:x="28252" fg:w="12"/><text x="81.4292%" y="1743.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (12 samples, 0.03%)</title><rect x="81.1792%" y="1717" width="0.0345%" height="15" fill="rgb(217,80,15)" fg:x="28252" fg:w="12"/><text x="81.4292%" y="1727.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (12 samples, 0.03%)</title><rect x="81.1792%" y="1701" width="0.0345%" height="15" fill="rgb(253,43,51)" fg:x="28252" fg:w="12"/><text x="81.4292%" y="1711.50"></text></g><g><title>aptos_executor::components::apply_chunk_output::ApplyChunkOutput::assemble_ledger_diff::{{closure}} (12 samples, 0.03%)</title><rect x="81.1792%" y="1685" width="0.0345%" height="15" fill="rgb(246,60,4)" fg:x="28252" fg:w="12"/><text x="81.4292%" y="1695.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSet as aptos_crypto::hash::CryptoHash&gt;::hash (12 samples, 0.03%)</title><rect x="81.1792%" y="1669" width="0.0345%" height="15" fill="rgb(230,40,54)" fg:x="28252" fg:w="12"/><text x="81.4292%" y="1679.50"></text></g><g><title>bcs::ser::serialize_into (12 samples, 0.03%)</title><rect x="81.1792%" y="1653" width="0.0345%" height="15" fill="rgb(208,20,44)" fg:x="28252" fg:w="12"/><text x="81.4292%" y="1663.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (12 samples, 0.03%)</title><rect x="81.1792%" y="1637" width="0.0345%" height="15" fill="rgb(230,22,22)" fg:x="28252" fg:w="12"/><text x="81.4292%" y="1647.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSet&gt;::serialize (12 samples, 0.03%)</title><rect x="81.1792%" y="1621" width="0.0345%" height="15" fill="rgb(207,57,4)" fg:x="28252" fg:w="12"/><text x="81.4292%" y="1631.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (12 samples, 0.03%)</title><rect x="81.1792%" y="1605" width="0.0345%" height="15" fill="rgb(242,130,33)" fg:x="28252" fg:w="12"/><text x="81.4292%" y="1615.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetV0&gt;::serialize (12 samples, 0.03%)</title><rect x="81.1792%" y="1589" width="0.0345%" height="15" fill="rgb(218,66,43)" fg:x="28252" fg:w="12"/><text x="81.4292%" y="1599.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (12 samples, 0.03%)</title><rect x="81.1792%" y="1573" width="0.0345%" height="15" fill="rgb(236,105,16)" fg:x="28252" fg:w="12"/><text x="81.4292%" y="1583.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetMut&gt;::serialize (12 samples, 0.03%)</title><rect x="81.1792%" y="1557" width="0.0345%" height="15" fill="rgb(230,46,15)" fg:x="28252" fg:w="12"/><text x="81.4292%" y="1567.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (12 samples, 0.03%)</title><rect x="81.1792%" y="1541" width="0.0345%" height="15" fill="rgb(251,172,40)" fg:x="28252" fg:w="12"/><text x="81.4292%" y="1551.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::serialize (12 samples, 0.03%)</title><rect x="81.1792%" y="1525" width="0.0345%" height="15" fill="rgb(225,217,32)" fg:x="28252" fg:w="12"/><text x="81.4292%" y="1535.50"></text></g><g><title>serde::ser::Serializer::collect_map (12 samples, 0.03%)</title><rect x="81.1792%" y="1509" width="0.0345%" height="15" fill="rgb(243,10,29)" fg:x="28252" fg:w="12"/><text x="81.4292%" y="1519.50"></text></g><g><title>&lt;bcs::ser::MapSerializer&lt;W&gt; as serde::ser::SerializeMap&gt;::end (12 samples, 0.03%)</title><rect x="81.1792%" y="1493" width="0.0345%" height="15" fill="rgb(207,102,10)" fg:x="28252" fg:w="12"/><text x="81.4292%" y="1503.50"></text></g><g><title>std::io::Write::write_all (12 samples, 0.03%)</title><rect x="81.1792%" y="1477" width="0.0345%" height="15" fill="rgb(241,125,5)" fg:x="28252" fg:w="12"/><text x="81.4292%" y="1487.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSetHasher as std::io::Write&gt;::write (12 samples, 0.03%)</title><rect x="81.1792%" y="1461" width="0.0345%" height="15" fill="rgb(230,125,29)" fg:x="28252" fg:w="12"/><text x="81.4292%" y="1471.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (12 samples, 0.03%)</title><rect x="81.1792%" y="1445" width="0.0345%" height="15" fill="rgb(223,65,44)" fg:x="28252" fg:w="12"/><text x="81.4292%" y="1455.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (12 samples, 0.03%)</title><rect x="81.1792%" y="1429" width="0.0345%" height="15" fill="rgb(224,188,28)" fg:x="28252" fg:w="12"/><text x="81.4292%" y="1439.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (12 samples, 0.03%)</title><rect x="81.1792%" y="1413" width="0.0345%" height="15" fill="rgb(254,197,27)" fg:x="28252" fg:w="12"/><text x="81.4292%" y="1423.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (12 samples, 0.03%)</title><rect x="81.1792%" y="1397" width="0.0345%" height="15" fill="rgb(220,200,25)" fg:x="28252" fg:w="12"/><text x="81.4292%" y="1407.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (6 samples, 0.02%)</title><rect x="81.1965%" y="1381" width="0.0172%" height="15" fill="rgb(239,225,54)" fg:x="28258" fg:w="6"/><text x="81.4465%" y="1391.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (4 samples, 0.01%)</title><rect x="81.2166%" y="1701" width="0.0115%" height="15" fill="rgb(211,59,40)" fg:x="28265" fg:w="4"/><text x="81.4666%" y="1711.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (4 samples, 0.01%)</title><rect x="81.2166%" y="1685" width="0.0115%" height="15" fill="rgb(213,176,46)" fg:x="28265" fg:w="4"/><text x="81.4666%" y="1695.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (4 samples, 0.01%)</title><rect x="81.2166%" y="1669" width="0.0115%" height="15" fill="rgb(226,99,4)" fg:x="28265" fg:w="4"/><text x="81.4666%" y="1679.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (4 samples, 0.01%)</title><rect x="81.2166%" y="1653" width="0.0115%" height="15" fill="rgb(239,203,43)" fg:x="28265" fg:w="4"/><text x="81.4666%" y="1663.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="81.2166%" y="1637" width="0.0115%" height="15" fill="rgb(246,1,45)" fg:x="28265" fg:w="4"/><text x="81.4666%" y="1647.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4 samples, 0.01%)</title><rect x="81.2166%" y="1621" width="0.0115%" height="15" fill="rgb(231,42,52)" fg:x="28265" fg:w="4"/><text x="81.4666%" y="1631.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (4 samples, 0.01%)</title><rect x="81.2166%" y="1605" width="0.0115%" height="15" fill="rgb(240,13,50)" fg:x="28265" fg:w="4"/><text x="81.4666%" y="1615.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (4 samples, 0.01%)</title><rect x="81.2166%" y="1589" width="0.0115%" height="15" fill="rgb(225,81,14)" fg:x="28265" fg:w="4"/><text x="81.4666%" y="1599.50"></text></g><g><title>aptos_executor::components::apply_chunk_output::ApplyChunkOutput::assemble_ledger_diff::{{closure}} (4 samples, 0.01%)</title><rect x="81.2166%" y="1573" width="0.0115%" height="15" fill="rgb(216,182,23)" fg:x="28265" fg:w="4"/><text x="81.4666%" y="1583.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSet as aptos_crypto::hash::CryptoHash&gt;::hash (4 samples, 0.01%)</title><rect x="81.2166%" y="1557" width="0.0115%" height="15" fill="rgb(233,137,19)" fg:x="28265" fg:w="4"/><text x="81.4666%" y="1567.50"></text></g><g><title>bcs::ser::serialize_into (4 samples, 0.01%)</title><rect x="81.2166%" y="1541" width="0.0115%" height="15" fill="rgb(242,61,46)" fg:x="28265" fg:w="4"/><text x="81.4666%" y="1551.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.01%)</title><rect x="81.2166%" y="1525" width="0.0115%" height="15" fill="rgb(221,168,51)" fg:x="28265" fg:w="4"/><text x="81.4666%" y="1535.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSet&gt;::serialize (4 samples, 0.01%)</title><rect x="81.2166%" y="1509" width="0.0115%" height="15" fill="rgb(238,48,15)" fg:x="28265" fg:w="4"/><text x="81.4666%" y="1519.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (4 samples, 0.01%)</title><rect x="81.2166%" y="1493" width="0.0115%" height="15" fill="rgb(216,13,16)" fg:x="28265" fg:w="4"/><text x="81.4666%" y="1503.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetV0&gt;::serialize (4 samples, 0.01%)</title><rect x="81.2166%" y="1477" width="0.0115%" height="15" fill="rgb(223,185,34)" fg:x="28265" fg:w="4"/><text x="81.4666%" y="1487.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (4 samples, 0.01%)</title><rect x="81.2166%" y="1461" width="0.0115%" height="15" fill="rgb(228,94,42)" fg:x="28265" fg:w="4"/><text x="81.4666%" y="1471.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetMut&gt;::serialize (4 samples, 0.01%)</title><rect x="81.2166%" y="1445" width="0.0115%" height="15" fill="rgb(218,166,43)" fg:x="28265" fg:w="4"/><text x="81.4666%" y="1455.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.01%)</title><rect x="81.2166%" y="1429" width="0.0115%" height="15" fill="rgb(232,30,50)" fg:x="28265" fg:w="4"/><text x="81.4666%" y="1439.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::serialize (4 samples, 0.01%)</title><rect x="81.2166%" y="1413" width="0.0115%" height="15" fill="rgb(245,206,45)" fg:x="28265" fg:w="4"/><text x="81.4666%" y="1423.50"></text></g><g><title>serde::ser::Serializer::collect_map (4 samples, 0.01%)</title><rect x="81.2166%" y="1397" width="0.0115%" height="15" fill="rgb(220,56,22)" fg:x="28265" fg:w="4"/><text x="81.4666%" y="1407.50"></text></g><g><title>&lt;bcs::ser::MapSerializer&lt;W&gt; as serde::ser::SerializeMap&gt;::end (4 samples, 0.01%)</title><rect x="81.2166%" y="1381" width="0.0115%" height="15" fill="rgb(239,129,38)" fg:x="28265" fg:w="4"/><text x="81.4666%" y="1391.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.01%)</title><rect x="81.2166%" y="1365" width="0.0115%" height="15" fill="rgb(207,68,41)" fg:x="28265" fg:w="4"/><text x="81.4666%" y="1375.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSetHasher as std::io::Write&gt;::write (4 samples, 0.01%)</title><rect x="81.2166%" y="1349" width="0.0115%" height="15" fill="rgb(221,21,7)" fg:x="28265" fg:w="4"/><text x="81.4666%" y="1359.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (4 samples, 0.01%)</title><rect x="81.2166%" y="1333" width="0.0115%" height="15" fill="rgb(240,33,25)" fg:x="28265" fg:w="4"/><text x="81.4666%" y="1343.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (4 samples, 0.01%)</title><rect x="81.2166%" y="1317" width="0.0115%" height="15" fill="rgb(242,119,10)" fg:x="28265" fg:w="4"/><text x="81.4666%" y="1327.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (4 samples, 0.01%)</title><rect x="81.2166%" y="1301" width="0.0115%" height="15" fill="rgb(214,149,40)" fg:x="28265" fg:w="4"/><text x="81.4666%" y="1311.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (4 samples, 0.01%)</title><rect x="81.2166%" y="1285" width="0.0115%" height="15" fill="rgb(228,25,36)" fg:x="28265" fg:w="4"/><text x="81.4666%" y="1295.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (8 samples, 0.02%)</title><rect x="81.2166%" y="1765" width="0.0230%" height="15" fill="rgb(222,59,15)" fg:x="28265" fg:w="8"/><text x="81.4666%" y="1775.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (8 samples, 0.02%)</title><rect x="81.2166%" y="1749" width="0.0230%" height="15" fill="rgb(218,170,0)" fg:x="28265" fg:w="8"/><text x="81.4666%" y="1759.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (8 samples, 0.02%)</title><rect x="81.2166%" y="1733" width="0.0230%" height="15" fill="rgb(232,173,23)" fg:x="28265" fg:w="8"/><text x="81.4666%" y="1743.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (8 samples, 0.02%)</title><rect x="81.2166%" y="1717" width="0.0230%" height="15" fill="rgb(218,116,1)" fg:x="28265" fg:w="8"/><text x="81.4666%" y="1727.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (66 samples, 0.19%)</title><rect x="81.0586%" y="2053" width="0.1896%" height="15" fill="rgb(207,34,4)" fg:x="28210" fg:w="66"/><text x="81.3086%" y="2063.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (66 samples, 0.19%)</title><rect x="81.0586%" y="2037" width="0.1896%" height="15" fill="rgb(229,54,52)" fg:x="28210" fg:w="66"/><text x="81.3086%" y="2047.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (66 samples, 0.19%)</title><rect x="81.0586%" y="2021" width="0.1896%" height="15" fill="rgb(211,86,23)" fg:x="28210" fg:w="66"/><text x="81.3086%" y="2031.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (66 samples, 0.19%)</title><rect x="81.0586%" y="2005" width="0.1896%" height="15" fill="rgb(254,153,34)" fg:x="28210" fg:w="66"/><text x="81.3086%" y="2015.50"></text></g><g><title>rayon_core::join::join_context (46 samples, 0.13%)</title><rect x="81.1160%" y="1989" width="0.1322%" height="15" fill="rgb(219,220,14)" fg:x="28230" fg:w="46"/><text x="81.3660%" y="1999.50"></text></g><g><title>rayon_core::registry::in_worker (46 samples, 0.13%)</title><rect x="81.1160%" y="1973" width="0.1322%" height="15" fill="rgb(247,8,26)" fg:x="28230" fg:w="46"/><text x="81.3660%" y="1983.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (46 samples, 0.13%)</title><rect x="81.1160%" y="1957" width="0.1322%" height="15" fill="rgb(213,129,42)" fg:x="28230" fg:w="46"/><text x="81.3660%" y="1967.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (24 samples, 0.07%)</title><rect x="81.1792%" y="1941" width="0.0690%" height="15" fill="rgb(225,95,41)" fg:x="28252" fg:w="24"/><text x="81.4292%" y="1951.50"></text></g><g><title>std::panic::catch_unwind (24 samples, 0.07%)</title><rect x="81.1792%" y="1925" width="0.0690%" height="15" fill="rgb(215,134,24)" fg:x="28252" fg:w="24"/><text x="81.4292%" y="1935.50"></text></g><g><title>std::panicking::try (24 samples, 0.07%)</title><rect x="81.1792%" y="1909" width="0.0690%" height="15" fill="rgb(235,23,54)" fg:x="28252" fg:w="24"/><text x="81.4292%" y="1919.50"></text></g><g><title>std::panicking::try::do_call (24 samples, 0.07%)</title><rect x="81.1792%" y="1893" width="0.0690%" height="15" fill="rgb(229,96,31)" fg:x="28252" fg:w="24"/><text x="81.4292%" y="1903.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (24 samples, 0.07%)</title><rect x="81.1792%" y="1877" width="0.0690%" height="15" fill="rgb(206,111,12)" fg:x="28252" fg:w="24"/><text x="81.4292%" y="1887.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (24 samples, 0.07%)</title><rect x="81.1792%" y="1861" width="0.0690%" height="15" fill="rgb(222,177,8)" fg:x="28252" fg:w="24"/><text x="81.4292%" y="1871.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (24 samples, 0.07%)</title><rect x="81.1792%" y="1845" width="0.0690%" height="15" fill="rgb(251,36,52)" fg:x="28252" fg:w="24"/><text x="81.4292%" y="1855.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (24 samples, 0.07%)</title><rect x="81.1792%" y="1829" width="0.0690%" height="15" fill="rgb(216,182,29)" fg:x="28252" fg:w="24"/><text x="81.4292%" y="1839.50"></text></g><g><title>rayon_core::join::join_context (11 samples, 0.03%)</title><rect x="81.2166%" y="1813" width="0.0316%" height="15" fill="rgb(241,145,50)" fg:x="28265" fg:w="11"/><text x="81.4666%" y="1823.50"></text></g><g><title>rayon_core::registry::in_worker (11 samples, 0.03%)</title><rect x="81.2166%" y="1797" width="0.0316%" height="15" fill="rgb(231,71,35)" fg:x="28265" fg:w="11"/><text x="81.4666%" y="1807.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (11 samples, 0.03%)</title><rect x="81.2166%" y="1781" width="0.0316%" height="15" fill="rgb(218,22,17)" fg:x="28265" fg:w="11"/><text x="81.4666%" y="1791.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (11 samples, 0.03%)</title><rect x="81.2482%" y="1813" width="0.0316%" height="15" fill="rgb(225,227,6)" fg:x="28276" fg:w="11"/><text x="81.4982%" y="1823.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (11 samples, 0.03%)</title><rect x="81.2482%" y="1797" width="0.0316%" height="15" fill="rgb(224,204,17)" fg:x="28276" fg:w="11"/><text x="81.4982%" y="1807.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (11 samples, 0.03%)</title><rect x="81.2482%" y="1781" width="0.0316%" height="15" fill="rgb(227,61,28)" fg:x="28276" fg:w="11"/><text x="81.4982%" y="1791.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (11 samples, 0.03%)</title><rect x="81.2482%" y="1765" width="0.0316%" height="15" fill="rgb(242,148,23)" fg:x="28276" fg:w="11"/><text x="81.4982%" y="1775.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.03%)</title><rect x="81.2482%" y="1749" width="0.0316%" height="15" fill="rgb(237,105,33)" fg:x="28276" fg:w="11"/><text x="81.4982%" y="1759.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (11 samples, 0.03%)</title><rect x="81.2482%" y="1733" width="0.0316%" height="15" fill="rgb(238,218,40)" fg:x="28276" fg:w="11"/><text x="81.4982%" y="1743.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (11 samples, 0.03%)</title><rect x="81.2482%" y="1717" width="0.0316%" height="15" fill="rgb(209,126,11)" fg:x="28276" fg:w="11"/><text x="81.4982%" y="1727.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (11 samples, 0.03%)</title><rect x="81.2482%" y="1701" width="0.0316%" height="15" fill="rgb(245,90,11)" fg:x="28276" fg:w="11"/><text x="81.4982%" y="1711.50"></text></g><g><title>aptos_executor::components::apply_chunk_output::ApplyChunkOutput::assemble_ledger_diff::{{closure}} (11 samples, 0.03%)</title><rect x="81.2482%" y="1685" width="0.0316%" height="15" fill="rgb(211,195,10)" fg:x="28276" fg:w="11"/><text x="81.4982%" y="1695.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSet as aptos_crypto::hash::CryptoHash&gt;::hash (11 samples, 0.03%)</title><rect x="81.2482%" y="1669" width="0.0316%" height="15" fill="rgb(231,45,45)" fg:x="28276" fg:w="11"/><text x="81.4982%" y="1679.50"></text></g><g><title>bcs::ser::serialize_into (10 samples, 0.03%)</title><rect x="81.2511%" y="1653" width="0.0287%" height="15" fill="rgb(246,100,43)" fg:x="28277" fg:w="10"/><text x="81.5011%" y="1663.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (10 samples, 0.03%)</title><rect x="81.2511%" y="1637" width="0.0287%" height="15" fill="rgb(241,193,8)" fg:x="28277" fg:w="10"/><text x="81.5011%" y="1647.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSet&gt;::serialize (10 samples, 0.03%)</title><rect x="81.2511%" y="1621" width="0.0287%" height="15" fill="rgb(208,76,19)" fg:x="28277" fg:w="10"/><text x="81.5011%" y="1631.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (10 samples, 0.03%)</title><rect x="81.2511%" y="1605" width="0.0287%" height="15" fill="rgb(223,69,40)" fg:x="28277" fg:w="10"/><text x="81.5011%" y="1615.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetV0&gt;::serialize (10 samples, 0.03%)</title><rect x="81.2511%" y="1589" width="0.0287%" height="15" fill="rgb(207,120,39)" fg:x="28277" fg:w="10"/><text x="81.5011%" y="1599.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (10 samples, 0.03%)</title><rect x="81.2511%" y="1573" width="0.0287%" height="15" fill="rgb(212,209,28)" fg:x="28277" fg:w="10"/><text x="81.5011%" y="1583.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetMut&gt;::serialize (10 samples, 0.03%)</title><rect x="81.2511%" y="1557" width="0.0287%" height="15" fill="rgb(246,82,29)" fg:x="28277" fg:w="10"/><text x="81.5011%" y="1567.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (10 samples, 0.03%)</title><rect x="81.2511%" y="1541" width="0.0287%" height="15" fill="rgb(239,6,40)" fg:x="28277" fg:w="10"/><text x="81.5011%" y="1551.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::serialize (10 samples, 0.03%)</title><rect x="81.2511%" y="1525" width="0.0287%" height="15" fill="rgb(228,181,35)" fg:x="28277" fg:w="10"/><text x="81.5011%" y="1535.50"></text></g><g><title>serde::ser::Serializer::collect_map (10 samples, 0.03%)</title><rect x="81.2511%" y="1509" width="0.0287%" height="15" fill="rgb(238,151,2)" fg:x="28277" fg:w="10"/><text x="81.5011%" y="1519.50"></text></g><g><title>&lt;bcs::ser::MapSerializer&lt;W&gt; as serde::ser::SerializeMap&gt;::end (10 samples, 0.03%)</title><rect x="81.2511%" y="1493" width="0.0287%" height="15" fill="rgb(236,94,18)" fg:x="28277" fg:w="10"/><text x="81.5011%" y="1503.50"></text></g><g><title>std::io::Write::write_all (10 samples, 0.03%)</title><rect x="81.2511%" y="1477" width="0.0287%" height="15" fill="rgb(208,38,14)" fg:x="28277" fg:w="10"/><text x="81.5011%" y="1487.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSetHasher as std::io::Write&gt;::write (10 samples, 0.03%)</title><rect x="81.2511%" y="1461" width="0.0287%" height="15" fill="rgb(234,215,27)" fg:x="28277" fg:w="10"/><text x="81.5011%" y="1471.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (10 samples, 0.03%)</title><rect x="81.2511%" y="1445" width="0.0287%" height="15" fill="rgb(254,211,53)" fg:x="28277" fg:w="10"/><text x="81.5011%" y="1455.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (10 samples, 0.03%)</title><rect x="81.2511%" y="1429" width="0.0287%" height="15" fill="rgb(216,175,11)" fg:x="28277" fg:w="10"/><text x="81.5011%" y="1439.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (10 samples, 0.03%)</title><rect x="81.2511%" y="1413" width="0.0287%" height="15" fill="rgb(246,179,26)" fg:x="28277" fg:w="10"/><text x="81.5011%" y="1423.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (10 samples, 0.03%)</title><rect x="81.2511%" y="1397" width="0.0287%" height="15" fill="rgb(249,19,52)" fg:x="28277" fg:w="10"/><text x="81.5011%" y="1407.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (4 samples, 0.01%)</title><rect x="81.2798%" y="1765" width="0.0115%" height="15" fill="rgb(230,42,52)" fg:x="28287" fg:w="4"/><text x="81.5298%" y="1775.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (4 samples, 0.01%)</title><rect x="81.2798%" y="1749" width="0.0115%" height="15" fill="rgb(221,171,0)" fg:x="28287" fg:w="4"/><text x="81.5298%" y="1759.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.01%)</title><rect x="81.2798%" y="1733" width="0.0115%" height="15" fill="rgb(222,177,40)" fg:x="28287" fg:w="4"/><text x="81.5298%" y="1743.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.01%)</title><rect x="81.2798%" y="1717" width="0.0115%" height="15" fill="rgb(247,34,16)" fg:x="28287" fg:w="4"/><text x="81.5298%" y="1727.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (4 samples, 0.01%)</title><rect x="81.2913%" y="1525" width="0.0115%" height="15" fill="rgb(213,217,37)" fg:x="28291" fg:w="4"/><text x="81.5413%" y="1535.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (4 samples, 0.01%)</title><rect x="81.2913%" y="1509" width="0.0115%" height="15" fill="rgb(231,189,24)" fg:x="28291" fg:w="4"/><text x="81.5413%" y="1519.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (4 samples, 0.01%)</title><rect x="81.2913%" y="1493" width="0.0115%" height="15" fill="rgb(214,22,9)" fg:x="28291" fg:w="4"/><text x="81.5413%" y="1503.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (4 samples, 0.01%)</title><rect x="81.2913%" y="1477" width="0.0115%" height="15" fill="rgb(212,70,22)" fg:x="28291" fg:w="4"/><text x="81.5413%" y="1487.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="81.2913%" y="1461" width="0.0115%" height="15" fill="rgb(249,64,51)" fg:x="28291" fg:w="4"/><text x="81.5413%" y="1471.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4 samples, 0.01%)</title><rect x="81.2913%" y="1445" width="0.0115%" height="15" fill="rgb(249,148,20)" fg:x="28291" fg:w="4"/><text x="81.5413%" y="1455.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (4 samples, 0.01%)</title><rect x="81.2913%" y="1429" width="0.0115%" height="15" fill="rgb(246,46,48)" fg:x="28291" fg:w="4"/><text x="81.5413%" y="1439.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (4 samples, 0.01%)</title><rect x="81.2913%" y="1413" width="0.0115%" height="15" fill="rgb(217,34,48)" fg:x="28291" fg:w="4"/><text x="81.5413%" y="1423.50"></text></g><g><title>aptos_executor::components::apply_chunk_output::ApplyChunkOutput::assemble_ledger_diff::{{closure}} (4 samples, 0.01%)</title><rect x="81.2913%" y="1397" width="0.0115%" height="15" fill="rgb(222,45,26)" fg:x="28291" fg:w="4"/><text x="81.5413%" y="1407.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSet as aptos_crypto::hash::CryptoHash&gt;::hash (4 samples, 0.01%)</title><rect x="81.2913%" y="1381" width="0.0115%" height="15" fill="rgb(230,201,36)" fg:x="28291" fg:w="4"/><text x="81.5413%" y="1391.50"></text></g><g><title>bcs::ser::serialize_into (4 samples, 0.01%)</title><rect x="81.2913%" y="1365" width="0.0115%" height="15" fill="rgb(217,30,43)" fg:x="28291" fg:w="4"/><text x="81.5413%" y="1375.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.01%)</title><rect x="81.2913%" y="1349" width="0.0115%" height="15" fill="rgb(230,197,40)" fg:x="28291" fg:w="4"/><text x="81.5413%" y="1359.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSet&gt;::serialize (4 samples, 0.01%)</title><rect x="81.2913%" y="1333" width="0.0115%" height="15" fill="rgb(239,181,18)" fg:x="28291" fg:w="4"/><text x="81.5413%" y="1343.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (4 samples, 0.01%)</title><rect x="81.2913%" y="1317" width="0.0115%" height="15" fill="rgb(222,60,39)" fg:x="28291" fg:w="4"/><text x="81.5413%" y="1327.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetV0&gt;::serialize (4 samples, 0.01%)</title><rect x="81.2913%" y="1301" width="0.0115%" height="15" fill="rgb(210,60,22)" fg:x="28291" fg:w="4"/><text x="81.5413%" y="1311.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (4 samples, 0.01%)</title><rect x="81.2913%" y="1285" width="0.0115%" height="15" fill="rgb(239,213,48)" fg:x="28291" fg:w="4"/><text x="81.5413%" y="1295.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetMut&gt;::serialize (4 samples, 0.01%)</title><rect x="81.2913%" y="1269" width="0.0115%" height="15" fill="rgb(253,214,23)" fg:x="28291" fg:w="4"/><text x="81.5413%" y="1279.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.01%)</title><rect x="81.2913%" y="1253" width="0.0115%" height="15" fill="rgb(211,98,45)" fg:x="28291" fg:w="4"/><text x="81.5413%" y="1263.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::serialize (4 samples, 0.01%)</title><rect x="81.2913%" y="1237" width="0.0115%" height="15" fill="rgb(239,130,44)" fg:x="28291" fg:w="4"/><text x="81.5413%" y="1247.50"></text></g><g><title>serde::ser::Serializer::collect_map (4 samples, 0.01%)</title><rect x="81.2913%" y="1221" width="0.0115%" height="15" fill="rgb(222,181,35)" fg:x="28291" fg:w="4"/><text x="81.5413%" y="1231.50"></text></g><g><title>&lt;bcs::ser::MapSerializer&lt;W&gt; as serde::ser::SerializeMap&gt;::end (4 samples, 0.01%)</title><rect x="81.2913%" y="1205" width="0.0115%" height="15" fill="rgb(219,219,49)" fg:x="28291" fg:w="4"/><text x="81.5413%" y="1215.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.01%)</title><rect x="81.2913%" y="1189" width="0.0115%" height="15" fill="rgb(227,161,51)" fg:x="28291" fg:w="4"/><text x="81.5413%" y="1199.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSetHasher as std::io::Write&gt;::write (4 samples, 0.01%)</title><rect x="81.2913%" y="1173" width="0.0115%" height="15" fill="rgb(239,112,27)" fg:x="28291" fg:w="4"/><text x="81.5413%" y="1183.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (4 samples, 0.01%)</title><rect x="81.2913%" y="1157" width="0.0115%" height="15" fill="rgb(248,122,18)" fg:x="28291" fg:w="4"/><text x="81.5413%" y="1167.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (4 samples, 0.01%)</title><rect x="81.2913%" y="1141" width="0.0115%" height="15" fill="rgb(245,130,23)" fg:x="28291" fg:w="4"/><text x="81.5413%" y="1151.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (4 samples, 0.01%)</title><rect x="81.2913%" y="1125" width="0.0115%" height="15" fill="rgb(211,225,28)" fg:x="28291" fg:w="4"/><text x="81.5413%" y="1135.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (4 samples, 0.01%)</title><rect x="81.2913%" y="1109" width="0.0115%" height="15" fill="rgb(242,105,44)" fg:x="28291" fg:w="4"/><text x="81.5413%" y="1119.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (13 samples, 0.04%)</title><rect x="81.2913%" y="1765" width="0.0374%" height="15" fill="rgb(216,183,46)" fg:x="28291" fg:w="13"/><text x="81.5413%" y="1775.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (13 samples, 0.04%)</title><rect x="81.2913%" y="1749" width="0.0374%" height="15" fill="rgb(227,112,9)" fg:x="28291" fg:w="13"/><text x="81.5413%" y="1759.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (13 samples, 0.04%)</title><rect x="81.2913%" y="1733" width="0.0374%" height="15" fill="rgb(244,21,0)" fg:x="28291" fg:w="13"/><text x="81.5413%" y="1743.50"></text></g><g><title>rayon_core::job::JobRef::execute (13 samples, 0.04%)</title><rect x="81.2913%" y="1717" width="0.0374%" height="15" fill="rgb(236,185,14)" fg:x="28291" fg:w="13"/><text x="81.5413%" y="1727.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (13 samples, 0.04%)</title><rect x="81.2913%" y="1701" width="0.0374%" height="15" fill="rgb(236,170,30)" fg:x="28291" fg:w="13"/><text x="81.5413%" y="1711.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (13 samples, 0.04%)</title><rect x="81.2913%" y="1685" width="0.0374%" height="15" fill="rgb(209,198,51)" fg:x="28291" fg:w="13"/><text x="81.5413%" y="1695.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (13 samples, 0.04%)</title><rect x="81.2913%" y="1669" width="0.0374%" height="15" fill="rgb(205,171,26)" fg:x="28291" fg:w="13"/><text x="81.5413%" y="1679.50"></text></g><g><title>std::panic::catch_unwind (13 samples, 0.04%)</title><rect x="81.2913%" y="1653" width="0.0374%" height="15" fill="rgb(246,41,49)" fg:x="28291" fg:w="13"/><text x="81.5413%" y="1663.50"></text></g><g><title>std::panicking::try (13 samples, 0.04%)</title><rect x="81.2913%" y="1637" width="0.0374%" height="15" fill="rgb(240,229,12)" fg:x="28291" fg:w="13"/><text x="81.5413%" y="1647.50"></text></g><g><title>std::panicking::try::do_call (13 samples, 0.04%)</title><rect x="81.2913%" y="1621" width="0.0374%" height="15" fill="rgb(212,8,54)" fg:x="28291" fg:w="13"/><text x="81.5413%" y="1631.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (13 samples, 0.04%)</title><rect x="81.2913%" y="1605" width="0.0374%" height="15" fill="rgb(230,114,13)" fg:x="28291" fg:w="13"/><text x="81.5413%" y="1615.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (13 samples, 0.04%)</title><rect x="81.2913%" y="1589" width="0.0374%" height="15" fill="rgb(229,130,28)" fg:x="28291" fg:w="13"/><text x="81.5413%" y="1599.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (13 samples, 0.04%)</title><rect x="81.2913%" y="1573" width="0.0374%" height="15" fill="rgb(206,139,15)" fg:x="28291" fg:w="13"/><text x="81.5413%" y="1583.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (13 samples, 0.04%)</title><rect x="81.2913%" y="1557" width="0.0374%" height="15" fill="rgb(241,188,35)" fg:x="28291" fg:w="13"/><text x="81.5413%" y="1567.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (13 samples, 0.04%)</title><rect x="81.2913%" y="1541" width="0.0374%" height="15" fill="rgb(208,224,26)" fg:x="28291" fg:w="13"/><text x="81.5413%" y="1551.50"></text></g><g><title>rayon_core::join::join_context (9 samples, 0.03%)</title><rect x="81.3028%" y="1525" width="0.0259%" height="15" fill="rgb(251,131,28)" fg:x="28295" fg:w="9"/><text x="81.5528%" y="1535.50"></text></g><g><title>rayon_core::registry::in_worker (9 samples, 0.03%)</title><rect x="81.3028%" y="1509" width="0.0259%" height="15" fill="rgb(208,153,1)" fg:x="28295" fg:w="9"/><text x="81.5528%" y="1519.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (9 samples, 0.03%)</title><rect x="81.3028%" y="1493" width="0.0259%" height="15" fill="rgb(234,33,36)" fg:x="28295" fg:w="9"/><text x="81.5528%" y="1503.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (6 samples, 0.02%)</title><rect x="81.3114%" y="1477" width="0.0172%" height="15" fill="rgb(246,42,29)" fg:x="28298" fg:w="6"/><text x="81.5614%" y="1487.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.02%)</title><rect x="81.3114%" y="1461" width="0.0172%" height="15" fill="rgb(251,114,16)" fg:x="28298" fg:w="6"/><text x="81.5614%" y="1471.50"></text></g><g><title>std::panicking::try (6 samples, 0.02%)</title><rect x="81.3114%" y="1445" width="0.0172%" height="15" fill="rgb(233,13,38)" fg:x="28298" fg:w="6"/><text x="81.5614%" y="1455.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.02%)</title><rect x="81.3114%" y="1429" width="0.0172%" height="15" fill="rgb(247,120,19)" fg:x="28298" fg:w="6"/><text x="81.5614%" y="1439.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6 samples, 0.02%)</title><rect x="81.3114%" y="1413" width="0.0172%" height="15" fill="rgb(205,11,16)" fg:x="28298" fg:w="6"/><text x="81.5614%" y="1423.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (6 samples, 0.02%)</title><rect x="81.3114%" y="1397" width="0.0172%" height="15" fill="rgb(228,185,19)" fg:x="28298" fg:w="6"/><text x="81.5614%" y="1407.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (6 samples, 0.02%)</title><rect x="81.3114%" y="1381" width="0.0172%" height="15" fill="rgb(239,88,52)" fg:x="28298" fg:w="6"/><text x="81.5614%" y="1391.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (6 samples, 0.02%)</title><rect x="81.3114%" y="1365" width="0.0172%" height="15" fill="rgb(219,23,1)" fg:x="28298" fg:w="6"/><text x="81.5614%" y="1375.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (8 samples, 0.02%)</title><rect x="81.3287%" y="1637" width="0.0230%" height="15" fill="rgb(253,177,16)" fg:x="28304" fg:w="8"/><text x="81.5787%" y="1647.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (8 samples, 0.02%)</title><rect x="81.3287%" y="1621" width="0.0230%" height="15" fill="rgb(225,150,40)" fg:x="28304" fg:w="8"/><text x="81.5787%" y="1631.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (8 samples, 0.02%)</title><rect x="81.3287%" y="1605" width="0.0230%" height="15" fill="rgb(208,108,30)" fg:x="28304" fg:w="8"/><text x="81.5787%" y="1615.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (8 samples, 0.02%)</title><rect x="81.3287%" y="1589" width="0.0230%" height="15" fill="rgb(214,122,4)" fg:x="28304" fg:w="8"/><text x="81.5787%" y="1599.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.02%)</title><rect x="81.3287%" y="1573" width="0.0230%" height="15" fill="rgb(229,74,37)" fg:x="28304" fg:w="8"/><text x="81.5787%" y="1583.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (8 samples, 0.02%)</title><rect x="81.3287%" y="1557" width="0.0230%" height="15" fill="rgb(233,61,41)" fg:x="28304" fg:w="8"/><text x="81.5787%" y="1567.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (8 samples, 0.02%)</title><rect x="81.3287%" y="1541" width="0.0230%" height="15" fill="rgb(238,191,5)" fg:x="28304" fg:w="8"/><text x="81.5787%" y="1551.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (8 samples, 0.02%)</title><rect x="81.3287%" y="1525" width="0.0230%" height="15" fill="rgb(233,78,24)" fg:x="28304" fg:w="8"/><text x="81.5787%" y="1535.50"></text></g><g><title>aptos_executor::components::apply_chunk_output::ApplyChunkOutput::assemble_ledger_diff::{{closure}} (8 samples, 0.02%)</title><rect x="81.3287%" y="1509" width="0.0230%" height="15" fill="rgb(211,142,8)" fg:x="28304" fg:w="8"/><text x="81.5787%" y="1519.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSet as aptos_crypto::hash::CryptoHash&gt;::hash (8 samples, 0.02%)</title><rect x="81.3287%" y="1493" width="0.0230%" height="15" fill="rgb(253,38,53)" fg:x="28304" fg:w="8"/><text x="81.5787%" y="1503.50"></text></g><g><title>bcs::ser::serialize_into (7 samples, 0.02%)</title><rect x="81.3315%" y="1477" width="0.0201%" height="15" fill="rgb(234,63,51)" fg:x="28305" fg:w="7"/><text x="81.5815%" y="1487.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.02%)</title><rect x="81.3315%" y="1461" width="0.0201%" height="15" fill="rgb(205,23,31)" fg:x="28305" fg:w="7"/><text x="81.5815%" y="1471.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSet&gt;::serialize (7 samples, 0.02%)</title><rect x="81.3315%" y="1445" width="0.0201%" height="15" fill="rgb(210,184,50)" fg:x="28305" fg:w="7"/><text x="81.5815%" y="1455.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (7 samples, 0.02%)</title><rect x="81.3315%" y="1429" width="0.0201%" height="15" fill="rgb(222,112,26)" fg:x="28305" fg:w="7"/><text x="81.5815%" y="1439.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetV0&gt;::serialize (7 samples, 0.02%)</title><rect x="81.3315%" y="1413" width="0.0201%" height="15" fill="rgb(250,98,18)" fg:x="28305" fg:w="7"/><text x="81.5815%" y="1423.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (7 samples, 0.02%)</title><rect x="81.3315%" y="1397" width="0.0201%" height="15" fill="rgb(250,34,12)" fg:x="28305" fg:w="7"/><text x="81.5815%" y="1407.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetMut&gt;::serialize (7 samples, 0.02%)</title><rect x="81.3315%" y="1381" width="0.0201%" height="15" fill="rgb(236,141,30)" fg:x="28305" fg:w="7"/><text x="81.5815%" y="1391.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (7 samples, 0.02%)</title><rect x="81.3315%" y="1365" width="0.0201%" height="15" fill="rgb(246,134,38)" fg:x="28305" fg:w="7"/><text x="81.5815%" y="1375.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::serialize (7 samples, 0.02%)</title><rect x="81.3315%" y="1349" width="0.0201%" height="15" fill="rgb(240,114,4)" fg:x="28305" fg:w="7"/><text x="81.5815%" y="1359.50"></text></g><g><title>serde::ser::Serializer::collect_map (7 samples, 0.02%)</title><rect x="81.3315%" y="1333" width="0.0201%" height="15" fill="rgb(243,113,39)" fg:x="28305" fg:w="7"/><text x="81.5815%" y="1343.50"></text></g><g><title>&lt;bcs::ser::MapSerializer&lt;W&gt; as serde::ser::SerializeMap&gt;::end (7 samples, 0.02%)</title><rect x="81.3315%" y="1317" width="0.0201%" height="15" fill="rgb(239,215,4)" fg:x="28305" fg:w="7"/><text x="81.5815%" y="1327.50"></text></g><g><title>std::io::Write::write_all (7 samples, 0.02%)</title><rect x="81.3315%" y="1301" width="0.0201%" height="15" fill="rgb(236,229,45)" fg:x="28305" fg:w="7"/><text x="81.5815%" y="1311.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSetHasher as std::io::Write&gt;::write (7 samples, 0.02%)</title><rect x="81.3315%" y="1285" width="0.0201%" height="15" fill="rgb(242,2,6)" fg:x="28305" fg:w="7"/><text x="81.5815%" y="1295.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (7 samples, 0.02%)</title><rect x="81.3315%" y="1269" width="0.0201%" height="15" fill="rgb(239,108,21)" fg:x="28305" fg:w="7"/><text x="81.5815%" y="1279.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (7 samples, 0.02%)</title><rect x="81.3315%" y="1253" width="0.0201%" height="15" fill="rgb(215,168,34)" fg:x="28305" fg:w="7"/><text x="81.5815%" y="1263.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (7 samples, 0.02%)</title><rect x="81.3315%" y="1237" width="0.0201%" height="15" fill="rgb(238,31,17)" fg:x="28305" fg:w="7"/><text x="81.5815%" y="1247.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (7 samples, 0.02%)</title><rect x="81.3315%" y="1221" width="0.0201%" height="15" fill="rgb(220,133,11)" fg:x="28305" fg:w="7"/><text x="81.5815%" y="1231.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (10 samples, 0.03%)</title><rect x="81.3516%" y="1589" width="0.0287%" height="15" fill="rgb(212,158,23)" fg:x="28312" fg:w="10"/><text x="81.6016%" y="1599.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (10 samples, 0.03%)</title><rect x="81.3516%" y="1573" width="0.0287%" height="15" fill="rgb(223,172,7)" fg:x="28312" fg:w="10"/><text x="81.6016%" y="1583.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (10 samples, 0.03%)</title><rect x="81.3516%" y="1557" width="0.0287%" height="15" fill="rgb(244,3,52)" fg:x="28312" fg:w="10"/><text x="81.6016%" y="1567.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.03%)</title><rect x="81.3516%" y="1541" width="0.0287%" height="15" fill="rgb(207,69,27)" fg:x="28312" fg:w="10"/><text x="81.6016%" y="1551.50"></text></g><g><title>rayon_core::join::join_context (8 samples, 0.02%)</title><rect x="81.3574%" y="1525" width="0.0230%" height="15" fill="rgb(213,136,45)" fg:x="28314" fg:w="8"/><text x="81.6074%" y="1535.50"></text></g><g><title>rayon_core::registry::in_worker (8 samples, 0.02%)</title><rect x="81.3574%" y="1509" width="0.0230%" height="15" fill="rgb(218,79,17)" fg:x="28314" fg:w="8"/><text x="81.6074%" y="1519.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (8 samples, 0.02%)</title><rect x="81.3574%" y="1493" width="0.0230%" height="15" fill="rgb(216,106,36)" fg:x="28314" fg:w="8"/><text x="81.6074%" y="1503.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (4 samples, 0.01%)</title><rect x="81.3804%" y="1589" width="0.0115%" height="15" fill="rgb(251,27,45)" fg:x="28322" fg:w="4"/><text x="81.6304%" y="1599.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (4 samples, 0.01%)</title><rect x="81.3804%" y="1573" width="0.0115%" height="15" fill="rgb(232,21,34)" fg:x="28322" fg:w="4"/><text x="81.6304%" y="1583.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (4 samples, 0.01%)</title><rect x="81.3804%" y="1557" width="0.0115%" height="15" fill="rgb(249,191,16)" fg:x="28322" fg:w="4"/><text x="81.6304%" y="1567.50"></text></g><g><title>rayon_core::job::JobRef::execute (4 samples, 0.01%)</title><rect x="81.3804%" y="1541" width="0.0115%" height="15" fill="rgb(224,88,20)" fg:x="28322" fg:w="4"/><text x="81.6304%" y="1551.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (4 samples, 0.01%)</title><rect x="81.3804%" y="1525" width="0.0115%" height="15" fill="rgb(237,93,27)" fg:x="28322" fg:w="4"/><text x="81.6304%" y="1535.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (4 samples, 0.01%)</title><rect x="81.3804%" y="1509" width="0.0115%" height="15" fill="rgb(226,198,48)" fg:x="28322" fg:w="4"/><text x="81.6304%" y="1519.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (4 samples, 0.01%)</title><rect x="81.3804%" y="1493" width="0.0115%" height="15" fill="rgb(207,162,53)" fg:x="28322" fg:w="4"/><text x="81.6304%" y="1503.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.01%)</title><rect x="81.3804%" y="1477" width="0.0115%" height="15" fill="rgb(207,169,9)" fg:x="28322" fg:w="4"/><text x="81.6304%" y="1487.50"></text></g><g><title>std::panicking::try (4 samples, 0.01%)</title><rect x="81.3804%" y="1461" width="0.0115%" height="15" fill="rgb(224,166,46)" fg:x="28322" fg:w="4"/><text x="81.6304%" y="1471.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.01%)</title><rect x="81.3804%" y="1445" width="0.0115%" height="15" fill="rgb(233,26,6)" fg:x="28322" fg:w="4"/><text x="81.6304%" y="1455.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.01%)</title><rect x="81.3804%" y="1429" width="0.0115%" height="15" fill="rgb(218,106,45)" fg:x="28322" fg:w="4"/><text x="81.6304%" y="1439.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (4 samples, 0.01%)</title><rect x="81.3804%" y="1413" width="0.0115%" height="15" fill="rgb(240,217,4)" fg:x="28322" fg:w="4"/><text x="81.6304%" y="1423.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (4 samples, 0.01%)</title><rect x="81.3804%" y="1397" width="0.0115%" height="15" fill="rgb(246,171,10)" fg:x="28322" fg:w="4"/><text x="81.6304%" y="1407.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.01%)</title><rect x="81.3804%" y="1381" width="0.0115%" height="15" fill="rgb(223,197,30)" fg:x="28322" fg:w="4"/><text x="81.6304%" y="1391.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.01%)</title><rect x="81.3804%" y="1365" width="0.0115%" height="15" fill="rgb(207,92,16)" fg:x="28322" fg:w="4"/><text x="81.6304%" y="1375.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (57 samples, 0.16%)</title><rect x="81.2482%" y="2053" width="0.1638%" height="15" fill="rgb(211,6,44)" fg:x="28276" fg:w="57"/><text x="81.4982%" y="2063.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (57 samples, 0.16%)</title><rect x="81.2482%" y="2037" width="0.1638%" height="15" fill="rgb(219,139,2)" fg:x="28276" fg:w="57"/><text x="81.4982%" y="2047.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (57 samples, 0.16%)</title><rect x="81.2482%" y="2021" width="0.1638%" height="15" fill="rgb(224,103,21)" fg:x="28276" fg:w="57"/><text x="81.4982%" y="2031.50"></text></g><g><title>rayon_core::job::JobRef::execute (57 samples, 0.16%)</title><rect x="81.2482%" y="2005" width="0.1638%" height="15" fill="rgb(254,110,48)" fg:x="28276" fg:w="57"/><text x="81.4982%" y="2015.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (57 samples, 0.16%)</title><rect x="81.2482%" y="1989" width="0.1638%" height="15" fill="rgb(212,88,19)" fg:x="28276" fg:w="57"/><text x="81.4982%" y="1999.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (57 samples, 0.16%)</title><rect x="81.2482%" y="1973" width="0.1638%" height="15" fill="rgb(248,103,6)" fg:x="28276" fg:w="57"/><text x="81.4982%" y="1983.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (57 samples, 0.16%)</title><rect x="81.2482%" y="1957" width="0.1638%" height="15" fill="rgb(214,53,46)" fg:x="28276" fg:w="57"/><text x="81.4982%" y="1967.50"></text></g><g><title>std::panic::catch_unwind (57 samples, 0.16%)</title><rect x="81.2482%" y="1941" width="0.1638%" height="15" fill="rgb(236,190,24)" fg:x="28276" fg:w="57"/><text x="81.4982%" y="1951.50"></text></g><g><title>std::panicking::try (57 samples, 0.16%)</title><rect x="81.2482%" y="1925" width="0.1638%" height="15" fill="rgb(254,58,28)" fg:x="28276" fg:w="57"/><text x="81.4982%" y="1935.50"></text></g><g><title>std::panicking::try::do_call (57 samples, 0.16%)</title><rect x="81.2482%" y="1909" width="0.1638%" height="15" fill="rgb(243,63,27)" fg:x="28276" fg:w="57"/><text x="81.4982%" y="1919.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (57 samples, 0.16%)</title><rect x="81.2482%" y="1893" width="0.1638%" height="15" fill="rgb(206,81,20)" fg:x="28276" fg:w="57"/><text x="81.4982%" y="1903.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (57 samples, 0.16%)</title><rect x="81.2482%" y="1877" width="0.1638%" height="15" fill="rgb(252,69,51)" fg:x="28276" fg:w="57"/><text x="81.4982%" y="1887.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (57 samples, 0.16%)</title><rect x="81.2482%" y="1861" width="0.1638%" height="15" fill="rgb(222,213,4)" fg:x="28276" fg:w="57"/><text x="81.4982%" y="1871.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (57 samples, 0.16%)</title><rect x="81.2482%" y="1845" width="0.1638%" height="15" fill="rgb(226,198,12)" fg:x="28276" fg:w="57"/><text x="81.4982%" y="1855.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (57 samples, 0.16%)</title><rect x="81.2482%" y="1829" width="0.1638%" height="15" fill="rgb(248,115,11)" fg:x="28276" fg:w="57"/><text x="81.4982%" y="1839.50"></text></g><g><title>rayon_core::join::join_context (46 samples, 0.13%)</title><rect x="81.2798%" y="1813" width="0.1322%" height="15" fill="rgb(221,148,54)" fg:x="28287" fg:w="46"/><text x="81.5298%" y="1823.50"></text></g><g><title>rayon_core::registry::in_worker (46 samples, 0.13%)</title><rect x="81.2798%" y="1797" width="0.1322%" height="15" fill="rgb(214,209,51)" fg:x="28287" fg:w="46"/><text x="81.5298%" y="1807.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (46 samples, 0.13%)</title><rect x="81.2798%" y="1781" width="0.1322%" height="15" fill="rgb(249,116,53)" fg:x="28287" fg:w="46"/><text x="81.5298%" y="1791.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (29 samples, 0.08%)</title><rect x="81.3287%" y="1765" width="0.0833%" height="15" fill="rgb(248,170,1)" fg:x="28304" fg:w="29"/><text x="81.5787%" y="1775.50"></text></g><g><title>std::panic::catch_unwind (29 samples, 0.08%)</title><rect x="81.3287%" y="1749" width="0.0833%" height="15" fill="rgb(244,105,10)" fg:x="28304" fg:w="29"/><text x="81.5787%" y="1759.50"></text></g><g><title>std::panicking::try (29 samples, 0.08%)</title><rect x="81.3287%" y="1733" width="0.0833%" height="15" fill="rgb(229,100,5)" fg:x="28304" fg:w="29"/><text x="81.5787%" y="1743.50"></text></g><g><title>std::panicking::try::do_call (29 samples, 0.08%)</title><rect x="81.3287%" y="1717" width="0.0833%" height="15" fill="rgb(233,221,39)" fg:x="28304" fg:w="29"/><text x="81.5787%" y="1727.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (29 samples, 0.08%)</title><rect x="81.3287%" y="1701" width="0.0833%" height="15" fill="rgb(233,88,21)" fg:x="28304" fg:w="29"/><text x="81.5787%" y="1711.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (29 samples, 0.08%)</title><rect x="81.3287%" y="1685" width="0.0833%" height="15" fill="rgb(206,13,0)" fg:x="28304" fg:w="29"/><text x="81.5787%" y="1695.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (29 samples, 0.08%)</title><rect x="81.3287%" y="1669" width="0.0833%" height="15" fill="rgb(242,15,35)" fg:x="28304" fg:w="29"/><text x="81.5787%" y="1679.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (29 samples, 0.08%)</title><rect x="81.3287%" y="1653" width="0.0833%" height="15" fill="rgb(247,142,41)" fg:x="28304" fg:w="29"/><text x="81.5787%" y="1663.50"></text></g><g><title>rayon_core::join::join_context (21 samples, 0.06%)</title><rect x="81.3516%" y="1637" width="0.0603%" height="15" fill="rgb(245,51,29)" fg:x="28312" fg:w="21"/><text x="81.6016%" y="1647.50"></text></g><g><title>rayon_core::registry::in_worker (21 samples, 0.06%)</title><rect x="81.3516%" y="1621" width="0.0603%" height="15" fill="rgb(228,209,43)" fg:x="28312" fg:w="21"/><text x="81.6016%" y="1631.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (21 samples, 0.06%)</title><rect x="81.3516%" y="1605" width="0.0603%" height="15" fill="rgb(233,185,9)" fg:x="28312" fg:w="21"/><text x="81.6016%" y="1615.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (7 samples, 0.02%)</title><rect x="81.3919%" y="1589" width="0.0201%" height="15" fill="rgb(226,93,0)" fg:x="28326" fg:w="7"/><text x="81.6419%" y="1599.50"></text></g><g><title>std::panic::catch_unwind (7 samples, 0.02%)</title><rect x="81.3919%" y="1573" width="0.0201%" height="15" fill="rgb(245,194,43)" fg:x="28326" fg:w="7"/><text x="81.6419%" y="1583.50"></text></g><g><title>std::panicking::try (7 samples, 0.02%)</title><rect x="81.3919%" y="1557" width="0.0201%" height="15" fill="rgb(211,145,34)" fg:x="28326" fg:w="7"/><text x="81.6419%" y="1567.50"></text></g><g><title>std::panicking::try::do_call (7 samples, 0.02%)</title><rect x="81.3919%" y="1541" width="0.0201%" height="15" fill="rgb(231,228,28)" fg:x="28326" fg:w="7"/><text x="81.6419%" y="1551.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (7 samples, 0.02%)</title><rect x="81.3919%" y="1525" width="0.0201%" height="15" fill="rgb(236,149,4)" fg:x="28326" fg:w="7"/><text x="81.6419%" y="1535.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (7 samples, 0.02%)</title><rect x="81.3919%" y="1509" width="0.0201%" height="15" fill="rgb(234,114,38)" fg:x="28326" fg:w="7"/><text x="81.6419%" y="1519.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (7 samples, 0.02%)</title><rect x="81.3919%" y="1493" width="0.0201%" height="15" fill="rgb(246,132,51)" fg:x="28326" fg:w="7"/><text x="81.6419%" y="1503.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (7 samples, 0.02%)</title><rect x="81.3919%" y="1477" width="0.0201%" height="15" fill="rgb(251,137,22)" fg:x="28326" fg:w="7"/><text x="81.6419%" y="1487.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.01%)</title><rect x="81.4005%" y="1461" width="0.0115%" height="15" fill="rgb(243,59,52)" fg:x="28329" fg:w="4"/><text x="81.6505%" y="1471.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.01%)</title><rect x="81.4005%" y="1445" width="0.0115%" height="15" fill="rgb(239,56,28)" fg:x="28329" fg:w="4"/><text x="81.6505%" y="1455.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.01%)</title><rect x="81.4005%" y="1429" width="0.0115%" height="15" fill="rgb(218,168,27)" fg:x="28329" fg:w="4"/><text x="81.6505%" y="1439.50"></text></g><g><title>&lt;bcs::ser::MapSerializer&lt;W&gt; as serde::ser::SerializeMap&gt;::end (20 samples, 0.06%)</title><rect x="81.4120%" y="1605" width="0.0575%" height="15" fill="rgb(232,165,11)" fg:x="28333" fg:w="20"/><text x="81.6620%" y="1615.50"></text></g><g><title>std::io::Write::write_all (20 samples, 0.06%)</title><rect x="81.4120%" y="1589" width="0.0575%" height="15" fill="rgb(253,55,41)" fg:x="28333" fg:w="20"/><text x="81.6620%" y="1599.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSetHasher as std::io::Write&gt;::write (20 samples, 0.06%)</title><rect x="81.4120%" y="1573" width="0.0575%" height="15" fill="rgb(233,206,24)" fg:x="28333" fg:w="20"/><text x="81.6620%" y="1583.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (20 samples, 0.06%)</title><rect x="81.4120%" y="1557" width="0.0575%" height="15" fill="rgb(220,199,8)" fg:x="28333" fg:w="20"/><text x="81.6620%" y="1567.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (20 samples, 0.06%)</title><rect x="81.4120%" y="1541" width="0.0575%" height="15" fill="rgb(254,65,26)" fg:x="28333" fg:w="20"/><text x="81.6620%" y="1551.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (20 samples, 0.06%)</title><rect x="81.4120%" y="1525" width="0.0575%" height="15" fill="rgb(253,102,23)" fg:x="28333" fg:w="20"/><text x="81.6620%" y="1535.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (20 samples, 0.06%)</title><rect x="81.4120%" y="1509" width="0.0575%" height="15" fill="rgb(231,103,35)" fg:x="28333" fg:w="20"/><text x="81.6620%" y="1519.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (6 samples, 0.02%)</title><rect x="81.4522%" y="1493" width="0.0172%" height="15" fill="rgb(238,26,10)" fg:x="28347" fg:w="6"/><text x="81.7022%" y="1503.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (21 samples, 0.06%)</title><rect x="81.4120%" y="1925" width="0.0603%" height="15" fill="rgb(234,191,34)" fg:x="28333" fg:w="21"/><text x="81.6620%" y="1935.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (21 samples, 0.06%)</title><rect x="81.4120%" y="1909" width="0.0603%" height="15" fill="rgb(206,210,9)" fg:x="28333" fg:w="21"/><text x="81.6620%" y="1919.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (21 samples, 0.06%)</title><rect x="81.4120%" y="1893" width="0.0603%" height="15" fill="rgb(219,155,3)" fg:x="28333" fg:w="21"/><text x="81.6620%" y="1903.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (21 samples, 0.06%)</title><rect x="81.4120%" y="1877" width="0.0603%" height="15" fill="rgb(221,62,52)" fg:x="28333" fg:w="21"/><text x="81.6620%" y="1887.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.06%)</title><rect x="81.4120%" y="1861" width="0.0603%" height="15" fill="rgb(215,197,36)" fg:x="28333" fg:w="21"/><text x="81.6620%" y="1871.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (21 samples, 0.06%)</title><rect x="81.4120%" y="1845" width="0.0603%" height="15" fill="rgb(226,222,6)" fg:x="28333" fg:w="21"/><text x="81.6620%" y="1855.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (21 samples, 0.06%)</title><rect x="81.4120%" y="1829" width="0.0603%" height="15" fill="rgb(215,58,28)" fg:x="28333" fg:w="21"/><text x="81.6620%" y="1839.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (21 samples, 0.06%)</title><rect x="81.4120%" y="1813" width="0.0603%" height="15" fill="rgb(212,148,2)" fg:x="28333" fg:w="21"/><text x="81.6620%" y="1823.50"></text></g><g><title>aptos_executor::components::apply_chunk_output::ApplyChunkOutput::assemble_ledger_diff::{{closure}} (21 samples, 0.06%)</title><rect x="81.4120%" y="1797" width="0.0603%" height="15" fill="rgb(208,21,42)" fg:x="28333" fg:w="21"/><text x="81.6620%" y="1807.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSet as aptos_crypto::hash::CryptoHash&gt;::hash (21 samples, 0.06%)</title><rect x="81.4120%" y="1781" width="0.0603%" height="15" fill="rgb(209,107,26)" fg:x="28333" fg:w="21"/><text x="81.6620%" y="1791.50"></text></g><g><title>bcs::ser::serialize_into (21 samples, 0.06%)</title><rect x="81.4120%" y="1765" width="0.0603%" height="15" fill="rgb(254,60,47)" fg:x="28333" fg:w="21"/><text x="81.6620%" y="1775.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (21 samples, 0.06%)</title><rect x="81.4120%" y="1749" width="0.0603%" height="15" fill="rgb(207,226,45)" fg:x="28333" fg:w="21"/><text x="81.6620%" y="1759.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSet&gt;::serialize (21 samples, 0.06%)</title><rect x="81.4120%" y="1733" width="0.0603%" height="15" fill="rgb(223,124,22)" fg:x="28333" fg:w="21"/><text x="81.6620%" y="1743.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (21 samples, 0.06%)</title><rect x="81.4120%" y="1717" width="0.0603%" height="15" fill="rgb(240,162,13)" fg:x="28333" fg:w="21"/><text x="81.6620%" y="1727.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetV0&gt;::serialize (21 samples, 0.06%)</title><rect x="81.4120%" y="1701" width="0.0603%" height="15" fill="rgb(244,199,31)" fg:x="28333" fg:w="21"/><text x="81.6620%" y="1711.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (21 samples, 0.06%)</title><rect x="81.4120%" y="1685" width="0.0603%" height="15" fill="rgb(207,92,16)" fg:x="28333" fg:w="21"/><text x="81.6620%" y="1695.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetMut&gt;::serialize (21 samples, 0.06%)</title><rect x="81.4120%" y="1669" width="0.0603%" height="15" fill="rgb(215,31,19)" fg:x="28333" fg:w="21"/><text x="81.6620%" y="1679.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (21 samples, 0.06%)</title><rect x="81.4120%" y="1653" width="0.0603%" height="15" fill="rgb(245,118,14)" fg:x="28333" fg:w="21"/><text x="81.6620%" y="1663.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::serialize (21 samples, 0.06%)</title><rect x="81.4120%" y="1637" width="0.0603%" height="15" fill="rgb(248,12,46)" fg:x="28333" fg:w="21"/><text x="81.6620%" y="1647.50"></text></g><g><title>serde::ser::Serializer::collect_map (21 samples, 0.06%)</title><rect x="81.4120%" y="1621" width="0.0603%" height="15" fill="rgb(209,119,0)" fg:x="28333" fg:w="21"/><text x="81.6620%" y="1631.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (10 samples, 0.03%)</title><rect x="81.4752%" y="1813" width="0.0287%" height="15" fill="rgb(254,51,44)" fg:x="28355" fg:w="10"/><text x="81.7252%" y="1823.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (10 samples, 0.03%)</title><rect x="81.4752%" y="1797" width="0.0287%" height="15" fill="rgb(253,182,35)" fg:x="28355" fg:w="10"/><text x="81.7252%" y="1807.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (10 samples, 0.03%)</title><rect x="81.4752%" y="1781" width="0.0287%" height="15" fill="rgb(205,198,39)" fg:x="28355" fg:w="10"/><text x="81.7252%" y="1791.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (10 samples, 0.03%)</title><rect x="81.4752%" y="1765" width="0.0287%" height="15" fill="rgb(251,175,48)" fg:x="28355" fg:w="10"/><text x="81.7252%" y="1775.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.03%)</title><rect x="81.4752%" y="1749" width="0.0287%" height="15" fill="rgb(239,38,17)" fg:x="28355" fg:w="10"/><text x="81.7252%" y="1759.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (10 samples, 0.03%)</title><rect x="81.4752%" y="1733" width="0.0287%" height="15" fill="rgb(212,101,8)" fg:x="28355" fg:w="10"/><text x="81.7252%" y="1743.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (10 samples, 0.03%)</title><rect x="81.4752%" y="1717" width="0.0287%" height="15" fill="rgb(228,35,17)" fg:x="28355" fg:w="10"/><text x="81.7252%" y="1727.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (10 samples, 0.03%)</title><rect x="81.4752%" y="1701" width="0.0287%" height="15" fill="rgb(214,95,8)" fg:x="28355" fg:w="10"/><text x="81.7252%" y="1711.50"></text></g><g><title>aptos_executor::components::apply_chunk_output::ApplyChunkOutput::assemble_ledger_diff::{{closure}} (10 samples, 0.03%)</title><rect x="81.4752%" y="1685" width="0.0287%" height="15" fill="rgb(210,176,35)" fg:x="28355" fg:w="10"/><text x="81.7252%" y="1695.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSet as aptos_crypto::hash::CryptoHash&gt;::hash (10 samples, 0.03%)</title><rect x="81.4752%" y="1669" width="0.0287%" height="15" fill="rgb(226,4,3)" fg:x="28355" fg:w="10"/><text x="81.7252%" y="1679.50"></text></g><g><title>bcs::ser::serialize_into (10 samples, 0.03%)</title><rect x="81.4752%" y="1653" width="0.0287%" height="15" fill="rgb(232,133,14)" fg:x="28355" fg:w="10"/><text x="81.7252%" y="1663.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (10 samples, 0.03%)</title><rect x="81.4752%" y="1637" width="0.0287%" height="15" fill="rgb(250,191,8)" fg:x="28355" fg:w="10"/><text x="81.7252%" y="1647.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSet&gt;::serialize (10 samples, 0.03%)</title><rect x="81.4752%" y="1621" width="0.0287%" height="15" fill="rgb(213,12,45)" fg:x="28355" fg:w="10"/><text x="81.7252%" y="1631.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (10 samples, 0.03%)</title><rect x="81.4752%" y="1605" width="0.0287%" height="15" fill="rgb(233,78,26)" fg:x="28355" fg:w="10"/><text x="81.7252%" y="1615.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetV0&gt;::serialize (10 samples, 0.03%)</title><rect x="81.4752%" y="1589" width="0.0287%" height="15" fill="rgb(245,222,11)" fg:x="28355" fg:w="10"/><text x="81.7252%" y="1599.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (10 samples, 0.03%)</title><rect x="81.4752%" y="1573" width="0.0287%" height="15" fill="rgb(216,174,12)" fg:x="28355" fg:w="10"/><text x="81.7252%" y="1583.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetMut&gt;::serialize (10 samples, 0.03%)</title><rect x="81.4752%" y="1557" width="0.0287%" height="15" fill="rgb(213,15,9)" fg:x="28355" fg:w="10"/><text x="81.7252%" y="1567.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (10 samples, 0.03%)</title><rect x="81.4752%" y="1541" width="0.0287%" height="15" fill="rgb(238,103,32)" fg:x="28355" fg:w="10"/><text x="81.7252%" y="1551.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::serialize (10 samples, 0.03%)</title><rect x="81.4752%" y="1525" width="0.0287%" height="15" fill="rgb(245,85,15)" fg:x="28355" fg:w="10"/><text x="81.7252%" y="1535.50"></text></g><g><title>serde::ser::Serializer::collect_map (10 samples, 0.03%)</title><rect x="81.4752%" y="1509" width="0.0287%" height="15" fill="rgb(254,204,5)" fg:x="28355" fg:w="10"/><text x="81.7252%" y="1519.50"></text></g><g><title>&lt;bcs::ser::MapSerializer&lt;W&gt; as serde::ser::SerializeMap&gt;::end (10 samples, 0.03%)</title><rect x="81.4752%" y="1493" width="0.0287%" height="15" fill="rgb(231,178,15)" fg:x="28355" fg:w="10"/><text x="81.7252%" y="1503.50"></text></g><g><title>std::io::Write::write_all (10 samples, 0.03%)</title><rect x="81.4752%" y="1477" width="0.0287%" height="15" fill="rgb(248,151,3)" fg:x="28355" fg:w="10"/><text x="81.7252%" y="1487.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSetHasher as std::io::Write&gt;::write (10 samples, 0.03%)</title><rect x="81.4752%" y="1461" width="0.0287%" height="15" fill="rgb(250,139,13)" fg:x="28355" fg:w="10"/><text x="81.7252%" y="1471.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (10 samples, 0.03%)</title><rect x="81.4752%" y="1445" width="0.0287%" height="15" fill="rgb(243,107,53)" fg:x="28355" fg:w="10"/><text x="81.7252%" y="1455.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (10 samples, 0.03%)</title><rect x="81.4752%" y="1429" width="0.0287%" height="15" fill="rgb(232,81,15)" fg:x="28355" fg:w="10"/><text x="81.7252%" y="1439.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (10 samples, 0.03%)</title><rect x="81.4752%" y="1413" width="0.0287%" height="15" fill="rgb(225,187,48)" fg:x="28355" fg:w="10"/><text x="81.7252%" y="1423.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (10 samples, 0.03%)</title><rect x="81.4752%" y="1397" width="0.0287%" height="15" fill="rgb(205,116,12)" fg:x="28355" fg:w="10"/><text x="81.7252%" y="1407.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (6 samples, 0.02%)</title><rect x="81.5039%" y="1701" width="0.0172%" height="15" fill="rgb(220,222,31)" fg:x="28365" fg:w="6"/><text x="81.7539%" y="1711.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (6 samples, 0.02%)</title><rect x="81.5039%" y="1685" width="0.0172%" height="15" fill="rgb(233,187,49)" fg:x="28365" fg:w="6"/><text x="81.7539%" y="1695.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (6 samples, 0.02%)</title><rect x="81.5039%" y="1669" width="0.0172%" height="15" fill="rgb(211,168,53)" fg:x="28365" fg:w="6"/><text x="81.7539%" y="1679.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (6 samples, 0.02%)</title><rect x="81.5039%" y="1653" width="0.0172%" height="15" fill="rgb(206,160,16)" fg:x="28365" fg:w="6"/><text x="81.7539%" y="1663.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.02%)</title><rect x="81.5039%" y="1637" width="0.0172%" height="15" fill="rgb(254,164,13)" fg:x="28365" fg:w="6"/><text x="81.7539%" y="1647.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (6 samples, 0.02%)</title><rect x="81.5039%" y="1621" width="0.0172%" height="15" fill="rgb(229,45,30)" fg:x="28365" fg:w="6"/><text x="81.7539%" y="1631.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (6 samples, 0.02%)</title><rect x="81.5039%" y="1605" width="0.0172%" height="15" fill="rgb(237,32,10)" fg:x="28365" fg:w="6"/><text x="81.7539%" y="1615.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (6 samples, 0.02%)</title><rect x="81.5039%" y="1589" width="0.0172%" height="15" fill="rgb(251,20,47)" fg:x="28365" fg:w="6"/><text x="81.7539%" y="1599.50"></text></g><g><title>aptos_executor::components::apply_chunk_output::ApplyChunkOutput::assemble_ledger_diff::{{closure}} (6 samples, 0.02%)</title><rect x="81.5039%" y="1573" width="0.0172%" height="15" fill="rgb(251,116,12)" fg:x="28365" fg:w="6"/><text x="81.7539%" y="1583.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSet as aptos_crypto::hash::CryptoHash&gt;::hash (6 samples, 0.02%)</title><rect x="81.5039%" y="1557" width="0.0172%" height="15" fill="rgb(214,227,27)" fg:x="28365" fg:w="6"/><text x="81.7539%" y="1567.50"></text></g><g><title>bcs::ser::serialize_into (6 samples, 0.02%)</title><rect x="81.5039%" y="1541" width="0.0172%" height="15" fill="rgb(248,10,53)" fg:x="28365" fg:w="6"/><text x="81.7539%" y="1551.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (6 samples, 0.02%)</title><rect x="81.5039%" y="1525" width="0.0172%" height="15" fill="rgb(221,176,25)" fg:x="28365" fg:w="6"/><text x="81.7539%" y="1535.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSet&gt;::serialize (6 samples, 0.02%)</title><rect x="81.5039%" y="1509" width="0.0172%" height="15" fill="rgb(205,70,46)" fg:x="28365" fg:w="6"/><text x="81.7539%" y="1519.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (6 samples, 0.02%)</title><rect x="81.5039%" y="1493" width="0.0172%" height="15" fill="rgb(217,45,38)" fg:x="28365" fg:w="6"/><text x="81.7539%" y="1503.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetV0&gt;::serialize (6 samples, 0.02%)</title><rect x="81.5039%" y="1477" width="0.0172%" height="15" fill="rgb(243,6,54)" fg:x="28365" fg:w="6"/><text x="81.7539%" y="1487.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (6 samples, 0.02%)</title><rect x="81.5039%" y="1461" width="0.0172%" height="15" fill="rgb(242,76,23)" fg:x="28365" fg:w="6"/><text x="81.7539%" y="1471.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetMut&gt;::serialize (6 samples, 0.02%)</title><rect x="81.5039%" y="1445" width="0.0172%" height="15" fill="rgb(239,166,0)" fg:x="28365" fg:w="6"/><text x="81.7539%" y="1455.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (6 samples, 0.02%)</title><rect x="81.5039%" y="1429" width="0.0172%" height="15" fill="rgb(238,174,32)" fg:x="28365" fg:w="6"/><text x="81.7539%" y="1439.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::serialize (6 samples, 0.02%)</title><rect x="81.5039%" y="1413" width="0.0172%" height="15" fill="rgb(238,124,44)" fg:x="28365" fg:w="6"/><text x="81.7539%" y="1423.50"></text></g><g><title>serde::ser::Serializer::collect_map (6 samples, 0.02%)</title><rect x="81.5039%" y="1397" width="0.0172%" height="15" fill="rgb(206,185,9)" fg:x="28365" fg:w="6"/><text x="81.7539%" y="1407.50"></text></g><g><title>&lt;bcs::ser::MapSerializer&lt;W&gt; as serde::ser::SerializeMap&gt;::end (6 samples, 0.02%)</title><rect x="81.5039%" y="1381" width="0.0172%" height="15" fill="rgb(215,157,17)" fg:x="28365" fg:w="6"/><text x="81.7539%" y="1391.50"></text></g><g><title>std::io::Write::write_all (6 samples, 0.02%)</title><rect x="81.5039%" y="1365" width="0.0172%" height="15" fill="rgb(251,17,29)" fg:x="28365" fg:w="6"/><text x="81.7539%" y="1375.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSetHasher as std::io::Write&gt;::write (6 samples, 0.02%)</title><rect x="81.5039%" y="1349" width="0.0172%" height="15" fill="rgb(227,113,27)" fg:x="28365" fg:w="6"/><text x="81.7539%" y="1359.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (6 samples, 0.02%)</title><rect x="81.5039%" y="1333" width="0.0172%" height="15" fill="rgb(217,226,24)" fg:x="28365" fg:w="6"/><text x="81.7539%" y="1343.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (6 samples, 0.02%)</title><rect x="81.5039%" y="1317" width="0.0172%" height="15" fill="rgb(251,99,38)" fg:x="28365" fg:w="6"/><text x="81.7539%" y="1327.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (6 samples, 0.02%)</title><rect x="81.5039%" y="1301" width="0.0172%" height="15" fill="rgb(231,147,19)" fg:x="28365" fg:w="6"/><text x="81.7539%" y="1311.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (6 samples, 0.02%)</title><rect x="81.5039%" y="1285" width="0.0172%" height="15" fill="rgb(230,86,8)" fg:x="28365" fg:w="6"/><text x="81.7539%" y="1295.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (5 samples, 0.01%)</title><rect x="81.5212%" y="1653" width="0.0144%" height="15" fill="rgb(237,159,39)" fg:x="28371" fg:w="5"/><text x="81.7712%" y="1663.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (5 samples, 0.01%)</title><rect x="81.5212%" y="1637" width="0.0144%" height="15" fill="rgb(247,179,47)" fg:x="28371" fg:w="5"/><text x="81.7712%" y="1647.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (5 samples, 0.01%)</title><rect x="81.5212%" y="1621" width="0.0144%" height="15" fill="rgb(253,152,26)" fg:x="28371" fg:w="5"/><text x="81.7712%" y="1631.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (5 samples, 0.01%)</title><rect x="81.5212%" y="1605" width="0.0144%" height="15" fill="rgb(222,211,15)" fg:x="28371" fg:w="5"/><text x="81.7712%" y="1615.50"></text></g><g><title>rayon_core::join::join_context (5 samples, 0.01%)</title><rect x="81.5212%" y="1589" width="0.0144%" height="15" fill="rgb(236,193,6)" fg:x="28371" fg:w="5"/><text x="81.7712%" y="1599.50"></text></g><g><title>rayon_core::registry::in_worker (5 samples, 0.01%)</title><rect x="81.5212%" y="1573" width="0.0144%" height="15" fill="rgb(226,206,10)" fg:x="28371" fg:w="5"/><text x="81.7712%" y="1583.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5 samples, 0.01%)</title><rect x="81.5212%" y="1557" width="0.0144%" height="15" fill="rgb(213,125,22)" fg:x="28371" fg:w="5"/><text x="81.7712%" y="1567.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (13 samples, 0.04%)</title><rect x="81.5039%" y="1765" width="0.0374%" height="15" fill="rgb(221,66,28)" fg:x="28365" fg:w="13"/><text x="81.7539%" y="1775.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (13 samples, 0.04%)</title><rect x="81.5039%" y="1749" width="0.0374%" height="15" fill="rgb(222,84,53)" fg:x="28365" fg:w="13"/><text x="81.7539%" y="1759.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (13 samples, 0.04%)</title><rect x="81.5039%" y="1733" width="0.0374%" height="15" fill="rgb(243,50,15)" fg:x="28365" fg:w="13"/><text x="81.7539%" y="1743.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (13 samples, 0.04%)</title><rect x="81.5039%" y="1717" width="0.0374%" height="15" fill="rgb(208,184,23)" fg:x="28365" fg:w="13"/><text x="81.7539%" y="1727.50"></text></g><g><title>rayon_core::join::join_context (7 samples, 0.02%)</title><rect x="81.5212%" y="1701" width="0.0201%" height="15" fill="rgb(221,83,2)" fg:x="28371" fg:w="7"/><text x="81.7712%" y="1711.50"></text></g><g><title>rayon_core::registry::in_worker (7 samples, 0.02%)</title><rect x="81.5212%" y="1685" width="0.0201%" height="15" fill="rgb(236,53,24)" fg:x="28371" fg:w="7"/><text x="81.7712%" y="1695.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (7 samples, 0.02%)</title><rect x="81.5212%" y="1669" width="0.0201%" height="15" fill="rgb(244,171,29)" fg:x="28371" fg:w="7"/><text x="81.7712%" y="1679.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (9 samples, 0.03%)</title><rect x="81.5413%" y="1765" width="0.0259%" height="15" fill="rgb(205,19,11)" fg:x="28378" fg:w="9"/><text x="81.7913%" y="1775.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (9 samples, 0.03%)</title><rect x="81.5413%" y="1749" width="0.0259%" height="15" fill="rgb(207,108,29)" fg:x="28378" fg:w="9"/><text x="81.7913%" y="1759.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (9 samples, 0.03%)</title><rect x="81.5413%" y="1733" width="0.0259%" height="15" fill="rgb(236,215,43)" fg:x="28378" fg:w="9"/><text x="81.7913%" y="1743.50"></text></g><g><title>rayon_core::job::JobRef::execute (9 samples, 0.03%)</title><rect x="81.5413%" y="1717" width="0.0259%" height="15" fill="rgb(213,58,35)" fg:x="28378" fg:w="9"/><text x="81.7913%" y="1727.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (9 samples, 0.03%)</title><rect x="81.5413%" y="1701" width="0.0259%" height="15" fill="rgb(220,211,46)" fg:x="28378" fg:w="9"/><text x="81.7913%" y="1711.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (9 samples, 0.03%)</title><rect x="81.5413%" y="1685" width="0.0259%" height="15" fill="rgb(212,134,16)" fg:x="28378" fg:w="9"/><text x="81.7913%" y="1695.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (9 samples, 0.03%)</title><rect x="81.5413%" y="1669" width="0.0259%" height="15" fill="rgb(232,90,44)" fg:x="28378" fg:w="9"/><text x="81.7913%" y="1679.50"></text></g><g><title>std::panic::catch_unwind (9 samples, 0.03%)</title><rect x="81.5413%" y="1653" width="0.0259%" height="15" fill="rgb(212,18,36)" fg:x="28378" fg:w="9"/><text x="81.7913%" y="1663.50"></text></g><g><title>std::panicking::try (9 samples, 0.03%)</title><rect x="81.5413%" y="1637" width="0.0259%" height="15" fill="rgb(206,112,24)" fg:x="28378" fg:w="9"/><text x="81.7913%" y="1647.50"></text></g><g><title>std::panicking::try::do_call (9 samples, 0.03%)</title><rect x="81.5413%" y="1621" width="0.0259%" height="15" fill="rgb(238,223,40)" fg:x="28378" fg:w="9"/><text x="81.7913%" y="1631.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (9 samples, 0.03%)</title><rect x="81.5413%" y="1605" width="0.0259%" height="15" fill="rgb(226,169,20)" fg:x="28378" fg:w="9"/><text x="81.7913%" y="1615.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (9 samples, 0.03%)</title><rect x="81.5413%" y="1589" width="0.0259%" height="15" fill="rgb(241,64,52)" fg:x="28378" fg:w="9"/><text x="81.7913%" y="1599.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (9 samples, 0.03%)</title><rect x="81.5413%" y="1573" width="0.0259%" height="15" fill="rgb(228,120,25)" fg:x="28378" fg:w="9"/><text x="81.7913%" y="1583.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (9 samples, 0.03%)</title><rect x="81.5413%" y="1557" width="0.0259%" height="15" fill="rgb(234,108,19)" fg:x="28378" fg:w="9"/><text x="81.7913%" y="1567.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.03%)</title><rect x="81.5413%" y="1541" width="0.0259%" height="15" fill="rgb(236,133,29)" fg:x="28378" fg:w="9"/><text x="81.7913%" y="1551.50"></text></g><g><title>rayon_core::join::join_context (8 samples, 0.02%)</title><rect x="81.5442%" y="1525" width="0.0230%" height="15" fill="rgb(246,174,53)" fg:x="28379" fg:w="8"/><text x="81.7942%" y="1535.50"></text></g><g><title>rayon_core::registry::in_worker (8 samples, 0.02%)</title><rect x="81.5442%" y="1509" width="0.0230%" height="15" fill="rgb(210,105,35)" fg:x="28379" fg:w="8"/><text x="81.7942%" y="1519.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (8 samples, 0.02%)</title><rect x="81.5442%" y="1493" width="0.0230%" height="15" fill="rgb(225,27,26)" fg:x="28379" fg:w="8"/><text x="81.7942%" y="1503.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (7 samples, 0.02%)</title><rect x="81.5470%" y="1477" width="0.0201%" height="15" fill="rgb(233,2,39)" fg:x="28380" fg:w="7"/><text x="81.7970%" y="1487.50"></text></g><g><title>std::panic::catch_unwind (7 samples, 0.02%)</title><rect x="81.5470%" y="1461" width="0.0201%" height="15" fill="rgb(219,164,26)" fg:x="28380" fg:w="7"/><text x="81.7970%" y="1471.50"></text></g><g><title>std::panicking::try (7 samples, 0.02%)</title><rect x="81.5470%" y="1445" width="0.0201%" height="15" fill="rgb(236,211,5)" fg:x="28380" fg:w="7"/><text x="81.7970%" y="1455.50"></text></g><g><title>std::panicking::try::do_call (7 samples, 0.02%)</title><rect x="81.5470%" y="1429" width="0.0201%" height="15" fill="rgb(244,227,23)" fg:x="28380" fg:w="7"/><text x="81.7970%" y="1439.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (7 samples, 0.02%)</title><rect x="81.5470%" y="1413" width="0.0201%" height="15" fill="rgb(230,184,8)" fg:x="28380" fg:w="7"/><text x="81.7970%" y="1423.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (7 samples, 0.02%)</title><rect x="81.5470%" y="1397" width="0.0201%" height="15" fill="rgb(217,125,48)" fg:x="28380" fg:w="7"/><text x="81.7970%" y="1407.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (7 samples, 0.02%)</title><rect x="81.5470%" y="1381" width="0.0201%" height="15" fill="rgb(223,192,47)" fg:x="28380" fg:w="7"/><text x="81.7970%" y="1391.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (7 samples, 0.02%)</title><rect x="81.5470%" y="1365" width="0.0201%" height="15" fill="rgb(226,119,10)" fg:x="28380" fg:w="7"/><text x="81.7970%" y="1375.50"></text></g><g><title>rayon_core::join::join_context (7 samples, 0.02%)</title><rect x="81.5470%" y="1349" width="0.0201%" height="15" fill="rgb(221,49,29)" fg:x="28380" fg:w="7"/><text x="81.7970%" y="1359.50"></text></g><g><title>rayon_core::registry::in_worker (7 samples, 0.02%)</title><rect x="81.5470%" y="1333" width="0.0201%" height="15" fill="rgb(217,205,19)" fg:x="28380" fg:w="7"/><text x="81.7970%" y="1343.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (7 samples, 0.02%)</title><rect x="81.5470%" y="1317" width="0.0201%" height="15" fill="rgb(242,104,7)" fg:x="28380" fg:w="7"/><text x="81.7970%" y="1327.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (9 samples, 0.03%)</title><rect x="81.5672%" y="1637" width="0.0259%" height="15" fill="rgb(209,154,48)" fg:x="28387" fg:w="9"/><text x="81.8172%" y="1647.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (9 samples, 0.03%)</title><rect x="81.5672%" y="1621" width="0.0259%" height="15" fill="rgb(219,213,46)" fg:x="28387" fg:w="9"/><text x="81.8172%" y="1631.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (9 samples, 0.03%)</title><rect x="81.5672%" y="1605" width="0.0259%" height="15" fill="rgb(229,105,38)" fg:x="28387" fg:w="9"/><text x="81.8172%" y="1615.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (9 samples, 0.03%)</title><rect x="81.5672%" y="1589" width="0.0259%" height="15" fill="rgb(205,151,5)" fg:x="28387" fg:w="9"/><text x="81.8172%" y="1599.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.03%)</title><rect x="81.5672%" y="1573" width="0.0259%" height="15" fill="rgb(248,115,40)" fg:x="28387" fg:w="9"/><text x="81.8172%" y="1583.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (9 samples, 0.03%)</title><rect x="81.5672%" y="1557" width="0.0259%" height="15" fill="rgb(206,179,2)" fg:x="28387" fg:w="9"/><text x="81.8172%" y="1567.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (9 samples, 0.03%)</title><rect x="81.5672%" y="1541" width="0.0259%" height="15" fill="rgb(230,103,24)" fg:x="28387" fg:w="9"/><text x="81.8172%" y="1551.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (9 samples, 0.03%)</title><rect x="81.5672%" y="1525" width="0.0259%" height="15" fill="rgb(218,152,4)" fg:x="28387" fg:w="9"/><text x="81.8172%" y="1535.50"></text></g><g><title>aptos_executor::components::apply_chunk_output::ApplyChunkOutput::assemble_ledger_diff::{{closure}} (9 samples, 0.03%)</title><rect x="81.5672%" y="1509" width="0.0259%" height="15" fill="rgb(236,161,54)" fg:x="28387" fg:w="9"/><text x="81.8172%" y="1519.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSet as aptos_crypto::hash::CryptoHash&gt;::hash (9 samples, 0.03%)</title><rect x="81.5672%" y="1493" width="0.0259%" height="15" fill="rgb(226,65,17)" fg:x="28387" fg:w="9"/><text x="81.8172%" y="1503.50"></text></g><g><title>bcs::ser::serialize_into (9 samples, 0.03%)</title><rect x="81.5672%" y="1477" width="0.0259%" height="15" fill="rgb(221,134,44)" fg:x="28387" fg:w="9"/><text x="81.8172%" y="1487.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (9 samples, 0.03%)</title><rect x="81.5672%" y="1461" width="0.0259%" height="15" fill="rgb(251,129,4)" fg:x="28387" fg:w="9"/><text x="81.8172%" y="1471.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSet&gt;::serialize (9 samples, 0.03%)</title><rect x="81.5672%" y="1445" width="0.0259%" height="15" fill="rgb(244,32,34)" fg:x="28387" fg:w="9"/><text x="81.8172%" y="1455.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (9 samples, 0.03%)</title><rect x="81.5672%" y="1429" width="0.0259%" height="15" fill="rgb(251,224,37)" fg:x="28387" fg:w="9"/><text x="81.8172%" y="1439.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetV0&gt;::serialize (9 samples, 0.03%)</title><rect x="81.5672%" y="1413" width="0.0259%" height="15" fill="rgb(248,117,31)" fg:x="28387" fg:w="9"/><text x="81.8172%" y="1423.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (9 samples, 0.03%)</title><rect x="81.5672%" y="1397" width="0.0259%" height="15" fill="rgb(222,208,37)" fg:x="28387" fg:w="9"/><text x="81.8172%" y="1407.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetMut&gt;::serialize (9 samples, 0.03%)</title><rect x="81.5672%" y="1381" width="0.0259%" height="15" fill="rgb(234,211,25)" fg:x="28387" fg:w="9"/><text x="81.8172%" y="1391.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (9 samples, 0.03%)</title><rect x="81.5672%" y="1365" width="0.0259%" height="15" fill="rgb(211,72,6)" fg:x="28387" fg:w="9"/><text x="81.8172%" y="1375.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::serialize (9 samples, 0.03%)</title><rect x="81.5672%" y="1349" width="0.0259%" height="15" fill="rgb(249,198,38)" fg:x="28387" fg:w="9"/><text x="81.8172%" y="1359.50"></text></g><g><title>serde::ser::Serializer::collect_map (9 samples, 0.03%)</title><rect x="81.5672%" y="1333" width="0.0259%" height="15" fill="rgb(221,86,51)" fg:x="28387" fg:w="9"/><text x="81.8172%" y="1343.50"></text></g><g><title>&lt;bcs::ser::MapSerializer&lt;W&gt; as serde::ser::SerializeMap&gt;::end (9 samples, 0.03%)</title><rect x="81.5672%" y="1317" width="0.0259%" height="15" fill="rgb(226,178,43)" fg:x="28387" fg:w="9"/><text x="81.8172%" y="1327.50"></text></g><g><title>std::io::Write::write_all (9 samples, 0.03%)</title><rect x="81.5672%" y="1301" width="0.0259%" height="15" fill="rgb(215,145,7)" fg:x="28387" fg:w="9"/><text x="81.8172%" y="1311.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSetHasher as std::io::Write&gt;::write (9 samples, 0.03%)</title><rect x="81.5672%" y="1285" width="0.0259%" height="15" fill="rgb(250,202,36)" fg:x="28387" fg:w="9"/><text x="81.8172%" y="1295.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (9 samples, 0.03%)</title><rect x="81.5672%" y="1269" width="0.0259%" height="15" fill="rgb(215,86,13)" fg:x="28387" fg:w="9"/><text x="81.8172%" y="1279.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (9 samples, 0.03%)</title><rect x="81.5672%" y="1253" width="0.0259%" height="15" fill="rgb(221,134,12)" fg:x="28387" fg:w="9"/><text x="81.8172%" y="1263.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (9 samples, 0.03%)</title><rect x="81.5672%" y="1237" width="0.0259%" height="15" fill="rgb(213,82,10)" fg:x="28387" fg:w="9"/><text x="81.8172%" y="1247.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (9 samples, 0.03%)</title><rect x="81.5672%" y="1221" width="0.0259%" height="15" fill="rgb(214,142,0)" fg:x="28387" fg:w="9"/><text x="81.8172%" y="1231.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (5 samples, 0.01%)</title><rect x="81.5930%" y="1589" width="0.0144%" height="15" fill="rgb(205,145,9)" fg:x="28396" fg:w="5"/><text x="81.8430%" y="1599.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (5 samples, 0.01%)</title><rect x="81.5930%" y="1573" width="0.0144%" height="15" fill="rgb(244,214,8)" fg:x="28396" fg:w="5"/><text x="81.8430%" y="1583.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (5 samples, 0.01%)</title><rect x="81.5930%" y="1557" width="0.0144%" height="15" fill="rgb(224,72,51)" fg:x="28396" fg:w="5"/><text x="81.8430%" y="1567.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (5 samples, 0.01%)</title><rect x="81.5930%" y="1541" width="0.0144%" height="15" fill="rgb(233,137,37)" fg:x="28396" fg:w="5"/><text x="81.8430%" y="1551.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.01%)</title><rect x="81.5959%" y="1525" width="0.0115%" height="15" fill="rgb(208,71,28)" fg:x="28397" fg:w="4"/><text x="81.8459%" y="1535.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.01%)</title><rect x="81.5959%" y="1509" width="0.0115%" height="15" fill="rgb(226,31,7)" fg:x="28397" fg:w="4"/><text x="81.8459%" y="1519.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.01%)</title><rect x="81.5959%" y="1493" width="0.0115%" height="15" fill="rgb(229,62,18)" fg:x="28397" fg:w="4"/><text x="81.8459%" y="1503.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (51 samples, 0.15%)</title><rect x="81.4752%" y="1877" width="0.1465%" height="15" fill="rgb(226,74,28)" fg:x="28355" fg:w="51"/><text x="81.7252%" y="1887.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (51 samples, 0.15%)</title><rect x="81.4752%" y="1861" width="0.1465%" height="15" fill="rgb(214,170,18)" fg:x="28355" fg:w="51"/><text x="81.7252%" y="1871.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (51 samples, 0.15%)</title><rect x="81.4752%" y="1845" width="0.1465%" height="15" fill="rgb(227,229,35)" fg:x="28355" fg:w="51"/><text x="81.7252%" y="1855.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (51 samples, 0.15%)</title><rect x="81.4752%" y="1829" width="0.1465%" height="15" fill="rgb(225,181,39)" fg:x="28355" fg:w="51"/><text x="81.7252%" y="1839.50"></text></g><g><title>rayon_core::join::join_context (41 samples, 0.12%)</title><rect x="81.5039%" y="1813" width="0.1178%" height="15" fill="rgb(253,124,44)" fg:x="28365" fg:w="41"/><text x="81.7539%" y="1823.50"></text></g><g><title>rayon_core::registry::in_worker (41 samples, 0.12%)</title><rect x="81.5039%" y="1797" width="0.1178%" height="15" fill="rgb(220,75,18)" fg:x="28365" fg:w="41"/><text x="81.7539%" y="1807.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (41 samples, 0.12%)</title><rect x="81.5039%" y="1781" width="0.1178%" height="15" fill="rgb(239,175,43)" fg:x="28365" fg:w="41"/><text x="81.7539%" y="1791.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (19 samples, 0.05%)</title><rect x="81.5672%" y="1765" width="0.0546%" height="15" fill="rgb(228,112,50)" fg:x="28387" fg:w="19"/><text x="81.8172%" y="1775.50"></text></g><g><title>std::panic::catch_unwind (19 samples, 0.05%)</title><rect x="81.5672%" y="1749" width="0.0546%" height="15" fill="rgb(232,105,36)" fg:x="28387" fg:w="19"/><text x="81.8172%" y="1759.50"></text></g><g><title>std::panicking::try (19 samples, 0.05%)</title><rect x="81.5672%" y="1733" width="0.0546%" height="15" fill="rgb(227,137,47)" fg:x="28387" fg:w="19"/><text x="81.8172%" y="1743.50"></text></g><g><title>std::panicking::try::do_call (19 samples, 0.05%)</title><rect x="81.5672%" y="1717" width="0.0546%" height="15" fill="rgb(217,51,9)" fg:x="28387" fg:w="19"/><text x="81.8172%" y="1727.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (19 samples, 0.05%)</title><rect x="81.5672%" y="1701" width="0.0546%" height="15" fill="rgb(245,117,0)" fg:x="28387" fg:w="19"/><text x="81.8172%" y="1711.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (19 samples, 0.05%)</title><rect x="81.5672%" y="1685" width="0.0546%" height="15" fill="rgb(252,52,30)" fg:x="28387" fg:w="19"/><text x="81.8172%" y="1695.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (19 samples, 0.05%)</title><rect x="81.5672%" y="1669" width="0.0546%" height="15" fill="rgb(227,85,33)" fg:x="28387" fg:w="19"/><text x="81.8172%" y="1679.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (19 samples, 0.05%)</title><rect x="81.5672%" y="1653" width="0.0546%" height="15" fill="rgb(220,157,20)" fg:x="28387" fg:w="19"/><text x="81.8172%" y="1663.50"></text></g><g><title>rayon_core::join::join_context (10 samples, 0.03%)</title><rect x="81.5930%" y="1637" width="0.0287%" height="15" fill="rgb(254,14,34)" fg:x="28396" fg:w="10"/><text x="81.8430%" y="1647.50"></text></g><g><title>rayon_core::registry::in_worker (10 samples, 0.03%)</title><rect x="81.5930%" y="1621" width="0.0287%" height="15" fill="rgb(216,103,41)" fg:x="28396" fg:w="10"/><text x="81.8430%" y="1631.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (10 samples, 0.03%)</title><rect x="81.5930%" y="1605" width="0.0287%" height="15" fill="rgb(245,221,9)" fg:x="28396" fg:w="10"/><text x="81.8430%" y="1615.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (5 samples, 0.01%)</title><rect x="81.6074%" y="1589" width="0.0144%" height="15" fill="rgb(254,136,47)" fg:x="28401" fg:w="5"/><text x="81.8574%" y="1599.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.01%)</title><rect x="81.6074%" y="1573" width="0.0144%" height="15" fill="rgb(235,71,46)" fg:x="28401" fg:w="5"/><text x="81.8574%" y="1583.50"></text></g><g><title>std::panicking::try (5 samples, 0.01%)</title><rect x="81.6074%" y="1557" width="0.0144%" height="15" fill="rgb(242,154,29)" fg:x="28401" fg:w="5"/><text x="81.8574%" y="1567.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.01%)</title><rect x="81.6074%" y="1541" width="0.0144%" height="15" fill="rgb(210,65,31)" fg:x="28401" fg:w="5"/><text x="81.8574%" y="1551.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5 samples, 0.01%)</title><rect x="81.6074%" y="1525" width="0.0144%" height="15" fill="rgb(244,9,50)" fg:x="28401" fg:w="5"/><text x="81.8574%" y="1535.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (5 samples, 0.01%)</title><rect x="81.6074%" y="1509" width="0.0144%" height="15" fill="rgb(215,141,38)" fg:x="28401" fg:w="5"/><text x="81.8574%" y="1519.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (5 samples, 0.01%)</title><rect x="81.6074%" y="1493" width="0.0144%" height="15" fill="rgb(241,129,6)" fg:x="28401" fg:w="5"/><text x="81.8574%" y="1503.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (5 samples, 0.01%)</title><rect x="81.6074%" y="1477" width="0.0144%" height="15" fill="rgb(253,169,4)" fg:x="28401" fg:w="5"/><text x="81.8574%" y="1487.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.01%)</title><rect x="81.6103%" y="1461" width="0.0115%" height="15" fill="rgb(237,82,36)" fg:x="28402" fg:w="4"/><text x="81.8603%" y="1471.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.01%)</title><rect x="81.6103%" y="1445" width="0.0115%" height="15" fill="rgb(209,171,11)" fg:x="28402" fg:w="4"/><text x="81.8603%" y="1455.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.01%)</title><rect x="81.6103%" y="1429" width="0.0115%" height="15" fill="rgb(242,19,22)" fg:x="28402" fg:w="4"/><text x="81.8603%" y="1439.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (4 samples, 0.01%)</title><rect x="81.6217%" y="1637" width="0.0115%" height="15" fill="rgb(251,122,24)" fg:x="28406" fg:w="4"/><text x="81.8717%" y="1647.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (4 samples, 0.01%)</title><rect x="81.6217%" y="1621" width="0.0115%" height="15" fill="rgb(226,166,42)" fg:x="28406" fg:w="4"/><text x="81.8717%" y="1631.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (4 samples, 0.01%)</title><rect x="81.6217%" y="1605" width="0.0115%" height="15" fill="rgb(244,101,48)" fg:x="28406" fg:w="4"/><text x="81.8717%" y="1615.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (4 samples, 0.01%)</title><rect x="81.6217%" y="1589" width="0.0115%" height="15" fill="rgb(227,125,1)" fg:x="28406" fg:w="4"/><text x="81.8717%" y="1599.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="81.6217%" y="1573" width="0.0115%" height="15" fill="rgb(206,79,43)" fg:x="28406" fg:w="4"/><text x="81.8717%" y="1583.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4 samples, 0.01%)</title><rect x="81.6217%" y="1557" width="0.0115%" height="15" fill="rgb(241,109,41)" fg:x="28406" fg:w="4"/><text x="81.8717%" y="1567.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (4 samples, 0.01%)</title><rect x="81.6217%" y="1541" width="0.0115%" height="15" fill="rgb(219,73,4)" fg:x="28406" fg:w="4"/><text x="81.8717%" y="1551.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (4 samples, 0.01%)</title><rect x="81.6217%" y="1525" width="0.0115%" height="15" fill="rgb(239,25,41)" fg:x="28406" fg:w="4"/><text x="81.8717%" y="1535.50"></text></g><g><title>aptos_executor::components::apply_chunk_output::ApplyChunkOutput::assemble_ledger_diff::{{closure}} (4 samples, 0.01%)</title><rect x="81.6217%" y="1509" width="0.0115%" height="15" fill="rgb(208,88,46)" fg:x="28406" fg:w="4"/><text x="81.8717%" y="1519.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSet as aptos_crypto::hash::CryptoHash&gt;::hash (4 samples, 0.01%)</title><rect x="81.6217%" y="1493" width="0.0115%" height="15" fill="rgb(239,184,9)" fg:x="28406" fg:w="4"/><text x="81.8717%" y="1503.50"></text></g><g><title>bcs::ser::serialize_into (4 samples, 0.01%)</title><rect x="81.6217%" y="1477" width="0.0115%" height="15" fill="rgb(223,114,13)" fg:x="28406" fg:w="4"/><text x="81.8717%" y="1487.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.01%)</title><rect x="81.6217%" y="1461" width="0.0115%" height="15" fill="rgb(214,28,42)" fg:x="28406" fg:w="4"/><text x="81.8717%" y="1471.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSet&gt;::serialize (4 samples, 0.01%)</title><rect x="81.6217%" y="1445" width="0.0115%" height="15" fill="rgb(252,32,44)" fg:x="28406" fg:w="4"/><text x="81.8717%" y="1455.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (4 samples, 0.01%)</title><rect x="81.6217%" y="1429" width="0.0115%" height="15" fill="rgb(231,159,4)" fg:x="28406" fg:w="4"/><text x="81.8717%" y="1439.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetV0&gt;::serialize (4 samples, 0.01%)</title><rect x="81.6217%" y="1413" width="0.0115%" height="15" fill="rgb(210,35,26)" fg:x="28406" fg:w="4"/><text x="81.8717%" y="1423.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (4 samples, 0.01%)</title><rect x="81.6217%" y="1397" width="0.0115%" height="15" fill="rgb(208,190,37)" fg:x="28406" fg:w="4"/><text x="81.8717%" y="1407.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetMut&gt;::serialize (4 samples, 0.01%)</title><rect x="81.6217%" y="1381" width="0.0115%" height="15" fill="rgb(226,148,22)" fg:x="28406" fg:w="4"/><text x="81.8717%" y="1391.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.01%)</title><rect x="81.6217%" y="1365" width="0.0115%" height="15" fill="rgb(242,153,24)" fg:x="28406" fg:w="4"/><text x="81.8717%" y="1375.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::serialize (4 samples, 0.01%)</title><rect x="81.6217%" y="1349" width="0.0115%" height="15" fill="rgb(213,133,7)" fg:x="28406" fg:w="4"/><text x="81.8717%" y="1359.50"></text></g><g><title>serde::ser::Serializer::collect_map (4 samples, 0.01%)</title><rect x="81.6217%" y="1333" width="0.0115%" height="15" fill="rgb(248,206,18)" fg:x="28406" fg:w="4"/><text x="81.8717%" y="1343.50"></text></g><g><title>&lt;bcs::ser::MapSerializer&lt;W&gt; as serde::ser::SerializeMap&gt;::end (4 samples, 0.01%)</title><rect x="81.6217%" y="1317" width="0.0115%" height="15" fill="rgb(233,157,4)" fg:x="28406" fg:w="4"/><text x="81.8717%" y="1327.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.01%)</title><rect x="81.6217%" y="1301" width="0.0115%" height="15" fill="rgb(249,179,32)" fg:x="28406" fg:w="4"/><text x="81.8717%" y="1311.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSetHasher as std::io::Write&gt;::write (4 samples, 0.01%)</title><rect x="81.6217%" y="1285" width="0.0115%" height="15" fill="rgb(248,69,35)" fg:x="28406" fg:w="4"/><text x="81.8717%" y="1295.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (4 samples, 0.01%)</title><rect x="81.6217%" y="1269" width="0.0115%" height="15" fill="rgb(249,158,38)" fg:x="28406" fg:w="4"/><text x="81.8717%" y="1279.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (4 samples, 0.01%)</title><rect x="81.6217%" y="1253" width="0.0115%" height="15" fill="rgb(223,18,43)" fg:x="28406" fg:w="4"/><text x="81.8717%" y="1263.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (4 samples, 0.01%)</title><rect x="81.6217%" y="1237" width="0.0115%" height="15" fill="rgb(238,42,45)" fg:x="28406" fg:w="4"/><text x="81.8717%" y="1247.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (4 samples, 0.01%)</title><rect x="81.6217%" y="1221" width="0.0115%" height="15" fill="rgb(219,65,47)" fg:x="28406" fg:w="4"/><text x="81.8717%" y="1231.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (5 samples, 0.01%)</title><rect x="81.6332%" y="1589" width="0.0144%" height="15" fill="rgb(248,153,12)" fg:x="28410" fg:w="5"/><text x="81.8832%" y="1599.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (5 samples, 0.01%)</title><rect x="81.6332%" y="1573" width="0.0144%" height="15" fill="rgb(240,118,4)" fg:x="28410" fg:w="5"/><text x="81.8832%" y="1583.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (5 samples, 0.01%)</title><rect x="81.6332%" y="1557" width="0.0144%" height="15" fill="rgb(250,96,34)" fg:x="28410" fg:w="5"/><text x="81.8832%" y="1567.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (5 samples, 0.01%)</title><rect x="81.6332%" y="1541" width="0.0144%" height="15" fill="rgb(221,15,4)" fg:x="28410" fg:w="5"/><text x="81.8832%" y="1551.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (11 samples, 0.03%)</title><rect x="81.6476%" y="1589" width="0.0316%" height="15" fill="rgb(217,149,33)" fg:x="28415" fg:w="11"/><text x="81.8976%" y="1599.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (11 samples, 0.03%)</title><rect x="81.6476%" y="1573" width="0.0316%" height="15" fill="rgb(213,58,29)" fg:x="28415" fg:w="11"/><text x="81.8976%" y="1583.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (11 samples, 0.03%)</title><rect x="81.6476%" y="1557" width="0.0316%" height="15" fill="rgb(236,218,9)" fg:x="28415" fg:w="11"/><text x="81.8976%" y="1567.50"></text></g><g><title>rayon_core::job::JobRef::execute (11 samples, 0.03%)</title><rect x="81.6476%" y="1541" width="0.0316%" height="15" fill="rgb(248,40,19)" fg:x="28415" fg:w="11"/><text x="81.8976%" y="1551.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (11 samples, 0.03%)</title><rect x="81.6476%" y="1525" width="0.0316%" height="15" fill="rgb(212,17,6)" fg:x="28415" fg:w="11"/><text x="81.8976%" y="1535.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (11 samples, 0.03%)</title><rect x="81.6476%" y="1509" width="0.0316%" height="15" fill="rgb(206,212,20)" fg:x="28415" fg:w="11"/><text x="81.8976%" y="1519.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (11 samples, 0.03%)</title><rect x="81.6476%" y="1493" width="0.0316%" height="15" fill="rgb(229,80,37)" fg:x="28415" fg:w="11"/><text x="81.8976%" y="1503.50"></text></g><g><title>std::panic::catch_unwind (11 samples, 0.03%)</title><rect x="81.6476%" y="1477" width="0.0316%" height="15" fill="rgb(253,8,37)" fg:x="28415" fg:w="11"/><text x="81.8976%" y="1487.50"></text></g><g><title>std::panicking::try (11 samples, 0.03%)</title><rect x="81.6476%" y="1461" width="0.0316%" height="15" fill="rgb(215,16,43)" fg:x="28415" fg:w="11"/><text x="81.8976%" y="1471.50"></text></g><g><title>std::panicking::try::do_call (11 samples, 0.03%)</title><rect x="81.6476%" y="1445" width="0.0316%" height="15" fill="rgb(236,219,16)" fg:x="28415" fg:w="11"/><text x="81.8976%" y="1455.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (11 samples, 0.03%)</title><rect x="81.6476%" y="1429" width="0.0316%" height="15" fill="rgb(251,0,3)" fg:x="28415" fg:w="11"/><text x="81.8976%" y="1439.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (11 samples, 0.03%)</title><rect x="81.6476%" y="1413" width="0.0316%" height="15" fill="rgb(207,133,37)" fg:x="28415" fg:w="11"/><text x="81.8976%" y="1423.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (11 samples, 0.03%)</title><rect x="81.6476%" y="1397" width="0.0316%" height="15" fill="rgb(250,143,20)" fg:x="28415" fg:w="11"/><text x="81.8976%" y="1407.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (11 samples, 0.03%)</title><rect x="81.6476%" y="1381" width="0.0316%" height="15" fill="rgb(242,19,50)" fg:x="28415" fg:w="11"/><text x="81.8976%" y="1391.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.03%)</title><rect x="81.6476%" y="1365" width="0.0316%" height="15" fill="rgb(206,124,43)" fg:x="28415" fg:w="11"/><text x="81.8976%" y="1375.50"></text></g><g><title>rayon_core::join::join_context (9 samples, 0.03%)</title><rect x="81.6534%" y="1349" width="0.0259%" height="15" fill="rgb(229,4,38)" fg:x="28417" fg:w="9"/><text x="81.9034%" y="1359.50"></text></g><g><title>rayon_core::registry::in_worker (9 samples, 0.03%)</title><rect x="81.6534%" y="1333" width="0.0259%" height="15" fill="rgb(247,220,45)" fg:x="28417" fg:w="9"/><text x="81.9034%" y="1343.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (9 samples, 0.03%)</title><rect x="81.6534%" y="1317" width="0.0259%" height="15" fill="rgb(247,195,0)" fg:x="28417" fg:w="9"/><text x="81.9034%" y="1327.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (5 samples, 0.01%)</title><rect x="81.6648%" y="1301" width="0.0144%" height="15" fill="rgb(252,12,19)" fg:x="28421" fg:w="5"/><text x="81.9148%" y="1311.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.01%)</title><rect x="81.6648%" y="1285" width="0.0144%" height="15" fill="rgb(222,49,50)" fg:x="28421" fg:w="5"/><text x="81.9148%" y="1295.50"></text></g><g><title>std::panicking::try (5 samples, 0.01%)</title><rect x="81.6648%" y="1269" width="0.0144%" height="15" fill="rgb(209,157,28)" fg:x="28421" fg:w="5"/><text x="81.9148%" y="1279.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.01%)</title><rect x="81.6648%" y="1253" width="0.0144%" height="15" fill="rgb(238,174,24)" fg:x="28421" fg:w="5"/><text x="81.9148%" y="1263.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5 samples, 0.01%)</title><rect x="81.6648%" y="1237" width="0.0144%" height="15" fill="rgb(224,17,28)" fg:x="28421" fg:w="5"/><text x="81.9148%" y="1247.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (5 samples, 0.01%)</title><rect x="81.6648%" y="1221" width="0.0144%" height="15" fill="rgb(249,7,29)" fg:x="28421" fg:w="5"/><text x="81.9148%" y="1231.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (5 samples, 0.01%)</title><rect x="81.6648%" y="1205" width="0.0144%" height="15" fill="rgb(243,178,4)" fg:x="28421" fg:w="5"/><text x="81.9148%" y="1215.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (5 samples, 0.01%)</title><rect x="81.6648%" y="1189" width="0.0144%" height="15" fill="rgb(246,138,35)" fg:x="28421" fg:w="5"/><text x="81.9148%" y="1199.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (4 samples, 0.01%)</title><rect x="81.6792%" y="1461" width="0.0115%" height="15" fill="rgb(251,85,18)" fg:x="28426" fg:w="4"/><text x="81.9292%" y="1471.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (4 samples, 0.01%)</title><rect x="81.6792%" y="1445" width="0.0115%" height="15" fill="rgb(254,55,9)" fg:x="28426" fg:w="4"/><text x="81.9292%" y="1455.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (4 samples, 0.01%)</title><rect x="81.6792%" y="1429" width="0.0115%" height="15" fill="rgb(248,4,50)" fg:x="28426" fg:w="4"/><text x="81.9292%" y="1439.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (4 samples, 0.01%)</title><rect x="81.6792%" y="1413" width="0.0115%" height="15" fill="rgb(215,208,14)" fg:x="28426" fg:w="4"/><text x="81.9292%" y="1423.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="81.6792%" y="1397" width="0.0115%" height="15" fill="rgb(218,37,18)" fg:x="28426" fg:w="4"/><text x="81.9292%" y="1407.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4 samples, 0.01%)</title><rect x="81.6792%" y="1381" width="0.0115%" height="15" fill="rgb(206,104,13)" fg:x="28426" fg:w="4"/><text x="81.9292%" y="1391.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (4 samples, 0.01%)</title><rect x="81.6792%" y="1365" width="0.0115%" height="15" fill="rgb(248,94,22)" fg:x="28426" fg:w="4"/><text x="81.9292%" y="1375.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (4 samples, 0.01%)</title><rect x="81.6792%" y="1349" width="0.0115%" height="15" fill="rgb(235,42,46)" fg:x="28426" fg:w="4"/><text x="81.9292%" y="1359.50"></text></g><g><title>aptos_executor::components::apply_chunk_output::ApplyChunkOutput::assemble_ledger_diff::{{closure}} (4 samples, 0.01%)</title><rect x="81.6792%" y="1333" width="0.0115%" height="15" fill="rgb(220,228,48)" fg:x="28426" fg:w="4"/><text x="81.9292%" y="1343.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSet as aptos_crypto::hash::CryptoHash&gt;::hash (4 samples, 0.01%)</title><rect x="81.6792%" y="1317" width="0.0115%" height="15" fill="rgb(216,58,12)" fg:x="28426" fg:w="4"/><text x="81.9292%" y="1327.50"></text></g><g><title>bcs::ser::serialize_into (4 samples, 0.01%)</title><rect x="81.6792%" y="1301" width="0.0115%" height="15" fill="rgb(223,97,52)" fg:x="28426" fg:w="4"/><text x="81.9292%" y="1311.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.01%)</title><rect x="81.6792%" y="1285" width="0.0115%" height="15" fill="rgb(208,159,17)" fg:x="28426" fg:w="4"/><text x="81.9292%" y="1295.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSet&gt;::serialize (4 samples, 0.01%)</title><rect x="81.6792%" y="1269" width="0.0115%" height="15" fill="rgb(215,172,9)" fg:x="28426" fg:w="4"/><text x="81.9292%" y="1279.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (4 samples, 0.01%)</title><rect x="81.6792%" y="1253" width="0.0115%" height="15" fill="rgb(252,175,30)" fg:x="28426" fg:w="4"/><text x="81.9292%" y="1263.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetV0&gt;::serialize (4 samples, 0.01%)</title><rect x="81.6792%" y="1237" width="0.0115%" height="15" fill="rgb(209,159,10)" fg:x="28426" fg:w="4"/><text x="81.9292%" y="1247.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (4 samples, 0.01%)</title><rect x="81.6792%" y="1221" width="0.0115%" height="15" fill="rgb(229,73,51)" fg:x="28426" fg:w="4"/><text x="81.9292%" y="1231.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetMut&gt;::serialize (4 samples, 0.01%)</title><rect x="81.6792%" y="1205" width="0.0115%" height="15" fill="rgb(208,212,43)" fg:x="28426" fg:w="4"/><text x="81.9292%" y="1215.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.01%)</title><rect x="81.6792%" y="1189" width="0.0115%" height="15" fill="rgb(254,123,53)" fg:x="28426" fg:w="4"/><text x="81.9292%" y="1199.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::serialize (4 samples, 0.01%)</title><rect x="81.6792%" y="1173" width="0.0115%" height="15" fill="rgb(254,128,49)" fg:x="28426" fg:w="4"/><text x="81.9292%" y="1183.50"></text></g><g><title>serde::ser::Serializer::collect_map (4 samples, 0.01%)</title><rect x="81.6792%" y="1157" width="0.0115%" height="15" fill="rgb(246,16,16)" fg:x="28426" fg:w="4"/><text x="81.9292%" y="1167.50"></text></g><g><title>&lt;bcs::ser::MapSerializer&lt;W&gt; as serde::ser::SerializeMap&gt;::end (4 samples, 0.01%)</title><rect x="81.6792%" y="1141" width="0.0115%" height="15" fill="rgb(209,200,1)" fg:x="28426" fg:w="4"/><text x="81.9292%" y="1151.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.01%)</title><rect x="81.6792%" y="1125" width="0.0115%" height="15" fill="rgb(235,9,3)" fg:x="28426" fg:w="4"/><text x="81.9292%" y="1135.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSetHasher as std::io::Write&gt;::write (4 samples, 0.01%)</title><rect x="81.6792%" y="1109" width="0.0115%" height="15" fill="rgb(233,121,54)" fg:x="28426" fg:w="4"/><text x="81.9292%" y="1119.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (4 samples, 0.01%)</title><rect x="81.6792%" y="1093" width="0.0115%" height="15" fill="rgb(236,80,25)" fg:x="28426" fg:w="4"/><text x="81.9292%" y="1103.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (4 samples, 0.01%)</title><rect x="81.6792%" y="1077" width="0.0115%" height="15" fill="rgb(220,44,24)" fg:x="28426" fg:w="4"/><text x="81.9292%" y="1087.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (4 samples, 0.01%)</title><rect x="81.6792%" y="1061" width="0.0115%" height="15" fill="rgb(236,225,16)" fg:x="28426" fg:w="4"/><text x="81.9292%" y="1071.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (4 samples, 0.01%)</title><rect x="81.6792%" y="1045" width="0.0115%" height="15" fill="rgb(237,140,0)" fg:x="28426" fg:w="4"/><text x="81.9292%" y="1055.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (32 samples, 0.09%)</title><rect x="81.6217%" y="1877" width="0.0919%" height="15" fill="rgb(243,225,53)" fg:x="28406" fg:w="32"/><text x="81.8717%" y="1887.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (32 samples, 0.09%)</title><rect x="81.6217%" y="1861" width="0.0919%" height="15" fill="rgb(240,140,30)" fg:x="28406" fg:w="32"/><text x="81.8717%" y="1871.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (32 samples, 0.09%)</title><rect x="81.6217%" y="1845" width="0.0919%" height="15" fill="rgb(217,51,16)" fg:x="28406" fg:w="32"/><text x="81.8717%" y="1855.50"></text></g><g><title>rayon_core::job::JobRef::execute (32 samples, 0.09%)</title><rect x="81.6217%" y="1829" width="0.0919%" height="15" fill="rgb(245,75,50)" fg:x="28406" fg:w="32"/><text x="81.8717%" y="1839.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (32 samples, 0.09%)</title><rect x="81.6217%" y="1813" width="0.0919%" height="15" fill="rgb(208,174,22)" fg:x="28406" fg:w="32"/><text x="81.8717%" y="1823.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (32 samples, 0.09%)</title><rect x="81.6217%" y="1797" width="0.0919%" height="15" fill="rgb(219,98,50)" fg:x="28406" fg:w="32"/><text x="81.8717%" y="1807.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (32 samples, 0.09%)</title><rect x="81.6217%" y="1781" width="0.0919%" height="15" fill="rgb(243,138,3)" fg:x="28406" fg:w="32"/><text x="81.8717%" y="1791.50"></text></g><g><title>std::panic::catch_unwind (32 samples, 0.09%)</title><rect x="81.6217%" y="1765" width="0.0919%" height="15" fill="rgb(243,132,26)" fg:x="28406" fg:w="32"/><text x="81.8717%" y="1775.50"></text></g><g><title>std::panicking::try (32 samples, 0.09%)</title><rect x="81.6217%" y="1749" width="0.0919%" height="15" fill="rgb(250,201,8)" fg:x="28406" fg:w="32"/><text x="81.8717%" y="1759.50"></text></g><g><title>std::panicking::try::do_call (32 samples, 0.09%)</title><rect x="81.6217%" y="1733" width="0.0919%" height="15" fill="rgb(213,91,26)" fg:x="28406" fg:w="32"/><text x="81.8717%" y="1743.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (32 samples, 0.09%)</title><rect x="81.6217%" y="1717" width="0.0919%" height="15" fill="rgb(229,117,1)" fg:x="28406" fg:w="32"/><text x="81.8717%" y="1727.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (32 samples, 0.09%)</title><rect x="81.6217%" y="1701" width="0.0919%" height="15" fill="rgb(229,24,6)" fg:x="28406" fg:w="32"/><text x="81.8717%" y="1711.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (32 samples, 0.09%)</title><rect x="81.6217%" y="1685" width="0.0919%" height="15" fill="rgb(206,69,11)" fg:x="28406" fg:w="32"/><text x="81.8717%" y="1695.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (32 samples, 0.09%)</title><rect x="81.6217%" y="1669" width="0.0919%" height="15" fill="rgb(234,111,34)" fg:x="28406" fg:w="32"/><text x="81.8717%" y="1679.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (32 samples, 0.09%)</title><rect x="81.6217%" y="1653" width="0.0919%" height="15" fill="rgb(213,187,51)" fg:x="28406" fg:w="32"/><text x="81.8717%" y="1663.50"></text></g><g><title>rayon_core::join::join_context (28 samples, 0.08%)</title><rect x="81.6332%" y="1637" width="0.0805%" height="15" fill="rgb(207,45,11)" fg:x="28410" fg:w="28"/><text x="81.8832%" y="1647.50"></text></g><g><title>rayon_core::registry::in_worker (28 samples, 0.08%)</title><rect x="81.6332%" y="1621" width="0.0805%" height="15" fill="rgb(225,151,47)" fg:x="28410" fg:w="28"/><text x="81.8832%" y="1631.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (28 samples, 0.08%)</title><rect x="81.6332%" y="1605" width="0.0805%" height="15" fill="rgb(211,226,5)" fg:x="28410" fg:w="28"/><text x="81.8832%" y="1615.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (12 samples, 0.03%)</title><rect x="81.6792%" y="1589" width="0.0345%" height="15" fill="rgb(214,83,52)" fg:x="28426" fg:w="12"/><text x="81.9292%" y="1599.50"></text></g><g><title>std::panic::catch_unwind (12 samples, 0.03%)</title><rect x="81.6792%" y="1573" width="0.0345%" height="15" fill="rgb(229,49,53)" fg:x="28426" fg:w="12"/><text x="81.9292%" y="1583.50"></text></g><g><title>std::panicking::try (12 samples, 0.03%)</title><rect x="81.6792%" y="1557" width="0.0345%" height="15" fill="rgb(246,8,28)" fg:x="28426" fg:w="12"/><text x="81.9292%" y="1567.50"></text></g><g><title>std::panicking::try::do_call (12 samples, 0.03%)</title><rect x="81.6792%" y="1541" width="0.0345%" height="15" fill="rgb(207,28,41)" fg:x="28426" fg:w="12"/><text x="81.9292%" y="1551.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (12 samples, 0.03%)</title><rect x="81.6792%" y="1525" width="0.0345%" height="15" fill="rgb(254,22,25)" fg:x="28426" fg:w="12"/><text x="81.9292%" y="1535.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (12 samples, 0.03%)</title><rect x="81.6792%" y="1509" width="0.0345%" height="15" fill="rgb(209,120,42)" fg:x="28426" fg:w="12"/><text x="81.9292%" y="1519.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (12 samples, 0.03%)</title><rect x="81.6792%" y="1493" width="0.0345%" height="15" fill="rgb(216,194,18)" fg:x="28426" fg:w="12"/><text x="81.9292%" y="1503.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.03%)</title><rect x="81.6792%" y="1477" width="0.0345%" height="15" fill="rgb(213,70,17)" fg:x="28426" fg:w="12"/><text x="81.9292%" y="1487.50"></text></g><g><title>rayon_core::join::join_context (8 samples, 0.02%)</title><rect x="81.6907%" y="1461" width="0.0230%" height="15" fill="rgb(228,66,19)" fg:x="28430" fg:w="8"/><text x="81.9407%" y="1471.50"></text></g><g><title>rayon_core::registry::in_worker (8 samples, 0.02%)</title><rect x="81.6907%" y="1445" width="0.0230%" height="15" fill="rgb(236,221,54)" fg:x="28430" fg:w="8"/><text x="81.9407%" y="1455.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (8 samples, 0.02%)</title><rect x="81.6907%" y="1429" width="0.0230%" height="15" fill="rgb(207,175,15)" fg:x="28430" fg:w="8"/><text x="81.9407%" y="1439.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (6 samples, 0.02%)</title><rect x="81.6965%" y="1413" width="0.0172%" height="15" fill="rgb(234,76,8)" fg:x="28432" fg:w="6"/><text x="81.9465%" y="1423.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.02%)</title><rect x="81.6965%" y="1397" width="0.0172%" height="15" fill="rgb(243,106,0)" fg:x="28432" fg:w="6"/><text x="81.9465%" y="1407.50"></text></g><g><title>std::panicking::try (6 samples, 0.02%)</title><rect x="81.6965%" y="1381" width="0.0172%" height="15" fill="rgb(208,48,19)" fg:x="28432" fg:w="6"/><text x="81.9465%" y="1391.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.02%)</title><rect x="81.6965%" y="1365" width="0.0172%" height="15" fill="rgb(251,50,29)" fg:x="28432" fg:w="6"/><text x="81.9465%" y="1375.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6 samples, 0.02%)</title><rect x="81.6965%" y="1349" width="0.0172%" height="15" fill="rgb(222,31,49)" fg:x="28432" fg:w="6"/><text x="81.9465%" y="1359.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (6 samples, 0.02%)</title><rect x="81.6965%" y="1333" width="0.0172%" height="15" fill="rgb(232,33,18)" fg:x="28432" fg:w="6"/><text x="81.9465%" y="1343.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (6 samples, 0.02%)</title><rect x="81.6965%" y="1317" width="0.0172%" height="15" fill="rgb(209,1,44)" fg:x="28432" fg:w="6"/><text x="81.9465%" y="1327.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (6 samples, 0.02%)</title><rect x="81.6965%" y="1301" width="0.0172%" height="15" fill="rgb(211,7,1)" fg:x="28432" fg:w="6"/><text x="81.9465%" y="1311.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.01%)</title><rect x="81.7022%" y="1285" width="0.0115%" height="15" fill="rgb(224,111,27)" fg:x="28434" fg:w="4"/><text x="81.9522%" y="1295.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.01%)</title><rect x="81.7022%" y="1269" width="0.0115%" height="15" fill="rgb(252,195,39)" fg:x="28434" fg:w="4"/><text x="81.9522%" y="1279.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.01%)</title><rect x="81.7022%" y="1253" width="0.0115%" height="15" fill="rgb(237,198,5)" fg:x="28434" fg:w="4"/><text x="81.9522%" y="1263.50"></text></g><g><title>&lt;bcs::ser::MapSerializer&lt;W&gt; as serde::ser::SerializeMap&gt;::end (20 samples, 0.06%)</title><rect x="81.7137%" y="1429" width="0.0575%" height="15" fill="rgb(232,148,1)" fg:x="28438" fg:w="20"/><text x="81.9637%" y="1439.50"></text></g><g><title>std::io::Write::write_all (20 samples, 0.06%)</title><rect x="81.7137%" y="1413" width="0.0575%" height="15" fill="rgb(249,41,3)" fg:x="28438" fg:w="20"/><text x="81.9637%" y="1423.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSetHasher as std::io::Write&gt;::write (20 samples, 0.06%)</title><rect x="81.7137%" y="1397" width="0.0575%" height="15" fill="rgb(215,14,33)" fg:x="28438" fg:w="20"/><text x="81.9637%" y="1407.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (20 samples, 0.06%)</title><rect x="81.7137%" y="1381" width="0.0575%" height="15" fill="rgb(209,146,24)" fg:x="28438" fg:w="20"/><text x="81.9637%" y="1391.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (20 samples, 0.06%)</title><rect x="81.7137%" y="1365" width="0.0575%" height="15" fill="rgb(219,51,47)" fg:x="28438" fg:w="20"/><text x="81.9637%" y="1375.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (20 samples, 0.06%)</title><rect x="81.7137%" y="1349" width="0.0575%" height="15" fill="rgb(234,217,40)" fg:x="28438" fg:w="20"/><text x="81.9637%" y="1359.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (20 samples, 0.06%)</title><rect x="81.7137%" y="1333" width="0.0575%" height="15" fill="rgb(228,34,26)" fg:x="28438" fg:w="20"/><text x="81.9637%" y="1343.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (21 samples, 0.06%)</title><rect x="81.7137%" y="1749" width="0.0603%" height="15" fill="rgb(224,50,29)" fg:x="28438" fg:w="21"/><text x="81.9637%" y="1759.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (21 samples, 0.06%)</title><rect x="81.7137%" y="1733" width="0.0603%" height="15" fill="rgb(205,79,51)" fg:x="28438" fg:w="21"/><text x="81.9637%" y="1743.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (21 samples, 0.06%)</title><rect x="81.7137%" y="1717" width="0.0603%" height="15" fill="rgb(218,136,28)" fg:x="28438" fg:w="21"/><text x="81.9637%" y="1727.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (21 samples, 0.06%)</title><rect x="81.7137%" y="1701" width="0.0603%" height="15" fill="rgb(220,150,10)" fg:x="28438" fg:w="21"/><text x="81.9637%" y="1711.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.06%)</title><rect x="81.7137%" y="1685" width="0.0603%" height="15" fill="rgb(242,158,47)" fg:x="28438" fg:w="21"/><text x="81.9637%" y="1695.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (21 samples, 0.06%)</title><rect x="81.7137%" y="1669" width="0.0603%" height="15" fill="rgb(209,68,0)" fg:x="28438" fg:w="21"/><text x="81.9637%" y="1679.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (21 samples, 0.06%)</title><rect x="81.7137%" y="1653" width="0.0603%" height="15" fill="rgb(208,13,41)" fg:x="28438" fg:w="21"/><text x="81.9637%" y="1663.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (21 samples, 0.06%)</title><rect x="81.7137%" y="1637" width="0.0603%" height="15" fill="rgb(226,201,7)" fg:x="28438" fg:w="21"/><text x="81.9637%" y="1647.50"></text></g><g><title>aptos_executor::components::apply_chunk_output::ApplyChunkOutput::assemble_ledger_diff::{{closure}} (21 samples, 0.06%)</title><rect x="81.7137%" y="1621" width="0.0603%" height="15" fill="rgb(236,103,26)" fg:x="28438" fg:w="21"/><text x="81.9637%" y="1631.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSet as aptos_crypto::hash::CryptoHash&gt;::hash (21 samples, 0.06%)</title><rect x="81.7137%" y="1605" width="0.0603%" height="15" fill="rgb(243,162,8)" fg:x="28438" fg:w="21"/><text x="81.9637%" y="1615.50"></text></g><g><title>bcs::ser::serialize_into (21 samples, 0.06%)</title><rect x="81.7137%" y="1589" width="0.0603%" height="15" fill="rgb(237,225,11)" fg:x="28438" fg:w="21"/><text x="81.9637%" y="1599.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (21 samples, 0.06%)</title><rect x="81.7137%" y="1573" width="0.0603%" height="15" fill="rgb(247,186,32)" fg:x="28438" fg:w="21"/><text x="81.9637%" y="1583.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSet&gt;::serialize (21 samples, 0.06%)</title><rect x="81.7137%" y="1557" width="0.0603%" height="15" fill="rgb(215,26,28)" fg:x="28438" fg:w="21"/><text x="81.9637%" y="1567.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (21 samples, 0.06%)</title><rect x="81.7137%" y="1541" width="0.0603%" height="15" fill="rgb(208,121,6)" fg:x="28438" fg:w="21"/><text x="81.9637%" y="1551.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetV0&gt;::serialize (21 samples, 0.06%)</title><rect x="81.7137%" y="1525" width="0.0603%" height="15" fill="rgb(225,91,3)" fg:x="28438" fg:w="21"/><text x="81.9637%" y="1535.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (21 samples, 0.06%)</title><rect x="81.7137%" y="1509" width="0.0603%" height="15" fill="rgb(246,119,36)" fg:x="28438" fg:w="21"/><text x="81.9637%" y="1519.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetMut&gt;::serialize (21 samples, 0.06%)</title><rect x="81.7137%" y="1493" width="0.0603%" height="15" fill="rgb(254,173,2)" fg:x="28438" fg:w="21"/><text x="81.9637%" y="1503.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (21 samples, 0.06%)</title><rect x="81.7137%" y="1477" width="0.0603%" height="15" fill="rgb(209,87,54)" fg:x="28438" fg:w="21"/><text x="81.9637%" y="1487.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::serialize (21 samples, 0.06%)</title><rect x="81.7137%" y="1461" width="0.0603%" height="15" fill="rgb(223,216,20)" fg:x="28438" fg:w="21"/><text x="81.9637%" y="1471.50"></text></g><g><title>serde::ser::Serializer::collect_map (21 samples, 0.06%)</title><rect x="81.7137%" y="1445" width="0.0603%" height="15" fill="rgb(220,31,8)" fg:x="28438" fg:w="21"/><text x="81.9637%" y="1455.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (10 samples, 0.03%)</title><rect x="81.7740%" y="1637" width="0.0287%" height="15" fill="rgb(220,185,15)" fg:x="28459" fg:w="10"/><text x="82.0240%" y="1647.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (10 samples, 0.03%)</title><rect x="81.7740%" y="1621" width="0.0287%" height="15" fill="rgb(247,190,50)" fg:x="28459" fg:w="10"/><text x="82.0240%" y="1631.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (10 samples, 0.03%)</title><rect x="81.7740%" y="1605" width="0.0287%" height="15" fill="rgb(239,173,47)" fg:x="28459" fg:w="10"/><text x="82.0240%" y="1615.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (10 samples, 0.03%)</title><rect x="81.7740%" y="1589" width="0.0287%" height="15" fill="rgb(218,190,42)" fg:x="28459" fg:w="10"/><text x="82.0240%" y="1599.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.03%)</title><rect x="81.7740%" y="1573" width="0.0287%" height="15" fill="rgb(251,207,16)" fg:x="28459" fg:w="10"/><text x="82.0240%" y="1583.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (10 samples, 0.03%)</title><rect x="81.7740%" y="1557" width="0.0287%" height="15" fill="rgb(222,199,47)" fg:x="28459" fg:w="10"/><text x="82.0240%" y="1567.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (10 samples, 0.03%)</title><rect x="81.7740%" y="1541" width="0.0287%" height="15" fill="rgb(245,190,7)" fg:x="28459" fg:w="10"/><text x="82.0240%" y="1551.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (10 samples, 0.03%)</title><rect x="81.7740%" y="1525" width="0.0287%" height="15" fill="rgb(239,85,38)" fg:x="28459" fg:w="10"/><text x="82.0240%" y="1535.50"></text></g><g><title>aptos_executor::components::apply_chunk_output::ApplyChunkOutput::assemble_ledger_diff::{{closure}} (10 samples, 0.03%)</title><rect x="81.7740%" y="1509" width="0.0287%" height="15" fill="rgb(229,69,51)" fg:x="28459" fg:w="10"/><text x="82.0240%" y="1519.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSet as aptos_crypto::hash::CryptoHash&gt;::hash (10 samples, 0.03%)</title><rect x="81.7740%" y="1493" width="0.0287%" height="15" fill="rgb(231,104,51)" fg:x="28459" fg:w="10"/><text x="82.0240%" y="1503.50"></text></g><g><title>bcs::ser::serialize_into (10 samples, 0.03%)</title><rect x="81.7740%" y="1477" width="0.0287%" height="15" fill="rgb(235,49,4)" fg:x="28459" fg:w="10"/><text x="82.0240%" y="1487.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (10 samples, 0.03%)</title><rect x="81.7740%" y="1461" width="0.0287%" height="15" fill="rgb(246,166,20)" fg:x="28459" fg:w="10"/><text x="82.0240%" y="1471.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSet&gt;::serialize (10 samples, 0.03%)</title><rect x="81.7740%" y="1445" width="0.0287%" height="15" fill="rgb(230,119,37)" fg:x="28459" fg:w="10"/><text x="82.0240%" y="1455.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (10 samples, 0.03%)</title><rect x="81.7740%" y="1429" width="0.0287%" height="15" fill="rgb(234,77,34)" fg:x="28459" fg:w="10"/><text x="82.0240%" y="1439.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetV0&gt;::serialize (10 samples, 0.03%)</title><rect x="81.7740%" y="1413" width="0.0287%" height="15" fill="rgb(211,222,33)" fg:x="28459" fg:w="10"/><text x="82.0240%" y="1423.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (10 samples, 0.03%)</title><rect x="81.7740%" y="1397" width="0.0287%" height="15" fill="rgb(226,45,42)" fg:x="28459" fg:w="10"/><text x="82.0240%" y="1407.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetMut&gt;::serialize (10 samples, 0.03%)</title><rect x="81.7740%" y="1381" width="0.0287%" height="15" fill="rgb(215,174,28)" fg:x="28459" fg:w="10"/><text x="82.0240%" y="1391.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (10 samples, 0.03%)</title><rect x="81.7740%" y="1365" width="0.0287%" height="15" fill="rgb(254,173,49)" fg:x="28459" fg:w="10"/><text x="82.0240%" y="1375.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::serialize (10 samples, 0.03%)</title><rect x="81.7740%" y="1349" width="0.0287%" height="15" fill="rgb(229,191,6)" fg:x="28459" fg:w="10"/><text x="82.0240%" y="1359.50"></text></g><g><title>serde::ser::Serializer::collect_map (10 samples, 0.03%)</title><rect x="81.7740%" y="1333" width="0.0287%" height="15" fill="rgb(212,145,22)" fg:x="28459" fg:w="10"/><text x="82.0240%" y="1343.50"></text></g><g><title>&lt;bcs::ser::MapSerializer&lt;W&gt; as serde::ser::SerializeMap&gt;::end (10 samples, 0.03%)</title><rect x="81.7740%" y="1317" width="0.0287%" height="15" fill="rgb(226,6,51)" fg:x="28459" fg:w="10"/><text x="82.0240%" y="1327.50"></text></g><g><title>std::io::Write::write_all (10 samples, 0.03%)</title><rect x="81.7740%" y="1301" width="0.0287%" height="15" fill="rgb(227,128,8)" fg:x="28459" fg:w="10"/><text x="82.0240%" y="1311.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSetHasher as std::io::Write&gt;::write (10 samples, 0.03%)</title><rect x="81.7740%" y="1285" width="0.0287%" height="15" fill="rgb(205,24,10)" fg:x="28459" fg:w="10"/><text x="82.0240%" y="1295.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (10 samples, 0.03%)</title><rect x="81.7740%" y="1269" width="0.0287%" height="15" fill="rgb(217,147,27)" fg:x="28459" fg:w="10"/><text x="82.0240%" y="1279.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (10 samples, 0.03%)</title><rect x="81.7740%" y="1253" width="0.0287%" height="15" fill="rgb(250,82,42)" fg:x="28459" fg:w="10"/><text x="82.0240%" y="1263.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (10 samples, 0.03%)</title><rect x="81.7740%" y="1237" width="0.0287%" height="15" fill="rgb(248,93,17)" fg:x="28459" fg:w="10"/><text x="82.0240%" y="1247.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (10 samples, 0.03%)</title><rect x="81.7740%" y="1221" width="0.0287%" height="15" fill="rgb(254,212,40)" fg:x="28459" fg:w="10"/><text x="82.0240%" y="1231.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (5 samples, 0.01%)</title><rect x="81.8028%" y="1525" width="0.0144%" height="15" fill="rgb(229,209,2)" fg:x="28469" fg:w="5"/><text x="82.0528%" y="1535.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (5 samples, 0.01%)</title><rect x="81.8028%" y="1509" width="0.0144%" height="15" fill="rgb(211,50,43)" fg:x="28469" fg:w="5"/><text x="82.0528%" y="1519.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (5 samples, 0.01%)</title><rect x="81.8028%" y="1493" width="0.0144%" height="15" fill="rgb(245,196,29)" fg:x="28469" fg:w="5"/><text x="82.0528%" y="1503.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (5 samples, 0.01%)</title><rect x="81.8028%" y="1477" width="0.0144%" height="15" fill="rgb(216,132,13)" fg:x="28469" fg:w="5"/><text x="82.0528%" y="1487.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="81.8028%" y="1461" width="0.0144%" height="15" fill="rgb(251,108,21)" fg:x="28469" fg:w="5"/><text x="82.0528%" y="1471.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (5 samples, 0.01%)</title><rect x="81.8028%" y="1445" width="0.0144%" height="15" fill="rgb(229,174,54)" fg:x="28469" fg:w="5"/><text x="82.0528%" y="1455.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (5 samples, 0.01%)</title><rect x="81.8028%" y="1429" width="0.0144%" height="15" fill="rgb(211,175,47)" fg:x="28469" fg:w="5"/><text x="82.0528%" y="1439.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (5 samples, 0.01%)</title><rect x="81.8028%" y="1413" width="0.0144%" height="15" fill="rgb(234,5,37)" fg:x="28469" fg:w="5"/><text x="82.0528%" y="1423.50"></text></g><g><title>aptos_executor::components::apply_chunk_output::ApplyChunkOutput::assemble_ledger_diff::{{closure}} (5 samples, 0.01%)</title><rect x="81.8028%" y="1397" width="0.0144%" height="15" fill="rgb(244,150,43)" fg:x="28469" fg:w="5"/><text x="82.0528%" y="1407.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSet as aptos_crypto::hash::CryptoHash&gt;::hash (5 samples, 0.01%)</title><rect x="81.8028%" y="1381" width="0.0144%" height="15" fill="rgb(242,172,38)" fg:x="28469" fg:w="5"/><text x="82.0528%" y="1391.50"></text></g><g><title>bcs::ser::serialize_into (5 samples, 0.01%)</title><rect x="81.8028%" y="1365" width="0.0144%" height="15" fill="rgb(205,27,8)" fg:x="28469" fg:w="5"/><text x="82.0528%" y="1375.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.01%)</title><rect x="81.8028%" y="1349" width="0.0144%" height="15" fill="rgb(217,57,3)" fg:x="28469" fg:w="5"/><text x="82.0528%" y="1359.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSet&gt;::serialize (5 samples, 0.01%)</title><rect x="81.8028%" y="1333" width="0.0144%" height="15" fill="rgb(242,21,38)" fg:x="28469" fg:w="5"/><text x="82.0528%" y="1343.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (5 samples, 0.01%)</title><rect x="81.8028%" y="1317" width="0.0144%" height="15" fill="rgb(209,64,43)" fg:x="28469" fg:w="5"/><text x="82.0528%" y="1327.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetV0&gt;::serialize (5 samples, 0.01%)</title><rect x="81.8028%" y="1301" width="0.0144%" height="15" fill="rgb(222,2,46)" fg:x="28469" fg:w="5"/><text x="82.0528%" y="1311.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (5 samples, 0.01%)</title><rect x="81.8028%" y="1285" width="0.0144%" height="15" fill="rgb(218,19,44)" fg:x="28469" fg:w="5"/><text x="82.0528%" y="1295.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetMut&gt;::serialize (5 samples, 0.01%)</title><rect x="81.8028%" y="1269" width="0.0144%" height="15" fill="rgb(240,203,42)" fg:x="28469" fg:w="5"/><text x="82.0528%" y="1279.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.01%)</title><rect x="81.8028%" y="1253" width="0.0144%" height="15" fill="rgb(229,23,45)" fg:x="28469" fg:w="5"/><text x="82.0528%" y="1263.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::serialize (5 samples, 0.01%)</title><rect x="81.8028%" y="1237" width="0.0144%" height="15" fill="rgb(205,228,51)" fg:x="28469" fg:w="5"/><text x="82.0528%" y="1247.50"></text></g><g><title>serde::ser::Serializer::collect_map (5 samples, 0.01%)</title><rect x="81.8028%" y="1221" width="0.0144%" height="15" fill="rgb(239,36,20)" fg:x="28469" fg:w="5"/><text x="82.0528%" y="1231.50"></text></g><g><title>&lt;bcs::ser::MapSerializer&lt;W&gt; as serde::ser::SerializeMap&gt;::end (5 samples, 0.01%)</title><rect x="81.8028%" y="1205" width="0.0144%" height="15" fill="rgb(248,172,27)" fg:x="28469" fg:w="5"/><text x="82.0528%" y="1215.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.01%)</title><rect x="81.8028%" y="1189" width="0.0144%" height="15" fill="rgb(244,55,32)" fg:x="28469" fg:w="5"/><text x="82.0528%" y="1199.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSetHasher as std::io::Write&gt;::write (5 samples, 0.01%)</title><rect x="81.8028%" y="1173" width="0.0144%" height="15" fill="rgb(215,97,16)" fg:x="28469" fg:w="5"/><text x="82.0528%" y="1183.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (5 samples, 0.01%)</title><rect x="81.8028%" y="1157" width="0.0144%" height="15" fill="rgb(224,80,29)" fg:x="28469" fg:w="5"/><text x="82.0528%" y="1167.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (5 samples, 0.01%)</title><rect x="81.8028%" y="1141" width="0.0144%" height="15" fill="rgb(216,93,47)" fg:x="28469" fg:w="5"/><text x="82.0528%" y="1151.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (5 samples, 0.01%)</title><rect x="81.8028%" y="1125" width="0.0144%" height="15" fill="rgb(238,159,10)" fg:x="28469" fg:w="5"/><text x="82.0528%" y="1135.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (5 samples, 0.01%)</title><rect x="81.8028%" y="1109" width="0.0144%" height="15" fill="rgb(223,98,29)" fg:x="28469" fg:w="5"/><text x="82.0528%" y="1119.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (8 samples, 0.02%)</title><rect x="81.8028%" y="1589" width="0.0230%" height="15" fill="rgb(210,176,23)" fg:x="28469" fg:w="8"/><text x="82.0528%" y="1599.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (8 samples, 0.02%)</title><rect x="81.8028%" y="1573" width="0.0230%" height="15" fill="rgb(242,162,27)" fg:x="28469" fg:w="8"/><text x="82.0528%" y="1583.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (8 samples, 0.02%)</title><rect x="81.8028%" y="1557" width="0.0230%" height="15" fill="rgb(245,109,32)" fg:x="28469" fg:w="8"/><text x="82.0528%" y="1567.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (8 samples, 0.02%)</title><rect x="81.8028%" y="1541" width="0.0230%" height="15" fill="rgb(248,87,8)" fg:x="28469" fg:w="8"/><text x="82.0528%" y="1551.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (4 samples, 0.01%)</title><rect x="81.8315%" y="1461" width="0.0115%" height="15" fill="rgb(250,160,50)" fg:x="28479" fg:w="4"/><text x="82.0815%" y="1471.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (4 samples, 0.01%)</title><rect x="81.8315%" y="1445" width="0.0115%" height="15" fill="rgb(246,165,25)" fg:x="28479" fg:w="4"/><text x="82.0815%" y="1455.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (4 samples, 0.01%)</title><rect x="81.8315%" y="1429" width="0.0115%" height="15" fill="rgb(249,219,3)" fg:x="28479" fg:w="4"/><text x="82.0815%" y="1439.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (4 samples, 0.01%)</title><rect x="81.8315%" y="1413" width="0.0115%" height="15" fill="rgb(226,66,5)" fg:x="28479" fg:w="4"/><text x="82.0815%" y="1423.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="81.8315%" y="1397" width="0.0115%" height="15" fill="rgb(250,220,43)" fg:x="28479" fg:w="4"/><text x="82.0815%" y="1407.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4 samples, 0.01%)</title><rect x="81.8315%" y="1381" width="0.0115%" height="15" fill="rgb(225,111,31)" fg:x="28479" fg:w="4"/><text x="82.0815%" y="1391.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (4 samples, 0.01%)</title><rect x="81.8315%" y="1365" width="0.0115%" height="15" fill="rgb(248,106,18)" fg:x="28479" fg:w="4"/><text x="82.0815%" y="1375.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (4 samples, 0.01%)</title><rect x="81.8315%" y="1349" width="0.0115%" height="15" fill="rgb(220,226,45)" fg:x="28479" fg:w="4"/><text x="82.0815%" y="1359.50"></text></g><g><title>aptos_executor::components::apply_chunk_output::ApplyChunkOutput::assemble_ledger_diff::{{closure}} (4 samples, 0.01%)</title><rect x="81.8315%" y="1333" width="0.0115%" height="15" fill="rgb(208,58,53)" fg:x="28479" fg:w="4"/><text x="82.0815%" y="1343.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSet as aptos_crypto::hash::CryptoHash&gt;::hash (4 samples, 0.01%)</title><rect x="81.8315%" y="1317" width="0.0115%" height="15" fill="rgb(209,133,1)" fg:x="28479" fg:w="4"/><text x="82.0815%" y="1327.50"></text></g><g><title>bcs::ser::serialize_into (4 samples, 0.01%)</title><rect x="81.8315%" y="1301" width="0.0115%" height="15" fill="rgb(228,216,27)" fg:x="28479" fg:w="4"/><text x="82.0815%" y="1311.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.01%)</title><rect x="81.8315%" y="1285" width="0.0115%" height="15" fill="rgb(238,155,2)" fg:x="28479" fg:w="4"/><text x="82.0815%" y="1295.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSet&gt;::serialize (4 samples, 0.01%)</title><rect x="81.8315%" y="1269" width="0.0115%" height="15" fill="rgb(244,99,37)" fg:x="28479" fg:w="4"/><text x="82.0815%" y="1279.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (4 samples, 0.01%)</title><rect x="81.8315%" y="1253" width="0.0115%" height="15" fill="rgb(254,32,3)" fg:x="28479" fg:w="4"/><text x="82.0815%" y="1263.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetV0&gt;::serialize (4 samples, 0.01%)</title><rect x="81.8315%" y="1237" width="0.0115%" height="15" fill="rgb(234,46,50)" fg:x="28479" fg:w="4"/><text x="82.0815%" y="1247.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (4 samples, 0.01%)</title><rect x="81.8315%" y="1221" width="0.0115%" height="15" fill="rgb(232,118,51)" fg:x="28479" fg:w="4"/><text x="82.0815%" y="1231.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetMut&gt;::serialize (4 samples, 0.01%)</title><rect x="81.8315%" y="1205" width="0.0115%" height="15" fill="rgb(207,24,32)" fg:x="28479" fg:w="4"/><text x="82.0815%" y="1215.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.01%)</title><rect x="81.8315%" y="1189" width="0.0115%" height="15" fill="rgb(208,107,43)" fg:x="28479" fg:w="4"/><text x="82.0815%" y="1199.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::serialize (4 samples, 0.01%)</title><rect x="81.8315%" y="1173" width="0.0115%" height="15" fill="rgb(231,28,9)" fg:x="28479" fg:w="4"/><text x="82.0815%" y="1183.50"></text></g><g><title>serde::ser::Serializer::collect_map (4 samples, 0.01%)</title><rect x="81.8315%" y="1157" width="0.0115%" height="15" fill="rgb(241,204,15)" fg:x="28479" fg:w="4"/><text x="82.0815%" y="1167.50"></text></g><g><title>&lt;bcs::ser::MapSerializer&lt;W&gt; as serde::ser::SerializeMap&gt;::end (4 samples, 0.01%)</title><rect x="81.8315%" y="1141" width="0.0115%" height="15" fill="rgb(214,54,15)" fg:x="28479" fg:w="4"/><text x="82.0815%" y="1151.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.01%)</title><rect x="81.8315%" y="1125" width="0.0115%" height="15" fill="rgb(230,12,28)" fg:x="28479" fg:w="4"/><text x="82.0815%" y="1135.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSetHasher as std::io::Write&gt;::write (4 samples, 0.01%)</title><rect x="81.8315%" y="1109" width="0.0115%" height="15" fill="rgb(221,171,5)" fg:x="28479" fg:w="4"/><text x="82.0815%" y="1119.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (4 samples, 0.01%)</title><rect x="81.8315%" y="1093" width="0.0115%" height="15" fill="rgb(207,72,25)" fg:x="28479" fg:w="4"/><text x="82.0815%" y="1103.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (4 samples, 0.01%)</title><rect x="81.8315%" y="1077" width="0.0115%" height="15" fill="rgb(249,79,37)" fg:x="28479" fg:w="4"/><text x="82.0815%" y="1087.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (4 samples, 0.01%)</title><rect x="81.8315%" y="1061" width="0.0115%" height="15" fill="rgb(209,98,49)" fg:x="28479" fg:w="4"/><text x="82.0815%" y="1071.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (4 samples, 0.01%)</title><rect x="81.8315%" y="1045" width="0.0115%" height="15" fill="rgb(221,62,13)" fg:x="28479" fg:w="4"/><text x="82.0815%" y="1055.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (27 samples, 0.08%)</title><rect x="81.7740%" y="1701" width="0.0776%" height="15" fill="rgb(223,39,6)" fg:x="28459" fg:w="27"/><text x="82.0240%" y="1711.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (27 samples, 0.08%)</title><rect x="81.7740%" y="1685" width="0.0776%" height="15" fill="rgb(246,163,20)" fg:x="28459" fg:w="27"/><text x="82.0240%" y="1695.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (27 samples, 0.08%)</title><rect x="81.7740%" y="1669" width="0.0776%" height="15" fill="rgb(211,111,29)" fg:x="28459" fg:w="27"/><text x="82.0240%" y="1679.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (27 samples, 0.08%)</title><rect x="81.7740%" y="1653" width="0.0776%" height="15" fill="rgb(243,118,5)" fg:x="28459" fg:w="27"/><text x="82.0240%" y="1663.50"></text></g><g><title>rayon_core::join::join_context (17 samples, 0.05%)</title><rect x="81.8028%" y="1637" width="0.0488%" height="15" fill="rgb(240,144,52)" fg:x="28469" fg:w="17"/><text x="82.0528%" y="1647.50"></text></g><g><title>rayon_core::registry::in_worker (17 samples, 0.05%)</title><rect x="81.8028%" y="1621" width="0.0488%" height="15" fill="rgb(244,158,36)" fg:x="28469" fg:w="17"/><text x="82.0528%" y="1631.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (17 samples, 0.05%)</title><rect x="81.8028%" y="1605" width="0.0488%" height="15" fill="rgb(241,109,37)" fg:x="28469" fg:w="17"/><text x="82.0528%" y="1615.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (7 samples, 0.02%)</title><rect x="81.8315%" y="1589" width="0.0201%" height="15" fill="rgb(213,95,32)" fg:x="28479" fg:w="7"/><text x="82.0815%" y="1599.50"></text></g><g><title>std::panic::catch_unwind (7 samples, 0.02%)</title><rect x="81.8315%" y="1573" width="0.0201%" height="15" fill="rgb(252,193,9)" fg:x="28479" fg:w="7"/><text x="82.0815%" y="1583.50"></text></g><g><title>std::panicking::try (7 samples, 0.02%)</title><rect x="81.8315%" y="1557" width="0.0201%" height="15" fill="rgb(225,213,21)" fg:x="28479" fg:w="7"/><text x="82.0815%" y="1567.50"></text></g><g><title>std::panicking::try::do_call (7 samples, 0.02%)</title><rect x="81.8315%" y="1541" width="0.0201%" height="15" fill="rgb(220,172,46)" fg:x="28479" fg:w="7"/><text x="82.0815%" y="1551.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (7 samples, 0.02%)</title><rect x="81.8315%" y="1525" width="0.0201%" height="15" fill="rgb(235,75,41)" fg:x="28479" fg:w="7"/><text x="82.0815%" y="1535.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (7 samples, 0.02%)</title><rect x="81.8315%" y="1509" width="0.0201%" height="15" fill="rgb(213,86,9)" fg:x="28479" fg:w="7"/><text x="82.0815%" y="1519.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (7 samples, 0.02%)</title><rect x="81.8315%" y="1493" width="0.0201%" height="15" fill="rgb(238,127,51)" fg:x="28479" fg:w="7"/><text x="82.0815%" y="1503.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (7 samples, 0.02%)</title><rect x="81.8315%" y="1477" width="0.0201%" height="15" fill="rgb(215,2,54)" fg:x="28479" fg:w="7"/><text x="82.0815%" y="1487.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (5 samples, 0.01%)</title><rect x="81.8545%" y="1461" width="0.0144%" height="15" fill="rgb(245,80,6)" fg:x="28487" fg:w="5"/><text x="82.1045%" y="1471.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (5 samples, 0.01%)</title><rect x="81.8545%" y="1445" width="0.0144%" height="15" fill="rgb(233,106,42)" fg:x="28487" fg:w="5"/><text x="82.1045%" y="1455.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (5 samples, 0.01%)</title><rect x="81.8545%" y="1429" width="0.0144%" height="15" fill="rgb(244,86,38)" fg:x="28487" fg:w="5"/><text x="82.1045%" y="1439.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (5 samples, 0.01%)</title><rect x="81.8545%" y="1413" width="0.0144%" height="15" fill="rgb(242,167,7)" fg:x="28487" fg:w="5"/><text x="82.1045%" y="1423.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="81.8545%" y="1397" width="0.0144%" height="15" fill="rgb(218,216,3)" fg:x="28487" fg:w="5"/><text x="82.1045%" y="1407.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (5 samples, 0.01%)</title><rect x="81.8545%" y="1381" width="0.0144%" height="15" fill="rgb(206,136,36)" fg:x="28487" fg:w="5"/><text x="82.1045%" y="1391.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (5 samples, 0.01%)</title><rect x="81.8545%" y="1365" width="0.0144%" height="15" fill="rgb(206,206,15)" fg:x="28487" fg:w="5"/><text x="82.1045%" y="1375.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (5 samples, 0.01%)</title><rect x="81.8545%" y="1349" width="0.0144%" height="15" fill="rgb(207,163,34)" fg:x="28487" fg:w="5"/><text x="82.1045%" y="1359.50"></text></g><g><title>aptos_executor::components::apply_chunk_output::ApplyChunkOutput::assemble_ledger_diff::{{closure}} (5 samples, 0.01%)</title><rect x="81.8545%" y="1333" width="0.0144%" height="15" fill="rgb(240,127,22)" fg:x="28487" fg:w="5"/><text x="82.1045%" y="1343.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSet as aptos_crypto::hash::CryptoHash&gt;::hash (5 samples, 0.01%)</title><rect x="81.8545%" y="1317" width="0.0144%" height="15" fill="rgb(227,49,5)" fg:x="28487" fg:w="5"/><text x="82.1045%" y="1327.50"></text></g><g><title>bcs::ser::serialize_into (5 samples, 0.01%)</title><rect x="81.8545%" y="1301" width="0.0144%" height="15" fill="rgb(231,8,6)" fg:x="28487" fg:w="5"/><text x="82.1045%" y="1311.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.01%)</title><rect x="81.8545%" y="1285" width="0.0144%" height="15" fill="rgb(223,21,24)" fg:x="28487" fg:w="5"/><text x="82.1045%" y="1295.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSet&gt;::serialize (5 samples, 0.01%)</title><rect x="81.8545%" y="1269" width="0.0144%" height="15" fill="rgb(244,44,52)" fg:x="28487" fg:w="5"/><text x="82.1045%" y="1279.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (5 samples, 0.01%)</title><rect x="81.8545%" y="1253" width="0.0144%" height="15" fill="rgb(207,73,28)" fg:x="28487" fg:w="5"/><text x="82.1045%" y="1263.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetV0&gt;::serialize (5 samples, 0.01%)</title><rect x="81.8545%" y="1237" width="0.0144%" height="15" fill="rgb(234,215,10)" fg:x="28487" fg:w="5"/><text x="82.1045%" y="1247.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (5 samples, 0.01%)</title><rect x="81.8545%" y="1221" width="0.0144%" height="15" fill="rgb(236,85,3)" fg:x="28487" fg:w="5"/><text x="82.1045%" y="1231.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetMut&gt;::serialize (5 samples, 0.01%)</title><rect x="81.8545%" y="1205" width="0.0144%" height="15" fill="rgb(236,102,39)" fg:x="28487" fg:w="5"/><text x="82.1045%" y="1215.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.01%)</title><rect x="81.8545%" y="1189" width="0.0144%" height="15" fill="rgb(243,50,8)" fg:x="28487" fg:w="5"/><text x="82.1045%" y="1199.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::serialize (5 samples, 0.01%)</title><rect x="81.8545%" y="1173" width="0.0144%" height="15" fill="rgb(207,111,4)" fg:x="28487" fg:w="5"/><text x="82.1045%" y="1183.50"></text></g><g><title>serde::ser::Serializer::collect_map (5 samples, 0.01%)</title><rect x="81.8545%" y="1157" width="0.0144%" height="15" fill="rgb(230,52,42)" fg:x="28487" fg:w="5"/><text x="82.1045%" y="1167.50"></text></g><g><title>&lt;bcs::ser::MapSerializer&lt;W&gt; as serde::ser::SerializeMap&gt;::end (5 samples, 0.01%)</title><rect x="81.8545%" y="1141" width="0.0144%" height="15" fill="rgb(252,178,50)" fg:x="28487" fg:w="5"/><text x="82.1045%" y="1151.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.01%)</title><rect x="81.8545%" y="1125" width="0.0144%" height="15" fill="rgb(234,46,35)" fg:x="28487" fg:w="5"/><text x="82.1045%" y="1135.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSetHasher as std::io::Write&gt;::write (5 samples, 0.01%)</title><rect x="81.8545%" y="1109" width="0.0144%" height="15" fill="rgb(228,69,37)" fg:x="28487" fg:w="5"/><text x="82.1045%" y="1119.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (5 samples, 0.01%)</title><rect x="81.8545%" y="1093" width="0.0144%" height="15" fill="rgb(221,21,11)" fg:x="28487" fg:w="5"/><text x="82.1045%" y="1103.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (5 samples, 0.01%)</title><rect x="81.8545%" y="1077" width="0.0144%" height="15" fill="rgb(223,56,9)" fg:x="28487" fg:w="5"/><text x="82.1045%" y="1087.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (5 samples, 0.01%)</title><rect x="81.8545%" y="1061" width="0.0144%" height="15" fill="rgb(234,30,19)" fg:x="28487" fg:w="5"/><text x="82.1045%" y="1071.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (5 samples, 0.01%)</title><rect x="81.8545%" y="1045" width="0.0144%" height="15" fill="rgb(211,64,54)" fg:x="28487" fg:w="5"/><text x="82.1045%" y="1055.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (6 samples, 0.02%)</title><rect x="81.8746%" y="1413" width="0.0172%" height="15" fill="rgb(250,189,5)" fg:x="28494" fg:w="6"/><text x="82.1246%" y="1423.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (6 samples, 0.02%)</title><rect x="81.8746%" y="1397" width="0.0172%" height="15" fill="rgb(214,180,13)" fg:x="28494" fg:w="6"/><text x="82.1246%" y="1407.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (6 samples, 0.02%)</title><rect x="81.8746%" y="1381" width="0.0172%" height="15" fill="rgb(238,40,40)" fg:x="28494" fg:w="6"/><text x="82.1246%" y="1391.50"></text></g><g><title>rayon_core::job::JobRef::execute (6 samples, 0.02%)</title><rect x="81.8746%" y="1365" width="0.0172%" height="15" fill="rgb(214,101,38)" fg:x="28494" fg:w="6"/><text x="82.1246%" y="1375.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (6 samples, 0.02%)</title><rect x="81.8746%" y="1349" width="0.0172%" height="15" fill="rgb(242,65,53)" fg:x="28494" fg:w="6"/><text x="82.1246%" y="1359.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (6 samples, 0.02%)</title><rect x="81.8746%" y="1333" width="0.0172%" height="15" fill="rgb(230,22,45)" fg:x="28494" fg:w="6"/><text x="82.1246%" y="1343.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (6 samples, 0.02%)</title><rect x="81.8746%" y="1317" width="0.0172%" height="15" fill="rgb(223,77,1)" fg:x="28494" fg:w="6"/><text x="82.1246%" y="1327.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.02%)</title><rect x="81.8746%" y="1301" width="0.0172%" height="15" fill="rgb(227,33,37)" fg:x="28494" fg:w="6"/><text x="82.1246%" y="1311.50"></text></g><g><title>std::panicking::try (6 samples, 0.02%)</title><rect x="81.8746%" y="1285" width="0.0172%" height="15" fill="rgb(224,148,39)" fg:x="28494" fg:w="6"/><text x="82.1246%" y="1295.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.02%)</title><rect x="81.8746%" y="1269" width="0.0172%" height="15" fill="rgb(232,212,39)" fg:x="28494" fg:w="6"/><text x="82.1246%" y="1279.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6 samples, 0.02%)</title><rect x="81.8746%" y="1253" width="0.0172%" height="15" fill="rgb(251,172,7)" fg:x="28494" fg:w="6"/><text x="82.1246%" y="1263.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (6 samples, 0.02%)</title><rect x="81.8746%" y="1237" width="0.0172%" height="15" fill="rgb(219,39,9)" fg:x="28494" fg:w="6"/><text x="82.1246%" y="1247.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (6 samples, 0.02%)</title><rect x="81.8746%" y="1221" width="0.0172%" height="15" fill="rgb(228,118,14)" fg:x="28494" fg:w="6"/><text x="82.1246%" y="1231.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (6 samples, 0.02%)</title><rect x="81.8746%" y="1205" width="0.0172%" height="15" fill="rgb(207,140,10)" fg:x="28494" fg:w="6"/><text x="82.1246%" y="1215.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (6 samples, 0.02%)</title><rect x="81.8746%" y="1189" width="0.0172%" height="15" fill="rgb(227,111,53)" fg:x="28494" fg:w="6"/><text x="82.1246%" y="1199.50"></text></g><g><title>rayon_core::join::join_context (5 samples, 0.01%)</title><rect x="81.8775%" y="1173" width="0.0144%" height="15" fill="rgb(216,165,16)" fg:x="28495" fg:w="5"/><text x="82.1275%" y="1183.50"></text></g><g><title>rayon_core::registry::in_worker (5 samples, 0.01%)</title><rect x="81.8775%" y="1157" width="0.0144%" height="15" fill="rgb(226,111,18)" fg:x="28495" fg:w="5"/><text x="82.1275%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5 samples, 0.01%)</title><rect x="81.8775%" y="1141" width="0.0144%" height="15" fill="rgb(251,27,17)" fg:x="28495" fg:w="5"/><text x="82.1275%" y="1151.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (4 samples, 0.01%)</title><rect x="81.8804%" y="1125" width="0.0115%" height="15" fill="rgb(254,69,9)" fg:x="28496" fg:w="4"/><text x="82.1304%" y="1135.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.01%)</title><rect x="81.8804%" y="1109" width="0.0115%" height="15" fill="rgb(234,140,37)" fg:x="28496" fg:w="4"/><text x="82.1304%" y="1119.50"></text></g><g><title>std::panicking::try (4 samples, 0.01%)</title><rect x="81.8804%" y="1093" width="0.0115%" height="15" fill="rgb(220,93,8)" fg:x="28496" fg:w="4"/><text x="82.1304%" y="1103.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.01%)</title><rect x="81.8804%" y="1077" width="0.0115%" height="15" fill="rgb(236,113,3)" fg:x="28496" fg:w="4"/><text x="82.1304%" y="1087.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.01%)</title><rect x="81.8804%" y="1061" width="0.0115%" height="15" fill="rgb(234,108,23)" fg:x="28496" fg:w="4"/><text x="82.1304%" y="1071.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (4 samples, 0.01%)</title><rect x="81.8804%" y="1045" width="0.0115%" height="15" fill="rgb(205,114,34)" fg:x="28496" fg:w="4"/><text x="82.1304%" y="1055.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.01%)</title><rect x="81.8804%" y="1029" width="0.0115%" height="15" fill="rgb(236,200,45)" fg:x="28496" fg:w="4"/><text x="82.1304%" y="1039.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.01%)</title><rect x="81.8804%" y="1013" width="0.0115%" height="15" fill="rgb(227,194,29)" fg:x="28496" fg:w="4"/><text x="82.1304%" y="1023.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (5 samples, 0.01%)</title><rect x="81.9005%" y="1237" width="0.0144%" height="15" fill="rgb(250,76,42)" fg:x="28503" fg:w="5"/><text x="82.1505%" y="1247.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (5 samples, 0.01%)</title><rect x="81.9005%" y="1221" width="0.0144%" height="15" fill="rgb(208,128,8)" fg:x="28503" fg:w="5"/><text x="82.1505%" y="1231.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (5 samples, 0.01%)</title><rect x="81.9005%" y="1205" width="0.0144%" height="15" fill="rgb(229,209,35)" fg:x="28503" fg:w="5"/><text x="82.1505%" y="1215.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (5 samples, 0.01%)</title><rect x="81.9005%" y="1189" width="0.0144%" height="15" fill="rgb(215,39,53)" fg:x="28503" fg:w="5"/><text x="82.1505%" y="1199.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.01%)</title><rect x="81.9033%" y="1173" width="0.0115%" height="15" fill="rgb(219,123,41)" fg:x="28504" fg:w="4"/><text x="82.1533%" y="1183.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.01%)</title><rect x="81.9033%" y="1157" width="0.0115%" height="15" fill="rgb(212,158,18)" fg:x="28504" fg:w="4"/><text x="82.1533%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.01%)</title><rect x="81.9033%" y="1141" width="0.0115%" height="15" fill="rgb(234,196,53)" fg:x="28504" fg:w="4"/><text x="82.1533%" y="1151.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (28 samples, 0.08%)</title><rect x="81.8516%" y="1701" width="0.0805%" height="15" fill="rgb(210,139,12)" fg:x="28486" fg:w="28"/><text x="82.1016%" y="1711.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (28 samples, 0.08%)</title><rect x="81.8516%" y="1685" width="0.0805%" height="15" fill="rgb(220,116,54)" fg:x="28486" fg:w="28"/><text x="82.1016%" y="1695.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (27 samples, 0.08%)</title><rect x="81.8545%" y="1669" width="0.0776%" height="15" fill="rgb(247,103,28)" fg:x="28487" fg:w="27"/><text x="82.1045%" y="1679.50"></text></g><g><title>rayon_core::job::JobRef::execute (27 samples, 0.08%)</title><rect x="81.8545%" y="1653" width="0.0776%" height="15" fill="rgb(253,156,45)" fg:x="28487" fg:w="27"/><text x="82.1045%" y="1663.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (27 samples, 0.08%)</title><rect x="81.8545%" y="1637" width="0.0776%" height="15" fill="rgb(237,157,52)" fg:x="28487" fg:w="27"/><text x="82.1045%" y="1647.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (27 samples, 0.08%)</title><rect x="81.8545%" y="1621" width="0.0776%" height="15" fill="rgb(253,112,16)" fg:x="28487" fg:w="27"/><text x="82.1045%" y="1631.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (27 samples, 0.08%)</title><rect x="81.8545%" y="1605" width="0.0776%" height="15" fill="rgb(234,70,18)" fg:x="28487" fg:w="27"/><text x="82.1045%" y="1615.50"></text></g><g><title>std::panic::catch_unwind (27 samples, 0.08%)</title><rect x="81.8545%" y="1589" width="0.0776%" height="15" fill="rgb(247,138,19)" fg:x="28487" fg:w="27"/><text x="82.1045%" y="1599.50"></text></g><g><title>std::panicking::try (27 samples, 0.08%)</title><rect x="81.8545%" y="1573" width="0.0776%" height="15" fill="rgb(207,171,1)" fg:x="28487" fg:w="27"/><text x="82.1045%" y="1583.50"></text></g><g><title>std::panicking::try::do_call (27 samples, 0.08%)</title><rect x="81.8545%" y="1557" width="0.0776%" height="15" fill="rgb(239,213,3)" fg:x="28487" fg:w="27"/><text x="82.1045%" y="1567.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (27 samples, 0.08%)</title><rect x="81.8545%" y="1541" width="0.0776%" height="15" fill="rgb(226,112,4)" fg:x="28487" fg:w="27"/><text x="82.1045%" y="1551.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (27 samples, 0.08%)</title><rect x="81.8545%" y="1525" width="0.0776%" height="15" fill="rgb(252,170,12)" fg:x="28487" fg:w="27"/><text x="82.1045%" y="1535.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (27 samples, 0.08%)</title><rect x="81.8545%" y="1509" width="0.0776%" height="15" fill="rgb(241,106,13)" fg:x="28487" fg:w="27"/><text x="82.1045%" y="1519.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (27 samples, 0.08%)</title><rect x="81.8545%" y="1493" width="0.0776%" height="15" fill="rgb(225,73,23)" fg:x="28487" fg:w="27"/><text x="82.1045%" y="1503.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (27 samples, 0.08%)</title><rect x="81.8545%" y="1477" width="0.0776%" height="15" fill="rgb(251,227,29)" fg:x="28487" fg:w="27"/><text x="82.1045%" y="1487.50"></text></g><g><title>rayon_core::join::join_context (22 samples, 0.06%)</title><rect x="81.8689%" y="1461" width="0.0632%" height="15" fill="rgb(237,144,13)" fg:x="28492" fg:w="22"/><text x="82.1189%" y="1471.50"></text></g><g><title>rayon_core::registry::in_worker (22 samples, 0.06%)</title><rect x="81.8689%" y="1445" width="0.0632%" height="15" fill="rgb(232,106,46)" fg:x="28492" fg:w="22"/><text x="82.1189%" y="1455.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (22 samples, 0.06%)</title><rect x="81.8689%" y="1429" width="0.0632%" height="15" fill="rgb(245,154,53)" fg:x="28492" fg:w="22"/><text x="82.1189%" y="1439.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (14 samples, 0.04%)</title><rect x="81.8918%" y="1413" width="0.0402%" height="15" fill="rgb(212,119,47)" fg:x="28500" fg:w="14"/><text x="82.1418%" y="1423.50"></text></g><g><title>std::panic::catch_unwind (14 samples, 0.04%)</title><rect x="81.8918%" y="1397" width="0.0402%" height="15" fill="rgb(253,135,25)" fg:x="28500" fg:w="14"/><text x="82.1418%" y="1407.50"></text></g><g><title>std::panicking::try (14 samples, 0.04%)</title><rect x="81.8918%" y="1381" width="0.0402%" height="15" fill="rgb(253,208,39)" fg:x="28500" fg:w="14"/><text x="82.1418%" y="1391.50"></text></g><g><title>std::panicking::try::do_call (14 samples, 0.04%)</title><rect x="81.8918%" y="1365" width="0.0402%" height="15" fill="rgb(226,64,12)" fg:x="28500" fg:w="14"/><text x="82.1418%" y="1375.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (14 samples, 0.04%)</title><rect x="81.8918%" y="1349" width="0.0402%" height="15" fill="rgb(214,162,37)" fg:x="28500" fg:w="14"/><text x="82.1418%" y="1359.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (14 samples, 0.04%)</title><rect x="81.8918%" y="1333" width="0.0402%" height="15" fill="rgb(250,104,5)" fg:x="28500" fg:w="14"/><text x="82.1418%" y="1343.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (14 samples, 0.04%)</title><rect x="81.8918%" y="1317" width="0.0402%" height="15" fill="rgb(220,202,50)" fg:x="28500" fg:w="14"/><text x="82.1418%" y="1327.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (14 samples, 0.04%)</title><rect x="81.8918%" y="1301" width="0.0402%" height="15" fill="rgb(248,67,38)" fg:x="28500" fg:w="14"/><text x="82.1418%" y="1311.50"></text></g><g><title>rayon_core::join::join_context (11 samples, 0.03%)</title><rect x="81.9005%" y="1285" width="0.0316%" height="15" fill="rgb(242,94,35)" fg:x="28503" fg:w="11"/><text x="82.1505%" y="1295.50"></text></g><g><title>rayon_core::registry::in_worker (11 samples, 0.03%)</title><rect x="81.9005%" y="1269" width="0.0316%" height="15" fill="rgb(209,78,37)" fg:x="28503" fg:w="11"/><text x="82.1505%" y="1279.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (11 samples, 0.03%)</title><rect x="81.9005%" y="1253" width="0.0316%" height="15" fill="rgb(230,126,47)" fg:x="28503" fg:w="11"/><text x="82.1505%" y="1263.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (5 samples, 0.01%)</title><rect x="81.9177%" y="1237" width="0.0144%" height="15" fill="rgb(222,110,35)" fg:x="28509" fg:w="5"/><text x="82.1677%" y="1247.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.01%)</title><rect x="81.9177%" y="1221" width="0.0144%" height="15" fill="rgb(233,154,20)" fg:x="28509" fg:w="5"/><text x="82.1677%" y="1231.50"></text></g><g><title>std::panicking::try (5 samples, 0.01%)</title><rect x="81.9177%" y="1205" width="0.0144%" height="15" fill="rgb(223,53,50)" fg:x="28509" fg:w="5"/><text x="82.1677%" y="1215.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.01%)</title><rect x="81.9177%" y="1189" width="0.0144%" height="15" fill="rgb(251,27,26)" fg:x="28509" fg:w="5"/><text x="82.1677%" y="1199.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5 samples, 0.01%)</title><rect x="81.9177%" y="1173" width="0.0144%" height="15" fill="rgb(223,189,16)" fg:x="28509" fg:w="5"/><text x="82.1677%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (5 samples, 0.01%)</title><rect x="81.9177%" y="1157" width="0.0144%" height="15" fill="rgb(207,5,54)" fg:x="28509" fg:w="5"/><text x="82.1677%" y="1167.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (5 samples, 0.01%)</title><rect x="81.9177%" y="1141" width="0.0144%" height="15" fill="rgb(254,124,50)" fg:x="28509" fg:w="5"/><text x="82.1677%" y="1151.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (5 samples, 0.01%)</title><rect x="81.9177%" y="1125" width="0.0144%" height="15" fill="rgb(253,193,24)" fg:x="28509" fg:w="5"/><text x="82.1677%" y="1135.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (7 samples, 0.02%)</title><rect x="81.9321%" y="1573" width="0.0201%" height="15" fill="rgb(235,170,24)" fg:x="28514" fg:w="7"/><text x="82.1821%" y="1583.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (7 samples, 0.02%)</title><rect x="81.9321%" y="1557" width="0.0201%" height="15" fill="rgb(222,212,52)" fg:x="28514" fg:w="7"/><text x="82.1821%" y="1567.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (7 samples, 0.02%)</title><rect x="81.9321%" y="1541" width="0.0201%" height="15" fill="rgb(223,17,45)" fg:x="28514" fg:w="7"/><text x="82.1821%" y="1551.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (7 samples, 0.02%)</title><rect x="81.9321%" y="1525" width="0.0201%" height="15" fill="rgb(227,103,26)" fg:x="28514" fg:w="7"/><text x="82.1821%" y="1535.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.02%)</title><rect x="81.9321%" y="1509" width="0.0201%" height="15" fill="rgb(251,151,25)" fg:x="28514" fg:w="7"/><text x="82.1821%" y="1519.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (7 samples, 0.02%)</title><rect x="81.9321%" y="1493" width="0.0201%" height="15" fill="rgb(248,144,29)" fg:x="28514" fg:w="7"/><text x="82.1821%" y="1503.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (7 samples, 0.02%)</title><rect x="81.9321%" y="1477" width="0.0201%" height="15" fill="rgb(245,97,16)" fg:x="28514" fg:w="7"/><text x="82.1821%" y="1487.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (7 samples, 0.02%)</title><rect x="81.9321%" y="1461" width="0.0201%" height="15" fill="rgb(220,200,29)" fg:x="28514" fg:w="7"/><text x="82.1821%" y="1471.50"></text></g><g><title>aptos_executor::components::apply_chunk_output::ApplyChunkOutput::assemble_ledger_diff::{{closure}} (7 samples, 0.02%)</title><rect x="81.9321%" y="1445" width="0.0201%" height="15" fill="rgb(206,38,29)" fg:x="28514" fg:w="7"/><text x="82.1821%" y="1455.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSet as aptos_crypto::hash::CryptoHash&gt;::hash (7 samples, 0.02%)</title><rect x="81.9321%" y="1429" width="0.0201%" height="15" fill="rgb(245,19,52)" fg:x="28514" fg:w="7"/><text x="82.1821%" y="1439.50"></text></g><g><title>bcs::ser::serialize_into (7 samples, 0.02%)</title><rect x="81.9321%" y="1413" width="0.0201%" height="15" fill="rgb(205,67,43)" fg:x="28514" fg:w="7"/><text x="82.1821%" y="1423.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.02%)</title><rect x="81.9321%" y="1397" width="0.0201%" height="15" fill="rgb(217,128,23)" fg:x="28514" fg:w="7"/><text x="82.1821%" y="1407.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSet&gt;::serialize (7 samples, 0.02%)</title><rect x="81.9321%" y="1381" width="0.0201%" height="15" fill="rgb(210,109,28)" fg:x="28514" fg:w="7"/><text x="82.1821%" y="1391.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (7 samples, 0.02%)</title><rect x="81.9321%" y="1365" width="0.0201%" height="15" fill="rgb(233,181,7)" fg:x="28514" fg:w="7"/><text x="82.1821%" y="1375.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetV0&gt;::serialize (7 samples, 0.02%)</title><rect x="81.9321%" y="1349" width="0.0201%" height="15" fill="rgb(244,11,22)" fg:x="28514" fg:w="7"/><text x="82.1821%" y="1359.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (7 samples, 0.02%)</title><rect x="81.9321%" y="1333" width="0.0201%" height="15" fill="rgb(205,124,54)" fg:x="28514" fg:w="7"/><text x="82.1821%" y="1343.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetMut&gt;::serialize (7 samples, 0.02%)</title><rect x="81.9321%" y="1317" width="0.0201%" height="15" fill="rgb(218,21,27)" fg:x="28514" fg:w="7"/><text x="82.1821%" y="1327.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (7 samples, 0.02%)</title><rect x="81.9321%" y="1301" width="0.0201%" height="15" fill="rgb(224,153,33)" fg:x="28514" fg:w="7"/><text x="82.1821%" y="1311.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::serialize (7 samples, 0.02%)</title><rect x="81.9321%" y="1285" width="0.0201%" height="15" fill="rgb(240,219,28)" fg:x="28514" fg:w="7"/><text x="82.1821%" y="1295.50"></text></g><g><title>serde::ser::Serializer::collect_map (7 samples, 0.02%)</title><rect x="81.9321%" y="1269" width="0.0201%" height="15" fill="rgb(214,80,29)" fg:x="28514" fg:w="7"/><text x="82.1821%" y="1279.50"></text></g><g><title>&lt;bcs::ser::MapSerializer&lt;W&gt; as serde::ser::SerializeMap&gt;::end (7 samples, 0.02%)</title><rect x="81.9321%" y="1253" width="0.0201%" height="15" fill="rgb(247,148,44)" fg:x="28514" fg:w="7"/><text x="82.1821%" y="1263.50"></text></g><g><title>std::io::Write::write_all (7 samples, 0.02%)</title><rect x="81.9321%" y="1237" width="0.0201%" height="15" fill="rgb(243,110,30)" fg:x="28514" fg:w="7"/><text x="82.1821%" y="1247.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSetHasher as std::io::Write&gt;::write (7 samples, 0.02%)</title><rect x="81.9321%" y="1221" width="0.0201%" height="15" fill="rgb(243,173,41)" fg:x="28514" fg:w="7"/><text x="82.1821%" y="1231.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (7 samples, 0.02%)</title><rect x="81.9321%" y="1205" width="0.0201%" height="15" fill="rgb(225,160,47)" fg:x="28514" fg:w="7"/><text x="82.1821%" y="1215.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (7 samples, 0.02%)</title><rect x="81.9321%" y="1189" width="0.0201%" height="15" fill="rgb(215,44,21)" fg:x="28514" fg:w="7"/><text x="82.1821%" y="1199.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (7 samples, 0.02%)</title><rect x="81.9321%" y="1173" width="0.0201%" height="15" fill="rgb(248,90,3)" fg:x="28514" fg:w="7"/><text x="82.1821%" y="1183.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (7 samples, 0.02%)</title><rect x="81.9321%" y="1157" width="0.0201%" height="15" fill="rgb(220,196,49)" fg:x="28514" fg:w="7"/><text x="82.1821%" y="1167.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (4 samples, 0.01%)</title><rect x="81.9579%" y="1461" width="0.0115%" height="15" fill="rgb(217,138,14)" fg:x="28523" fg:w="4"/><text x="82.2079%" y="1471.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (4 samples, 0.01%)</title><rect x="81.9579%" y="1445" width="0.0115%" height="15" fill="rgb(219,111,20)" fg:x="28523" fg:w="4"/><text x="82.2079%" y="1455.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (4 samples, 0.01%)</title><rect x="81.9579%" y="1429" width="0.0115%" height="15" fill="rgb(218,114,4)" fg:x="28523" fg:w="4"/><text x="82.2079%" y="1439.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (4 samples, 0.01%)</title><rect x="81.9579%" y="1413" width="0.0115%" height="15" fill="rgb(238,133,3)" fg:x="28523" fg:w="4"/><text x="82.2079%" y="1423.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="81.9579%" y="1397" width="0.0115%" height="15" fill="rgb(224,95,0)" fg:x="28523" fg:w="4"/><text x="82.2079%" y="1407.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4 samples, 0.01%)</title><rect x="81.9579%" y="1381" width="0.0115%" height="15" fill="rgb(220,169,35)" fg:x="28523" fg:w="4"/><text x="82.2079%" y="1391.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (4 samples, 0.01%)</title><rect x="81.9579%" y="1365" width="0.0115%" height="15" fill="rgb(242,116,47)" fg:x="28523" fg:w="4"/><text x="82.2079%" y="1375.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (4 samples, 0.01%)</title><rect x="81.9579%" y="1349" width="0.0115%" height="15" fill="rgb(251,42,20)" fg:x="28523" fg:w="4"/><text x="82.2079%" y="1359.50"></text></g><g><title>aptos_executor::components::apply_chunk_output::ApplyChunkOutput::assemble_ledger_diff::{{closure}} (4 samples, 0.01%)</title><rect x="81.9579%" y="1333" width="0.0115%" height="15" fill="rgb(234,7,34)" fg:x="28523" fg:w="4"/><text x="82.2079%" y="1343.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSet as aptos_crypto::hash::CryptoHash&gt;::hash (4 samples, 0.01%)</title><rect x="81.9579%" y="1317" width="0.0115%" height="15" fill="rgb(243,208,13)" fg:x="28523" fg:w="4"/><text x="82.2079%" y="1327.50"></text></g><g><title>bcs::ser::serialize_into (4 samples, 0.01%)</title><rect x="81.9579%" y="1301" width="0.0115%" height="15" fill="rgb(227,33,28)" fg:x="28523" fg:w="4"/><text x="82.2079%" y="1311.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.01%)</title><rect x="81.9579%" y="1285" width="0.0115%" height="15" fill="rgb(250,47,37)" fg:x="28523" fg:w="4"/><text x="82.2079%" y="1295.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSet&gt;::serialize (4 samples, 0.01%)</title><rect x="81.9579%" y="1269" width="0.0115%" height="15" fill="rgb(235,111,52)" fg:x="28523" fg:w="4"/><text x="82.2079%" y="1279.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (4 samples, 0.01%)</title><rect x="81.9579%" y="1253" width="0.0115%" height="15" fill="rgb(223,64,28)" fg:x="28523" fg:w="4"/><text x="82.2079%" y="1263.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetV0&gt;::serialize (4 samples, 0.01%)</title><rect x="81.9579%" y="1237" width="0.0115%" height="15" fill="rgb(236,67,22)" fg:x="28523" fg:w="4"/><text x="82.2079%" y="1247.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (4 samples, 0.01%)</title><rect x="81.9579%" y="1221" width="0.0115%" height="15" fill="rgb(243,79,24)" fg:x="28523" fg:w="4"/><text x="82.2079%" y="1231.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetMut&gt;::serialize (4 samples, 0.01%)</title><rect x="81.9579%" y="1205" width="0.0115%" height="15" fill="rgb(241,225,22)" fg:x="28523" fg:w="4"/><text x="82.2079%" y="1215.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.01%)</title><rect x="81.9579%" y="1189" width="0.0115%" height="15" fill="rgb(228,214,26)" fg:x="28523" fg:w="4"/><text x="82.2079%" y="1199.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::serialize (4 samples, 0.01%)</title><rect x="81.9579%" y="1173" width="0.0115%" height="15" fill="rgb(219,84,52)" fg:x="28523" fg:w="4"/><text x="82.2079%" y="1183.50"></text></g><g><title>serde::ser::Serializer::collect_map (4 samples, 0.01%)</title><rect x="81.9579%" y="1157" width="0.0115%" height="15" fill="rgb(220,12,22)" fg:x="28523" fg:w="4"/><text x="82.2079%" y="1167.50"></text></g><g><title>&lt;bcs::ser::MapSerializer&lt;W&gt; as serde::ser::SerializeMap&gt;::end (4 samples, 0.01%)</title><rect x="81.9579%" y="1141" width="0.0115%" height="15" fill="rgb(219,9,49)" fg:x="28523" fg:w="4"/><text x="82.2079%" y="1151.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.01%)</title><rect x="81.9579%" y="1125" width="0.0115%" height="15" fill="rgb(237,40,43)" fg:x="28523" fg:w="4"/><text x="82.2079%" y="1135.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSetHasher as std::io::Write&gt;::write (4 samples, 0.01%)</title><rect x="81.9579%" y="1109" width="0.0115%" height="15" fill="rgb(212,189,32)" fg:x="28523" fg:w="4"/><text x="82.2079%" y="1119.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (4 samples, 0.01%)</title><rect x="81.9579%" y="1093" width="0.0115%" height="15" fill="rgb(247,48,9)" fg:x="28523" fg:w="4"/><text x="82.2079%" y="1103.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (4 samples, 0.01%)</title><rect x="81.9579%" y="1077" width="0.0115%" height="15" fill="rgb(247,112,3)" fg:x="28523" fg:w="4"/><text x="82.2079%" y="1087.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (4 samples, 0.01%)</title><rect x="81.9579%" y="1061" width="0.0115%" height="15" fill="rgb(243,110,18)" fg:x="28523" fg:w="4"/><text x="82.2079%" y="1071.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (4 samples, 0.01%)</title><rect x="81.9579%" y="1045" width="0.0115%" height="15" fill="rgb(233,223,44)" fg:x="28523" fg:w="4"/><text x="82.2079%" y="1055.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (6 samples, 0.02%)</title><rect x="81.9694%" y="1413" width="0.0172%" height="15" fill="rgb(245,160,20)" fg:x="28527" fg:w="6"/><text x="82.2194%" y="1423.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (6 samples, 0.02%)</title><rect x="81.9694%" y="1397" width="0.0172%" height="15" fill="rgb(225,37,1)" fg:x="28527" fg:w="6"/><text x="82.2194%" y="1407.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (6 samples, 0.02%)</title><rect x="81.9694%" y="1381" width="0.0172%" height="15" fill="rgb(253,227,39)" fg:x="28527" fg:w="6"/><text x="82.2194%" y="1391.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (6 samples, 0.02%)</title><rect x="81.9694%" y="1365" width="0.0172%" height="15" fill="rgb(240,179,26)" fg:x="28527" fg:w="6"/><text x="82.2194%" y="1375.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (4 samples, 0.01%)</title><rect x="81.9752%" y="1349" width="0.0115%" height="15" fill="rgb(237,212,23)" fg:x="28529" fg:w="4"/><text x="82.2252%" y="1359.50"></text></g><g><title>&lt;rayon::iter::flat_map_iter::FlatMapIterFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (4 samples, 0.01%)</title><rect x="81.9752%" y="1333" width="0.0115%" height="15" fill="rgb(221,38,11)" fg:x="28529" fg:w="4"/><text x="82.2252%" y="1343.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (4 samples, 0.01%)</title><rect x="81.9752%" y="1317" width="0.0115%" height="15" fill="rgb(215,85,6)" fg:x="28529" fg:w="4"/><text x="82.2252%" y="1327.50"></text></g><g><title>&lt;rayon::iter::while_some::WhileSomeFolder&lt;C&gt; as rayon::iter::plumbing::Folder&lt;core::option::Option&lt;T&gt;&gt;&gt;::consume_iter (4 samples, 0.01%)</title><rect x="81.9752%" y="1301" width="0.0115%" height="15" fill="rgb(239,64,14)" fg:x="28529" fg:w="4"/><text x="82.2252%" y="1311.50"></text></g><g><title>&lt;rayon::iter::noop::NoopConsumer as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (4 samples, 0.01%)</title><rect x="81.9752%" y="1285" width="0.0115%" height="15" fill="rgb(215,150,32)" fg:x="28529" fg:w="4"/><text x="82.2252%" y="1295.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4 samples, 0.01%)</title><rect x="81.9752%" y="1269" width="0.0115%" height="15" fill="rgb(238,15,13)" fg:x="28529" fg:w="4"/><text x="82.2252%" y="1279.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.01%)</title><rect x="81.9752%" y="1253" width="0.0115%" height="15" fill="rgb(251,87,8)" fg:x="28529" fg:w="4"/><text x="82.2252%" y="1263.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.01%)</title><rect x="81.9752%" y="1237" width="0.0115%" height="15" fill="rgb(206,86,1)" fg:x="28529" fg:w="4"/><text x="82.2252%" y="1247.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.01%)</title><rect x="81.9752%" y="1221" width="0.0115%" height="15" fill="rgb(208,151,45)" fg:x="28529" fg:w="4"/><text x="82.2252%" y="1231.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.01%)</title><rect x="81.9752%" y="1205" width="0.0115%" height="15" fill="rgb(231,181,24)" fg:x="28529" fg:w="4"/><text x="82.2252%" y="1215.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.01%)</title><rect x="81.9752%" y="1189" width="0.0115%" height="15" fill="rgb(240,106,29)" fg:x="28529" fg:w="4"/><text x="82.2252%" y="1199.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.01%)</title><rect x="81.9752%" y="1173" width="0.0115%" height="15" fill="rgb(227,166,11)" fg:x="28529" fg:w="4"/><text x="82.2252%" y="1183.50"></text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_try_fold (4 samples, 0.01%)</title><rect x="81.9752%" y="1157" width="0.0115%" height="15" fill="rgb(254,14,34)" fg:x="28529" fg:w="4"/><text x="82.2252%" y="1167.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.01%)</title><rect x="81.9752%" y="1141" width="0.0115%" height="15" fill="rgb(223,222,6)" fg:x="28529" fg:w="4"/><text x="82.2252%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (4 samples, 0.01%)</title><rect x="81.9752%" y="1125" width="0.0115%" height="15" fill="rgb(245,69,24)" fg:x="28529" fg:w="4"/><text x="82.2252%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.01%)</title><rect x="81.9752%" y="1109" width="0.0115%" height="15" fill="rgb(213,193,7)" fg:x="28529" fg:w="4"/><text x="82.2252%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.01%)</title><rect x="81.9752%" y="1093" width="0.0115%" height="15" fill="rgb(237,92,51)" fg:x="28529" fg:w="4"/><text x="82.2252%" y="1103.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (4 samples, 0.01%)</title><rect x="81.9752%" y="1077" width="0.0115%" height="15" fill="rgb(225,194,6)" fg:x="28529" fg:w="4"/><text x="82.2252%" y="1087.50"></text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_try_fold::flatten::{{closure}} (4 samples, 0.01%)</title><rect x="81.9752%" y="1061" width="0.0115%" height="15" fill="rgb(205,159,49)" fg:x="28529" fg:w="4"/><text x="82.2252%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::flatten::{{closure}} (4 samples, 0.01%)</title><rect x="81.9752%" y="1045" width="0.0115%" height="15" fill="rgb(219,69,2)" fg:x="28529" fg:w="4"/><text x="82.2252%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4 samples, 0.01%)</title><rect x="81.9752%" y="1029" width="0.0115%" height="15" fill="rgb(215,107,24)" fg:x="28529" fg:w="4"/><text x="82.2252%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.01%)</title><rect x="81.9752%" y="1013" width="0.0115%" height="15" fill="rgb(249,208,29)" fg:x="28529" fg:w="4"/><text x="82.2252%" y="1023.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (4 samples, 0.01%)</title><rect x="81.9752%" y="997" width="0.0115%" height="15" fill="rgb(213,147,10)" fg:x="28529" fg:w="4"/><text x="82.2252%" y="1007.50"></text></g><g><title>aptos_db::state_store::StateStore::put_value_sets::{{closure}}::{{closure}} (4 samples, 0.01%)</title><rect x="81.9752%" y="981" width="0.0115%" height="15" fill="rgb(254,140,42)" fg:x="28529" fg:w="4"/><text x="82.2252%" y="991.50"></text></g><g><title>aptos_schemadb::SchemaBatch::put (4 samples, 0.01%)</title><rect x="81.9752%" y="965" width="0.0115%" height="15" fill="rgb(249,9,15)" fg:x="28529" fg:w="4"/><text x="82.2252%" y="975.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (4 samples, 0.01%)</title><rect x="81.9867%" y="1413" width="0.0115%" height="15" fill="rgb(210,19,33)" fg:x="28533" fg:w="4"/><text x="82.2367%" y="1423.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (4 samples, 0.01%)</title><rect x="81.9867%" y="1397" width="0.0115%" height="15" fill="rgb(241,121,22)" fg:x="28533" fg:w="4"/><text x="82.2367%" y="1407.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (4 samples, 0.01%)</title><rect x="81.9867%" y="1381" width="0.0115%" height="15" fill="rgb(244,69,52)" fg:x="28533" fg:w="4"/><text x="82.2367%" y="1391.50"></text></g><g><title>rayon_core::job::JobRef::execute (4 samples, 0.01%)</title><rect x="81.9867%" y="1365" width="0.0115%" height="15" fill="rgb(244,191,54)" fg:x="28533" fg:w="4"/><text x="82.2367%" y="1375.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (4 samples, 0.01%)</title><rect x="81.9867%" y="1349" width="0.0115%" height="15" fill="rgb(250,3,53)" fg:x="28533" fg:w="4"/><text x="82.2367%" y="1359.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (4 samples, 0.01%)</title><rect x="81.9867%" y="1333" width="0.0115%" height="15" fill="rgb(205,77,3)" fg:x="28533" fg:w="4"/><text x="82.2367%" y="1343.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (4 samples, 0.01%)</title><rect x="81.9867%" y="1317" width="0.0115%" height="15" fill="rgb(207,155,3)" fg:x="28533" fg:w="4"/><text x="82.2367%" y="1327.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.01%)</title><rect x="81.9867%" y="1301" width="0.0115%" height="15" fill="rgb(224,79,2)" fg:x="28533" fg:w="4"/><text x="82.2367%" y="1311.50"></text></g><g><title>std::panicking::try (4 samples, 0.01%)</title><rect x="81.9867%" y="1285" width="0.0115%" height="15" fill="rgb(243,172,5)" fg:x="28533" fg:w="4"/><text x="82.2367%" y="1295.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.01%)</title><rect x="81.9867%" y="1269" width="0.0115%" height="15" fill="rgb(217,23,43)" fg:x="28533" fg:w="4"/><text x="82.2367%" y="1279.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.01%)</title><rect x="81.9867%" y="1253" width="0.0115%" height="15" fill="rgb(223,109,20)" fg:x="28533" fg:w="4"/><text x="82.2367%" y="1263.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (4 samples, 0.01%)</title><rect x="81.9867%" y="1237" width="0.0115%" height="15" fill="rgb(232,159,21)" fg:x="28533" fg:w="4"/><text x="82.2367%" y="1247.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (4 samples, 0.01%)</title><rect x="81.9867%" y="1221" width="0.0115%" height="15" fill="rgb(219,58,2)" fg:x="28533" fg:w="4"/><text x="82.2367%" y="1231.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.01%)</title><rect x="81.9867%" y="1205" width="0.0115%" height="15" fill="rgb(241,56,8)" fg:x="28533" fg:w="4"/><text x="82.2367%" y="1215.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.01%)</title><rect x="81.9867%" y="1189" width="0.0115%" height="15" fill="rgb(249,10,27)" fg:x="28533" fg:w="4"/><text x="82.2367%" y="1199.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.01%)</title><rect x="81.9867%" y="1173" width="0.0115%" height="15" fill="rgb(248,177,5)" fg:x="28533" fg:w="4"/><text x="82.2367%" y="1183.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.01%)</title><rect x="81.9867%" y="1157" width="0.0115%" height="15" fill="rgb(239,12,30)" fg:x="28533" fg:w="4"/><text x="82.2367%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.01%)</title><rect x="81.9867%" y="1141" width="0.0115%" height="15" fill="rgb(229,164,25)" fg:x="28533" fg:w="4"/><text x="82.2367%" y="1151.50"></text></g><g><title>aptos_db::schema::state_value::&lt;impl aptos_schemadb::schema::KeyCodec&lt;aptos_db::schema::state_value::StateValueSchema&gt; for (aptos_types::state_store::state_key::StateKey,u64)&gt;::encode_key (4 samples, 0.01%)</title><rect x="82.0068%" y="885" width="0.0115%" height="15" fill="rgb(231,217,50)" fg:x="28540" fg:w="4"/><text x="82.2568%" y="895.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (22 samples, 0.06%)</title><rect x="81.9579%" y="1525" width="0.0632%" height="15" fill="rgb(247,99,32)" fg:x="28523" fg:w="22"/><text x="82.2079%" y="1535.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (22 samples, 0.06%)</title><rect x="81.9579%" y="1509" width="0.0632%" height="15" fill="rgb(240,74,50)" fg:x="28523" fg:w="22"/><text x="82.2079%" y="1519.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (22 samples, 0.06%)</title><rect x="81.9579%" y="1493" width="0.0632%" height="15" fill="rgb(218,54,8)" fg:x="28523" fg:w="22"/><text x="82.2079%" y="1503.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (22 samples, 0.06%)</title><rect x="81.9579%" y="1477" width="0.0632%" height="15" fill="rgb(227,132,20)" fg:x="28523" fg:w="22"/><text x="82.2079%" y="1487.50"></text></g><g><title>rayon_core::join::join_context (18 samples, 0.05%)</title><rect x="81.9694%" y="1461" width="0.0517%" height="15" fill="rgb(232,134,12)" fg:x="28527" fg:w="18"/><text x="82.2194%" y="1471.50"></text></g><g><title>rayon_core::registry::in_worker (18 samples, 0.05%)</title><rect x="81.9694%" y="1445" width="0.0517%" height="15" fill="rgb(250,129,18)" fg:x="28527" fg:w="18"/><text x="82.2194%" y="1455.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (18 samples, 0.05%)</title><rect x="81.9694%" y="1429" width="0.0517%" height="15" fill="rgb(232,129,47)" fg:x="28527" fg:w="18"/><text x="82.2194%" y="1439.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (8 samples, 0.02%)</title><rect x="81.9982%" y="1413" width="0.0230%" height="15" fill="rgb(230,31,40)" fg:x="28537" fg:w="8"/><text x="82.2482%" y="1423.50"></text></g><g><title>std::panic::catch_unwind (8 samples, 0.02%)</title><rect x="81.9982%" y="1397" width="0.0230%" height="15" fill="rgb(232,126,10)" fg:x="28537" fg:w="8"/><text x="82.2482%" y="1407.50"></text></g><g><title>std::panicking::try (8 samples, 0.02%)</title><rect x="81.9982%" y="1381" width="0.0230%" height="15" fill="rgb(205,46,31)" fg:x="28537" fg:w="8"/><text x="82.2482%" y="1391.50"></text></g><g><title>std::panicking::try::do_call (8 samples, 0.02%)</title><rect x="81.9982%" y="1365" width="0.0230%" height="15" fill="rgb(232,37,37)" fg:x="28537" fg:w="8"/><text x="82.2482%" y="1375.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (8 samples, 0.02%)</title><rect x="81.9982%" y="1349" width="0.0230%" height="15" fill="rgb(240,91,16)" fg:x="28537" fg:w="8"/><text x="82.2482%" y="1359.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (8 samples, 0.02%)</title><rect x="81.9982%" y="1333" width="0.0230%" height="15" fill="rgb(224,160,9)" fg:x="28537" fg:w="8"/><text x="82.2482%" y="1343.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (8 samples, 0.02%)</title><rect x="81.9982%" y="1317" width="0.0230%" height="15" fill="rgb(215,116,14)" fg:x="28537" fg:w="8"/><text x="82.2482%" y="1327.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (8 samples, 0.02%)</title><rect x="81.9982%" y="1301" width="0.0230%" height="15" fill="rgb(235,46,36)" fg:x="28537" fg:w="8"/><text x="82.2482%" y="1311.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (5 samples, 0.01%)</title><rect x="82.0068%" y="1285" width="0.0144%" height="15" fill="rgb(238,39,28)" fg:x="28540" fg:w="5"/><text x="82.2568%" y="1295.50"></text></g><g><title>&lt;rayon::iter::flat_map_iter::FlatMapIterFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (5 samples, 0.01%)</title><rect x="82.0068%" y="1269" width="0.0144%" height="15" fill="rgb(242,125,29)" fg:x="28540" fg:w="5"/><text x="82.2568%" y="1279.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (5 samples, 0.01%)</title><rect x="82.0068%" y="1253" width="0.0144%" height="15" fill="rgb(238,211,30)" fg:x="28540" fg:w="5"/><text x="82.2568%" y="1263.50"></text></g><g><title>&lt;rayon::iter::while_some::WhileSomeFolder&lt;C&gt; as rayon::iter::plumbing::Folder&lt;core::option::Option&lt;T&gt;&gt;&gt;::consume_iter (5 samples, 0.01%)</title><rect x="82.0068%" y="1237" width="0.0144%" height="15" fill="rgb(227,201,28)" fg:x="28540" fg:w="5"/><text x="82.2568%" y="1247.50"></text></g><g><title>&lt;rayon::iter::noop::NoopConsumer as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (5 samples, 0.01%)</title><rect x="82.0068%" y="1221" width="0.0144%" height="15" fill="rgb(238,77,29)" fg:x="28540" fg:w="5"/><text x="82.2568%" y="1231.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (5 samples, 0.01%)</title><rect x="82.0068%" y="1205" width="0.0144%" height="15" fill="rgb(213,221,40)" fg:x="28540" fg:w="5"/><text x="82.2568%" y="1215.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.01%)</title><rect x="82.0068%" y="1189" width="0.0144%" height="15" fill="rgb(226,220,44)" fg:x="28540" fg:w="5"/><text x="82.2568%" y="1199.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.01%)</title><rect x="82.0068%" y="1173" width="0.0144%" height="15" fill="rgb(228,90,23)" fg:x="28540" fg:w="5"/><text x="82.2568%" y="1183.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.01%)</title><rect x="82.0068%" y="1157" width="0.0144%" height="15" fill="rgb(235,72,29)" fg:x="28540" fg:w="5"/><text x="82.2568%" y="1167.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.01%)</title><rect x="82.0068%" y="1141" width="0.0144%" height="15" fill="rgb(248,117,39)" fg:x="28540" fg:w="5"/><text x="82.2568%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.01%)</title><rect x="82.0068%" y="1125" width="0.0144%" height="15" fill="rgb(225,43,28)" fg:x="28540" fg:w="5"/><text x="82.2568%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.01%)</title><rect x="82.0068%" y="1109" width="0.0144%" height="15" fill="rgb(240,93,4)" fg:x="28540" fg:w="5"/><text x="82.2568%" y="1119.50"></text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_try_fold (5 samples, 0.01%)</title><rect x="82.0068%" y="1093" width="0.0144%" height="15" fill="rgb(234,178,27)" fg:x="28540" fg:w="5"/><text x="82.2568%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.01%)</title><rect x="82.0068%" y="1077" width="0.0144%" height="15" fill="rgb(254,88,22)" fg:x="28540" fg:w="5"/><text x="82.2568%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (5 samples, 0.01%)</title><rect x="82.0068%" y="1061" width="0.0144%" height="15" fill="rgb(240,206,50)" fg:x="28540" fg:w="5"/><text x="82.2568%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.01%)</title><rect x="82.0068%" y="1045" width="0.0144%" height="15" fill="rgb(249,103,8)" fg:x="28540" fg:w="5"/><text x="82.2568%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.01%)</title><rect x="82.0068%" y="1029" width="0.0144%" height="15" fill="rgb(241,178,36)" fg:x="28540" fg:w="5"/><text x="82.2568%" y="1039.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (5 samples, 0.01%)</title><rect x="82.0068%" y="1013" width="0.0144%" height="15" fill="rgb(246,110,15)" fg:x="28540" fg:w="5"/><text x="82.2568%" y="1023.50"></text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_try_fold::flatten::{{closure}} (5 samples, 0.01%)</title><rect x="82.0068%" y="997" width="0.0144%" height="15" fill="rgb(207,14,43)" fg:x="28540" fg:w="5"/><text x="82.2568%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::flatten::{{closure}} (5 samples, 0.01%)</title><rect x="82.0068%" y="981" width="0.0144%" height="15" fill="rgb(253,219,19)" fg:x="28540" fg:w="5"/><text x="82.2568%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.01%)</title><rect x="82.0068%" y="965" width="0.0144%" height="15" fill="rgb(216,126,5)" fg:x="28540" fg:w="5"/><text x="82.2568%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.01%)</title><rect x="82.0068%" y="949" width="0.0144%" height="15" fill="rgb(218,78,42)" fg:x="28540" fg:w="5"/><text x="82.2568%" y="959.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (5 samples, 0.01%)</title><rect x="82.0068%" y="933" width="0.0144%" height="15" fill="rgb(215,154,40)" fg:x="28540" fg:w="5"/><text x="82.2568%" y="943.50"></text></g><g><title>aptos_db::state_store::StateStore::put_value_sets::{{closure}}::{{closure}} (5 samples, 0.01%)</title><rect x="82.0068%" y="917" width="0.0144%" height="15" fill="rgb(235,129,32)" fg:x="28540" fg:w="5"/><text x="82.2568%" y="927.50"></text></g><g><title>aptos_schemadb::SchemaBatch::put (5 samples, 0.01%)</title><rect x="82.0068%" y="901" width="0.0144%" height="15" fill="rgb(218,51,8)" fg:x="28540" fg:w="5"/><text x="82.2568%" y="911.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (15 samples, 0.04%)</title><rect x="82.0211%" y="1525" width="0.0431%" height="15" fill="rgb(245,48,4)" fg:x="28545" fg:w="15"/><text x="82.2711%" y="1535.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (15 samples, 0.04%)</title><rect x="82.0211%" y="1509" width="0.0431%" height="15" fill="rgb(250,175,12)" fg:x="28545" fg:w="15"/><text x="82.2711%" y="1519.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (15 samples, 0.04%)</title><rect x="82.0211%" y="1493" width="0.0431%" height="15" fill="rgb(237,95,40)" fg:x="28545" fg:w="15"/><text x="82.2711%" y="1503.50"></text></g><g><title>rayon_core::job::JobRef::execute (15 samples, 0.04%)</title><rect x="82.0211%" y="1477" width="0.0431%" height="15" fill="rgb(244,120,0)" fg:x="28545" fg:w="15"/><text x="82.2711%" y="1487.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (15 samples, 0.04%)</title><rect x="82.0211%" y="1461" width="0.0431%" height="15" fill="rgb(241,19,42)" fg:x="28545" fg:w="15"/><text x="82.2711%" y="1471.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (15 samples, 0.04%)</title><rect x="82.0211%" y="1445" width="0.0431%" height="15" fill="rgb(217,174,48)" fg:x="28545" fg:w="15"/><text x="82.2711%" y="1455.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (15 samples, 0.04%)</title><rect x="82.0211%" y="1429" width="0.0431%" height="15" fill="rgb(239,36,38)" fg:x="28545" fg:w="15"/><text x="82.2711%" y="1439.50"></text></g><g><title>std::panic::catch_unwind (15 samples, 0.04%)</title><rect x="82.0211%" y="1413" width="0.0431%" height="15" fill="rgb(220,63,49)" fg:x="28545" fg:w="15"/><text x="82.2711%" y="1423.50"></text></g><g><title>std::panicking::try (15 samples, 0.04%)</title><rect x="82.0211%" y="1397" width="0.0431%" height="15" fill="rgb(240,101,13)" fg:x="28545" fg:w="15"/><text x="82.2711%" y="1407.50"></text></g><g><title>std::panicking::try::do_call (15 samples, 0.04%)</title><rect x="82.0211%" y="1381" width="0.0431%" height="15" fill="rgb(209,184,51)" fg:x="28545" fg:w="15"/><text x="82.2711%" y="1391.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (15 samples, 0.04%)</title><rect x="82.0211%" y="1365" width="0.0431%" height="15" fill="rgb(206,136,39)" fg:x="28545" fg:w="15"/><text x="82.2711%" y="1375.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (15 samples, 0.04%)</title><rect x="82.0211%" y="1349" width="0.0431%" height="15" fill="rgb(254,47,45)" fg:x="28545" fg:w="15"/><text x="82.2711%" y="1359.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (15 samples, 0.04%)</title><rect x="82.0211%" y="1333" width="0.0431%" height="15" fill="rgb(252,103,20)" fg:x="28545" fg:w="15"/><text x="82.2711%" y="1343.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (15 samples, 0.04%)</title><rect x="82.0211%" y="1317" width="0.0431%" height="15" fill="rgb(230,69,12)" fg:x="28545" fg:w="15"/><text x="82.2711%" y="1327.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (15 samples, 0.04%)</title><rect x="82.0211%" y="1301" width="0.0431%" height="15" fill="rgb(219,2,28)" fg:x="28545" fg:w="15"/><text x="82.2711%" y="1311.50"></text></g><g><title>rayon_core::join::join_context (14 samples, 0.04%)</title><rect x="82.0240%" y="1285" width="0.0402%" height="15" fill="rgb(210,9,12)" fg:x="28546" fg:w="14"/><text x="82.2740%" y="1295.50"></text></g><g><title>rayon_core::registry::in_worker (14 samples, 0.04%)</title><rect x="82.0240%" y="1269" width="0.0402%" height="15" fill="rgb(235,99,33)" fg:x="28546" fg:w="14"/><text x="82.2740%" y="1279.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (14 samples, 0.04%)</title><rect x="82.0240%" y="1253" width="0.0402%" height="15" fill="rgb(230,11,38)" fg:x="28546" fg:w="14"/><text x="82.2740%" y="1263.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (9 samples, 0.03%)</title><rect x="82.0384%" y="1237" width="0.0259%" height="15" fill="rgb(217,129,0)" fg:x="28551" fg:w="9"/><text x="82.2884%" y="1247.50"></text></g><g><title>std::panic::catch_unwind (9 samples, 0.03%)</title><rect x="82.0384%" y="1221" width="0.0259%" height="15" fill="rgb(222,198,4)" fg:x="28551" fg:w="9"/><text x="82.2884%" y="1231.50"></text></g><g><title>std::panicking::try (9 samples, 0.03%)</title><rect x="82.0384%" y="1205" width="0.0259%" height="15" fill="rgb(246,170,27)" fg:x="28551" fg:w="9"/><text x="82.2884%" y="1215.50"></text></g><g><title>std::panicking::try::do_call (9 samples, 0.03%)</title><rect x="82.0384%" y="1189" width="0.0259%" height="15" fill="rgb(229,17,28)" fg:x="28551" fg:w="9"/><text x="82.2884%" y="1199.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (9 samples, 0.03%)</title><rect x="82.0384%" y="1173" width="0.0259%" height="15" fill="rgb(233,198,48)" fg:x="28551" fg:w="9"/><text x="82.2884%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (9 samples, 0.03%)</title><rect x="82.0384%" y="1157" width="0.0259%" height="15" fill="rgb(238,103,23)" fg:x="28551" fg:w="9"/><text x="82.2884%" y="1167.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (9 samples, 0.03%)</title><rect x="82.0384%" y="1141" width="0.0259%" height="15" fill="rgb(206,91,41)" fg:x="28551" fg:w="9"/><text x="82.2884%" y="1151.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.03%)</title><rect x="82.0384%" y="1125" width="0.0259%" height="15" fill="rgb(227,34,25)" fg:x="28551" fg:w="9"/><text x="82.2884%" y="1135.50"></text></g><g><title>rayon_core::join::join_context (8 samples, 0.02%)</title><rect x="82.0413%" y="1109" width="0.0230%" height="15" fill="rgb(210,110,44)" fg:x="28552" fg:w="8"/><text x="82.2913%" y="1119.50"></text></g><g><title>rayon_core::registry::in_worker (8 samples, 0.02%)</title><rect x="82.0413%" y="1093" width="0.0230%" height="15" fill="rgb(216,189,8)" fg:x="28552" fg:w="8"/><text x="82.2913%" y="1103.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (8 samples, 0.02%)</title><rect x="82.0413%" y="1077" width="0.0230%" height="15" fill="rgb(234,9,46)" fg:x="28552" fg:w="8"/><text x="82.2913%" y="1087.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (5 samples, 0.01%)</title><rect x="82.0499%" y="1061" width="0.0144%" height="15" fill="rgb(251,200,5)" fg:x="28555" fg:w="5"/><text x="82.2999%" y="1071.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.01%)</title><rect x="82.0499%" y="1045" width="0.0144%" height="15" fill="rgb(238,165,37)" fg:x="28555" fg:w="5"/><text x="82.2999%" y="1055.50"></text></g><g><title>std::panicking::try (5 samples, 0.01%)</title><rect x="82.0499%" y="1029" width="0.0144%" height="15" fill="rgb(232,77,38)" fg:x="28555" fg:w="5"/><text x="82.2999%" y="1039.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.01%)</title><rect x="82.0499%" y="1013" width="0.0144%" height="15" fill="rgb(253,179,33)" fg:x="28555" fg:w="5"/><text x="82.2999%" y="1023.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5 samples, 0.01%)</title><rect x="82.0499%" y="997" width="0.0144%" height="15" fill="rgb(240,13,35)" fg:x="28555" fg:w="5"/><text x="82.2999%" y="1007.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (5 samples, 0.01%)</title><rect x="82.0499%" y="981" width="0.0144%" height="15" fill="rgb(242,150,49)" fg:x="28555" fg:w="5"/><text x="82.2999%" y="991.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (5 samples, 0.01%)</title><rect x="82.0499%" y="965" width="0.0144%" height="15" fill="rgb(237,176,28)" fg:x="28555" fg:w="5"/><text x="82.2999%" y="975.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (5 samples, 0.01%)</title><rect x="82.0499%" y="949" width="0.0144%" height="15" fill="rgb(214,176,33)" fg:x="28555" fg:w="5"/><text x="82.2999%" y="959.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.01%)</title><rect x="82.0528%" y="933" width="0.0115%" height="15" fill="rgb(214,25,12)" fg:x="28556" fg:w="4"/><text x="82.3028%" y="943.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.01%)</title><rect x="82.0528%" y="917" width="0.0115%" height="15" fill="rgb(238,190,20)" fg:x="28556" fg:w="4"/><text x="82.3028%" y="927.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.01%)</title><rect x="82.0528%" y="901" width="0.0115%" height="15" fill="rgb(208,11,19)" fg:x="28556" fg:w="4"/><text x="82.3028%" y="911.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (11 samples, 0.03%)</title><rect x="82.0642%" y="1397" width="0.0316%" height="15" fill="rgb(239,90,4)" fg:x="28560" fg:w="11"/><text x="82.3142%" y="1407.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (11 samples, 0.03%)</title><rect x="82.0642%" y="1381" width="0.0316%" height="15" fill="rgb(248,110,3)" fg:x="28560" fg:w="11"/><text x="82.3142%" y="1391.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (11 samples, 0.03%)</title><rect x="82.0642%" y="1365" width="0.0316%" height="15" fill="rgb(210,41,30)" fg:x="28560" fg:w="11"/><text x="82.3142%" y="1375.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (11 samples, 0.03%)</title><rect x="82.0642%" y="1349" width="0.0316%" height="15" fill="rgb(239,36,8)" fg:x="28560" fg:w="11"/><text x="82.3142%" y="1359.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.03%)</title><rect x="82.0642%" y="1333" width="0.0316%" height="15" fill="rgb(237,201,47)" fg:x="28560" fg:w="11"/><text x="82.3142%" y="1343.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (11 samples, 0.03%)</title><rect x="82.0642%" y="1317" width="0.0316%" height="15" fill="rgb(224,140,29)" fg:x="28560" fg:w="11"/><text x="82.3142%" y="1327.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (11 samples, 0.03%)</title><rect x="82.0642%" y="1301" width="0.0316%" height="15" fill="rgb(231,209,17)" fg:x="28560" fg:w="11"/><text x="82.3142%" y="1311.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (11 samples, 0.03%)</title><rect x="82.0642%" y="1285" width="0.0316%" height="15" fill="rgb(249,196,1)" fg:x="28560" fg:w="11"/><text x="82.3142%" y="1295.50"></text></g><g><title>aptos_executor::components::apply_chunk_output::ApplyChunkOutput::assemble_ledger_diff::{{closure}} (11 samples, 0.03%)</title><rect x="82.0642%" y="1269" width="0.0316%" height="15" fill="rgb(223,207,51)" fg:x="28560" fg:w="11"/><text x="82.3142%" y="1279.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSet as aptos_crypto::hash::CryptoHash&gt;::hash (11 samples, 0.03%)</title><rect x="82.0642%" y="1253" width="0.0316%" height="15" fill="rgb(210,14,40)" fg:x="28560" fg:w="11"/><text x="82.3142%" y="1263.50"></text></g><g><title>bcs::ser::serialize_into (11 samples, 0.03%)</title><rect x="82.0642%" y="1237" width="0.0316%" height="15" fill="rgb(250,20,52)" fg:x="28560" fg:w="11"/><text x="82.3142%" y="1247.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (11 samples, 0.03%)</title><rect x="82.0642%" y="1221" width="0.0316%" height="15" fill="rgb(241,46,11)" fg:x="28560" fg:w="11"/><text x="82.3142%" y="1231.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSet&gt;::serialize (11 samples, 0.03%)</title><rect x="82.0642%" y="1205" width="0.0316%" height="15" fill="rgb(219,105,5)" fg:x="28560" fg:w="11"/><text x="82.3142%" y="1215.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (11 samples, 0.03%)</title><rect x="82.0642%" y="1189" width="0.0316%" height="15" fill="rgb(252,77,35)" fg:x="28560" fg:w="11"/><text x="82.3142%" y="1199.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetV0&gt;::serialize (11 samples, 0.03%)</title><rect x="82.0642%" y="1173" width="0.0316%" height="15" fill="rgb(243,119,2)" fg:x="28560" fg:w="11"/><text x="82.3142%" y="1183.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (11 samples, 0.03%)</title><rect x="82.0642%" y="1157" width="0.0316%" height="15" fill="rgb(206,82,28)" fg:x="28560" fg:w="11"/><text x="82.3142%" y="1167.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetMut&gt;::serialize (11 samples, 0.03%)</title><rect x="82.0642%" y="1141" width="0.0316%" height="15" fill="rgb(227,120,12)" fg:x="28560" fg:w="11"/><text x="82.3142%" y="1151.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (11 samples, 0.03%)</title><rect x="82.0642%" y="1125" width="0.0316%" height="15" fill="rgb(229,134,41)" fg:x="28560" fg:w="11"/><text x="82.3142%" y="1135.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::serialize (11 samples, 0.03%)</title><rect x="82.0642%" y="1109" width="0.0316%" height="15" fill="rgb(239,96,32)" fg:x="28560" fg:w="11"/><text x="82.3142%" y="1119.50"></text></g><g><title>serde::ser::Serializer::collect_map (11 samples, 0.03%)</title><rect x="82.0642%" y="1093" width="0.0316%" height="15" fill="rgb(225,46,27)" fg:x="28560" fg:w="11"/><text x="82.3142%" y="1103.50"></text></g><g><title>&lt;bcs::ser::MapSerializer&lt;W&gt; as serde::ser::SerializeMap&gt;::end (11 samples, 0.03%)</title><rect x="82.0642%" y="1077" width="0.0316%" height="15" fill="rgb(215,168,2)" fg:x="28560" fg:w="11"/><text x="82.3142%" y="1087.50"></text></g><g><title>std::io::Write::write_all (11 samples, 0.03%)</title><rect x="82.0642%" y="1061" width="0.0316%" height="15" fill="rgb(207,170,52)" fg:x="28560" fg:w="11"/><text x="82.3142%" y="1071.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSetHasher as std::io::Write&gt;::write (11 samples, 0.03%)</title><rect x="82.0642%" y="1045" width="0.0316%" height="15" fill="rgb(237,198,36)" fg:x="28560" fg:w="11"/><text x="82.3142%" y="1055.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (11 samples, 0.03%)</title><rect x="82.0642%" y="1029" width="0.0316%" height="15" fill="rgb(213,27,14)" fg:x="28560" fg:w="11"/><text x="82.3142%" y="1039.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (11 samples, 0.03%)</title><rect x="82.0642%" y="1013" width="0.0316%" height="15" fill="rgb(218,77,5)" fg:x="28560" fg:w="11"/><text x="82.3142%" y="1023.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (11 samples, 0.03%)</title><rect x="82.0642%" y="997" width="0.0316%" height="15" fill="rgb(230,219,39)" fg:x="28560" fg:w="11"/><text x="82.3142%" y="1007.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (11 samples, 0.03%)</title><rect x="82.0642%" y="981" width="0.0316%" height="15" fill="rgb(245,177,7)" fg:x="28560" fg:w="11"/><text x="82.3142%" y="991.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.01%)</title><rect x="82.0844%" y="965" width="0.0115%" height="15" fill="rgb(246,44,46)" fg:x="28567" fg:w="4"/><text x="82.3344%" y="975.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (4 samples, 0.01%)</title><rect x="82.0959%" y="1285" width="0.0115%" height="15" fill="rgb(207,173,15)" fg:x="28571" fg:w="4"/><text x="82.3459%" y="1295.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (4 samples, 0.01%)</title><rect x="82.0959%" y="1269" width="0.0115%" height="15" fill="rgb(245,170,50)" fg:x="28571" fg:w="4"/><text x="82.3459%" y="1279.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (4 samples, 0.01%)</title><rect x="82.0959%" y="1253" width="0.0115%" height="15" fill="rgb(233,156,21)" fg:x="28571" fg:w="4"/><text x="82.3459%" y="1263.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (4 samples, 0.01%)</title><rect x="82.0959%" y="1237" width="0.0115%" height="15" fill="rgb(253,146,27)" fg:x="28571" fg:w="4"/><text x="82.3459%" y="1247.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="82.0959%" y="1221" width="0.0115%" height="15" fill="rgb(247,66,29)" fg:x="28571" fg:w="4"/><text x="82.3459%" y="1231.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4 samples, 0.01%)</title><rect x="82.0959%" y="1205" width="0.0115%" height="15" fill="rgb(218,207,26)" fg:x="28571" fg:w="4"/><text x="82.3459%" y="1215.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (4 samples, 0.01%)</title><rect x="82.0959%" y="1189" width="0.0115%" height="15" fill="rgb(234,93,26)" fg:x="28571" fg:w="4"/><text x="82.3459%" y="1199.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (4 samples, 0.01%)</title><rect x="82.0959%" y="1173" width="0.0115%" height="15" fill="rgb(214,75,48)" fg:x="28571" fg:w="4"/><text x="82.3459%" y="1183.50"></text></g><g><title>aptos_executor::components::apply_chunk_output::ApplyChunkOutput::assemble_ledger_diff::{{closure}} (4 samples, 0.01%)</title><rect x="82.0959%" y="1157" width="0.0115%" height="15" fill="rgb(229,119,22)" fg:x="28571" fg:w="4"/><text x="82.3459%" y="1167.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSet as aptos_crypto::hash::CryptoHash&gt;::hash (4 samples, 0.01%)</title><rect x="82.0959%" y="1141" width="0.0115%" height="15" fill="rgb(226,153,19)" fg:x="28571" fg:w="4"/><text x="82.3459%" y="1151.50"></text></g><g><title>bcs::ser::serialize_into (4 samples, 0.01%)</title><rect x="82.0959%" y="1125" width="0.0115%" height="15" fill="rgb(220,204,36)" fg:x="28571" fg:w="4"/><text x="82.3459%" y="1135.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (4 samples, 0.01%)</title><rect x="82.0959%" y="1109" width="0.0115%" height="15" fill="rgb(253,181,43)" fg:x="28571" fg:w="4"/><text x="82.3459%" y="1119.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSet&gt;::serialize (4 samples, 0.01%)</title><rect x="82.0959%" y="1093" width="0.0115%" height="15" fill="rgb(211,41,51)" fg:x="28571" fg:w="4"/><text x="82.3459%" y="1103.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (4 samples, 0.01%)</title><rect x="82.0959%" y="1077" width="0.0115%" height="15" fill="rgb(207,215,0)" fg:x="28571" fg:w="4"/><text x="82.3459%" y="1087.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetV0&gt;::serialize (4 samples, 0.01%)</title><rect x="82.0959%" y="1061" width="0.0115%" height="15" fill="rgb(212,153,10)" fg:x="28571" fg:w="4"/><text x="82.3459%" y="1071.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (4 samples, 0.01%)</title><rect x="82.0959%" y="1045" width="0.0115%" height="15" fill="rgb(251,171,36)" fg:x="28571" fg:w="4"/><text x="82.3459%" y="1055.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetMut&gt;::serialize (4 samples, 0.01%)</title><rect x="82.0959%" y="1029" width="0.0115%" height="15" fill="rgb(225,219,41)" fg:x="28571" fg:w="4"/><text x="82.3459%" y="1039.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (4 samples, 0.01%)</title><rect x="82.0959%" y="1013" width="0.0115%" height="15" fill="rgb(208,200,1)" fg:x="28571" fg:w="4"/><text x="82.3459%" y="1023.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::serialize (4 samples, 0.01%)</title><rect x="82.0959%" y="997" width="0.0115%" height="15" fill="rgb(206,75,47)" fg:x="28571" fg:w="4"/><text x="82.3459%" y="1007.50"></text></g><g><title>serde::ser::Serializer::collect_map (4 samples, 0.01%)</title><rect x="82.0959%" y="981" width="0.0115%" height="15" fill="rgb(248,3,16)" fg:x="28571" fg:w="4"/><text x="82.3459%" y="991.50"></text></g><g><title>&lt;bcs::ser::MapSerializer&lt;W&gt; as serde::ser::SerializeMap&gt;::end (4 samples, 0.01%)</title><rect x="82.0959%" y="965" width="0.0115%" height="15" fill="rgb(242,157,36)" fg:x="28571" fg:w="4"/><text x="82.3459%" y="975.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.01%)</title><rect x="82.0959%" y="949" width="0.0115%" height="15" fill="rgb(215,175,11)" fg:x="28571" fg:w="4"/><text x="82.3459%" y="959.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSetHasher as std::io::Write&gt;::write (4 samples, 0.01%)</title><rect x="82.0959%" y="933" width="0.0115%" height="15" fill="rgb(252,222,22)" fg:x="28571" fg:w="4"/><text x="82.3459%" y="943.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (4 samples, 0.01%)</title><rect x="82.0959%" y="917" width="0.0115%" height="15" fill="rgb(250,121,35)" fg:x="28571" fg:w="4"/><text x="82.3459%" y="927.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (4 samples, 0.01%)</title><rect x="82.0959%" y="901" width="0.0115%" height="15" fill="rgb(233,120,49)" fg:x="28571" fg:w="4"/><text x="82.3459%" y="911.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (4 samples, 0.01%)</title><rect x="82.0959%" y="885" width="0.0115%" height="15" fill="rgb(205,201,14)" fg:x="28571" fg:w="4"/><text x="82.3459%" y="895.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (4 samples, 0.01%)</title><rect x="82.0959%" y="869" width="0.0115%" height="15" fill="rgb(219,58,45)" fg:x="28571" fg:w="4"/><text x="82.3459%" y="879.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (9 samples, 0.03%)</title><rect x="82.0959%" y="1349" width="0.0259%" height="15" fill="rgb(251,65,12)" fg:x="28571" fg:w="9"/><text x="82.3459%" y="1359.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (9 samples, 0.03%)</title><rect x="82.0959%" y="1333" width="0.0259%" height="15" fill="rgb(224,47,31)" fg:x="28571" fg:w="9"/><text x="82.3459%" y="1343.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (9 samples, 0.03%)</title><rect x="82.0959%" y="1317" width="0.0259%" height="15" fill="rgb(233,74,26)" fg:x="28571" fg:w="9"/><text x="82.3459%" y="1327.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.03%)</title><rect x="82.0959%" y="1301" width="0.0259%" height="15" fill="rgb(231,211,31)" fg:x="28571" fg:w="9"/><text x="82.3459%" y="1311.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (5 samples, 0.01%)</title><rect x="82.1074%" y="1285" width="0.0144%" height="15" fill="rgb(239,167,5)" fg:x="28575" fg:w="5"/><text x="82.3574%" y="1295.50"></text></g><g><title>&lt;rayon::iter::flat_map_iter::FlatMapIterFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (5 samples, 0.01%)</title><rect x="82.1074%" y="1269" width="0.0144%" height="15" fill="rgb(241,85,0)" fg:x="28575" fg:w="5"/><text x="82.3574%" y="1279.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (5 samples, 0.01%)</title><rect x="82.1074%" y="1253" width="0.0144%" height="15" fill="rgb(229,130,21)" fg:x="28575" fg:w="5"/><text x="82.3574%" y="1263.50"></text></g><g><title>&lt;rayon::iter::while_some::WhileSomeFolder&lt;C&gt; as rayon::iter::plumbing::Folder&lt;core::option::Option&lt;T&gt;&gt;&gt;::consume_iter (5 samples, 0.01%)</title><rect x="82.1074%" y="1237" width="0.0144%" height="15" fill="rgb(254,84,49)" fg:x="28575" fg:w="5"/><text x="82.3574%" y="1247.50"></text></g><g><title>&lt;rayon::iter::noop::NoopConsumer as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (5 samples, 0.01%)</title><rect x="82.1074%" y="1221" width="0.0144%" height="15" fill="rgb(235,85,21)" fg:x="28575" fg:w="5"/><text x="82.3574%" y="1231.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (5 samples, 0.01%)</title><rect x="82.1074%" y="1205" width="0.0144%" height="15" fill="rgb(246,128,52)" fg:x="28575" fg:w="5"/><text x="82.3574%" y="1215.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.01%)</title><rect x="82.1074%" y="1189" width="0.0144%" height="15" fill="rgb(243,114,49)" fg:x="28575" fg:w="5"/><text x="82.3574%" y="1199.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.01%)</title><rect x="82.1074%" y="1173" width="0.0144%" height="15" fill="rgb(240,224,22)" fg:x="28575" fg:w="5"/><text x="82.3574%" y="1183.50"></text></g><g><title>&lt;core::iter::adapters::take_while::TakeWhile&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.01%)</title><rect x="82.1074%" y="1157" width="0.0144%" height="15" fill="rgb(247,201,52)" fg:x="28575" fg:w="5"/><text x="82.3574%" y="1167.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.01%)</title><rect x="82.1074%" y="1141" width="0.0144%" height="15" fill="rgb(231,70,45)" fg:x="28575" fg:w="5"/><text x="82.3574%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlatMap&lt;I,U,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.01%)</title><rect x="82.1074%" y="1125" width="0.0144%" height="15" fill="rgb(217,215,20)" fg:x="28575" fg:w="5"/><text x="82.3574%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.01%)</title><rect x="82.1074%" y="1109" width="0.0144%" height="15" fill="rgb(226,170,30)" fg:x="28575" fg:w="5"/><text x="82.3574%" y="1119.50"></text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_try_fold (5 samples, 0.01%)</title><rect x="82.1074%" y="1093" width="0.0144%" height="15" fill="rgb(220,190,43)" fg:x="28575" fg:w="5"/><text x="82.3574%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.01%)</title><rect x="82.1074%" y="1077" width="0.0144%" height="15" fill="rgb(218,20,18)" fg:x="28575" fg:w="5"/><text x="82.3574%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::try_fold (5 samples, 0.01%)</title><rect x="82.1074%" y="1061" width="0.0144%" height="15" fill="rgb(245,37,26)" fg:x="28575" fg:w="5"/><text x="82.3574%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.01%)</title><rect x="82.1074%" y="1045" width="0.0144%" height="15" fill="rgb(241,127,29)" fg:x="28575" fg:w="5"/><text x="82.3574%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.01%)</title><rect x="82.1074%" y="1029" width="0.0144%" height="15" fill="rgb(241,33,26)" fg:x="28575" fg:w="5"/><text x="82.3574%" y="1039.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (5 samples, 0.01%)</title><rect x="82.1074%" y="1013" width="0.0144%" height="15" fill="rgb(220,106,21)" fg:x="28575" fg:w="5"/><text x="82.3574%" y="1023.50"></text></g><g><title>core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt;::iter_try_fold::flatten::{{closure}} (5 samples, 0.01%)</title><rect x="82.1074%" y="997" width="0.0144%" height="15" fill="rgb(225,125,35)" fg:x="28575" fg:w="5"/><text x="82.3574%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::flatten::{{closure}} (5 samples, 0.01%)</title><rect x="82.1074%" y="981" width="0.0144%" height="15" fill="rgb(248,80,22)" fg:x="28575" fg:w="5"/><text x="82.3574%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.01%)</title><rect x="82.1074%" y="965" width="0.0144%" height="15" fill="rgb(231,117,39)" fg:x="28575" fg:w="5"/><text x="82.3574%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.01%)</title><rect x="82.1074%" y="949" width="0.0144%" height="15" fill="rgb(239,183,16)" fg:x="28575" fg:w="5"/><text x="82.3574%" y="959.50"></text></g><g><title>core::iter::adapters::map::map_try_fold::{{closure}} (5 samples, 0.01%)</title><rect x="82.1074%" y="933" width="0.0144%" height="15" fill="rgb(221,61,19)" fg:x="28575" fg:w="5"/><text x="82.3574%" y="943.50"></text></g><g><title>aptos_db::state_store::StateStore::put_value_sets::{{closure}}::{{closure}} (5 samples, 0.01%)</title><rect x="82.1074%" y="917" width="0.0144%" height="15" fill="rgb(239,196,44)" fg:x="28575" fg:w="5"/><text x="82.3574%" y="927.50"></text></g><g><title>aptos_schemadb::SchemaBatch::put (5 samples, 0.01%)</title><rect x="82.1074%" y="901" width="0.0144%" height="15" fill="rgb(206,113,19)" fg:x="28575" fg:w="5"/><text x="82.3574%" y="911.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (7 samples, 0.02%)</title><rect x="82.1303%" y="1221" width="0.0201%" height="15" fill="rgb(245,114,12)" fg:x="28583" fg:w="7"/><text x="82.3803%" y="1231.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (7 samples, 0.02%)</title><rect x="82.1303%" y="1205" width="0.0201%" height="15" fill="rgb(247,89,39)" fg:x="28583" fg:w="7"/><text x="82.3803%" y="1215.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (7 samples, 0.02%)</title><rect x="82.1303%" y="1189" width="0.0201%" height="15" fill="rgb(213,85,14)" fg:x="28583" fg:w="7"/><text x="82.3803%" y="1199.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (7 samples, 0.02%)</title><rect x="82.1303%" y="1173" width="0.0201%" height="15" fill="rgb(249,206,33)" fg:x="28583" fg:w="7"/><text x="82.3803%" y="1183.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.02%)</title><rect x="82.1303%" y="1157" width="0.0201%" height="15" fill="rgb(235,167,47)" fg:x="28583" fg:w="7"/><text x="82.3803%" y="1167.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (7 samples, 0.02%)</title><rect x="82.1303%" y="1141" width="0.0201%" height="15" fill="rgb(217,177,16)" fg:x="28583" fg:w="7"/><text x="82.3803%" y="1151.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (7 samples, 0.02%)</title><rect x="82.1303%" y="1125" width="0.0201%" height="15" fill="rgb(250,228,29)" fg:x="28583" fg:w="7"/><text x="82.3803%" y="1135.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (7 samples, 0.02%)</title><rect x="82.1303%" y="1109" width="0.0201%" height="15" fill="rgb(216,195,42)" fg:x="28583" fg:w="7"/><text x="82.3803%" y="1119.50"></text></g><g><title>aptos_executor::components::apply_chunk_output::ApplyChunkOutput::assemble_ledger_diff::{{closure}} (7 samples, 0.02%)</title><rect x="82.1303%" y="1093" width="0.0201%" height="15" fill="rgb(232,192,32)" fg:x="28583" fg:w="7"/><text x="82.3803%" y="1103.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSet as aptos_crypto::hash::CryptoHash&gt;::hash (7 samples, 0.02%)</title><rect x="82.1303%" y="1077" width="0.0201%" height="15" fill="rgb(211,8,47)" fg:x="28583" fg:w="7"/><text x="82.3803%" y="1087.50"></text></g><g><title>bcs::ser::serialize_into (7 samples, 0.02%)</title><rect x="82.1303%" y="1061" width="0.0201%" height="15" fill="rgb(251,201,9)" fg:x="28583" fg:w="7"/><text x="82.3803%" y="1071.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (7 samples, 0.02%)</title><rect x="82.1303%" y="1045" width="0.0201%" height="15" fill="rgb(206,185,47)" fg:x="28583" fg:w="7"/><text x="82.3803%" y="1055.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSet&gt;::serialize (7 samples, 0.02%)</title><rect x="82.1303%" y="1029" width="0.0201%" height="15" fill="rgb(245,54,32)" fg:x="28583" fg:w="7"/><text x="82.3803%" y="1039.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (7 samples, 0.02%)</title><rect x="82.1303%" y="1013" width="0.0201%" height="15" fill="rgb(208,1,8)" fg:x="28583" fg:w="7"/><text x="82.3803%" y="1023.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetV0&gt;::serialize (7 samples, 0.02%)</title><rect x="82.1303%" y="997" width="0.0201%" height="15" fill="rgb(228,57,24)" fg:x="28583" fg:w="7"/><text x="82.3803%" y="1007.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (7 samples, 0.02%)</title><rect x="82.1303%" y="981" width="0.0201%" height="15" fill="rgb(251,24,8)" fg:x="28583" fg:w="7"/><text x="82.3803%" y="991.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetMut&gt;::serialize (7 samples, 0.02%)</title><rect x="82.1303%" y="965" width="0.0201%" height="15" fill="rgb(236,196,50)" fg:x="28583" fg:w="7"/><text x="82.3803%" y="975.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (7 samples, 0.02%)</title><rect x="82.1303%" y="949" width="0.0201%" height="15" fill="rgb(246,222,29)" fg:x="28583" fg:w="7"/><text x="82.3803%" y="959.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::serialize (7 samples, 0.02%)</title><rect x="82.1303%" y="933" width="0.0201%" height="15" fill="rgb(211,34,40)" fg:x="28583" fg:w="7"/><text x="82.3803%" y="943.50"></text></g><g><title>serde::ser::Serializer::collect_map (7 samples, 0.02%)</title><rect x="82.1303%" y="917" width="0.0201%" height="15" fill="rgb(210,66,51)" fg:x="28583" fg:w="7"/><text x="82.3803%" y="927.50"></text></g><g><title>&lt;bcs::ser::MapSerializer&lt;W&gt; as serde::ser::SerializeMap&gt;::end (7 samples, 0.02%)</title><rect x="82.1303%" y="901" width="0.0201%" height="15" fill="rgb(250,56,43)" fg:x="28583" fg:w="7"/><text x="82.3803%" y="911.50"></text></g><g><title>std::io::Write::write_all (7 samples, 0.02%)</title><rect x="82.1303%" y="885" width="0.0201%" height="15" fill="rgb(240,111,50)" fg:x="28583" fg:w="7"/><text x="82.3803%" y="895.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSetHasher as std::io::Write&gt;::write (7 samples, 0.02%)</title><rect x="82.1303%" y="869" width="0.0201%" height="15" fill="rgb(209,117,13)" fg:x="28583" fg:w="7"/><text x="82.3803%" y="879.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (7 samples, 0.02%)</title><rect x="82.1303%" y="853" width="0.0201%" height="15" fill="rgb(232,164,45)" fg:x="28583" fg:w="7"/><text x="82.3803%" y="863.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (7 samples, 0.02%)</title><rect x="82.1303%" y="837" width="0.0201%" height="15" fill="rgb(205,69,32)" fg:x="28583" fg:w="7"/><text x="82.3803%" y="847.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (7 samples, 0.02%)</title><rect x="82.1303%" y="821" width="0.0201%" height="15" fill="rgb(240,147,45)" fg:x="28583" fg:w="7"/><text x="82.3803%" y="831.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (7 samples, 0.02%)</title><rect x="82.1303%" y="805" width="0.0201%" height="15" fill="rgb(221,94,48)" fg:x="28583" fg:w="7"/><text x="82.3803%" y="815.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (634 samples, 1.82%)</title><rect x="80.3373%" y="2325" width="1.8217%" height="15" fill="rgb(249,209,17)" fg:x="27959" fg:w="634"/><text x="80.5873%" y="2335.50">r..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (634 samples, 1.82%)</title><rect x="80.3373%" y="2309" width="1.8217%" height="15" fill="rgb(228,57,28)" fg:x="27959" fg:w="634"/><text x="80.5873%" y="2319.50">r..</text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (634 samples, 1.82%)</title><rect x="80.3373%" y="2293" width="1.8217%" height="15" fill="rgb(250,133,26)" fg:x="27959" fg:w="634"/><text x="80.5873%" y="2303.50">r..</text></g><g><title>rayon_core::join::join_context (611 samples, 1.76%)</title><rect x="80.4034%" y="2277" width="1.7556%" height="15" fill="rgb(254,15,16)" fg:x="27982" fg:w="611"/><text x="80.6534%" y="2287.50"></text></g><g><title>rayon_core::registry::in_worker (611 samples, 1.76%)</title><rect x="80.4034%" y="2261" width="1.7556%" height="15" fill="rgb(209,147,42)" fg:x="27982" fg:w="611"/><text x="80.6534%" y="2271.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (611 samples, 1.76%)</title><rect x="80.4034%" y="2245" width="1.7556%" height="15" fill="rgb(208,5,29)" fg:x="27982" fg:w="611"/><text x="80.6534%" y="2255.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (412 samples, 1.18%)</title><rect x="80.9752%" y="2229" width="1.1838%" height="15" fill="rgb(250,73,31)" fg:x="28181" fg:w="412"/><text x="81.2252%" y="2239.50"></text></g><g><title>std::panic::catch_unwind (412 samples, 1.18%)</title><rect x="80.9752%" y="2213" width="1.1838%" height="15" fill="rgb(238,45,10)" fg:x="28181" fg:w="412"/><text x="81.2252%" y="2223.50"></text></g><g><title>std::panicking::try (412 samples, 1.18%)</title><rect x="80.9752%" y="2197" width="1.1838%" height="15" fill="rgb(214,104,5)" fg:x="28181" fg:w="412"/><text x="81.2252%" y="2207.50"></text></g><g><title>std::panicking::try::do_call (412 samples, 1.18%)</title><rect x="80.9752%" y="2181" width="1.1838%" height="15" fill="rgb(242,217,19)" fg:x="28181" fg:w="412"/><text x="81.2252%" y="2191.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (412 samples, 1.18%)</title><rect x="80.9752%" y="2165" width="1.1838%" height="15" fill="rgb(246,113,27)" fg:x="28181" fg:w="412"/><text x="81.2252%" y="2175.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (412 samples, 1.18%)</title><rect x="80.9752%" y="2149" width="1.1838%" height="15" fill="rgb(221,34,27)" fg:x="28181" fg:w="412"/><text x="81.2252%" y="2159.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (412 samples, 1.18%)</title><rect x="80.9752%" y="2133" width="1.1838%" height="15" fill="rgb(246,109,6)" fg:x="28181" fg:w="412"/><text x="81.2252%" y="2143.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (412 samples, 1.18%)</title><rect x="80.9752%" y="2117" width="1.1838%" height="15" fill="rgb(217,12,25)" fg:x="28181" fg:w="412"/><text x="81.2252%" y="2127.50"></text></g><g><title>rayon_core::join::join_context (383 samples, 1.10%)</title><rect x="81.0586%" y="2101" width="1.1005%" height="15" fill="rgb(250,195,5)" fg:x="28210" fg:w="383"/><text x="81.3086%" y="2111.50"></text></g><g><title>rayon_core::registry::in_worker (383 samples, 1.10%)</title><rect x="81.0586%" y="2085" width="1.1005%" height="15" fill="rgb(244,140,45)" fg:x="28210" fg:w="383"/><text x="81.3086%" y="2095.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (383 samples, 1.10%)</title><rect x="81.0586%" y="2069" width="1.1005%" height="15" fill="rgb(230,64,14)" fg:x="28210" fg:w="383"/><text x="81.3086%" y="2079.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (260 samples, 0.75%)</title><rect x="81.4120%" y="2053" width="0.7471%" height="15" fill="rgb(206,27,27)" fg:x="28333" fg:w="260"/><text x="81.6620%" y="2063.50"></text></g><g><title>std::panic::catch_unwind (260 samples, 0.75%)</title><rect x="81.4120%" y="2037" width="0.7471%" height="15" fill="rgb(230,14,50)" fg:x="28333" fg:w="260"/><text x="81.6620%" y="2047.50"></text></g><g><title>std::panicking::try (260 samples, 0.75%)</title><rect x="81.4120%" y="2021" width="0.7471%" height="15" fill="rgb(237,172,14)" fg:x="28333" fg:w="260"/><text x="81.6620%" y="2031.50"></text></g><g><title>std::panicking::try::do_call (260 samples, 0.75%)</title><rect x="81.4120%" y="2005" width="0.7471%" height="15" fill="rgb(209,25,21)" fg:x="28333" fg:w="260"/><text x="81.6620%" y="2015.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (260 samples, 0.75%)</title><rect x="81.4120%" y="1989" width="0.7471%" height="15" fill="rgb(248,148,22)" fg:x="28333" fg:w="260"/><text x="81.6620%" y="1999.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (260 samples, 0.75%)</title><rect x="81.4120%" y="1973" width="0.7471%" height="15" fill="rgb(234,100,22)" fg:x="28333" fg:w="260"/><text x="81.6620%" y="1983.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (260 samples, 0.75%)</title><rect x="81.4120%" y="1957" width="0.7471%" height="15" fill="rgb(210,20,30)" fg:x="28333" fg:w="260"/><text x="81.6620%" y="1967.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (260 samples, 0.75%)</title><rect x="81.4120%" y="1941" width="0.7471%" height="15" fill="rgb(232,58,0)" fg:x="28333" fg:w="260"/><text x="81.6620%" y="1951.50"></text></g><g><title>rayon_core::join::join_context (238 samples, 0.68%)</title><rect x="81.4752%" y="1925" width="0.6839%" height="15" fill="rgb(221,68,13)" fg:x="28355" fg:w="238"/><text x="81.7252%" y="1935.50"></text></g><g><title>rayon_core::registry::in_worker (238 samples, 0.68%)</title><rect x="81.4752%" y="1909" width="0.6839%" height="15" fill="rgb(231,194,11)" fg:x="28355" fg:w="238"/><text x="81.7252%" y="1919.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (238 samples, 0.68%)</title><rect x="81.4752%" y="1893" width="0.6839%" height="15" fill="rgb(235,51,41)" fg:x="28355" fg:w="238"/><text x="81.7252%" y="1903.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (155 samples, 0.45%)</title><rect x="81.7137%" y="1877" width="0.4454%" height="15" fill="rgb(240,50,32)" fg:x="28438" fg:w="155"/><text x="81.9637%" y="1887.50"></text></g><g><title>std::panic::catch_unwind (155 samples, 0.45%)</title><rect x="81.7137%" y="1861" width="0.4454%" height="15" fill="rgb(240,185,36)" fg:x="28438" fg:w="155"/><text x="81.9637%" y="1871.50"></text></g><g><title>std::panicking::try (155 samples, 0.45%)</title><rect x="81.7137%" y="1845" width="0.4454%" height="15" fill="rgb(211,168,15)" fg:x="28438" fg:w="155"/><text x="81.9637%" y="1855.50"></text></g><g><title>std::panicking::try::do_call (155 samples, 0.45%)</title><rect x="81.7137%" y="1829" width="0.4454%" height="15" fill="rgb(221,70,0)" fg:x="28438" fg:w="155"/><text x="81.9637%" y="1839.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (155 samples, 0.45%)</title><rect x="81.7137%" y="1813" width="0.4454%" height="15" fill="rgb(205,21,33)" fg:x="28438" fg:w="155"/><text x="81.9637%" y="1823.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (155 samples, 0.45%)</title><rect x="81.7137%" y="1797" width="0.4454%" height="15" fill="rgb(225,106,10)" fg:x="28438" fg:w="155"/><text x="81.9637%" y="1807.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (155 samples, 0.45%)</title><rect x="81.7137%" y="1781" width="0.4454%" height="15" fill="rgb(236,200,50)" fg:x="28438" fg:w="155"/><text x="81.9637%" y="1791.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (155 samples, 0.45%)</title><rect x="81.7137%" y="1765" width="0.4454%" height="15" fill="rgb(249,93,23)" fg:x="28438" fg:w="155"/><text x="81.9637%" y="1775.50"></text></g><g><title>rayon_core::join::join_context (134 samples, 0.39%)</title><rect x="81.7740%" y="1749" width="0.3850%" height="15" fill="rgb(244,115,35)" fg:x="28459" fg:w="134"/><text x="82.0240%" y="1759.50"></text></g><g><title>rayon_core::registry::in_worker (134 samples, 0.39%)</title><rect x="81.7740%" y="1733" width="0.3850%" height="15" fill="rgb(231,129,47)" fg:x="28459" fg:w="134"/><text x="82.0240%" y="1743.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (134 samples, 0.39%)</title><rect x="81.7740%" y="1717" width="0.3850%" height="15" fill="rgb(225,160,50)" fg:x="28459" fg:w="134"/><text x="82.0240%" y="1727.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (79 samples, 0.23%)</title><rect x="81.9321%" y="1701" width="0.2270%" height="15" fill="rgb(218,135,23)" fg:x="28514" fg:w="79"/><text x="82.1821%" y="1711.50"></text></g><g><title>std::panic::catch_unwind (79 samples, 0.23%)</title><rect x="81.9321%" y="1685" width="0.2270%" height="15" fill="rgb(227,119,14)" fg:x="28514" fg:w="79"/><text x="82.1821%" y="1695.50"></text></g><g><title>std::panicking::try (79 samples, 0.23%)</title><rect x="81.9321%" y="1669" width="0.2270%" height="15" fill="rgb(242,138,13)" fg:x="28514" fg:w="79"/><text x="82.1821%" y="1679.50"></text></g><g><title>std::panicking::try::do_call (79 samples, 0.23%)</title><rect x="81.9321%" y="1653" width="0.2270%" height="15" fill="rgb(215,11,16)" fg:x="28514" fg:w="79"/><text x="82.1821%" y="1663.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (79 samples, 0.23%)</title><rect x="81.9321%" y="1637" width="0.2270%" height="15" fill="rgb(234,170,50)" fg:x="28514" fg:w="79"/><text x="82.1821%" y="1647.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (79 samples, 0.23%)</title><rect x="81.9321%" y="1621" width="0.2270%" height="15" fill="rgb(233,34,20)" fg:x="28514" fg:w="79"/><text x="82.1821%" y="1631.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (79 samples, 0.23%)</title><rect x="81.9321%" y="1605" width="0.2270%" height="15" fill="rgb(237,100,45)" fg:x="28514" fg:w="79"/><text x="82.1821%" y="1615.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (79 samples, 0.23%)</title><rect x="81.9321%" y="1589" width="0.2270%" height="15" fill="rgb(231,184,36)" fg:x="28514" fg:w="79"/><text x="82.1821%" y="1599.50"></text></g><g><title>rayon_core::join::join_context (70 samples, 0.20%)</title><rect x="81.9579%" y="1573" width="0.2011%" height="15" fill="rgb(252,93,2)" fg:x="28523" fg:w="70"/><text x="82.2079%" y="1583.50"></text></g><g><title>rayon_core::registry::in_worker (70 samples, 0.20%)</title><rect x="81.9579%" y="1557" width="0.2011%" height="15" fill="rgb(248,176,47)" fg:x="28523" fg:w="70"/><text x="82.2079%" y="1567.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (70 samples, 0.20%)</title><rect x="81.9579%" y="1541" width="0.2011%" height="15" fill="rgb(249,125,23)" fg:x="28523" fg:w="70"/><text x="82.2079%" y="1551.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (33 samples, 0.09%)</title><rect x="82.0642%" y="1525" width="0.0948%" height="15" fill="rgb(239,67,42)" fg:x="28560" fg:w="33"/><text x="82.3142%" y="1535.50"></text></g><g><title>std::panic::catch_unwind (33 samples, 0.09%)</title><rect x="82.0642%" y="1509" width="0.0948%" height="15" fill="rgb(244,162,4)" fg:x="28560" fg:w="33"/><text x="82.3142%" y="1519.50"></text></g><g><title>std::panicking::try (33 samples, 0.09%)</title><rect x="82.0642%" y="1493" width="0.0948%" height="15" fill="rgb(214,150,38)" fg:x="28560" fg:w="33"/><text x="82.3142%" y="1503.50"></text></g><g><title>std::panicking::try::do_call (33 samples, 0.09%)</title><rect x="82.0642%" y="1477" width="0.0948%" height="15" fill="rgb(228,211,28)" fg:x="28560" fg:w="33"/><text x="82.3142%" y="1487.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (33 samples, 0.09%)</title><rect x="82.0642%" y="1461" width="0.0948%" height="15" fill="rgb(212,98,48)" fg:x="28560" fg:w="33"/><text x="82.3142%" y="1471.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (33 samples, 0.09%)</title><rect x="82.0642%" y="1445" width="0.0948%" height="15" fill="rgb(213,45,13)" fg:x="28560" fg:w="33"/><text x="82.3142%" y="1455.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (33 samples, 0.09%)</title><rect x="82.0642%" y="1429" width="0.0948%" height="15" fill="rgb(218,35,29)" fg:x="28560" fg:w="33"/><text x="82.3142%" y="1439.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (33 samples, 0.09%)</title><rect x="82.0642%" y="1413" width="0.0948%" height="15" fill="rgb(244,13,3)" fg:x="28560" fg:w="33"/><text x="82.3142%" y="1423.50"></text></g><g><title>rayon_core::join::join_context (22 samples, 0.06%)</title><rect x="82.0959%" y="1397" width="0.0632%" height="15" fill="rgb(235,170,19)" fg:x="28571" fg:w="22"/><text x="82.3459%" y="1407.50"></text></g><g><title>rayon_core::registry::in_worker (22 samples, 0.06%)</title><rect x="82.0959%" y="1381" width="0.0632%" height="15" fill="rgb(233,193,43)" fg:x="28571" fg:w="22"/><text x="82.3459%" y="1391.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (22 samples, 0.06%)</title><rect x="82.0959%" y="1365" width="0.0632%" height="15" fill="rgb(228,223,20)" fg:x="28571" fg:w="22"/><text x="82.3459%" y="1375.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (10 samples, 0.03%)</title><rect x="82.1303%" y="1349" width="0.0287%" height="15" fill="rgb(208,85,54)" fg:x="28583" fg:w="10"/><text x="82.3803%" y="1359.50"></text></g><g><title>std::panic::catch_unwind (10 samples, 0.03%)</title><rect x="82.1303%" y="1333" width="0.0287%" height="15" fill="rgb(254,14,45)" fg:x="28583" fg:w="10"/><text x="82.3803%" y="1343.50"></text></g><g><title>std::panicking::try (10 samples, 0.03%)</title><rect x="82.1303%" y="1317" width="0.0287%" height="15" fill="rgb(247,99,29)" fg:x="28583" fg:w="10"/><text x="82.3803%" y="1327.50"></text></g><g><title>std::panicking::try::do_call (10 samples, 0.03%)</title><rect x="82.1303%" y="1301" width="0.0287%" height="15" fill="rgb(225,180,54)" fg:x="28583" fg:w="10"/><text x="82.3803%" y="1311.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (10 samples, 0.03%)</title><rect x="82.1303%" y="1285" width="0.0287%" height="15" fill="rgb(239,88,43)" fg:x="28583" fg:w="10"/><text x="82.3803%" y="1295.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (10 samples, 0.03%)</title><rect x="82.1303%" y="1269" width="0.0287%" height="15" fill="rgb(209,47,11)" fg:x="28583" fg:w="10"/><text x="82.3803%" y="1279.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (10 samples, 0.03%)</title><rect x="82.1303%" y="1253" width="0.0287%" height="15" fill="rgb(219,179,23)" fg:x="28583" fg:w="10"/><text x="82.3803%" y="1263.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.03%)</title><rect x="82.1303%" y="1237" width="0.0287%" height="15" fill="rgb(213,183,19)" fg:x="28583" fg:w="10"/><text x="82.3803%" y="1247.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (4 samples, 0.01%)</title><rect x="82.1648%" y="1589" width="0.0115%" height="15" fill="rgb(210,11,9)" fg:x="28595" fg:w="4"/><text x="82.4148%" y="1599.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (4 samples, 0.01%)</title><rect x="82.1648%" y="1573" width="0.0115%" height="15" fill="rgb(239,194,16)" fg:x="28595" fg:w="4"/><text x="82.4148%" y="1583.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (4 samples, 0.01%)</title><rect x="82.1648%" y="1557" width="0.0115%" height="15" fill="rgb(246,23,50)" fg:x="28595" fg:w="4"/><text x="82.4148%" y="1567.50"></text></g><g><title>rayon_core::job::JobRef::execute (4 samples, 0.01%)</title><rect x="82.1648%" y="1541" width="0.0115%" height="15" fill="rgb(245,10,41)" fg:x="28595" fg:w="4"/><text x="82.4148%" y="1551.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (4 samples, 0.01%)</title><rect x="82.1648%" y="1525" width="0.0115%" height="15" fill="rgb(228,43,24)" fg:x="28595" fg:w="4"/><text x="82.4148%" y="1535.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (4 samples, 0.01%)</title><rect x="82.1648%" y="1509" width="0.0115%" height="15" fill="rgb(220,151,0)" fg:x="28595" fg:w="4"/><text x="82.4148%" y="1519.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (4 samples, 0.01%)</title><rect x="82.1648%" y="1493" width="0.0115%" height="15" fill="rgb(232,219,10)" fg:x="28595" fg:w="4"/><text x="82.4148%" y="1503.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.01%)</title><rect x="82.1648%" y="1477" width="0.0115%" height="15" fill="rgb(227,217,48)" fg:x="28595" fg:w="4"/><text x="82.4148%" y="1487.50"></text></g><g><title>std::panicking::try (4 samples, 0.01%)</title><rect x="82.1648%" y="1461" width="0.0115%" height="15" fill="rgb(210,66,35)" fg:x="28595" fg:w="4"/><text x="82.4148%" y="1471.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.01%)</title><rect x="82.1648%" y="1445" width="0.0115%" height="15" fill="rgb(254,6,7)" fg:x="28595" fg:w="4"/><text x="82.4148%" y="1455.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.01%)</title><rect x="82.1648%" y="1429" width="0.0115%" height="15" fill="rgb(235,222,42)" fg:x="28595" fg:w="4"/><text x="82.4148%" y="1439.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (4 samples, 0.01%)</title><rect x="82.1648%" y="1413" width="0.0115%" height="15" fill="rgb(245,126,5)" fg:x="28595" fg:w="4"/><text x="82.4148%" y="1423.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (4 samples, 0.01%)</title><rect x="82.1648%" y="1397" width="0.0115%" height="15" fill="rgb(215,73,17)" fg:x="28595" fg:w="4"/><text x="82.4148%" y="1407.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.01%)</title><rect x="82.1648%" y="1381" width="0.0115%" height="15" fill="rgb(219,198,52)" fg:x="28595" fg:w="4"/><text x="82.4148%" y="1391.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.01%)</title><rect x="82.1648%" y="1365" width="0.0115%" height="15" fill="rgb(217,159,18)" fg:x="28595" fg:w="4"/><text x="82.4148%" y="1375.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (4 samples, 0.01%)</title><rect x="82.1821%" y="1125" width="0.0115%" height="15" fill="rgb(212,177,18)" fg:x="28601" fg:w="4"/><text x="82.4321%" y="1135.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (4 samples, 0.01%)</title><rect x="82.1821%" y="1109" width="0.0115%" height="15" fill="rgb(241,10,11)" fg:x="28601" fg:w="4"/><text x="82.4321%" y="1119.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (4 samples, 0.01%)</title><rect x="82.1821%" y="1093" width="0.0115%" height="15" fill="rgb(232,114,35)" fg:x="28601" fg:w="4"/><text x="82.4321%" y="1103.50"></text></g><g><title>rayon_core::job::JobRef::execute (4 samples, 0.01%)</title><rect x="82.1821%" y="1077" width="0.0115%" height="15" fill="rgb(238,222,8)" fg:x="28601" fg:w="4"/><text x="82.4321%" y="1087.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (4 samples, 0.01%)</title><rect x="82.1821%" y="1061" width="0.0115%" height="15" fill="rgb(251,153,44)" fg:x="28601" fg:w="4"/><text x="82.4321%" y="1071.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (4 samples, 0.01%)</title><rect x="82.1821%" y="1045" width="0.0115%" height="15" fill="rgb(210,140,51)" fg:x="28601" fg:w="4"/><text x="82.4321%" y="1055.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (4 samples, 0.01%)</title><rect x="82.1821%" y="1029" width="0.0115%" height="15" fill="rgb(222,63,0)" fg:x="28601" fg:w="4"/><text x="82.4321%" y="1039.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.01%)</title><rect x="82.1821%" y="1013" width="0.0115%" height="15" fill="rgb(240,18,40)" fg:x="28601" fg:w="4"/><text x="82.4321%" y="1023.50"></text></g><g><title>std::panicking::try (4 samples, 0.01%)</title><rect x="82.1821%" y="997" width="0.0115%" height="15" fill="rgb(237,88,16)" fg:x="28601" fg:w="4"/><text x="82.4321%" y="1007.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.01%)</title><rect x="82.1821%" y="981" width="0.0115%" height="15" fill="rgb(251,117,13)" fg:x="28601" fg:w="4"/><text x="82.4321%" y="991.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.01%)</title><rect x="82.1821%" y="965" width="0.0115%" height="15" fill="rgb(251,228,8)" fg:x="28601" fg:w="4"/><text x="82.4321%" y="975.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (4 samples, 0.01%)</title><rect x="82.1821%" y="949" width="0.0115%" height="15" fill="rgb(205,107,49)" fg:x="28601" fg:w="4"/><text x="82.4321%" y="959.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (4 samples, 0.01%)</title><rect x="82.1821%" y="933" width="0.0115%" height="15" fill="rgb(238,72,41)" fg:x="28601" fg:w="4"/><text x="82.4321%" y="943.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.01%)</title><rect x="82.1821%" y="917" width="0.0115%" height="15" fill="rgb(248,183,52)" fg:x="28601" fg:w="4"/><text x="82.4321%" y="927.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.01%)</title><rect x="82.1821%" y="901" width="0.0115%" height="15" fill="rgb(215,58,20)" fg:x="28601" fg:w="4"/><text x="82.4321%" y="911.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.01%)</title><rect x="82.1821%" y="885" width="0.0115%" height="15" fill="rgb(209,49,13)" fg:x="28601" fg:w="4"/><text x="82.4321%" y="895.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.01%)</title><rect x="82.1821%" y="869" width="0.0115%" height="15" fill="rgb(208,113,17)" fg:x="28601" fg:w="4"/><text x="82.4321%" y="879.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.01%)</title><rect x="82.1821%" y="853" width="0.0115%" height="15" fill="rgb(208,14,22)" fg:x="28601" fg:w="4"/><text x="82.4321%" y="863.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (11 samples, 0.03%)</title><rect x="82.1763%" y="1413" width="0.0316%" height="15" fill="rgb(222,95,2)" fg:x="28599" fg:w="11"/><text x="82.4263%" y="1423.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (11 samples, 0.03%)</title><rect x="82.1763%" y="1397" width="0.0316%" height="15" fill="rgb(253,180,37)" fg:x="28599" fg:w="11"/><text x="82.4263%" y="1407.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (10 samples, 0.03%)</title><rect x="82.1792%" y="1381" width="0.0287%" height="15" fill="rgb(250,81,33)" fg:x="28600" fg:w="10"/><text x="82.4292%" y="1391.50"></text></g><g><title>rayon_core::job::JobRef::execute (10 samples, 0.03%)</title><rect x="82.1792%" y="1365" width="0.0287%" height="15" fill="rgb(251,151,41)" fg:x="28600" fg:w="10"/><text x="82.4292%" y="1375.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (10 samples, 0.03%)</title><rect x="82.1792%" y="1349" width="0.0287%" height="15" fill="rgb(210,135,17)" fg:x="28600" fg:w="10"/><text x="82.4292%" y="1359.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (10 samples, 0.03%)</title><rect x="82.1792%" y="1333" width="0.0287%" height="15" fill="rgb(239,21,29)" fg:x="28600" fg:w="10"/><text x="82.4292%" y="1343.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (10 samples, 0.03%)</title><rect x="82.1792%" y="1317" width="0.0287%" height="15" fill="rgb(231,215,16)" fg:x="28600" fg:w="10"/><text x="82.4292%" y="1327.50"></text></g><g><title>std::panic::catch_unwind (10 samples, 0.03%)</title><rect x="82.1792%" y="1301" width="0.0287%" height="15" fill="rgb(239,151,54)" fg:x="28600" fg:w="10"/><text x="82.4292%" y="1311.50"></text></g><g><title>std::panicking::try (10 samples, 0.03%)</title><rect x="82.1792%" y="1285" width="0.0287%" height="15" fill="rgb(222,122,38)" fg:x="28600" fg:w="10"/><text x="82.4292%" y="1295.50"></text></g><g><title>std::panicking::try::do_call (10 samples, 0.03%)</title><rect x="82.1792%" y="1269" width="0.0287%" height="15" fill="rgb(243,128,1)" fg:x="28600" fg:w="10"/><text x="82.4292%" y="1279.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (10 samples, 0.03%)</title><rect x="82.1792%" y="1253" width="0.0287%" height="15" fill="rgb(225,74,21)" fg:x="28600" fg:w="10"/><text x="82.4292%" y="1263.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (10 samples, 0.03%)</title><rect x="82.1792%" y="1237" width="0.0287%" height="15" fill="rgb(216,210,10)" fg:x="28600" fg:w="10"/><text x="82.4292%" y="1247.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (10 samples, 0.03%)</title><rect x="82.1792%" y="1221" width="0.0287%" height="15" fill="rgb(228,76,19)" fg:x="28600" fg:w="10"/><text x="82.4292%" y="1231.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (10 samples, 0.03%)</title><rect x="82.1792%" y="1205" width="0.0287%" height="15" fill="rgb(236,80,34)" fg:x="28600" fg:w="10"/><text x="82.4292%" y="1215.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.03%)</title><rect x="82.1792%" y="1189" width="0.0287%" height="15" fill="rgb(225,173,23)" fg:x="28600" fg:w="10"/><text x="82.4292%" y="1199.50"></text></g><g><title>rayon_core::join::join_context (9 samples, 0.03%)</title><rect x="82.1821%" y="1173" width="0.0259%" height="15" fill="rgb(253,38,1)" fg:x="28601" fg:w="9"/><text x="82.4321%" y="1183.50"></text></g><g><title>rayon_core::registry::in_worker (9 samples, 0.03%)</title><rect x="82.1821%" y="1157" width="0.0259%" height="15" fill="rgb(206,155,35)" fg:x="28601" fg:w="9"/><text x="82.4321%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (9 samples, 0.03%)</title><rect x="82.1821%" y="1141" width="0.0259%" height="15" fill="rgb(254,27,53)" fg:x="28601" fg:w="9"/><text x="82.4321%" y="1151.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (5 samples, 0.01%)</title><rect x="82.1936%" y="1125" width="0.0144%" height="15" fill="rgb(225,52,41)" fg:x="28605" fg:w="5"/><text x="82.4436%" y="1135.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.01%)</title><rect x="82.1936%" y="1109" width="0.0144%" height="15" fill="rgb(244,53,18)" fg:x="28605" fg:w="5"/><text x="82.4436%" y="1119.50"></text></g><g><title>std::panicking::try (5 samples, 0.01%)</title><rect x="82.1936%" y="1093" width="0.0144%" height="15" fill="rgb(254,206,48)" fg:x="28605" fg:w="5"/><text x="82.4436%" y="1103.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.01%)</title><rect x="82.1936%" y="1077" width="0.0144%" height="15" fill="rgb(236,182,23)" fg:x="28605" fg:w="5"/><text x="82.4436%" y="1087.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5 samples, 0.01%)</title><rect x="82.1936%" y="1061" width="0.0144%" height="15" fill="rgb(236,191,37)" fg:x="28605" fg:w="5"/><text x="82.4436%" y="1071.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (5 samples, 0.01%)</title><rect x="82.1936%" y="1045" width="0.0144%" height="15" fill="rgb(245,53,8)" fg:x="28605" fg:w="5"/><text x="82.4436%" y="1055.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (5 samples, 0.01%)</title><rect x="82.1936%" y="1029" width="0.0144%" height="15" fill="rgb(245,147,9)" fg:x="28605" fg:w="5"/><text x="82.4436%" y="1039.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (5 samples, 0.01%)</title><rect x="82.1936%" y="1013" width="0.0144%" height="15" fill="rgb(218,24,48)" fg:x="28605" fg:w="5"/><text x="82.4436%" y="1023.50"></text></g><g><title>rayon_core::join::join_context (5 samples, 0.01%)</title><rect x="82.1936%" y="997" width="0.0144%" height="15" fill="rgb(254,23,9)" fg:x="28605" fg:w="5"/><text x="82.4436%" y="1007.50"></text></g><g><title>rayon_core::registry::in_worker (5 samples, 0.01%)</title><rect x="82.1936%" y="981" width="0.0144%" height="15" fill="rgb(244,105,9)" fg:x="28605" fg:w="5"/><text x="82.4436%" y="991.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5 samples, 0.01%)</title><rect x="82.1936%" y="965" width="0.0144%" height="15" fill="rgb(212,142,22)" fg:x="28605" fg:w="5"/><text x="82.4436%" y="975.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (18 samples, 0.05%)</title><rect x="82.2108%" y="1237" width="0.0517%" height="15" fill="rgb(221,114,49)" fg:x="28611" fg:w="18"/><text x="82.4608%" y="1247.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (18 samples, 0.05%)</title><rect x="82.2108%" y="1221" width="0.0517%" height="15" fill="rgb(223,210,25)" fg:x="28611" fg:w="18"/><text x="82.4608%" y="1231.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (18 samples, 0.05%)</title><rect x="82.2108%" y="1205" width="0.0517%" height="15" fill="rgb(235,162,44)" fg:x="28611" fg:w="18"/><text x="82.4608%" y="1215.50"></text></g><g><title>rayon_core::job::JobRef::execute (18 samples, 0.05%)</title><rect x="82.2108%" y="1189" width="0.0517%" height="15" fill="rgb(237,65,45)" fg:x="28611" fg:w="18"/><text x="82.4608%" y="1199.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (18 samples, 0.05%)</title><rect x="82.2108%" y="1173" width="0.0517%" height="15" fill="rgb(208,79,9)" fg:x="28611" fg:w="18"/><text x="82.4608%" y="1183.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (18 samples, 0.05%)</title><rect x="82.2108%" y="1157" width="0.0517%" height="15" fill="rgb(215,228,8)" fg:x="28611" fg:w="18"/><text x="82.4608%" y="1167.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (18 samples, 0.05%)</title><rect x="82.2108%" y="1141" width="0.0517%" height="15" fill="rgb(205,185,17)" fg:x="28611" fg:w="18"/><text x="82.4608%" y="1151.50"></text></g><g><title>std::panic::catch_unwind (18 samples, 0.05%)</title><rect x="82.2108%" y="1125" width="0.0517%" height="15" fill="rgb(213,62,36)" fg:x="28611" fg:w="18"/><text x="82.4608%" y="1135.50"></text></g><g><title>std::panicking::try (18 samples, 0.05%)</title><rect x="82.2108%" y="1109" width="0.0517%" height="15" fill="rgb(209,34,9)" fg:x="28611" fg:w="18"/><text x="82.4608%" y="1119.50"></text></g><g><title>std::panicking::try::do_call (18 samples, 0.05%)</title><rect x="82.2108%" y="1093" width="0.0517%" height="15" fill="rgb(246,151,27)" fg:x="28611" fg:w="18"/><text x="82.4608%" y="1103.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (18 samples, 0.05%)</title><rect x="82.2108%" y="1077" width="0.0517%" height="15" fill="rgb(218,206,3)" fg:x="28611" fg:w="18"/><text x="82.4608%" y="1087.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (18 samples, 0.05%)</title><rect x="82.2108%" y="1061" width="0.0517%" height="15" fill="rgb(242,202,1)" fg:x="28611" fg:w="18"/><text x="82.4608%" y="1071.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (18 samples, 0.05%)</title><rect x="82.2108%" y="1045" width="0.0517%" height="15" fill="rgb(227,185,16)" fg:x="28611" fg:w="18"/><text x="82.4608%" y="1055.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (18 samples, 0.05%)</title><rect x="82.2108%" y="1029" width="0.0517%" height="15" fill="rgb(241,1,14)" fg:x="28611" fg:w="18"/><text x="82.4608%" y="1039.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (18 samples, 0.05%)</title><rect x="82.2108%" y="1013" width="0.0517%" height="15" fill="rgb(212,113,25)" fg:x="28611" fg:w="18"/><text x="82.4608%" y="1023.50"></text></g><g><title>rayon_core::join::join_context (16 samples, 0.05%)</title><rect x="82.2165%" y="997" width="0.0460%" height="15" fill="rgb(247,37,43)" fg:x="28613" fg:w="16"/><text x="82.4665%" y="1007.50"></text></g><g><title>rayon_core::registry::in_worker (16 samples, 0.05%)</title><rect x="82.2165%" y="981" width="0.0460%" height="15" fill="rgb(226,54,8)" fg:x="28613" fg:w="16"/><text x="82.4665%" y="991.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (16 samples, 0.05%)</title><rect x="82.2165%" y="965" width="0.0460%" height="15" fill="rgb(251,205,25)" fg:x="28613" fg:w="16"/><text x="82.4665%" y="975.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (10 samples, 0.03%)</title><rect x="82.2338%" y="949" width="0.0287%" height="15" fill="rgb(246,87,35)" fg:x="28619" fg:w="10"/><text x="82.4838%" y="959.50"></text></g><g><title>std::panic::catch_unwind (10 samples, 0.03%)</title><rect x="82.2338%" y="933" width="0.0287%" height="15" fill="rgb(251,145,46)" fg:x="28619" fg:w="10"/><text x="82.4838%" y="943.50"></text></g><g><title>std::panicking::try (10 samples, 0.03%)</title><rect x="82.2338%" y="917" width="0.0287%" height="15" fill="rgb(210,210,33)" fg:x="28619" fg:w="10"/><text x="82.4838%" y="927.50"></text></g><g><title>std::panicking::try::do_call (10 samples, 0.03%)</title><rect x="82.2338%" y="901" width="0.0287%" height="15" fill="rgb(221,151,11)" fg:x="28619" fg:w="10"/><text x="82.4838%" y="911.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (10 samples, 0.03%)</title><rect x="82.2338%" y="885" width="0.0287%" height="15" fill="rgb(208,160,28)" fg:x="28619" fg:w="10"/><text x="82.4838%" y="895.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (10 samples, 0.03%)</title><rect x="82.2338%" y="869" width="0.0287%" height="15" fill="rgb(243,69,29)" fg:x="28619" fg:w="10"/><text x="82.4838%" y="879.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (10 samples, 0.03%)</title><rect x="82.2338%" y="853" width="0.0287%" height="15" fill="rgb(224,144,4)" fg:x="28619" fg:w="10"/><text x="82.4838%" y="863.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.03%)</title><rect x="82.2338%" y="837" width="0.0287%" height="15" fill="rgb(211,140,38)" fg:x="28619" fg:w="10"/><text x="82.4838%" y="847.50"></text></g><g><title>rayon_core::join::join_context (9 samples, 0.03%)</title><rect x="82.2367%" y="821" width="0.0259%" height="15" fill="rgb(252,189,15)" fg:x="28620" fg:w="9"/><text x="82.4867%" y="831.50"></text></g><g><title>rayon_core::registry::in_worker (9 samples, 0.03%)</title><rect x="82.2367%" y="805" width="0.0259%" height="15" fill="rgb(251,175,23)" fg:x="28620" fg:w="9"/><text x="82.4867%" y="815.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (9 samples, 0.03%)</title><rect x="82.2367%" y="789" width="0.0259%" height="15" fill="rgb(212,184,11)" fg:x="28620" fg:w="9"/><text x="82.4867%" y="799.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (6 samples, 0.02%)</title><rect x="82.2453%" y="773" width="0.0172%" height="15" fill="rgb(217,205,6)" fg:x="28623" fg:w="6"/><text x="82.4953%" y="783.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.02%)</title><rect x="82.2453%" y="757" width="0.0172%" height="15" fill="rgb(235,45,45)" fg:x="28623" fg:w="6"/><text x="82.4953%" y="767.50"></text></g><g><title>std::panicking::try (6 samples, 0.02%)</title><rect x="82.2453%" y="741" width="0.0172%" height="15" fill="rgb(211,157,53)" fg:x="28623" fg:w="6"/><text x="82.4953%" y="751.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.02%)</title><rect x="82.2453%" y="725" width="0.0172%" height="15" fill="rgb(212,13,8)" fg:x="28623" fg:w="6"/><text x="82.4953%" y="735.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6 samples, 0.02%)</title><rect x="82.2453%" y="709" width="0.0172%" height="15" fill="rgb(218,80,36)" fg:x="28623" fg:w="6"/><text x="82.4953%" y="719.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (6 samples, 0.02%)</title><rect x="82.2453%" y="693" width="0.0172%" height="15" fill="rgb(211,123,43)" fg:x="28623" fg:w="6"/><text x="82.4953%" y="703.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (6 samples, 0.02%)</title><rect x="82.2453%" y="677" width="0.0172%" height="15" fill="rgb(206,165,2)" fg:x="28623" fg:w="6"/><text x="82.4953%" y="687.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (6 samples, 0.02%)</title><rect x="82.2453%" y="661" width="0.0172%" height="15" fill="rgb(248,63,35)" fg:x="28623" fg:w="6"/><text x="82.4953%" y="671.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.01%)</title><rect x="82.2510%" y="645" width="0.0115%" height="15" fill="rgb(219,133,41)" fg:x="28625" fg:w="4"/><text x="82.5010%" y="655.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.01%)</title><rect x="82.2510%" y="629" width="0.0115%" height="15" fill="rgb(206,175,46)" fg:x="28625" fg:w="4"/><text x="82.5010%" y="639.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.01%)</title><rect x="82.2510%" y="613" width="0.0115%" height="15" fill="rgb(224,41,35)" fg:x="28625" fg:w="4"/><text x="82.5010%" y="623.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (4 samples, 0.01%)</title><rect x="82.2510%" y="597" width="0.0115%" height="15" fill="rgb(226,113,24)" fg:x="28625" fg:w="4"/><text x="82.5010%" y="607.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (4 samples, 0.01%)</title><rect x="82.2510%" y="581" width="0.0115%" height="15" fill="rgb(219,51,41)" fg:x="28625" fg:w="4"/><text x="82.5010%" y="591.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.01%)</title><rect x="82.2510%" y="565" width="0.0115%" height="15" fill="rgb(220,145,47)" fg:x="28625" fg:w="4"/><text x="82.5010%" y="575.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.01%)</title><rect x="82.2510%" y="549" width="0.0115%" height="15" fill="rgb(239,121,47)" fg:x="28625" fg:w="4"/><text x="82.5010%" y="559.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.01%)</title><rect x="82.2510%" y="533" width="0.0115%" height="15" fill="rgb(207,60,40)" fg:x="28625" fg:w="4"/><text x="82.5010%" y="543.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.01%)</title><rect x="82.2510%" y="517" width="0.0115%" height="15" fill="rgb(224,229,11)" fg:x="28625" fg:w="4"/><text x="82.5010%" y="527.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.01%)</title><rect x="82.2510%" y="501" width="0.0115%" height="15" fill="rgb(252,28,32)" fg:x="28625" fg:w="4"/><text x="82.5010%" y="511.50"></text></g><g><title>&lt;rayon::iter::len::MinLenProducer&lt;P&gt; as rayon::iter::plumbing::Producer&gt;::fold_with (5 samples, 0.01%)</title><rect x="82.2625%" y="1109" width="0.0144%" height="15" fill="rgb(207,52,49)" fg:x="28629" fg:w="5"/><text x="82.5125%" y="1119.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (5 samples, 0.01%)</title><rect x="82.2625%" y="1093" width="0.0144%" height="15" fill="rgb(243,51,50)" fg:x="28629" fg:w="5"/><text x="82.5125%" y="1103.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (5 samples, 0.01%)</title><rect x="82.2625%" y="1077" width="0.0144%" height="15" fill="rgb(212,92,21)" fg:x="28629" fg:w="5"/><text x="82.5125%" y="1087.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (5 samples, 0.01%)</title><rect x="82.2625%" y="1061" width="0.0144%" height="15" fill="rgb(230,183,50)" fg:x="28629" fg:w="5"/><text x="82.5125%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="82.2625%" y="1045" width="0.0144%" height="15" fill="rgb(225,48,9)" fg:x="28629" fg:w="5"/><text x="82.5125%" y="1055.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (5 samples, 0.01%)</title><rect x="82.2625%" y="1029" width="0.0144%" height="15" fill="rgb(254,44,4)" fg:x="28629" fg:w="5"/><text x="82.5125%" y="1039.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (5 samples, 0.01%)</title><rect x="82.2625%" y="1013" width="0.0144%" height="15" fill="rgb(252,128,37)" fg:x="28629" fg:w="5"/><text x="82.5125%" y="1023.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (5 samples, 0.01%)</title><rect x="82.2625%" y="997" width="0.0144%" height="15" fill="rgb(227,178,8)" fg:x="28629" fg:w="5"/><text x="82.5125%" y="1007.50"></text></g><g><title>aptos_executor::components::apply_chunk_output::ApplyChunkOutput::assemble_ledger_diff::{{closure}} (5 samples, 0.01%)</title><rect x="82.2625%" y="981" width="0.0144%" height="15" fill="rgb(205,206,32)" fg:x="28629" fg:w="5"/><text x="82.5125%" y="991.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSet as aptos_crypto::hash::CryptoHash&gt;::hash (5 samples, 0.01%)</title><rect x="82.2625%" y="965" width="0.0144%" height="15" fill="rgb(220,218,22)" fg:x="28629" fg:w="5"/><text x="82.5125%" y="975.50"></text></g><g><title>bcs::ser::serialize_into (5 samples, 0.01%)</title><rect x="82.2625%" y="949" width="0.0144%" height="15" fill="rgb(236,41,28)" fg:x="28629" fg:w="5"/><text x="82.5125%" y="959.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for &amp;T&gt;::serialize (5 samples, 0.01%)</title><rect x="82.2625%" y="933" width="0.0144%" height="15" fill="rgb(219,37,7)" fg:x="28629" fg:w="5"/><text x="82.5125%" y="943.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSet&gt;::serialize (5 samples, 0.01%)</title><rect x="82.2625%" y="917" width="0.0144%" height="15" fill="rgb(206,160,15)" fg:x="28629" fg:w="5"/><text x="82.5125%" y="927.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_variant (5 samples, 0.01%)</title><rect x="82.2625%" y="901" width="0.0144%" height="15" fill="rgb(208,82,21)" fg:x="28629" fg:w="5"/><text x="82.5125%" y="911.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetV0&gt;::serialize (5 samples, 0.01%)</title><rect x="82.2625%" y="885" width="0.0144%" height="15" fill="rgb(226,130,25)" fg:x="28629" fg:w="5"/><text x="82.5125%" y="895.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::Serializer&gt;::serialize_newtype_struct (5 samples, 0.01%)</title><rect x="82.2625%" y="869" width="0.0144%" height="15" fill="rgb(212,72,24)" fg:x="28629" fg:w="5"/><text x="82.5125%" y="879.50"></text></g><g><title>aptos_types::write_set::_::&lt;impl serde::ser::Serialize for aptos_types::write_set::WriteSetMut&gt;::serialize (5 samples, 0.01%)</title><rect x="82.2625%" y="853" width="0.0144%" height="15" fill="rgb(206,28,16)" fg:x="28629" fg:w="5"/><text x="82.5125%" y="863.50"></text></g><g><title>&lt;bcs::ser::Serializer&lt;W&gt; as serde::ser::SerializeStruct&gt;::serialize_field (5 samples, 0.01%)</title><rect x="82.2625%" y="837" width="0.0144%" height="15" fill="rgb(249,41,5)" fg:x="28629" fg:w="5"/><text x="82.5125%" y="847.50"></text></g><g><title>serde::ser::impls::&lt;impl serde::ser::Serialize for alloc::collections::btree::map::BTreeMap&lt;K,V&gt;&gt;::serialize (5 samples, 0.01%)</title><rect x="82.2625%" y="821" width="0.0144%" height="15" fill="rgb(233,96,48)" fg:x="28629" fg:w="5"/><text x="82.5125%" y="831.50"></text></g><g><title>serde::ser::Serializer::collect_map (5 samples, 0.01%)</title><rect x="82.2625%" y="805" width="0.0144%" height="15" fill="rgb(240,198,11)" fg:x="28629" fg:w="5"/><text x="82.5125%" y="815.50"></text></g><g><title>&lt;bcs::ser::MapSerializer&lt;W&gt; as serde::ser::SerializeMap&gt;::end (5 samples, 0.01%)</title><rect x="82.2625%" y="789" width="0.0144%" height="15" fill="rgb(209,175,35)" fg:x="28629" fg:w="5"/><text x="82.5125%" y="799.50"></text></g><g><title>std::io::Write::write_all (5 samples, 0.01%)</title><rect x="82.2625%" y="773" width="0.0144%" height="15" fill="rgb(214,40,51)" fg:x="28629" fg:w="5"/><text x="82.5125%" y="783.50"></text></g><g><title>&lt;aptos_types::write_set::WriteSetHasher as std::io::Write&gt;::write (5 samples, 0.01%)</title><rect x="82.2625%" y="757" width="0.0144%" height="15" fill="rgb(252,56,4)" fg:x="28629" fg:w="5"/><text x="82.5125%" y="767.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::update (5 samples, 0.01%)</title><rect x="82.2625%" y="741" width="0.0144%" height="15" fill="rgb(219,131,5)" fg:x="28629" fg:w="5"/><text x="82.5125%" y="751.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (4 samples, 0.01%)</title><rect x="82.2654%" y="725" width="0.0115%" height="15" fill="rgb(223,67,53)" fg:x="28630" fg:w="4"/><text x="82.5154%" y="735.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (4 samples, 0.01%)</title><rect x="82.2654%" y="709" width="0.0115%" height="15" fill="rgb(227,154,8)" fg:x="28630" fg:w="4"/><text x="82.5154%" y="719.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (4 samples, 0.01%)</title><rect x="82.2654%" y="693" width="0.0115%" height="15" fill="rgb(216,174,51)" fg:x="28630" fg:w="4"/><text x="82.5154%" y="703.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (676 samples, 1.94%)</title><rect x="80.3373%" y="2485" width="1.9424%" height="15" fill="rgb(239,60,34)" fg:x="27959" fg:w="676"/><text x="80.5873%" y="2495.50">r..</text></g><g><title>rayon_core::job::JobRef::execute (676 samples, 1.94%)</title><rect x="80.3373%" y="2469" width="1.9424%" height="15" fill="rgb(236,165,48)" fg:x="27959" fg:w="676"/><text x="80.5873%" y="2479.50">r..</text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (676 samples, 1.94%)</title><rect x="80.3373%" y="2453" width="1.9424%" height="15" fill="rgb(210,37,26)" fg:x="27959" fg:w="676"/><text x="80.5873%" y="2463.50">&lt;..</text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (676 samples, 1.94%)</title><rect x="80.3373%" y="2437" width="1.9424%" height="15" fill="rgb(211,3,17)" fg:x="27959" fg:w="676"/><text x="80.5873%" y="2447.50">r..</text></g><g><title>rayon_core::unwind::halt_unwinding (676 samples, 1.94%)</title><rect x="80.3373%" y="2421" width="1.9424%" height="15" fill="rgb(234,88,49)" fg:x="27959" fg:w="676"/><text x="80.5873%" y="2431.50">r..</text></g><g><title>std::panic::catch_unwind (676 samples, 1.94%)</title><rect x="80.3373%" y="2405" width="1.9424%" height="15" fill="rgb(233,40,17)" fg:x="27959" fg:w="676"/><text x="80.5873%" y="2415.50">s..</text></g><g><title>std::panicking::try (676 samples, 1.94%)</title><rect x="80.3373%" y="2389" width="1.9424%" height="15" fill="rgb(235,127,31)" fg:x="27959" fg:w="676"/><text x="80.5873%" y="2399.50">s..</text></g><g><title>std::panicking::try::do_call (676 samples, 1.94%)</title><rect x="80.3373%" y="2373" width="1.9424%" height="15" fill="rgb(248,167,17)" fg:x="27959" fg:w="676"/><text x="80.5873%" y="2383.50">s..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (676 samples, 1.94%)</title><rect x="80.3373%" y="2357" width="1.9424%" height="15" fill="rgb(218,179,8)" fg:x="27959" fg:w="676"/><text x="80.5873%" y="2367.50">&lt;..</text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (676 samples, 1.94%)</title><rect x="80.3373%" y="2341" width="1.9424%" height="15" fill="rgb(216,92,14)" fg:x="27959" fg:w="676"/><text x="80.5873%" y="2351.50">r..</text></g><g><title>rayon_core::registry::Registry::in_worker_cold::{{closure}}::{{closure}} (42 samples, 0.12%)</title><rect x="82.1591%" y="2325" width="0.1207%" height="15" fill="rgb(221,198,46)" fg:x="28593" fg:w="42"/><text x="82.4091%" y="2335.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (42 samples, 0.12%)</title><rect x="82.1591%" y="2309" width="0.1207%" height="15" fill="rgb(244,7,25)" fg:x="28593" fg:w="42"/><text x="82.4091%" y="2319.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (42 samples, 0.12%)</title><rect x="82.1591%" y="2293" width="0.1207%" height="15" fill="rgb(233,75,6)" fg:x="28593" fg:w="42"/><text x="82.4091%" y="2303.50"></text></g><g><title>std::panic::catch_unwind (42 samples, 0.12%)</title><rect x="82.1591%" y="2277" width="0.1207%" height="15" fill="rgb(240,189,41)" fg:x="28593" fg:w="42"/><text x="82.4091%" y="2287.50"></text></g><g><title>std::panicking::try (42 samples, 0.12%)</title><rect x="82.1591%" y="2261" width="0.1207%" height="15" fill="rgb(237,157,21)" fg:x="28593" fg:w="42"/><text x="82.4091%" y="2271.50"></text></g><g><title>std::panicking::try::do_call (42 samples, 0.12%)</title><rect x="82.1591%" y="2245" width="0.1207%" height="15" fill="rgb(210,136,49)" fg:x="28593" fg:w="42"/><text x="82.4091%" y="2255.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (42 samples, 0.12%)</title><rect x="82.1591%" y="2229" width="0.1207%" height="15" fill="rgb(210,68,29)" fg:x="28593" fg:w="42"/><text x="82.4091%" y="2239.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (42 samples, 0.12%)</title><rect x="82.1591%" y="2213" width="0.1207%" height="15" fill="rgb(247,207,20)" fg:x="28593" fg:w="42"/><text x="82.4091%" y="2223.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (42 samples, 0.12%)</title><rect x="82.1591%" y="2197" width="0.1207%" height="15" fill="rgb(224,73,48)" fg:x="28593" fg:w="42"/><text x="82.4091%" y="2207.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (42 samples, 0.12%)</title><rect x="82.1591%" y="2181" width="0.1207%" height="15" fill="rgb(215,136,47)" fg:x="28593" fg:w="42"/><text x="82.4091%" y="2191.50"></text></g><g><title>rayon_core::join::join_context (42 samples, 0.12%)</title><rect x="82.1591%" y="2165" width="0.1207%" height="15" fill="rgb(232,222,16)" fg:x="28593" fg:w="42"/><text x="82.4091%" y="2175.50"></text></g><g><title>rayon_core::registry::in_worker (42 samples, 0.12%)</title><rect x="82.1591%" y="2149" width="0.1207%" height="15" fill="rgb(249,202,47)" fg:x="28593" fg:w="42"/><text x="82.4091%" y="2159.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (42 samples, 0.12%)</title><rect x="82.1591%" y="2133" width="0.1207%" height="15" fill="rgb(236,56,8)" fg:x="28593" fg:w="42"/><text x="82.4091%" y="2143.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (42 samples, 0.12%)</title><rect x="82.1591%" y="2117" width="0.1207%" height="15" fill="rgb(222,6,3)" fg:x="28593" fg:w="42"/><text x="82.4091%" y="2127.50"></text></g><g><title>std::panic::catch_unwind (42 samples, 0.12%)</title><rect x="82.1591%" y="2101" width="0.1207%" height="15" fill="rgb(254,222,28)" fg:x="28593" fg:w="42"/><text x="82.4091%" y="2111.50"></text></g><g><title>std::panicking::try (42 samples, 0.12%)</title><rect x="82.1591%" y="2085" width="0.1207%" height="15" fill="rgb(219,57,23)" fg:x="28593" fg:w="42"/><text x="82.4091%" y="2095.50"></text></g><g><title>std::panicking::try::do_call (42 samples, 0.12%)</title><rect x="82.1591%" y="2069" width="0.1207%" height="15" fill="rgb(251,106,48)" fg:x="28593" fg:w="42"/><text x="82.4091%" y="2079.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (42 samples, 0.12%)</title><rect x="82.1591%" y="2053" width="0.1207%" height="15" fill="rgb(242,2,23)" fg:x="28593" fg:w="42"/><text x="82.4091%" y="2063.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (42 samples, 0.12%)</title><rect x="82.1591%" y="2037" width="0.1207%" height="15" fill="rgb(212,109,31)" fg:x="28593" fg:w="42"/><text x="82.4091%" y="2047.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (42 samples, 0.12%)</title><rect x="82.1591%" y="2021" width="0.1207%" height="15" fill="rgb(241,9,22)" fg:x="28593" fg:w="42"/><text x="82.4091%" y="2031.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (42 samples, 0.12%)</title><rect x="82.1591%" y="2005" width="0.1207%" height="15" fill="rgb(209,64,27)" fg:x="28593" fg:w="42"/><text x="82.4091%" y="2015.50"></text></g><g><title>rayon_core::join::join_context (42 samples, 0.12%)</title><rect x="82.1591%" y="1989" width="0.1207%" height="15" fill="rgb(248,13,44)" fg:x="28593" fg:w="42"/><text x="82.4091%" y="1999.50"></text></g><g><title>rayon_core::registry::in_worker (42 samples, 0.12%)</title><rect x="82.1591%" y="1973" width="0.1207%" height="15" fill="rgb(213,86,6)" fg:x="28593" fg:w="42"/><text x="82.4091%" y="1983.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (42 samples, 0.12%)</title><rect x="82.1591%" y="1957" width="0.1207%" height="15" fill="rgb(247,11,18)" fg:x="28593" fg:w="42"/><text x="82.4091%" y="1967.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (42 samples, 0.12%)</title><rect x="82.1591%" y="1941" width="0.1207%" height="15" fill="rgb(252,31,11)" fg:x="28593" fg:w="42"/><text x="82.4091%" y="1951.50"></text></g><g><title>std::panic::catch_unwind (42 samples, 0.12%)</title><rect x="82.1591%" y="1925" width="0.1207%" height="15" fill="rgb(215,63,51)" fg:x="28593" fg:w="42"/><text x="82.4091%" y="1935.50"></text></g><g><title>std::panicking::try (42 samples, 0.12%)</title><rect x="82.1591%" y="1909" width="0.1207%" height="15" fill="rgb(222,180,4)" fg:x="28593" fg:w="42"/><text x="82.4091%" y="1919.50"></text></g><g><title>std::panicking::try::do_call (42 samples, 0.12%)</title><rect x="82.1591%" y="1893" width="0.1207%" height="15" fill="rgb(233,4,23)" fg:x="28593" fg:w="42"/><text x="82.4091%" y="1903.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (42 samples, 0.12%)</title><rect x="82.1591%" y="1877" width="0.1207%" height="15" fill="rgb(230,116,22)" fg:x="28593" fg:w="42"/><text x="82.4091%" y="1887.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (42 samples, 0.12%)</title><rect x="82.1591%" y="1861" width="0.1207%" height="15" fill="rgb(222,20,14)" fg:x="28593" fg:w="42"/><text x="82.4091%" y="1871.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (42 samples, 0.12%)</title><rect x="82.1591%" y="1845" width="0.1207%" height="15" fill="rgb(210,176,43)" fg:x="28593" fg:w="42"/><text x="82.4091%" y="1855.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (42 samples, 0.12%)</title><rect x="82.1591%" y="1829" width="0.1207%" height="15" fill="rgb(219,67,32)" fg:x="28593" fg:w="42"/><text x="82.4091%" y="1839.50"></text></g><g><title>rayon_core::join::join_context (42 samples, 0.12%)</title><rect x="82.1591%" y="1813" width="0.1207%" height="15" fill="rgb(228,91,39)" fg:x="28593" fg:w="42"/><text x="82.4091%" y="1823.50"></text></g><g><title>rayon_core::registry::in_worker (42 samples, 0.12%)</title><rect x="82.1591%" y="1797" width="0.1207%" height="15" fill="rgb(254,63,14)" fg:x="28593" fg:w="42"/><text x="82.4091%" y="1807.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (42 samples, 0.12%)</title><rect x="82.1591%" y="1781" width="0.1207%" height="15" fill="rgb(216,171,39)" fg:x="28593" fg:w="42"/><text x="82.4091%" y="1791.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (40 samples, 0.11%)</title><rect x="82.1648%" y="1765" width="0.1149%" height="15" fill="rgb(248,68,25)" fg:x="28595" fg:w="40"/><text x="82.4148%" y="1775.50"></text></g><g><title>std::panic::catch_unwind (40 samples, 0.11%)</title><rect x="82.1648%" y="1749" width="0.1149%" height="15" fill="rgb(239,63,16)" fg:x="28595" fg:w="40"/><text x="82.4148%" y="1759.50"></text></g><g><title>std::panicking::try (40 samples, 0.11%)</title><rect x="82.1648%" y="1733" width="0.1149%" height="15" fill="rgb(225,111,43)" fg:x="28595" fg:w="40"/><text x="82.4148%" y="1743.50"></text></g><g><title>std::panicking::try::do_call (40 samples, 0.11%)</title><rect x="82.1648%" y="1717" width="0.1149%" height="15" fill="rgb(246,165,17)" fg:x="28595" fg:w="40"/><text x="82.4148%" y="1727.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (40 samples, 0.11%)</title><rect x="82.1648%" y="1701" width="0.1149%" height="15" fill="rgb(208,124,1)" fg:x="28595" fg:w="40"/><text x="82.4148%" y="1711.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (40 samples, 0.11%)</title><rect x="82.1648%" y="1685" width="0.1149%" height="15" fill="rgb(234,147,33)" fg:x="28595" fg:w="40"/><text x="82.4148%" y="1695.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (40 samples, 0.11%)</title><rect x="82.1648%" y="1669" width="0.1149%" height="15" fill="rgb(240,86,30)" fg:x="28595" fg:w="40"/><text x="82.4148%" y="1679.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (40 samples, 0.11%)</title><rect x="82.1648%" y="1653" width="0.1149%" height="15" fill="rgb(237,34,51)" fg:x="28595" fg:w="40"/><text x="82.4148%" y="1663.50"></text></g><g><title>rayon_core::join::join_context (40 samples, 0.11%)</title><rect x="82.1648%" y="1637" width="0.1149%" height="15" fill="rgb(232,131,41)" fg:x="28595" fg:w="40"/><text x="82.4148%" y="1647.50"></text></g><g><title>rayon_core::registry::in_worker (40 samples, 0.11%)</title><rect x="82.1648%" y="1621" width="0.1149%" height="15" fill="rgb(227,129,53)" fg:x="28595" fg:w="40"/><text x="82.4148%" y="1631.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (40 samples, 0.11%)</title><rect x="82.1648%" y="1605" width="0.1149%" height="15" fill="rgb(230,90,35)" fg:x="28595" fg:w="40"/><text x="82.4148%" y="1615.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (36 samples, 0.10%)</title><rect x="82.1763%" y="1589" width="0.1034%" height="15" fill="rgb(248,88,27)" fg:x="28599" fg:w="36"/><text x="82.4263%" y="1599.50"></text></g><g><title>std::panic::catch_unwind (36 samples, 0.10%)</title><rect x="82.1763%" y="1573" width="0.1034%" height="15" fill="rgb(223,18,17)" fg:x="28599" fg:w="36"/><text x="82.4263%" y="1583.50"></text></g><g><title>std::panicking::try (36 samples, 0.10%)</title><rect x="82.1763%" y="1557" width="0.1034%" height="15" fill="rgb(241,11,10)" fg:x="28599" fg:w="36"/><text x="82.4263%" y="1567.50"></text></g><g><title>std::panicking::try::do_call (36 samples, 0.10%)</title><rect x="82.1763%" y="1541" width="0.1034%" height="15" fill="rgb(232,111,52)" fg:x="28599" fg:w="36"/><text x="82.4263%" y="1551.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (36 samples, 0.10%)</title><rect x="82.1763%" y="1525" width="0.1034%" height="15" fill="rgb(228,67,8)" fg:x="28599" fg:w="36"/><text x="82.4263%" y="1535.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (36 samples, 0.10%)</title><rect x="82.1763%" y="1509" width="0.1034%" height="15" fill="rgb(251,168,31)" fg:x="28599" fg:w="36"/><text x="82.4263%" y="1519.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (36 samples, 0.10%)</title><rect x="82.1763%" y="1493" width="0.1034%" height="15" fill="rgb(249,164,11)" fg:x="28599" fg:w="36"/><text x="82.4263%" y="1503.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (36 samples, 0.10%)</title><rect x="82.1763%" y="1477" width="0.1034%" height="15" fill="rgb(239,81,9)" fg:x="28599" fg:w="36"/><text x="82.4263%" y="1487.50"></text></g><g><title>rayon_core::join::join_context (36 samples, 0.10%)</title><rect x="82.1763%" y="1461" width="0.1034%" height="15" fill="rgb(222,145,38)" fg:x="28599" fg:w="36"/><text x="82.4263%" y="1471.50"></text></g><g><title>rayon_core::registry::in_worker (36 samples, 0.10%)</title><rect x="82.1763%" y="1445" width="0.1034%" height="15" fill="rgb(238,80,54)" fg:x="28599" fg:w="36"/><text x="82.4263%" y="1455.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (36 samples, 0.10%)</title><rect x="82.1763%" y="1429" width="0.1034%" height="15" fill="rgb(237,116,16)" fg:x="28599" fg:w="36"/><text x="82.4263%" y="1439.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (25 samples, 0.07%)</title><rect x="82.2079%" y="1413" width="0.0718%" height="15" fill="rgb(218,135,19)" fg:x="28610" fg:w="25"/><text x="82.4579%" y="1423.50"></text></g><g><title>std::panic::catch_unwind (25 samples, 0.07%)</title><rect x="82.2079%" y="1397" width="0.0718%" height="15" fill="rgb(216,207,44)" fg:x="28610" fg:w="25"/><text x="82.4579%" y="1407.50"></text></g><g><title>std::panicking::try (25 samples, 0.07%)</title><rect x="82.2079%" y="1381" width="0.0718%" height="15" fill="rgb(226,152,40)" fg:x="28610" fg:w="25"/><text x="82.4579%" y="1391.50"></text></g><g><title>std::panicking::try::do_call (25 samples, 0.07%)</title><rect x="82.2079%" y="1365" width="0.0718%" height="15" fill="rgb(219,98,35)" fg:x="28610" fg:w="25"/><text x="82.4579%" y="1375.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (25 samples, 0.07%)</title><rect x="82.2079%" y="1349" width="0.0718%" height="15" fill="rgb(222,136,46)" fg:x="28610" fg:w="25"/><text x="82.4579%" y="1359.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (25 samples, 0.07%)</title><rect x="82.2079%" y="1333" width="0.0718%" height="15" fill="rgb(222,71,8)" fg:x="28610" fg:w="25"/><text x="82.4579%" y="1343.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (25 samples, 0.07%)</title><rect x="82.2079%" y="1317" width="0.0718%" height="15" fill="rgb(209,89,53)" fg:x="28610" fg:w="25"/><text x="82.4579%" y="1327.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (25 samples, 0.07%)</title><rect x="82.2079%" y="1301" width="0.0718%" height="15" fill="rgb(210,97,51)" fg:x="28610" fg:w="25"/><text x="82.4579%" y="1311.50"></text></g><g><title>rayon_core::join::join_context (25 samples, 0.07%)</title><rect x="82.2079%" y="1285" width="0.0718%" height="15" fill="rgb(248,65,21)" fg:x="28610" fg:w="25"/><text x="82.4579%" y="1295.50"></text></g><g><title>rayon_core::registry::in_worker (25 samples, 0.07%)</title><rect x="82.2079%" y="1269" width="0.0718%" height="15" fill="rgb(222,5,31)" fg:x="28610" fg:w="25"/><text x="82.4579%" y="1279.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (25 samples, 0.07%)</title><rect x="82.2079%" y="1253" width="0.0718%" height="15" fill="rgb(241,16,30)" fg:x="28610" fg:w="25"/><text x="82.4579%" y="1263.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (6 samples, 0.02%)</title><rect x="82.2625%" y="1237" width="0.0172%" height="15" fill="rgb(215,86,30)" fg:x="28629" fg:w="6"/><text x="82.5125%" y="1247.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.02%)</title><rect x="82.2625%" y="1221" width="0.0172%" height="15" fill="rgb(235,26,44)" fg:x="28629" fg:w="6"/><text x="82.5125%" y="1231.50"></text></g><g><title>std::panicking::try (6 samples, 0.02%)</title><rect x="82.2625%" y="1205" width="0.0172%" height="15" fill="rgb(228,147,14)" fg:x="28629" fg:w="6"/><text x="82.5125%" y="1215.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.02%)</title><rect x="82.2625%" y="1189" width="0.0172%" height="15" fill="rgb(253,38,50)" fg:x="28629" fg:w="6"/><text x="82.5125%" y="1199.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6 samples, 0.02%)</title><rect x="82.2625%" y="1173" width="0.0172%" height="15" fill="rgb(251,151,16)" fg:x="28629" fg:w="6"/><text x="82.5125%" y="1183.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (6 samples, 0.02%)</title><rect x="82.2625%" y="1157" width="0.0172%" height="15" fill="rgb(224,64,19)" fg:x="28629" fg:w="6"/><text x="82.5125%" y="1167.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (6 samples, 0.02%)</title><rect x="82.2625%" y="1141" width="0.0172%" height="15" fill="rgb(235,214,47)" fg:x="28629" fg:w="6"/><text x="82.5125%" y="1151.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (6 samples, 0.02%)</title><rect x="82.2625%" y="1125" width="0.0172%" height="15" fill="rgb(218,15,19)" fg:x="28629" fg:w="6"/><text x="82.5125%" y="1135.50"></text></g><g><title>rayon_core::registry::WorkerThread::take_local_job (7 samples, 0.02%)</title><rect x="82.2798%" y="2485" width="0.0201%" height="15" fill="rgb(247,209,3)" fg:x="28635" fg:w="7"/><text x="82.5298%" y="2495.50"></text></g><g><title>crossbeam_deque::deque::Stealer&lt;T&gt;::steal (7 samples, 0.02%)</title><rect x="82.2798%" y="2469" width="0.0201%" height="15" fill="rgb(217,29,2)" fg:x="28635" fg:w="7"/><text x="82.5298%" y="2479.50"></text></g><g><title>crossbeam_epoch::default::pin (6 samples, 0.02%)</title><rect x="82.2826%" y="2453" width="0.0172%" height="15" fill="rgb(234,9,9)" fg:x="28636" fg:w="6"/><text x="82.5326%" y="2463.50"></text></g><g><title>crossbeam_epoch::default::with_handle (6 samples, 0.02%)</title><rect x="82.2826%" y="2437" width="0.0172%" height="15" fill="rgb(207,43,14)" fg:x="28636" fg:w="6"/><text x="82.5326%" y="2447.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6 samples, 0.02%)</title><rect x="82.2826%" y="2421" width="0.0172%" height="15" fill="rgb(216,219,36)" fg:x="28636" fg:w="6"/><text x="82.5326%" y="2431.50"></text></g><g><title>crossbeam_epoch::default::with_handle::{{closure}} (6 samples, 0.02%)</title><rect x="82.2826%" y="2405" width="0.0172%" height="15" fill="rgb(238,12,26)" fg:x="28636" fg:w="6"/><text x="82.5326%" y="2415.50"></text></g><g><title>crossbeam_epoch::default::pin::{{closure}} (6 samples, 0.02%)</title><rect x="82.2826%" y="2389" width="0.0172%" height="15" fill="rgb(226,67,30)" fg:x="28636" fg:w="6"/><text x="82.5326%" y="2399.50"></text></g><g><title>crossbeam_epoch::collector::LocalHandle::pin (6 samples, 0.02%)</title><rect x="82.2826%" y="2373" width="0.0172%" height="15" fill="rgb(229,154,7)" fg:x="28636" fg:w="6"/><text x="82.5326%" y="2383.50"></text></g><g><title>crossbeam_epoch::internal::Local::pin (6 samples, 0.02%)</title><rect x="82.2826%" y="2357" width="0.0172%" height="15" fill="rgb(249,90,18)" fg:x="28636" fg:w="6"/><text x="82.5326%" y="2367.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (691 samples, 1.99%)</title><rect x="80.3172%" y="2565" width="1.9855%" height="15" fill="rgb(223,53,15)" fg:x="27952" fg:w="691"/><text x="80.5672%" y="2575.50">&lt;..</text></g><g><title>rayon_core::registry::ThreadBuilder::run (691 samples, 1.99%)</title><rect x="80.3172%" y="2549" width="1.9855%" height="15" fill="rgb(253,86,38)" fg:x="27952" fg:w="691"/><text x="80.5672%" y="2559.50">r..</text></g><g><title>rayon_core::registry::main_loop (691 samples, 1.99%)</title><rect x="80.3172%" y="2533" width="1.9855%" height="15" fill="rgb(222,198,9)" fg:x="27952" fg:w="691"/><text x="80.5672%" y="2543.50">r..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until (691 samples, 1.99%)</title><rect x="80.3172%" y="2517" width="1.9855%" height="15" fill="rgb(240,146,25)" fg:x="27952" fg:w="691"/><text x="80.5672%" y="2527.50">r..</text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (691 samples, 1.99%)</title><rect x="80.3172%" y="2501" width="1.9855%" height="15" fill="rgb(225,38,10)" fg:x="27952" fg:w="691"/><text x="80.5672%" y="2511.50">r..</text></g><g><title>&lt;aptos_logger::aptos_logger::FileWriter as aptos_logger::aptos_logger::Writer&gt;::write (14 samples, 0.04%)</title><rect x="82.3027%" y="2533" width="0.0402%" height="15" fill="rgb(246,93,4)" fg:x="28643" fg:w="14"/><text x="82.5527%" y="2543.50"></text></g><g><title>std::io::Write::write_fmt (10 samples, 0.03%)</title><rect x="82.3142%" y="2517" width="0.0287%" height="15" fill="rgb(222,55,18)" fg:x="28647" fg:w="10"/><text x="82.5642%" y="2527.50"></text></g><g><title>core::fmt::write (10 samples, 0.03%)</title><rect x="82.3142%" y="2501" width="0.0287%" height="15" fill="rgb(233,137,48)" fg:x="28647" fg:w="10"/><text x="82.5642%" y="2511.50"></text></g><g><title>core::fmt::rt::Argument::fmt (4 samples, 0.01%)</title><rect x="82.3315%" y="2485" width="0.0115%" height="15" fill="rgb(214,8,54)" fg:x="28653" fg:w="4"/><text x="82.5815%" y="2495.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (4 samples, 0.01%)</title><rect x="82.3315%" y="2469" width="0.0115%" height="15" fill="rgb(206,75,4)" fg:x="28653" fg:w="4"/><text x="82.5815%" y="2479.50"></text></g><g><title>std::io::Write::write_all (4 samples, 0.01%)</title><rect x="82.3315%" y="2453" width="0.0115%" height="15" fill="rgb(238,171,14)" fg:x="28653" fg:w="4"/><text x="82.5815%" y="2463.50"></text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::start_recv (14 samples, 0.04%)</title><rect x="82.3717%" y="2469" width="0.0402%" height="15" fill="rgb(233,70,41)" fg:x="28667" fg:w="14"/><text x="82.6217%" y="2479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (14 samples, 0.04%)</title><rect x="82.3717%" y="2453" width="0.0402%" height="15" fill="rgb(214,68,36)" fg:x="28667" fg:w="14"/><text x="82.6217%" y="2463.50"></text></g><g><title>core::sync::atomic::atomic_load (14 samples, 0.04%)</title><rect x="82.3717%" y="2437" width="0.0402%" height="15" fill="rgb(223,29,5)" fg:x="28667" fg:w="14"/><text x="82.6217%" y="2447.50"></text></g><g><title>std::sync::mpmc::context::Context::wait_until (5 samples, 0.01%)</title><rect x="82.4148%" y="2389" width="0.0144%" height="15" fill="rgb(251,22,40)" fg:x="28682" fg:w="5"/><text x="82.6648%" y="2399.50"></text></g><g><title>std::thread::park (5 samples, 0.01%)</title><rect x="82.4148%" y="2373" width="0.0144%" height="15" fill="rgb(210,67,41)" fg:x="28682" fg:w="5"/><text x="82.6648%" y="2383.50"></text></g><g><title>std::thread::Thread::park (5 samples, 0.01%)</title><rect x="82.4148%" y="2357" width="0.0144%" height="15" fill="rgb(225,177,31)" fg:x="28682" fg:w="5"/><text x="82.6648%" y="2367.50"></text></g><g><title>std::sys::sync::thread_parking::futex::Parker::park (5 samples, 0.01%)</title><rect x="82.4148%" y="2341" width="0.0144%" height="15" fill="rgb(221,229,11)" fg:x="28682" fg:w="5"/><text x="82.6648%" y="2351.50"></text></g><g><title>core::sync::atomic::AtomicU32::compare_exchange (5 samples, 0.01%)</title><rect x="82.4148%" y="2325" width="0.0144%" height="15" fill="rgb(247,172,52)" fg:x="28682" fg:w="5"/><text x="82.6648%" y="2335.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (5 samples, 0.01%)</title><rect x="82.4148%" y="2309" width="0.0144%" height="15" fill="rgb(212,73,19)" fg:x="28682" fg:w="5"/><text x="82.6648%" y="2319.50"></text></g><g><title>&lt;std::sync::mpsc::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (34 samples, 0.10%)</title><rect x="82.3430%" y="2533" width="0.0977%" height="15" fill="rgb(244,7,46)" fg:x="28657" fg:w="34"/><text x="82.5930%" y="2543.50"></text></g><g><title>std::sync::mpsc::Receiver&lt;T&gt;::recv (34 samples, 0.10%)</title><rect x="82.3430%" y="2517" width="0.0977%" height="15" fill="rgb(230,113,20)" fg:x="28657" fg:w="34"/><text x="82.5930%" y="2527.50"></text></g><g><title>std::sync::mpmc::Receiver&lt;T&gt;::recv (34 samples, 0.10%)</title><rect x="82.3430%" y="2501" width="0.0977%" height="15" fill="rgb(209,97,30)" fg:x="28657" fg:w="34"/><text x="82.5930%" y="2511.50"></text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::recv (24 samples, 0.07%)</title><rect x="82.3717%" y="2485" width="0.0690%" height="15" fill="rgb(243,89,12)" fg:x="28667" fg:w="24"/><text x="82.6217%" y="2495.50"></text></g><g><title>std::sync::mpmc::context::Context::with (10 samples, 0.03%)</title><rect x="82.4119%" y="2469" width="0.0287%" height="15" fill="rgb(228,32,19)" fg:x="28681" fg:w="10"/><text x="82.6619%" y="2479.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (10 samples, 0.03%)</title><rect x="82.4119%" y="2453" width="0.0287%" height="15" fill="rgb(248,25,17)" fg:x="28681" fg:w="10"/><text x="82.6619%" y="2463.50"></text></g><g><title>std::sync::mpmc::context::Context::with::{{closure}} (10 samples, 0.03%)</title><rect x="82.4119%" y="2437" width="0.0287%" height="15" fill="rgb(232,161,29)" fg:x="28681" fg:w="10"/><text x="82.6619%" y="2447.50"></text></g><g><title>std::sync::mpmc::context::Context::with::{{closure}} (10 samples, 0.03%)</title><rect x="82.4119%" y="2421" width="0.0287%" height="15" fill="rgb(251,192,11)" fg:x="28681" fg:w="10"/><text x="82.6619%" y="2431.50"></text></g><g><title>std::sync::mpmc::array::Channel&lt;T&gt;::recv::{{closure}} (10 samples, 0.03%)</title><rect x="82.4119%" y="2405" width="0.0287%" height="15" fill="rgb(240,47,32)" fg:x="28681" fg:w="10"/><text x="82.6619%" y="2415.50"></text></g><g><title>std::sync::mpmc::waker::SyncWaker::register (4 samples, 0.01%)</title><rect x="82.4292%" y="2389" width="0.0115%" height="15" fill="rgb(250,16,45)" fg:x="28687" fg:w="4"/><text x="82.6792%" y="2399.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;std::sync::mpmc::waker::Waker&gt;&gt; (4 samples, 0.01%)</title><rect x="82.4292%" y="2373" width="0.0115%" height="15" fill="rgb(227,217,42)" fg:x="28687" fg:w="4"/><text x="82.6792%" y="2383.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.01%)</title><rect x="82.4292%" y="2357" width="0.0115%" height="15" fill="rgb(206,82,54)" fg:x="28687" fg:w="4"/><text x="82.6792%" y="2367.50"></text></g><g><title>std::sys::sync::mutex::futex::Mutex::unlock (4 samples, 0.01%)</title><rect x="82.4292%" y="2341" width="0.0115%" height="15" fill="rgb(243,145,25)" fg:x="28687" fg:w="4"/><text x="82.6792%" y="2351.50"></text></g><g><title>core::sync::atomic::AtomicU32::swap (4 samples, 0.01%)</title><rect x="82.4292%" y="2325" width="0.0115%" height="15" fill="rgb(207,166,24)" fg:x="28687" fg:w="4"/><text x="82.6792%" y="2335.50"></text></g><g><title>core::sync::atomic::atomic_swap (4 samples, 0.01%)</title><rect x="82.4292%" y="2309" width="0.0115%" height="15" fill="rgb(215,191,44)" fg:x="28687" fg:w="4"/><text x="82.6792%" y="2319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (5 samples, 0.01%)</title><rect x="82.4579%" y="2341" width="0.0144%" height="15" fill="rgb(234,218,51)" fg:x="28697" fg:w="5"/><text x="82.7079%" y="2351.50"></text></g><g><title>iralloct (4 samples, 0.01%)</title><rect x="82.4751%" y="2229" width="0.0115%" height="15" fill="rgb(245,133,21)" fg:x="28703" fg:w="4"/><text x="82.7251%" y="2239.50"></text></g><g><title>_rjem_je_arena_ralloc (4 samples, 0.01%)</title><rect x="82.4751%" y="2213" width="0.0115%" height="15" fill="rgb(230,136,45)" fg:x="28703" fg:w="4"/><text x="82.7251%" y="2223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (9 samples, 0.03%)</title><rect x="82.4723%" y="2293" width="0.0259%" height="15" fill="rgb(247,63,43)" fg:x="28702" fg:w="9"/><text x="82.7223%" y="2303.50"></text></g><g><title>alloc::alloc::Global::grow_impl (9 samples, 0.03%)</title><rect x="82.4723%" y="2277" width="0.0259%" height="15" fill="rgb(254,223,31)" fg:x="28702" fg:w="9"/><text x="82.7223%" y="2287.50"></text></g><g><title>alloc::alloc::realloc (9 samples, 0.03%)</title><rect x="82.4723%" y="2261" width="0.0259%" height="15" fill="rgb(236,185,0)" fg:x="28702" fg:w="9"/><text x="82.7223%" y="2271.50"></text></g><g><title>rallocx (8 samples, 0.02%)</title><rect x="82.4751%" y="2245" width="0.0230%" height="15" fill="rgb(231,139,46)" fg:x="28703" fg:w="8"/><text x="82.7251%" y="2255.50"></text></g><g><title>isalloc (4 samples, 0.01%)</title><rect x="82.4866%" y="2229" width="0.0115%" height="15" fill="rgb(236,147,31)" fg:x="28707" fg:w="4"/><text x="82.7366%" y="2239.50"></text></g><g><title>arena_salloc (4 samples, 0.01%)</title><rect x="82.4866%" y="2213" width="0.0115%" height="15" fill="rgb(225,222,22)" fg:x="28707" fg:w="4"/><text x="82.7366%" y="2223.50"></text></g><g><title>sz_index2size (4 samples, 0.01%)</title><rect x="82.4866%" y="2197" width="0.0115%" height="15" fill="rgb(225,193,14)" fg:x="28707" fg:w="4"/><text x="82.7366%" y="2207.50"></text></g><g><title>sz_index2size_lookup (4 samples, 0.01%)</title><rect x="82.4866%" y="2181" width="0.0115%" height="15" fill="rgb(253,193,46)" fg:x="28707" fg:w="4"/><text x="82.7366%" y="2191.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (15 samples, 0.04%)</title><rect x="82.4579%" y="2453" width="0.0431%" height="15" fill="rgb(218,187,39)" fg:x="28697" fg:w="15"/><text x="82.7079%" y="2463.50"></text></g><g><title>alloc::string::String::push_str (15 samples, 0.04%)</title><rect x="82.4579%" y="2437" width="0.0431%" height="15" fill="rgb(227,162,48)" fg:x="28697" fg:w="15"/><text x="82.7079%" y="2447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (15 samples, 0.04%)</title><rect x="82.4579%" y="2421" width="0.0431%" height="15" fill="rgb(222,25,5)" fg:x="28697" fg:w="15"/><text x="82.7079%" y="2431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (15 samples, 0.04%)</title><rect x="82.4579%" y="2405" width="0.0431%" height="15" fill="rgb(211,205,16)" fg:x="28697" fg:w="15"/><text x="82.7079%" y="2415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (15 samples, 0.04%)</title><rect x="82.4579%" y="2389" width="0.0431%" height="15" fill="rgb(244,191,2)" fg:x="28697" fg:w="15"/><text x="82.7079%" y="2399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (15 samples, 0.04%)</title><rect x="82.4579%" y="2373" width="0.0431%" height="15" fill="rgb(248,159,12)" fg:x="28697" fg:w="15"/><text x="82.7079%" y="2383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (15 samples, 0.04%)</title><rect x="82.4579%" y="2357" width="0.0431%" height="15" fill="rgb(235,204,17)" fg:x="28697" fg:w="15"/><text x="82.7079%" y="2367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (10 samples, 0.03%)</title><rect x="82.4723%" y="2341" width="0.0287%" height="15" fill="rgb(240,21,27)" fg:x="28702" fg:w="10"/><text x="82.7223%" y="2351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (10 samples, 0.03%)</title><rect x="82.4723%" y="2325" width="0.0287%" height="15" fill="rgb(224,170,31)" fg:x="28702" fg:w="10"/><text x="82.7223%" y="2335.50"></text></g><g><title>alloc::raw_vec::finish_grow (10 samples, 0.03%)</title><rect x="82.4723%" y="2309" width="0.0287%" height="15" fill="rgb(223,145,32)" fg:x="28702" fg:w="10"/><text x="82.7223%" y="2319.50"></text></g><g><title>aptos_logger::aptos_logger::text_format (21 samples, 0.06%)</title><rect x="82.4435%" y="2533" width="0.0603%" height="15" fill="rgb(243,100,5)" fg:x="28692" fg:w="21"/><text x="82.6935%" y="2543.50"></text></g><g><title>core::fmt::Write::write_fmt (19 samples, 0.05%)</title><rect x="82.4493%" y="2517" width="0.0546%" height="15" fill="rgb(242,131,51)" fg:x="28694" fg:w="19"/><text x="82.6993%" y="2527.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write::write_fmt::SpecWriteFmt&gt;::spec_write_fmt (19 samples, 0.05%)</title><rect x="82.4493%" y="2501" width="0.0546%" height="15" fill="rgb(223,156,46)" fg:x="28694" fg:w="19"/><text x="82.6993%" y="2511.50"></text></g><g><title>core::fmt::write (19 samples, 0.05%)</title><rect x="82.4493%" y="2485" width="0.0546%" height="15" fill="rgb(215,10,40)" fg:x="28694" fg:w="19"/><text x="82.6993%" y="2495.50"></text></g><g><title>core::fmt::rt::Argument::fmt (16 samples, 0.05%)</title><rect x="82.4579%" y="2469" width="0.0460%" height="15" fill="rgb(233,155,0)" fg:x="28697" fg:w="16"/><text x="82.7079%" y="2479.50"></text></g><g><title>core::ptr::drop_in_place&lt;aptos_logger::aptos_logger::LogEntry&gt; (5 samples, 0.01%)</title><rect x="82.5039%" y="2533" width="0.0144%" height="15" fill="rgb(247,78,6)" fg:x="28713" fg:w="5"/><text x="82.7539%" y="2543.50"></text></g><g><title>aptos (768 samples, 2.21%)</title><rect x="80.3172%" y="2789" width="2.2068%" height="15" fill="rgb(237,217,21)" fg:x="27952" fg:w="768"/><text x="80.5672%" y="2799.50">a..</text></g><g><title>__GI___clone3 (768 samples, 2.21%)</title><rect x="80.3172%" y="2773" width="2.2068%" height="15" fill="rgb(212,1,21)" fg:x="27952" fg:w="768"/><text x="80.5672%" y="2783.50">_..</text></g><g><title>start_thread (768 samples, 2.21%)</title><rect x="80.3172%" y="2757" width="2.2068%" height="15" fill="rgb(213,7,14)" fg:x="27952" fg:w="768"/><text x="80.5672%" y="2767.50">s..</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (768 samples, 2.21%)</title><rect x="80.3172%" y="2741" width="2.2068%" height="15" fill="rgb(225,84,14)" fg:x="27952" fg:w="768"/><text x="80.5672%" y="2751.50">s..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (768 samples, 2.21%)</title><rect x="80.3172%" y="2725" width="2.2068%" height="15" fill="rgb(239,216,39)" fg:x="27952" fg:w="768"/><text x="80.5672%" y="2735.50">&lt;..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (768 samples, 2.21%)</title><rect x="80.3172%" y="2709" width="2.2068%" height="15" fill="rgb(253,29,23)" fg:x="27952" fg:w="768"/><text x="80.5672%" y="2719.50">&lt;..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (768 samples, 2.21%)</title><rect x="80.3172%" y="2693" width="2.2068%" height="15" fill="rgb(220,167,50)" fg:x="27952" fg:w="768"/><text x="80.5672%" y="2703.50">c..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (768 samples, 2.21%)</title><rect x="80.3172%" y="2677" width="2.2068%" height="15" fill="rgb(232,141,1)" fg:x="27952" fg:w="768"/><text x="80.5672%" y="2687.50">s..</text></g><g><title>std::panic::catch_unwind (768 samples, 2.21%)</title><rect x="80.3172%" y="2661" width="2.2068%" height="15" fill="rgb(222,210,1)" fg:x="27952" fg:w="768"/><text x="80.5672%" y="2671.50">s..</text></g><g><title>std::panicking::try (768 samples, 2.21%)</title><rect x="80.3172%" y="2645" width="2.2068%" height="15" fill="rgb(219,84,10)" fg:x="27952" fg:w="768"/><text x="80.5672%" y="2655.50">s..</text></g><g><title>std::panicking::try::do_call (768 samples, 2.21%)</title><rect x="80.3172%" y="2629" width="2.2068%" height="15" fill="rgb(245,188,6)" fg:x="27952" fg:w="768"/><text x="80.5672%" y="2639.50">s..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (768 samples, 2.21%)</title><rect x="80.3172%" y="2613" width="2.2068%" height="15" fill="rgb(252,139,39)" fg:x="27952" fg:w="768"/><text x="80.5672%" y="2623.50">&lt;..</text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (768 samples, 2.21%)</title><rect x="80.3172%" y="2597" width="2.2068%" height="15" fill="rgb(218,42,26)" fg:x="27952" fg:w="768"/><text x="80.5672%" y="2607.50">s..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (768 samples, 2.21%)</title><rect x="80.3172%" y="2581" width="2.2068%" height="15" fill="rgb(237,226,51)" fg:x="27952" fg:w="768"/><text x="80.5672%" y="2591.50">s..</text></g><g><title>aptos_logger::aptos_logger::AptosDataBuilder::build_logger::{{closure}} (77 samples, 0.22%)</title><rect x="82.3027%" y="2565" width="0.2213%" height="15" fill="rgb(246,15,17)" fg:x="28643" fg:w="77"/><text x="82.5527%" y="2575.50"></text></g><g><title>aptos_logger::aptos_logger::LoggerService::run (77 samples, 0.22%)</title><rect x="82.3027%" y="2549" width="0.2213%" height="15" fill="rgb(228,170,42)" fg:x="28643" fg:w="77"/><text x="82.5527%" y="2559.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (5 samples, 0.01%)</title><rect x="82.5843%" y="1285" width="0.0144%" height="15" fill="rgb(248,118,53)" fg:x="28741" fg:w="5"/><text x="82.8343%" y="1295.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (5 samples, 0.01%)</title><rect x="82.5843%" y="1269" width="0.0144%" height="15" fill="rgb(207,30,10)" fg:x="28741" fg:w="5"/><text x="82.8343%" y="1279.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (5 samples, 0.01%)</title><rect x="82.5843%" y="1253" width="0.0144%" height="15" fill="rgb(217,104,38)" fg:x="28741" fg:w="5"/><text x="82.8343%" y="1263.50"></text></g><g><title>rayon_core::job::JobRef::execute (5 samples, 0.01%)</title><rect x="82.5843%" y="1237" width="0.0144%" height="15" fill="rgb(211,165,26)" fg:x="28741" fg:w="5"/><text x="82.8343%" y="1247.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (5 samples, 0.01%)</title><rect x="82.5843%" y="1221" width="0.0144%" height="15" fill="rgb(247,38,9)" fg:x="28741" fg:w="5"/><text x="82.8343%" y="1231.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (5 samples, 0.01%)</title><rect x="82.5843%" y="1205" width="0.0144%" height="15" fill="rgb(218,187,8)" fg:x="28741" fg:w="5"/><text x="82.8343%" y="1215.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (5 samples, 0.01%)</title><rect x="82.5843%" y="1189" width="0.0144%" height="15" fill="rgb(247,94,28)" fg:x="28741" fg:w="5"/><text x="82.8343%" y="1199.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.01%)</title><rect x="82.5843%" y="1173" width="0.0144%" height="15" fill="rgb(218,173,30)" fg:x="28741" fg:w="5"/><text x="82.8343%" y="1183.50"></text></g><g><title>std::panicking::try (5 samples, 0.01%)</title><rect x="82.5843%" y="1157" width="0.0144%" height="15" fill="rgb(245,45,36)" fg:x="28741" fg:w="5"/><text x="82.8343%" y="1167.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.01%)</title><rect x="82.5843%" y="1141" width="0.0144%" height="15" fill="rgb(221,172,44)" fg:x="28741" fg:w="5"/><text x="82.8343%" y="1151.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5 samples, 0.01%)</title><rect x="82.5843%" y="1125" width="0.0144%" height="15" fill="rgb(222,45,12)" fg:x="28741" fg:w="5"/><text x="82.8343%" y="1135.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (5 samples, 0.01%)</title><rect x="82.5843%" y="1109" width="0.0144%" height="15" fill="rgb(250,10,22)" fg:x="28741" fg:w="5"/><text x="82.8343%" y="1119.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (5 samples, 0.01%)</title><rect x="82.5843%" y="1093" width="0.0144%" height="15" fill="rgb(239,27,0)" fg:x="28741" fg:w="5"/><text x="82.8343%" y="1103.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (5 samples, 0.01%)</title><rect x="82.5843%" y="1077" width="0.0144%" height="15" fill="rgb(223,118,22)" fg:x="28741" fg:w="5"/><text x="82.8343%" y="1087.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (5 samples, 0.01%)</title><rect x="82.5843%" y="1061" width="0.0144%" height="15" fill="rgb(251,81,25)" fg:x="28741" fg:w="5"/><text x="82.8343%" y="1071.50"></text></g><g><title>rayon_core::join::join_context (5 samples, 0.01%)</title><rect x="82.5843%" y="1045" width="0.0144%" height="15" fill="rgb(237,225,53)" fg:x="28741" fg:w="5"/><text x="82.8343%" y="1055.50"></text></g><g><title>rayon_core::registry::in_worker (5 samples, 0.01%)</title><rect x="82.5843%" y="1029" width="0.0144%" height="15" fill="rgb(237,186,51)" fg:x="28741" fg:w="5"/><text x="82.8343%" y="1039.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5 samples, 0.01%)</title><rect x="82.5843%" y="1013" width="0.0144%" height="15" fill="rgb(247,209,11)" fg:x="28741" fg:w="5"/><text x="82.8343%" y="1023.50"></text></g><g><title>secp256k1_fe_mul (7 samples, 0.02%)</title><rect x="82.6188%" y="805" width="0.0201%" height="15" fill="rgb(223,109,27)" fg:x="28753" fg:w="7"/><text x="82.8688%" y="815.50"></text></g><g><title>secp256k1_fe_mul_inner (7 samples, 0.02%)</title><rect x="82.6188%" y="789" width="0.0201%" height="15" fill="rgb(246,181,13)" fg:x="28753" fg:w="7"/><text x="82.8688%" y="799.50"></text></g><g><title>secp256k1_ecmult (19 samples, 0.05%)</title><rect x="82.5987%" y="869" width="0.0546%" height="15" fill="rgb(234,57,44)" fg:x="28746" fg:w="19"/><text x="82.8487%" y="879.50"></text></g><g><title>secp256k1_ecmult_strauss_wnaf (19 samples, 0.05%)</title><rect x="82.5987%" y="853" width="0.0546%" height="15" fill="rgb(211,227,50)" fg:x="28746" fg:w="19"/><text x="82.8487%" y="863.50"></text></g><g><title>secp256k1_gej_double_var (12 samples, 0.03%)</title><rect x="82.6188%" y="837" width="0.0345%" height="15" fill="rgb(254,57,34)" fg:x="28753" fg:w="12"/><text x="82.8688%" y="847.50"></text></g><g><title>secp256k1_gej_double_var (12 samples, 0.03%)</title><rect x="82.6188%" y="821" width="0.0345%" height="15" fill="rgb(227,212,26)" fg:x="28753" fg:w="12"/><text x="82.8688%" y="831.50"></text></g><g><title>secp256k1_fe_sqr (5 samples, 0.01%)</title><rect x="82.6389%" y="805" width="0.0144%" height="15" fill="rgb(244,169,44)" fg:x="28760" fg:w="5"/><text x="82.8889%" y="815.50"></text></g><g><title>secp256k1_fe_sqr_inner (5 samples, 0.01%)</title><rect x="82.6389%" y="789" width="0.0144%" height="15" fill="rgb(236,135,50)" fg:x="28760" fg:w="5"/><text x="82.8889%" y="799.50"></text></g><g><title>par_exec_0 (28 samples, 0.08%)</title><rect x="82.5786%" y="2789" width="0.0805%" height="15" fill="rgb(241,89,30)" fg:x="28739" fg:w="28"/><text x="82.8286%" y="2799.50"></text></g><g><title>__GI___clone3 (28 samples, 0.08%)</title><rect x="82.5786%" y="2773" width="0.0805%" height="15" fill="rgb(206,113,34)" fg:x="28739" fg:w="28"/><text x="82.8286%" y="2783.50"></text></g><g><title>start_thread (28 samples, 0.08%)</title><rect x="82.5786%" y="2757" width="0.0805%" height="15" fill="rgb(218,104,52)" fg:x="28739" fg:w="28"/><text x="82.8286%" y="2767.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (28 samples, 0.08%)</title><rect x="82.5786%" y="2741" width="0.0805%" height="15" fill="rgb(223,82,32)" fg:x="28739" fg:w="28"/><text x="82.8286%" y="2751.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (28 samples, 0.08%)</title><rect x="82.5786%" y="2725" width="0.0805%" height="15" fill="rgb(249,219,30)" fg:x="28739" fg:w="28"/><text x="82.8286%" y="2735.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (28 samples, 0.08%)</title><rect x="82.5786%" y="2709" width="0.0805%" height="15" fill="rgb(233,141,21)" fg:x="28739" fg:w="28"/><text x="82.8286%" y="2719.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (28 samples, 0.08%)</title><rect x="82.5786%" y="2693" width="0.0805%" height="15" fill="rgb(252,87,44)" fg:x="28739" fg:w="28"/><text x="82.8286%" y="2703.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (28 samples, 0.08%)</title><rect x="82.5786%" y="2677" width="0.0805%" height="15" fill="rgb(229,48,33)" fg:x="28739" fg:w="28"/><text x="82.8286%" y="2687.50"></text></g><g><title>std::panic::catch_unwind (28 samples, 0.08%)</title><rect x="82.5786%" y="2661" width="0.0805%" height="15" fill="rgb(229,23,22)" fg:x="28739" fg:w="28"/><text x="82.8286%" y="2671.50"></text></g><g><title>std::panicking::try (28 samples, 0.08%)</title><rect x="82.5786%" y="2645" width="0.0805%" height="15" fill="rgb(244,116,16)" fg:x="28739" fg:w="28"/><text x="82.8286%" y="2655.50"></text></g><g><title>std::panicking::try::do_call (28 samples, 0.08%)</title><rect x="82.5786%" y="2629" width="0.0805%" height="15" fill="rgb(247,45,10)" fg:x="28739" fg:w="28"/><text x="82.8286%" y="2639.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (28 samples, 0.08%)</title><rect x="82.5786%" y="2613" width="0.0805%" height="15" fill="rgb(228,60,29)" fg:x="28739" fg:w="28"/><text x="82.8286%" y="2623.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (28 samples, 0.08%)</title><rect x="82.5786%" y="2597" width="0.0805%" height="15" fill="rgb(205,129,15)" fg:x="28739" fg:w="28"/><text x="82.8286%" y="2607.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (28 samples, 0.08%)</title><rect x="82.5786%" y="2581" width="0.0805%" height="15" fill="rgb(206,229,4)" fg:x="28739" fg:w="28"/><text x="82.8286%" y="2591.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (28 samples, 0.08%)</title><rect x="82.5786%" y="2565" width="0.0805%" height="15" fill="rgb(249,191,30)" fg:x="28739" fg:w="28"/><text x="82.8286%" y="2575.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (28 samples, 0.08%)</title><rect x="82.5786%" y="2549" width="0.0805%" height="15" fill="rgb(250,84,54)" fg:x="28739" fg:w="28"/><text x="82.8286%" y="2559.50"></text></g><g><title>rayon_core::registry::main_loop (28 samples, 0.08%)</title><rect x="82.5786%" y="2533" width="0.0805%" height="15" fill="rgb(207,25,53)" fg:x="28739" fg:w="28"/><text x="82.8286%" y="2543.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (28 samples, 0.08%)</title><rect x="82.5786%" y="2517" width="0.0805%" height="15" fill="rgb(235,40,8)" fg:x="28739" fg:w="28"/><text x="82.8286%" y="2527.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (28 samples, 0.08%)</title><rect x="82.5786%" y="2501" width="0.0805%" height="15" fill="rgb(226,169,33)" fg:x="28739" fg:w="28"/><text x="82.8286%" y="2511.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (27 samples, 0.08%)</title><rect x="82.5815%" y="2485" width="0.0776%" height="15" fill="rgb(238,110,8)" fg:x="28740" fg:w="27"/><text x="82.8315%" y="2495.50"></text></g><g><title>rayon_core::job::JobRef::execute (27 samples, 0.08%)</title><rect x="82.5815%" y="2469" width="0.0776%" height="15" fill="rgb(251,206,12)" fg:x="28740" fg:w="27"/><text x="82.8315%" y="2479.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (26 samples, 0.07%)</title><rect x="82.5843%" y="2453" width="0.0747%" height="15" fill="rgb(248,171,18)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="2463.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (26 samples, 0.07%)</title><rect x="82.5843%" y="2437" width="0.0747%" height="15" fill="rgb(213,65,46)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="2447.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (26 samples, 0.07%)</title><rect x="82.5843%" y="2421" width="0.0747%" height="15" fill="rgb(211,154,15)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="2431.50"></text></g><g><title>std::panic::catch_unwind (26 samples, 0.07%)</title><rect x="82.5843%" y="2405" width="0.0747%" height="15" fill="rgb(217,75,43)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="2415.50"></text></g><g><title>std::panicking::try (26 samples, 0.07%)</title><rect x="82.5843%" y="2389" width="0.0747%" height="15" fill="rgb(230,32,33)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="2399.50"></text></g><g><title>std::panicking::try::do_call (26 samples, 0.07%)</title><rect x="82.5843%" y="2373" width="0.0747%" height="15" fill="rgb(221,100,16)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="2383.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (26 samples, 0.07%)</title><rect x="82.5843%" y="2357" width="0.0747%" height="15" fill="rgb(212,129,47)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="2367.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (26 samples, 0.07%)</title><rect x="82.5843%" y="2341" width="0.0747%" height="15" fill="rgb(239,217,47)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="2351.50"></text></g><g><title>rayon_core::registry::Registry::in_worker_cold::{{closure}}::{{closure}} (26 samples, 0.07%)</title><rect x="82.5843%" y="2325" width="0.0747%" height="15" fill="rgb(230,84,24)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="2335.50"></text></g><g><title>rayon_core::thread_pool::ThreadPool::install::{{closure}} (26 samples, 0.07%)</title><rect x="82.5843%" y="2309" width="0.0747%" height="15" fill="rgb(214,153,51)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="2319.50"></text></g><g><title>aptos_block_executor::block_executor::BlockAptosVM::execute_block::{{closure}} (26 samples, 0.07%)</title><rect x="82.5843%" y="2293" width="0.0747%" height="15" fill="rgb(231,6,35)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="2303.50"></text></g><g><title>rayon::iter::ParallelIterator::collect (26 samples, 0.07%)</title><rect x="82.5843%" y="2277" width="0.0747%" height="15" fill="rgb(229,122,30)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="2287.50"></text></g><g><title>rayon::iter::from_par_iter::&lt;impl rayon::iter::FromParallelIterator&lt;T&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_par_iter (26 samples, 0.07%)</title><rect x="82.5843%" y="2261" width="0.0747%" height="15" fill="rgb(234,71,10)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="2271.50"></text></g><g><title>rayon::iter::from_par_iter::collect_extended (26 samples, 0.07%)</title><rect x="82.5843%" y="2245" width="0.0747%" height="15" fill="rgb(215,173,26)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="2255.50"></text></g><g><title>rayon::iter::extend::&lt;impl rayon::iter::ParallelExtend&lt;T&gt; for alloc::vec::Vec&lt;T&gt;&gt;::par_extend (26 samples, 0.07%)</title><rect x="82.5843%" y="2229" width="0.0747%" height="15" fill="rgb(248,118,52)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="2239.50"></text></g><g><title>rayon::iter::collect::special_extend (26 samples, 0.07%)</title><rect x="82.5843%" y="2213" width="0.0747%" height="15" fill="rgb(237,55,46)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="2223.50"></text></g><g><title>rayon::iter::collect::collect_with_consumer (26 samples, 0.07%)</title><rect x="82.5843%" y="2197" width="0.0747%" height="15" fill="rgb(243,214,43)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="2207.50"></text></g><g><title>rayon::iter::collect::special_extend::{{closure}} (26 samples, 0.07%)</title><rect x="82.5843%" y="2181" width="0.0747%" height="15" fill="rgb(252,123,30)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="2191.50"></text></g><g><title>&lt;rayon::iter::map::Map&lt;I,F&gt; as rayon::iter::ParallelIterator&gt;::drive_unindexed (26 samples, 0.07%)</title><rect x="82.5843%" y="2165" width="0.0747%" height="15" fill="rgb(215,73,39)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="2175.50"></text></g><g><title>&lt;rayon::vec::IntoIter&lt;T&gt; as rayon::iter::ParallelIterator&gt;::drive_unindexed (26 samples, 0.07%)</title><rect x="82.5843%" y="2149" width="0.0747%" height="15" fill="rgb(251,194,29)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="2159.50"></text></g><g><title>rayon::iter::plumbing::bridge (26 samples, 0.07%)</title><rect x="82.5843%" y="2133" width="0.0747%" height="15" fill="rgb(224,58,52)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="2143.50"></text></g><g><title>&lt;rayon::vec::IntoIter&lt;T&gt; as rayon::iter::IndexedParallelIterator&gt;::with_producer (26 samples, 0.07%)</title><rect x="82.5843%" y="2117" width="0.0747%" height="15" fill="rgb(248,106,46)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="2127.50"></text></g><g><title>&lt;rayon::vec::Drain&lt;T&gt; as rayon::iter::IndexedParallelIterator&gt;::with_producer (26 samples, 0.07%)</title><rect x="82.5843%" y="2101" width="0.0747%" height="15" fill="rgb(223,80,29)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="2111.50"></text></g><g><title>&lt;rayon::iter::plumbing::bridge::Callback&lt;C&gt; as rayon::iter::plumbing::ProducerCallback&lt;I&gt;&gt;::callback (26 samples, 0.07%)</title><rect x="82.5843%" y="2085" width="0.0747%" height="15" fill="rgb(243,137,9)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="2095.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer (26 samples, 0.07%)</title><rect x="82.5843%" y="2069" width="0.0747%" height="15" fill="rgb(235,121,28)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="2079.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (26 samples, 0.07%)</title><rect x="82.5843%" y="2053" width="0.0747%" height="15" fill="rgb(219,121,41)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="2063.50"></text></g><g><title>rayon_core::join::join_context (26 samples, 0.07%)</title><rect x="82.5843%" y="2037" width="0.0747%" height="15" fill="rgb(251,60,6)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="2047.50"></text></g><g><title>rayon_core::registry::in_worker (26 samples, 0.07%)</title><rect x="82.5843%" y="2021" width="0.0747%" height="15" fill="rgb(208,12,30)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="2031.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (26 samples, 0.07%)</title><rect x="82.5843%" y="2005" width="0.0747%" height="15" fill="rgb(207,176,36)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="2015.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (26 samples, 0.07%)</title><rect x="82.5843%" y="1989" width="0.0747%" height="15" fill="rgb(211,188,29)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="1999.50"></text></g><g><title>std::panic::catch_unwind (26 samples, 0.07%)</title><rect x="82.5843%" y="1973" width="0.0747%" height="15" fill="rgb(220,184,37)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="1983.50"></text></g><g><title>std::panicking::try (26 samples, 0.07%)</title><rect x="82.5843%" y="1957" width="0.0747%" height="15" fill="rgb(239,87,37)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="1967.50"></text></g><g><title>std::panicking::try::do_call (26 samples, 0.07%)</title><rect x="82.5843%" y="1941" width="0.0747%" height="15" fill="rgb(232,113,44)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="1951.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (26 samples, 0.07%)</title><rect x="82.5843%" y="1925" width="0.0747%" height="15" fill="rgb(246,25,39)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="1935.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (26 samples, 0.07%)</title><rect x="82.5843%" y="1909" width="0.0747%" height="15" fill="rgb(247,30,13)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="1919.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (26 samples, 0.07%)</title><rect x="82.5843%" y="1893" width="0.0747%" height="15" fill="rgb(230,176,35)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="1903.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (26 samples, 0.07%)</title><rect x="82.5843%" y="1877" width="0.0747%" height="15" fill="rgb(222,23,18)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="1887.50"></text></g><g><title>rayon_core::join::join_context (26 samples, 0.07%)</title><rect x="82.5843%" y="1861" width="0.0747%" height="15" fill="rgb(234,86,8)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="1871.50"></text></g><g><title>rayon_core::registry::in_worker (26 samples, 0.07%)</title><rect x="82.5843%" y="1845" width="0.0747%" height="15" fill="rgb(206,218,47)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="1855.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (26 samples, 0.07%)</title><rect x="82.5843%" y="1829" width="0.0747%" height="15" fill="rgb(229,35,31)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="1839.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (26 samples, 0.07%)</title><rect x="82.5843%" y="1813" width="0.0747%" height="15" fill="rgb(242,81,7)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="1823.50"></text></g><g><title>std::panic::catch_unwind (26 samples, 0.07%)</title><rect x="82.5843%" y="1797" width="0.0747%" height="15" fill="rgb(231,11,35)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="1807.50"></text></g><g><title>std::panicking::try (26 samples, 0.07%)</title><rect x="82.5843%" y="1781" width="0.0747%" height="15" fill="rgb(219,218,17)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="1791.50"></text></g><g><title>std::panicking::try::do_call (26 samples, 0.07%)</title><rect x="82.5843%" y="1765" width="0.0747%" height="15" fill="rgb(221,83,32)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="1775.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (26 samples, 0.07%)</title><rect x="82.5843%" y="1749" width="0.0747%" height="15" fill="rgb(233,49,54)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="1759.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (26 samples, 0.07%)</title><rect x="82.5843%" y="1733" width="0.0747%" height="15" fill="rgb(206,18,51)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="1743.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (26 samples, 0.07%)</title><rect x="82.5843%" y="1717" width="0.0747%" height="15" fill="rgb(249,193,15)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="1727.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (26 samples, 0.07%)</title><rect x="82.5843%" y="1701" width="0.0747%" height="15" fill="rgb(245,186,19)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="1711.50"></text></g><g><title>rayon_core::join::join_context (26 samples, 0.07%)</title><rect x="82.5843%" y="1685" width="0.0747%" height="15" fill="rgb(230,4,24)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="1695.50"></text></g><g><title>rayon_core::registry::in_worker (26 samples, 0.07%)</title><rect x="82.5843%" y="1669" width="0.0747%" height="15" fill="rgb(234,75,27)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="1679.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (26 samples, 0.07%)</title><rect x="82.5843%" y="1653" width="0.0747%" height="15" fill="rgb(244,187,35)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="1663.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (26 samples, 0.07%)</title><rect x="82.5843%" y="1637" width="0.0747%" height="15" fill="rgb(241,97,43)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="1647.50"></text></g><g><title>std::panic::catch_unwind (26 samples, 0.07%)</title><rect x="82.5843%" y="1621" width="0.0747%" height="15" fill="rgb(236,94,2)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="1631.50"></text></g><g><title>std::panicking::try (26 samples, 0.07%)</title><rect x="82.5843%" y="1605" width="0.0747%" height="15" fill="rgb(231,175,7)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="1615.50"></text></g><g><title>std::panicking::try::do_call (26 samples, 0.07%)</title><rect x="82.5843%" y="1589" width="0.0747%" height="15" fill="rgb(236,89,47)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="1599.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (26 samples, 0.07%)</title><rect x="82.5843%" y="1573" width="0.0747%" height="15" fill="rgb(213,191,37)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="1583.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (26 samples, 0.07%)</title><rect x="82.5843%" y="1557" width="0.0747%" height="15" fill="rgb(252,0,34)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="1567.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (26 samples, 0.07%)</title><rect x="82.5843%" y="1541" width="0.0747%" height="15" fill="rgb(208,145,44)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="1551.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (26 samples, 0.07%)</title><rect x="82.5843%" y="1525" width="0.0747%" height="15" fill="rgb(227,95,50)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="1535.50"></text></g><g><title>rayon_core::join::join_context (26 samples, 0.07%)</title><rect x="82.5843%" y="1509" width="0.0747%" height="15" fill="rgb(222,136,24)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="1519.50"></text></g><g><title>rayon_core::registry::in_worker (26 samples, 0.07%)</title><rect x="82.5843%" y="1493" width="0.0747%" height="15" fill="rgb(218,105,10)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="1503.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (26 samples, 0.07%)</title><rect x="82.5843%" y="1477" width="0.0747%" height="15" fill="rgb(216,65,28)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="1487.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (26 samples, 0.07%)</title><rect x="82.5843%" y="1461" width="0.0747%" height="15" fill="rgb(229,6,28)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="1471.50"></text></g><g><title>std::panic::catch_unwind (26 samples, 0.07%)</title><rect x="82.5843%" y="1445" width="0.0747%" height="15" fill="rgb(222,160,42)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="1455.50"></text></g><g><title>std::panicking::try (26 samples, 0.07%)</title><rect x="82.5843%" y="1429" width="0.0747%" height="15" fill="rgb(235,83,49)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="1439.50"></text></g><g><title>std::panicking::try::do_call (26 samples, 0.07%)</title><rect x="82.5843%" y="1413" width="0.0747%" height="15" fill="rgb(236,86,36)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="1423.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (26 samples, 0.07%)</title><rect x="82.5843%" y="1397" width="0.0747%" height="15" fill="rgb(236,19,41)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="1407.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (26 samples, 0.07%)</title><rect x="82.5843%" y="1381" width="0.0747%" height="15" fill="rgb(217,71,31)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="1391.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (26 samples, 0.07%)</title><rect x="82.5843%" y="1365" width="0.0747%" height="15" fill="rgb(236,209,25)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="1375.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (26 samples, 0.07%)</title><rect x="82.5843%" y="1349" width="0.0747%" height="15" fill="rgb(247,104,21)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="1359.50"></text></g><g><title>rayon_core::join::join_context (26 samples, 0.07%)</title><rect x="82.5843%" y="1333" width="0.0747%" height="15" fill="rgb(243,80,38)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="1343.50"></text></g><g><title>rayon_core::registry::in_worker (26 samples, 0.07%)</title><rect x="82.5843%" y="1317" width="0.0747%" height="15" fill="rgb(232,109,38)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="1327.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (26 samples, 0.07%)</title><rect x="82.5843%" y="1301" width="0.0747%" height="15" fill="rgb(212,177,53)" fg:x="28741" fg:w="26"/><text x="82.8343%" y="1311.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (21 samples, 0.06%)</title><rect x="82.5987%" y="1285" width="0.0603%" height="15" fill="rgb(227,30,34)" fg:x="28746" fg:w="21"/><text x="82.8487%" y="1295.50"></text></g><g><title>std::panic::catch_unwind (21 samples, 0.06%)</title><rect x="82.5987%" y="1269" width="0.0603%" height="15" fill="rgb(205,175,25)" fg:x="28746" fg:w="21"/><text x="82.8487%" y="1279.50"></text></g><g><title>std::panicking::try (21 samples, 0.06%)</title><rect x="82.5987%" y="1253" width="0.0603%" height="15" fill="rgb(249,39,54)" fg:x="28746" fg:w="21"/><text x="82.8487%" y="1263.50"></text></g><g><title>std::panicking::try::do_call (21 samples, 0.06%)</title><rect x="82.5987%" y="1237" width="0.0603%" height="15" fill="rgb(215,54,37)" fg:x="28746" fg:w="21"/><text x="82.8487%" y="1247.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (21 samples, 0.06%)</title><rect x="82.5987%" y="1221" width="0.0603%" height="15" fill="rgb(205,60,46)" fg:x="28746" fg:w="21"/><text x="82.8487%" y="1231.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (21 samples, 0.06%)</title><rect x="82.5987%" y="1205" width="0.0603%" height="15" fill="rgb(238,89,29)" fg:x="28746" fg:w="21"/><text x="82.8487%" y="1215.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (21 samples, 0.06%)</title><rect x="82.5987%" y="1189" width="0.0603%" height="15" fill="rgb(212,48,10)" fg:x="28746" fg:w="21"/><text x="82.8487%" y="1199.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (21 samples, 0.06%)</title><rect x="82.5987%" y="1173" width="0.0603%" height="15" fill="rgb(237,186,28)" fg:x="28746" fg:w="21"/><text x="82.8487%" y="1183.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (21 samples, 0.06%)</title><rect x="82.5987%" y="1157" width="0.0603%" height="15" fill="rgb(237,204,4)" fg:x="28746" fg:w="21"/><text x="82.8487%" y="1167.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (21 samples, 0.06%)</title><rect x="82.5987%" y="1141" width="0.0603%" height="15" fill="rgb(237,15,47)" fg:x="28746" fg:w="21"/><text x="82.8487%" y="1151.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (21 samples, 0.06%)</title><rect x="82.5987%" y="1125" width="0.0603%" height="15" fill="rgb(244,110,25)" fg:x="28746" fg:w="21"/><text x="82.8487%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.06%)</title><rect x="82.5987%" y="1109" width="0.0603%" height="15" fill="rgb(241,12,16)" fg:x="28746" fg:w="21"/><text x="82.8487%" y="1119.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (21 samples, 0.06%)</title><rect x="82.5987%" y="1093" width="0.0603%" height="15" fill="rgb(235,25,9)" fg:x="28746" fg:w="21"/><text x="82.8487%" y="1103.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (21 samples, 0.06%)</title><rect x="82.5987%" y="1077" width="0.0603%" height="15" fill="rgb(245,159,19)" fg:x="28746" fg:w="21"/><text x="82.8487%" y="1087.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (21 samples, 0.06%)</title><rect x="82.5987%" y="1061" width="0.0603%" height="15" fill="rgb(236,63,32)" fg:x="28746" fg:w="21"/><text x="82.8487%" y="1071.50"></text></g><g><title>core::ops::function::Fn::call (21 samples, 0.06%)</title><rect x="82.5987%" y="1045" width="0.0603%" height="15" fill="rgb(235,32,52)" fg:x="28746" fg:w="21"/><text x="82.8487%" y="1055.50"></text></g><g><title>aptos_block_executor::adapter_common::preprocess_transaction (21 samples, 0.06%)</title><rect x="82.5987%" y="1029" width="0.0603%" height="15" fill="rgb(209,176,21)" fg:x="28746" fg:w="21"/><text x="82.8487%" y="1039.50"></text></g><g><title>&lt;aptos_block_executor::aptos_vm::AptosVM as aptos_block_executor::adapter_common::VMAdapter&gt;::check_signature (21 samples, 0.06%)</title><rect x="82.5987%" y="1013" width="0.0603%" height="15" fill="rgb(205,90,42)" fg:x="28746" fg:w="21"/><text x="82.8487%" y="1023.50"></text></g><g><title>aptos_types::transaction::SignedTransaction::check_signature (21 samples, 0.06%)</title><rect x="82.5987%" y="997" width="0.0603%" height="15" fill="rgb(213,132,16)" fg:x="28746" fg:w="21"/><text x="82.8487%" y="1007.50"></text></g><g><title>aptos_types::transaction::authenticator::TransactionAuthenticator::verify (21 samples, 0.06%)</title><rect x="82.5987%" y="981" width="0.0603%" height="15" fill="rgb(232,11,22)" fg:x="28746" fg:w="21"/><text x="82.8487%" y="991.50"></text></g><g><title>&lt;aptos_crypto::secp256k1::Secp256k1Signature as aptos_crypto::traits::Signature&gt;::verify_arbitrary_msg (21 samples, 0.06%)</title><rect x="82.5987%" y="965" width="0.0603%" height="15" fill="rgb(248,167,41)" fg:x="28746" fg:w="21"/><text x="82.8487%" y="975.50"></text></g><g><title>aptos_crypto::secp256k1::Secp256k1Signature::verify_arbitrary_msg (21 samples, 0.06%)</title><rect x="82.5987%" y="949" width="0.0603%" height="15" fill="rgb(209,127,6)" fg:x="28746" fg:w="21"/><text x="82.8487%" y="959.50"></text></g><g><title>cfxkey::signature::verify_public (21 samples, 0.06%)</title><rect x="82.5987%" y="933" width="0.0603%" height="15" fill="rgb(246,210,34)" fg:x="28746" fg:w="21"/><text x="82.8487%" y="943.50"></text></g><g><title>secp256k1::Secp256k1::verify (21 samples, 0.06%)</title><rect x="82.5987%" y="917" width="0.0603%" height="15" fill="rgb(238,165,13)" fg:x="28746" fg:w="21"/><text x="82.8487%" y="927.50"></text></g><g><title>secp256k1_ecdsa_verify (21 samples, 0.06%)</title><rect x="82.5987%" y="901" width="0.0603%" height="15" fill="rgb(233,98,15)" fg:x="28746" fg:w="21"/><text x="82.8487%" y="911.50"></text></g><g><title>secp256k1_ecdsa_sig_verify (21 samples, 0.06%)</title><rect x="82.5987%" y="885" width="0.0603%" height="15" fill="rgb(215,215,51)" fg:x="28746" fg:w="21"/><text x="82.8487%" y="895.50"></text></g><g><title>par_exec_10 (10 samples, 0.03%)</title><rect x="82.6590%" y="2789" width="0.0287%" height="15" fill="rgb(217,161,25)" fg:x="28767" fg:w="10"/><text x="82.9090%" y="2799.50"></text></g><g><title>__GI___clone3 (10 samples, 0.03%)</title><rect x="82.6590%" y="2773" width="0.0287%" height="15" fill="rgb(217,167,48)" fg:x="28767" fg:w="10"/><text x="82.9090%" y="2783.50"></text></g><g><title>start_thread (10 samples, 0.03%)</title><rect x="82.6590%" y="2757" width="0.0287%" height="15" fill="rgb(205,163,34)" fg:x="28767" fg:w="10"/><text x="82.9090%" y="2767.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (10 samples, 0.03%)</title><rect x="82.6590%" y="2741" width="0.0287%" height="15" fill="rgb(241,197,31)" fg:x="28767" fg:w="10"/><text x="82.9090%" y="2751.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (10 samples, 0.03%)</title><rect x="82.6590%" y="2725" width="0.0287%" height="15" fill="rgb(225,123,11)" fg:x="28767" fg:w="10"/><text x="82.9090%" y="2735.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (10 samples, 0.03%)</title><rect x="82.6590%" y="2709" width="0.0287%" height="15" fill="rgb(217,4,20)" fg:x="28767" fg:w="10"/><text x="82.9090%" y="2719.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (10 samples, 0.03%)</title><rect x="82.6590%" y="2693" width="0.0287%" height="15" fill="rgb(215,55,9)" fg:x="28767" fg:w="10"/><text x="82.9090%" y="2703.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (10 samples, 0.03%)</title><rect x="82.6590%" y="2677" width="0.0287%" height="15" fill="rgb(218,165,5)" fg:x="28767" fg:w="10"/><text x="82.9090%" y="2687.50"></text></g><g><title>std::panic::catch_unwind (10 samples, 0.03%)</title><rect x="82.6590%" y="2661" width="0.0287%" height="15" fill="rgb(222,175,15)" fg:x="28767" fg:w="10"/><text x="82.9090%" y="2671.50"></text></g><g><title>std::panicking::try (10 samples, 0.03%)</title><rect x="82.6590%" y="2645" width="0.0287%" height="15" fill="rgb(223,85,34)" fg:x="28767" fg:w="10"/><text x="82.9090%" y="2655.50"></text></g><g><title>std::panicking::try::do_call (10 samples, 0.03%)</title><rect x="82.6590%" y="2629" width="0.0287%" height="15" fill="rgb(234,228,29)" fg:x="28767" fg:w="10"/><text x="82.9090%" y="2639.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (10 samples, 0.03%)</title><rect x="82.6590%" y="2613" width="0.0287%" height="15" fill="rgb(239,7,28)" fg:x="28767" fg:w="10"/><text x="82.9090%" y="2623.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (10 samples, 0.03%)</title><rect x="82.6590%" y="2597" width="0.0287%" height="15" fill="rgb(252,222,53)" fg:x="28767" fg:w="10"/><text x="82.9090%" y="2607.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (10 samples, 0.03%)</title><rect x="82.6590%" y="2581" width="0.0287%" height="15" fill="rgb(232,146,44)" fg:x="28767" fg:w="10"/><text x="82.9090%" y="2591.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (10 samples, 0.03%)</title><rect x="82.6590%" y="2565" width="0.0287%" height="15" fill="rgb(243,223,53)" fg:x="28767" fg:w="10"/><text x="82.9090%" y="2575.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (10 samples, 0.03%)</title><rect x="82.6590%" y="2549" width="0.0287%" height="15" fill="rgb(219,128,25)" fg:x="28767" fg:w="10"/><text x="82.9090%" y="2559.50"></text></g><g><title>rayon_core::registry::main_loop (10 samples, 0.03%)</title><rect x="82.6590%" y="2533" width="0.0287%" height="15" fill="rgb(223,56,32)" fg:x="28767" fg:w="10"/><text x="82.9090%" y="2543.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (10 samples, 0.03%)</title><rect x="82.6590%" y="2517" width="0.0287%" height="15" fill="rgb(237,41,3)" fg:x="28767" fg:w="10"/><text x="82.9090%" y="2527.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (10 samples, 0.03%)</title><rect x="82.6590%" y="2501" width="0.0287%" height="15" fill="rgb(235,138,9)" fg:x="28767" fg:w="10"/><text x="82.9090%" y="2511.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (10 samples, 0.03%)</title><rect x="82.6590%" y="2485" width="0.0287%" height="15" fill="rgb(214,131,10)" fg:x="28767" fg:w="10"/><text x="82.9090%" y="2495.50"></text></g><g><title>rayon_core::job::JobRef::execute (10 samples, 0.03%)</title><rect x="82.6590%" y="2469" width="0.0287%" height="15" fill="rgb(229,89,7)" fg:x="28767" fg:w="10"/><text x="82.9090%" y="2479.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (10 samples, 0.03%)</title><rect x="82.6590%" y="2453" width="0.0287%" height="15" fill="rgb(240,24,42)" fg:x="28767" fg:w="10"/><text x="82.9090%" y="2463.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (10 samples, 0.03%)</title><rect x="82.6590%" y="2437" width="0.0287%" height="15" fill="rgb(243,188,54)" fg:x="28767" fg:w="10"/><text x="82.9090%" y="2447.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (10 samples, 0.03%)</title><rect x="82.6590%" y="2421" width="0.0287%" height="15" fill="rgb(246,92,22)" fg:x="28767" fg:w="10"/><text x="82.9090%" y="2431.50"></text></g><g><title>std::panic::catch_unwind (10 samples, 0.03%)</title><rect x="82.6590%" y="2405" width="0.0287%" height="15" fill="rgb(211,176,51)" fg:x="28767" fg:w="10"/><text x="82.9090%" y="2415.50"></text></g><g><title>std::panicking::try (10 samples, 0.03%)</title><rect x="82.6590%" y="2389" width="0.0287%" height="15" fill="rgb(246,207,34)" fg:x="28767" fg:w="10"/><text x="82.9090%" y="2399.50"></text></g><g><title>std::panicking::try::do_call (10 samples, 0.03%)</title><rect x="82.6590%" y="2373" width="0.0287%" height="15" fill="rgb(239,95,2)" fg:x="28767" fg:w="10"/><text x="82.9090%" y="2383.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (10 samples, 0.03%)</title><rect x="82.6590%" y="2357" width="0.0287%" height="15" fill="rgb(211,124,25)" fg:x="28767" fg:w="10"/><text x="82.9090%" y="2367.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (10 samples, 0.03%)</title><rect x="82.6590%" y="2341" width="0.0287%" height="15" fill="rgb(231,221,19)" fg:x="28767" fg:w="10"/><text x="82.9090%" y="2351.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (10 samples, 0.03%)</title><rect x="82.6590%" y="2325" width="0.0287%" height="15" fill="rgb(239,183,19)" fg:x="28767" fg:w="10"/><text x="82.9090%" y="2335.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (10 samples, 0.03%)</title><rect x="82.6590%" y="2309" width="0.0287%" height="15" fill="rgb(221,130,29)" fg:x="28767" fg:w="10"/><text x="82.9090%" y="2319.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.03%)</title><rect x="82.6590%" y="2293" width="0.0287%" height="15" fill="rgb(206,130,36)" fg:x="28767" fg:w="10"/><text x="82.9090%" y="2303.50"></text></g><g><title>rayon_core::join::join_context (10 samples, 0.03%)</title><rect x="82.6590%" y="2277" width="0.0287%" height="15" fill="rgb(215,70,19)" fg:x="28767" fg:w="10"/><text x="82.9090%" y="2287.50"></text></g><g><title>rayon_core::registry::in_worker (10 samples, 0.03%)</title><rect x="82.6590%" y="2261" width="0.0287%" height="15" fill="rgb(244,16,43)" fg:x="28767" fg:w="10"/><text x="82.9090%" y="2271.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (10 samples, 0.03%)</title><rect x="82.6590%" y="2245" width="0.0287%" height="15" fill="rgb(222,115,32)" fg:x="28767" fg:w="10"/><text x="82.9090%" y="2255.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (7 samples, 0.02%)</title><rect x="82.6677%" y="2229" width="0.0201%" height="15" fill="rgb(247,48,25)" fg:x="28770" fg:w="7"/><text x="82.9177%" y="2239.50"></text></g><g><title>std::panic::catch_unwind (7 samples, 0.02%)</title><rect x="82.6677%" y="2213" width="0.0201%" height="15" fill="rgb(226,180,51)" fg:x="28770" fg:w="7"/><text x="82.9177%" y="2223.50"></text></g><g><title>std::panicking::try (7 samples, 0.02%)</title><rect x="82.6677%" y="2197" width="0.0201%" height="15" fill="rgb(217,142,42)" fg:x="28770" fg:w="7"/><text x="82.9177%" y="2207.50"></text></g><g><title>std::panicking::try::do_call (7 samples, 0.02%)</title><rect x="82.6677%" y="2181" width="0.0201%" height="15" fill="rgb(220,178,3)" fg:x="28770" fg:w="7"/><text x="82.9177%" y="2191.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (7 samples, 0.02%)</title><rect x="82.6677%" y="2165" width="0.0201%" height="15" fill="rgb(217,221,4)" fg:x="28770" fg:w="7"/><text x="82.9177%" y="2175.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (7 samples, 0.02%)</title><rect x="82.6677%" y="2149" width="0.0201%" height="15" fill="rgb(237,63,43)" fg:x="28770" fg:w="7"/><text x="82.9177%" y="2159.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (7 samples, 0.02%)</title><rect x="82.6677%" y="2133" width="0.0201%" height="15" fill="rgb(220,57,8)" fg:x="28770" fg:w="7"/><text x="82.9177%" y="2143.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (7 samples, 0.02%)</title><rect x="82.6677%" y="2117" width="0.0201%" height="15" fill="rgb(254,186,27)" fg:x="28770" fg:w="7"/><text x="82.9177%" y="2127.50"></text></g><g><title>rayon_core::join::join_context (7 samples, 0.02%)</title><rect x="82.6677%" y="2101" width="0.0201%" height="15" fill="rgb(251,57,28)" fg:x="28770" fg:w="7"/><text x="82.9177%" y="2111.50"></text></g><g><title>rayon_core::registry::in_worker (7 samples, 0.02%)</title><rect x="82.6677%" y="2085" width="0.0201%" height="15" fill="rgb(215,228,0)" fg:x="28770" fg:w="7"/><text x="82.9177%" y="2095.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (7 samples, 0.02%)</title><rect x="82.6677%" y="2069" width="0.0201%" height="15" fill="rgb(237,218,39)" fg:x="28770" fg:w="7"/><text x="82.9177%" y="2079.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (4 samples, 0.01%)</title><rect x="82.6763%" y="2053" width="0.0115%" height="15" fill="rgb(207,2,54)" fg:x="28773" fg:w="4"/><text x="82.9263%" y="2063.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.01%)</title><rect x="82.6763%" y="2037" width="0.0115%" height="15" fill="rgb(232,76,50)" fg:x="28773" fg:w="4"/><text x="82.9263%" y="2047.50"></text></g><g><title>std::panicking::try (4 samples, 0.01%)</title><rect x="82.6763%" y="2021" width="0.0115%" height="15" fill="rgb(211,85,31)" fg:x="28773" fg:w="4"/><text x="82.9263%" y="2031.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.01%)</title><rect x="82.6763%" y="2005" width="0.0115%" height="15" fill="rgb(223,210,27)" fg:x="28773" fg:w="4"/><text x="82.9263%" y="2015.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.01%)</title><rect x="82.6763%" y="1989" width="0.0115%" height="15" fill="rgb(254,36,8)" fg:x="28773" fg:w="4"/><text x="82.9263%" y="1999.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (4 samples, 0.01%)</title><rect x="82.6763%" y="1973" width="0.0115%" height="15" fill="rgb(213,4,25)" fg:x="28773" fg:w="4"/><text x="82.9263%" y="1983.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.01%)</title><rect x="82.6763%" y="1957" width="0.0115%" height="15" fill="rgb(224,2,39)" fg:x="28773" fg:w="4"/><text x="82.9263%" y="1967.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.01%)</title><rect x="82.6763%" y="1941" width="0.0115%" height="15" fill="rgb(208,8,39)" fg:x="28773" fg:w="4"/><text x="82.9263%" y="1951.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.01%)</title><rect x="82.6763%" y="1925" width="0.0115%" height="15" fill="rgb(216,226,3)" fg:x="28773" fg:w="4"/><text x="82.9263%" y="1935.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.01%)</title><rect x="82.6763%" y="1909" width="0.0115%" height="15" fill="rgb(249,139,31)" fg:x="28773" fg:w="4"/><text x="82.9263%" y="1919.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.01%)</title><rect x="82.6763%" y="1893" width="0.0115%" height="15" fill="rgb(242,170,35)" fg:x="28773" fg:w="4"/><text x="82.9263%" y="1903.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (7 samples, 0.02%)</title><rect x="82.6878%" y="2229" width="0.0201%" height="15" fill="rgb(238,14,9)" fg:x="28777" fg:w="7"/><text x="82.9378%" y="2239.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (7 samples, 0.02%)</title><rect x="82.6878%" y="2213" width="0.0201%" height="15" fill="rgb(251,81,46)" fg:x="28777" fg:w="7"/><text x="82.9378%" y="2223.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (7 samples, 0.02%)</title><rect x="82.6878%" y="2197" width="0.0201%" height="15" fill="rgb(230,23,4)" fg:x="28777" fg:w="7"/><text x="82.9378%" y="2207.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (7 samples, 0.02%)</title><rect x="82.6878%" y="2181" width="0.0201%" height="15" fill="rgb(211,85,25)" fg:x="28777" fg:w="7"/><text x="82.9378%" y="2191.50"></text></g><g><title>rayon_core::join::join_context (7 samples, 0.02%)</title><rect x="82.6878%" y="2165" width="0.0201%" height="15" fill="rgb(252,23,31)" fg:x="28777" fg:w="7"/><text x="82.9378%" y="2175.50"></text></g><g><title>rayon_core::registry::in_worker (7 samples, 0.02%)</title><rect x="82.6878%" y="2149" width="0.0201%" height="15" fill="rgb(234,163,38)" fg:x="28777" fg:w="7"/><text x="82.9378%" y="2159.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (7 samples, 0.02%)</title><rect x="82.6878%" y="2133" width="0.0201%" height="15" fill="rgb(210,190,50)" fg:x="28777" fg:w="7"/><text x="82.9378%" y="2143.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (4 samples, 0.01%)</title><rect x="82.7079%" y="2229" width="0.0115%" height="15" fill="rgb(228,158,3)" fg:x="28784" fg:w="4"/><text x="82.9579%" y="2239.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (4 samples, 0.01%)</title><rect x="82.7079%" y="2213" width="0.0115%" height="15" fill="rgb(216,130,0)" fg:x="28784" fg:w="4"/><text x="82.9579%" y="2223.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (4 samples, 0.01%)</title><rect x="82.7079%" y="2197" width="0.0115%" height="15" fill="rgb(224,184,10)" fg:x="28784" fg:w="4"/><text x="82.9579%" y="2207.50"></text></g><g><title>rayon_core::job::JobRef::execute (4 samples, 0.01%)</title><rect x="82.7079%" y="2181" width="0.0115%" height="15" fill="rgb(214,202,18)" fg:x="28784" fg:w="4"/><text x="82.9579%" y="2191.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (4 samples, 0.01%)</title><rect x="82.7079%" y="2165" width="0.0115%" height="15" fill="rgb(213,229,54)" fg:x="28784" fg:w="4"/><text x="82.9579%" y="2175.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (4 samples, 0.01%)</title><rect x="82.7079%" y="2149" width="0.0115%" height="15" fill="rgb(246,120,0)" fg:x="28784" fg:w="4"/><text x="82.9579%" y="2159.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (4 samples, 0.01%)</title><rect x="82.7079%" y="2133" width="0.0115%" height="15" fill="rgb(237,6,15)" fg:x="28784" fg:w="4"/><text x="82.9579%" y="2143.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.01%)</title><rect x="82.7079%" y="2117" width="0.0115%" height="15" fill="rgb(252,156,15)" fg:x="28784" fg:w="4"/><text x="82.9579%" y="2127.50"></text></g><g><title>std::panicking::try (4 samples, 0.01%)</title><rect x="82.7079%" y="2101" width="0.0115%" height="15" fill="rgb(249,78,18)" fg:x="28784" fg:w="4"/><text x="82.9579%" y="2111.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.01%)</title><rect x="82.7079%" y="2085" width="0.0115%" height="15" fill="rgb(230,223,44)" fg:x="28784" fg:w="4"/><text x="82.9579%" y="2095.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.01%)</title><rect x="82.7079%" y="2069" width="0.0115%" height="15" fill="rgb(230,222,32)" fg:x="28784" fg:w="4"/><text x="82.9579%" y="2079.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (4 samples, 0.01%)</title><rect x="82.7079%" y="2053" width="0.0115%" height="15" fill="rgb(247,54,6)" fg:x="28784" fg:w="4"/><text x="82.9579%" y="2063.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (4 samples, 0.01%)</title><rect x="82.7079%" y="2037" width="0.0115%" height="15" fill="rgb(247,115,45)" fg:x="28784" fg:w="4"/><text x="82.9579%" y="2047.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.01%)</title><rect x="82.7079%" y="2021" width="0.0115%" height="15" fill="rgb(213,203,37)" fg:x="28784" fg:w="4"/><text x="82.9579%" y="2031.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.01%)</title><rect x="82.7079%" y="2005" width="0.0115%" height="15" fill="rgb(248,188,18)" fg:x="28784" fg:w="4"/><text x="82.9579%" y="2015.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.01%)</title><rect x="82.7079%" y="1989" width="0.0115%" height="15" fill="rgb(206,80,8)" fg:x="28784" fg:w="4"/><text x="82.9579%" y="1999.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.01%)</title><rect x="82.7079%" y="1973" width="0.0115%" height="15" fill="rgb(245,217,31)" fg:x="28784" fg:w="4"/><text x="82.9579%" y="1983.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.01%)</title><rect x="82.7079%" y="1957" width="0.0115%" height="15" fill="rgb(220,193,15)" fg:x="28784" fg:w="4"/><text x="82.9579%" y="1967.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (4 samples, 0.01%)</title><rect x="82.7223%" y="1941" width="0.0115%" height="15" fill="rgb(226,7,19)" fg:x="28789" fg:w="4"/><text x="82.9723%" y="1951.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (4 samples, 0.01%)</title><rect x="82.7223%" y="1925" width="0.0115%" height="15" fill="rgb(222,145,31)" fg:x="28789" fg:w="4"/><text x="82.9723%" y="1935.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (4 samples, 0.01%)</title><rect x="82.7223%" y="1909" width="0.0115%" height="15" fill="rgb(241,193,36)" fg:x="28789" fg:w="4"/><text x="82.9723%" y="1919.50"></text></g><g><title>rayon_core::job::JobRef::execute (4 samples, 0.01%)</title><rect x="82.7223%" y="1893" width="0.0115%" height="15" fill="rgb(225,123,33)" fg:x="28789" fg:w="4"/><text x="82.9723%" y="1903.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (4 samples, 0.01%)</title><rect x="82.7223%" y="1877" width="0.0115%" height="15" fill="rgb(246,136,38)" fg:x="28789" fg:w="4"/><text x="82.9723%" y="1887.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (4 samples, 0.01%)</title><rect x="82.7223%" y="1861" width="0.0115%" height="15" fill="rgb(243,56,24)" fg:x="28789" fg:w="4"/><text x="82.9723%" y="1871.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (4 samples, 0.01%)</title><rect x="82.7223%" y="1845" width="0.0115%" height="15" fill="rgb(215,147,2)" fg:x="28789" fg:w="4"/><text x="82.9723%" y="1855.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.01%)</title><rect x="82.7223%" y="1829" width="0.0115%" height="15" fill="rgb(209,155,27)" fg:x="28789" fg:w="4"/><text x="82.9723%" y="1839.50"></text></g><g><title>std::panicking::try (4 samples, 0.01%)</title><rect x="82.7223%" y="1813" width="0.0115%" height="15" fill="rgb(222,177,11)" fg:x="28789" fg:w="4"/><text x="82.9723%" y="1823.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.01%)</title><rect x="82.7223%" y="1797" width="0.0115%" height="15" fill="rgb(212,227,15)" fg:x="28789" fg:w="4"/><text x="82.9723%" y="1807.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.01%)</title><rect x="82.7223%" y="1781" width="0.0115%" height="15" fill="rgb(214,138,20)" fg:x="28789" fg:w="4"/><text x="82.9723%" y="1791.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (4 samples, 0.01%)</title><rect x="82.7223%" y="1765" width="0.0115%" height="15" fill="rgb(221,170,31)" fg:x="28789" fg:w="4"/><text x="82.9723%" y="1775.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (4 samples, 0.01%)</title><rect x="82.7223%" y="1749" width="0.0115%" height="15" fill="rgb(253,207,5)" fg:x="28789" fg:w="4"/><text x="82.9723%" y="1759.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.01%)</title><rect x="82.7223%" y="1733" width="0.0115%" height="15" fill="rgb(212,64,37)" fg:x="28789" fg:w="4"/><text x="82.9723%" y="1743.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.01%)</title><rect x="82.7223%" y="1717" width="0.0115%" height="15" fill="rgb(208,113,51)" fg:x="28789" fg:w="4"/><text x="82.9723%" y="1727.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.01%)</title><rect x="82.7223%" y="1701" width="0.0115%" height="15" fill="rgb(237,15,5)" fg:x="28789" fg:w="4"/><text x="82.9723%" y="1711.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.01%)</title><rect x="82.7223%" y="1685" width="0.0115%" height="15" fill="rgb(238,33,18)" fg:x="28789" fg:w="4"/><text x="82.9723%" y="1695.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.01%)</title><rect x="82.7223%" y="1669" width="0.0115%" height="15" fill="rgb(253,206,50)" fg:x="28789" fg:w="4"/><text x="82.9723%" y="1679.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (6 samples, 0.02%)</title><rect x="82.7194%" y="2053" width="0.0172%" height="15" fill="rgb(242,158,43)" fg:x="28788" fg:w="6"/><text x="82.9694%" y="2063.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (6 samples, 0.02%)</title><rect x="82.7194%" y="2037" width="0.0172%" height="15" fill="rgb(213,125,27)" fg:x="28788" fg:w="6"/><text x="82.9694%" y="2047.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (6 samples, 0.02%)</title><rect x="82.7194%" y="2021" width="0.0172%" height="15" fill="rgb(233,161,31)" fg:x="28788" fg:w="6"/><text x="82.9694%" y="2031.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (6 samples, 0.02%)</title><rect x="82.7194%" y="2005" width="0.0172%" height="15" fill="rgb(218,135,6)" fg:x="28788" fg:w="6"/><text x="82.9694%" y="2015.50"></text></g><g><title>rayon_core::join::join_context (6 samples, 0.02%)</title><rect x="82.7194%" y="1989" width="0.0172%" height="15" fill="rgb(222,73,53)" fg:x="28788" fg:w="6"/><text x="82.9694%" y="1999.50"></text></g><g><title>rayon_core::registry::in_worker (6 samples, 0.02%)</title><rect x="82.7194%" y="1973" width="0.0172%" height="15" fill="rgb(229,66,53)" fg:x="28788" fg:w="6"/><text x="82.9694%" y="1983.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (6 samples, 0.02%)</title><rect x="82.7194%" y="1957" width="0.0172%" height="15" fill="rgb(208,128,19)" fg:x="28788" fg:w="6"/><text x="82.9694%" y="1967.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (5 samples, 0.01%)</title><rect x="82.7395%" y="1877" width="0.0144%" height="15" fill="rgb(235,70,27)" fg:x="28795" fg:w="5"/><text x="82.9895%" y="1887.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (5 samples, 0.01%)</title><rect x="82.7395%" y="1861" width="0.0144%" height="15" fill="rgb(241,130,30)" fg:x="28795" fg:w="5"/><text x="82.9895%" y="1871.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (5 samples, 0.01%)</title><rect x="82.7395%" y="1845" width="0.0144%" height="15" fill="rgb(222,57,48)" fg:x="28795" fg:w="5"/><text x="82.9895%" y="1855.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (5 samples, 0.01%)</title><rect x="82.7395%" y="1829" width="0.0144%" height="15" fill="rgb(225,204,29)" fg:x="28795" fg:w="5"/><text x="82.9895%" y="1839.50"></text></g><g><title>rayon_core::join::join_context (5 samples, 0.01%)</title><rect x="82.7395%" y="1813" width="0.0144%" height="15" fill="rgb(240,196,35)" fg:x="28795" fg:w="5"/><text x="82.9895%" y="1823.50"></text></g><g><title>rayon_core::registry::in_worker (5 samples, 0.01%)</title><rect x="82.7395%" y="1797" width="0.0144%" height="15" fill="rgb(215,150,16)" fg:x="28795" fg:w="5"/><text x="82.9895%" y="1807.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5 samples, 0.01%)</title><rect x="82.7395%" y="1781" width="0.0144%" height="15" fill="rgb(209,170,13)" fg:x="28795" fg:w="5"/><text x="82.9895%" y="1791.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (5 samples, 0.01%)</title><rect x="82.7567%" y="1701" width="0.0144%" height="15" fill="rgb(235,75,31)" fg:x="28801" fg:w="5"/><text x="83.0067%" y="1711.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (5 samples, 0.01%)</title><rect x="82.7567%" y="1685" width="0.0144%" height="15" fill="rgb(252,1,47)" fg:x="28801" fg:w="5"/><text x="83.0067%" y="1695.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (5 samples, 0.01%)</title><rect x="82.7567%" y="1669" width="0.0144%" height="15" fill="rgb(241,2,36)" fg:x="28801" fg:w="5"/><text x="83.0067%" y="1679.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (5 samples, 0.01%)</title><rect x="82.7567%" y="1653" width="0.0144%" height="15" fill="rgb(236,191,4)" fg:x="28801" fg:w="5"/><text x="83.0067%" y="1663.50"></text></g><g><title>rayon_core::join::join_context (5 samples, 0.01%)</title><rect x="82.7567%" y="1637" width="0.0144%" height="15" fill="rgb(212,65,35)" fg:x="28801" fg:w="5"/><text x="83.0067%" y="1647.50"></text></g><g><title>rayon_core::registry::in_worker (5 samples, 0.01%)</title><rect x="82.7567%" y="1621" width="0.0144%" height="15" fill="rgb(209,49,33)" fg:x="28801" fg:w="5"/><text x="83.0067%" y="1631.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5 samples, 0.01%)</title><rect x="82.7567%" y="1605" width="0.0144%" height="15" fill="rgb(208,36,46)" fg:x="28801" fg:w="5"/><text x="83.0067%" y="1615.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (4 samples, 0.01%)</title><rect x="82.7596%" y="1589" width="0.0115%" height="15" fill="rgb(210,125,2)" fg:x="28802" fg:w="4"/><text x="83.0096%" y="1599.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.01%)</title><rect x="82.7596%" y="1573" width="0.0115%" height="15" fill="rgb(225,62,6)" fg:x="28802" fg:w="4"/><text x="83.0096%" y="1583.50"></text></g><g><title>std::panicking::try (4 samples, 0.01%)</title><rect x="82.7596%" y="1557" width="0.0115%" height="15" fill="rgb(210,54,27)" fg:x="28802" fg:w="4"/><text x="83.0096%" y="1567.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.01%)</title><rect x="82.7596%" y="1541" width="0.0115%" height="15" fill="rgb(249,189,52)" fg:x="28802" fg:w="4"/><text x="83.0096%" y="1551.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.01%)</title><rect x="82.7596%" y="1525" width="0.0115%" height="15" fill="rgb(225,134,40)" fg:x="28802" fg:w="4"/><text x="83.0096%" y="1535.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (4 samples, 0.01%)</title><rect x="82.7596%" y="1509" width="0.0115%" height="15" fill="rgb(206,13,37)" fg:x="28802" fg:w="4"/><text x="83.0096%" y="1519.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.01%)</title><rect x="82.7596%" y="1493" width="0.0115%" height="15" fill="rgb(232,114,28)" fg:x="28802" fg:w="4"/><text x="83.0096%" y="1503.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.01%)</title><rect x="82.7596%" y="1477" width="0.0115%" height="15" fill="rgb(253,215,8)" fg:x="28802" fg:w="4"/><text x="83.0096%" y="1487.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.01%)</title><rect x="82.7596%" y="1461" width="0.0115%" height="15" fill="rgb(254,64,19)" fg:x="28802" fg:w="4"/><text x="83.0096%" y="1471.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.01%)</title><rect x="82.7596%" y="1445" width="0.0115%" height="15" fill="rgb(242,18,46)" fg:x="28802" fg:w="4"/><text x="83.0096%" y="1455.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.01%)</title><rect x="82.7596%" y="1429" width="0.0115%" height="15" fill="rgb(239,192,30)" fg:x="28802" fg:w="4"/><text x="83.0096%" y="1439.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (4 samples, 0.01%)</title><rect x="82.7596%" y="1413" width="0.0115%" height="15" fill="rgb(232,73,14)" fg:x="28802" fg:w="4"/><text x="83.0096%" y="1423.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.01%)</title><rect x="82.7596%" y="1397" width="0.0115%" height="15" fill="rgb(225,51,9)" fg:x="28802" fg:w="4"/><text x="83.0096%" y="1407.50"></text></g><g><title>std::panicking::try (4 samples, 0.01%)</title><rect x="82.7596%" y="1381" width="0.0115%" height="15" fill="rgb(242,217,54)" fg:x="28802" fg:w="4"/><text x="83.0096%" y="1391.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.01%)</title><rect x="82.7596%" y="1365" width="0.0115%" height="15" fill="rgb(216,93,3)" fg:x="28802" fg:w="4"/><text x="83.0096%" y="1375.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.01%)</title><rect x="82.7596%" y="1349" width="0.0115%" height="15" fill="rgb(230,119,33)" fg:x="28802" fg:w="4"/><text x="83.0096%" y="1359.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (4 samples, 0.01%)</title><rect x="82.7596%" y="1333" width="0.0115%" height="15" fill="rgb(238,170,27)" fg:x="28802" fg:w="4"/><text x="83.0096%" y="1343.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.01%)</title><rect x="82.7596%" y="1317" width="0.0115%" height="15" fill="rgb(229,8,2)" fg:x="28802" fg:w="4"/><text x="83.0096%" y="1327.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.01%)</title><rect x="82.7596%" y="1301" width="0.0115%" height="15" fill="rgb(205,214,42)" fg:x="28802" fg:w="4"/><text x="83.0096%" y="1311.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (4 samples, 0.01%)</title><rect x="82.7596%" y="1285" width="0.0115%" height="15" fill="rgb(245,113,1)" fg:x="28802" fg:w="4"/><text x="83.0096%" y="1295.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (4 samples, 0.01%)</title><rect x="82.7596%" y="1269" width="0.0115%" height="15" fill="rgb(252,50,2)" fg:x="28802" fg:w="4"/><text x="83.0096%" y="1279.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (4 samples, 0.01%)</title><rect x="82.7596%" y="1253" width="0.0115%" height="15" fill="rgb(225,122,24)" fg:x="28802" fg:w="4"/><text x="83.0096%" y="1263.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="82.7596%" y="1237" width="0.0115%" height="15" fill="rgb(234,129,31)" fg:x="28802" fg:w="4"/><text x="83.0096%" y="1247.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4 samples, 0.01%)</title><rect x="82.7596%" y="1221" width="0.0115%" height="15" fill="rgb(219,177,4)" fg:x="28802" fg:w="4"/><text x="83.0096%" y="1231.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (4 samples, 0.01%)</title><rect x="82.7596%" y="1205" width="0.0115%" height="15" fill="rgb(225,142,27)" fg:x="28802" fg:w="4"/><text x="83.0096%" y="1215.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (4 samples, 0.01%)</title><rect x="82.7596%" y="1189" width="0.0115%" height="15" fill="rgb(205,107,51)" fg:x="28802" fg:w="4"/><text x="83.0096%" y="1199.50"></text></g><g><title>core::ops::function::Fn::call (4 samples, 0.01%)</title><rect x="82.7596%" y="1173" width="0.0115%" height="15" fill="rgb(236,223,15)" fg:x="28802" fg:w="4"/><text x="83.0096%" y="1183.50"></text></g><g><title>aptos_block_executor::adapter_common::preprocess_transaction (4 samples, 0.01%)</title><rect x="82.7596%" y="1157" width="0.0115%" height="15" fill="rgb(235,133,11)" fg:x="28802" fg:w="4"/><text x="83.0096%" y="1167.50"></text></g><g><title>&lt;aptos_block_executor::aptos_vm::AptosVM as aptos_block_executor::adapter_common::VMAdapter&gt;::check_signature (4 samples, 0.01%)</title><rect x="82.7596%" y="1141" width="0.0115%" height="15" fill="rgb(247,172,13)" fg:x="28802" fg:w="4"/><text x="83.0096%" y="1151.50"></text></g><g><title>aptos_types::transaction::SignedTransaction::check_signature (4 samples, 0.01%)</title><rect x="82.7596%" y="1125" width="0.0115%" height="15" fill="rgb(233,191,41)" fg:x="28802" fg:w="4"/><text x="83.0096%" y="1135.50"></text></g><g><title>aptos_types::transaction::authenticator::TransactionAuthenticator::verify (4 samples, 0.01%)</title><rect x="82.7596%" y="1109" width="0.0115%" height="15" fill="rgb(250,65,16)" fg:x="28802" fg:w="4"/><text x="83.0096%" y="1119.50"></text></g><g><title>&lt;aptos_crypto::secp256k1::Secp256k1Signature as aptos_crypto::traits::Signature&gt;::verify_arbitrary_msg (4 samples, 0.01%)</title><rect x="82.7596%" y="1093" width="0.0115%" height="15" fill="rgb(206,10,27)" fg:x="28802" fg:w="4"/><text x="83.0096%" y="1103.50"></text></g><g><title>aptos_crypto::secp256k1::Secp256k1Signature::verify_arbitrary_msg (4 samples, 0.01%)</title><rect x="82.7596%" y="1077" width="0.0115%" height="15" fill="rgb(212,96,22)" fg:x="28802" fg:w="4"/><text x="83.0096%" y="1087.50"></text></g><g><title>cfxkey::signature::verify_public (4 samples, 0.01%)</title><rect x="82.7596%" y="1061" width="0.0115%" height="15" fill="rgb(206,50,0)" fg:x="28802" fg:w="4"/><text x="83.0096%" y="1071.50"></text></g><g><title>secp256k1::Secp256k1::verify (4 samples, 0.01%)</title><rect x="82.7596%" y="1045" width="0.0115%" height="15" fill="rgb(249,105,52)" fg:x="28802" fg:w="4"/><text x="83.0096%" y="1055.50"></text></g><g><title>secp256k1_ecdsa_verify (4 samples, 0.01%)</title><rect x="82.7596%" y="1029" width="0.0115%" height="15" fill="rgb(216,93,51)" fg:x="28802" fg:w="4"/><text x="83.0096%" y="1039.50"></text></g><g><title>secp256k1_ecdsa_sig_verify (4 samples, 0.01%)</title><rect x="82.7596%" y="1013" width="0.0115%" height="15" fill="rgb(217,172,13)" fg:x="28802" fg:w="4"/><text x="83.0096%" y="1023.50"></text></g><g><title>secp256k1_ecmult (4 samples, 0.01%)</title><rect x="82.7596%" y="997" width="0.0115%" height="15" fill="rgb(235,199,38)" fg:x="28802" fg:w="4"/><text x="83.0096%" y="1007.50"></text></g><g><title>secp256k1_ecmult_strauss_wnaf (4 samples, 0.01%)</title><rect x="82.7596%" y="981" width="0.0115%" height="15" fill="rgb(221,97,33)" fg:x="28802" fg:w="4"/><text x="83.0096%" y="991.50"></text></g><g><title>secp256k1_gej_double_var (4 samples, 0.01%)</title><rect x="82.7596%" y="965" width="0.0115%" height="15" fill="rgb(205,156,50)" fg:x="28802" fg:w="4"/><text x="83.0096%" y="975.50"></text></g><g><title>secp256k1_gej_double_var (4 samples, 0.01%)</title><rect x="82.7596%" y="949" width="0.0115%" height="15" fill="rgb(215,142,19)" fg:x="28802" fg:w="4"/><text x="83.0096%" y="959.50"></text></g><g><title>secp256k1_fe_mul (4 samples, 0.01%)</title><rect x="82.7596%" y="933" width="0.0115%" height="15" fill="rgb(232,170,7)" fg:x="28802" fg:w="4"/><text x="83.0096%" y="943.50"></text></g><g><title>secp256k1_fe_mul_inner (4 samples, 0.01%)</title><rect x="82.7596%" y="917" width="0.0115%" height="15" fill="rgb(223,50,17)" fg:x="28802" fg:w="4"/><text x="83.0096%" y="927.50"></text></g><g><title>par_exec_11 (30 samples, 0.09%)</title><rect x="82.6878%" y="2789" width="0.0862%" height="15" fill="rgb(230,103,46)" fg:x="28777" fg:w="30"/><text x="82.9378%" y="2799.50"></text></g><g><title>__GI___clone3 (30 samples, 0.09%)</title><rect x="82.6878%" y="2773" width="0.0862%" height="15" fill="rgb(254,30,34)" fg:x="28777" fg:w="30"/><text x="82.9378%" y="2783.50"></text></g><g><title>start_thread (30 samples, 0.09%)</title><rect x="82.6878%" y="2757" width="0.0862%" height="15" fill="rgb(235,198,1)" fg:x="28777" fg:w="30"/><text x="82.9378%" y="2767.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (30 samples, 0.09%)</title><rect x="82.6878%" y="2741" width="0.0862%" height="15" fill="rgb(217,105,47)" fg:x="28777" fg:w="30"/><text x="82.9378%" y="2751.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (30 samples, 0.09%)</title><rect x="82.6878%" y="2725" width="0.0862%" height="15" fill="rgb(231,18,12)" fg:x="28777" fg:w="30"/><text x="82.9378%" y="2735.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (30 samples, 0.09%)</title><rect x="82.6878%" y="2709" width="0.0862%" height="15" fill="rgb(218,196,1)" fg:x="28777" fg:w="30"/><text x="82.9378%" y="2719.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (30 samples, 0.09%)</title><rect x="82.6878%" y="2693" width="0.0862%" height="15" fill="rgb(210,32,3)" fg:x="28777" fg:w="30"/><text x="82.9378%" y="2703.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (30 samples, 0.09%)</title><rect x="82.6878%" y="2677" width="0.0862%" height="15" fill="rgb(227,178,30)" fg:x="28777" fg:w="30"/><text x="82.9378%" y="2687.50"></text></g><g><title>std::panic::catch_unwind (30 samples, 0.09%)</title><rect x="82.6878%" y="2661" width="0.0862%" height="15" fill="rgb(231,140,27)" fg:x="28777" fg:w="30"/><text x="82.9378%" y="2671.50"></text></g><g><title>std::panicking::try (30 samples, 0.09%)</title><rect x="82.6878%" y="2645" width="0.0862%" height="15" fill="rgb(206,66,35)" fg:x="28777" fg:w="30"/><text x="82.9378%" y="2655.50"></text></g><g><title>std::panicking::try::do_call (30 samples, 0.09%)</title><rect x="82.6878%" y="2629" width="0.0862%" height="15" fill="rgb(212,34,2)" fg:x="28777" fg:w="30"/><text x="82.9378%" y="2639.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (30 samples, 0.09%)</title><rect x="82.6878%" y="2613" width="0.0862%" height="15" fill="rgb(207,201,33)" fg:x="28777" fg:w="30"/><text x="82.9378%" y="2623.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (30 samples, 0.09%)</title><rect x="82.6878%" y="2597" width="0.0862%" height="15" fill="rgb(221,135,32)" fg:x="28777" fg:w="30"/><text x="82.9378%" y="2607.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (30 samples, 0.09%)</title><rect x="82.6878%" y="2581" width="0.0862%" height="15" fill="rgb(206,77,31)" fg:x="28777" fg:w="30"/><text x="82.9378%" y="2591.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (30 samples, 0.09%)</title><rect x="82.6878%" y="2565" width="0.0862%" height="15" fill="rgb(252,198,50)" fg:x="28777" fg:w="30"/><text x="82.9378%" y="2575.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (30 samples, 0.09%)</title><rect x="82.6878%" y="2549" width="0.0862%" height="15" fill="rgb(206,79,27)" fg:x="28777" fg:w="30"/><text x="82.9378%" y="2559.50"></text></g><g><title>rayon_core::registry::main_loop (30 samples, 0.09%)</title><rect x="82.6878%" y="2533" width="0.0862%" height="15" fill="rgb(228,108,9)" fg:x="28777" fg:w="30"/><text x="82.9378%" y="2543.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (30 samples, 0.09%)</title><rect x="82.6878%" y="2517" width="0.0862%" height="15" fill="rgb(213,9,39)" fg:x="28777" fg:w="30"/><text x="82.9378%" y="2527.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (30 samples, 0.09%)</title><rect x="82.6878%" y="2501" width="0.0862%" height="15" fill="rgb(252,51,13)" fg:x="28777" fg:w="30"/><text x="82.9378%" y="2511.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (30 samples, 0.09%)</title><rect x="82.6878%" y="2485" width="0.0862%" height="15" fill="rgb(218,202,39)" fg:x="28777" fg:w="30"/><text x="82.9378%" y="2495.50"></text></g><g><title>rayon_core::job::JobRef::execute (30 samples, 0.09%)</title><rect x="82.6878%" y="2469" width="0.0862%" height="15" fill="rgb(214,122,21)" fg:x="28777" fg:w="30"/><text x="82.9378%" y="2479.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (30 samples, 0.09%)</title><rect x="82.6878%" y="2453" width="0.0862%" height="15" fill="rgb(217,205,48)" fg:x="28777" fg:w="30"/><text x="82.9378%" y="2463.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (30 samples, 0.09%)</title><rect x="82.6878%" y="2437" width="0.0862%" height="15" fill="rgb(230,216,13)" fg:x="28777" fg:w="30"/><text x="82.9378%" y="2447.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (30 samples, 0.09%)</title><rect x="82.6878%" y="2421" width="0.0862%" height="15" fill="rgb(249,118,4)" fg:x="28777" fg:w="30"/><text x="82.9378%" y="2431.50"></text></g><g><title>std::panic::catch_unwind (30 samples, 0.09%)</title><rect x="82.6878%" y="2405" width="0.0862%" height="15" fill="rgb(212,207,40)" fg:x="28777" fg:w="30"/><text x="82.9378%" y="2415.50"></text></g><g><title>std::panicking::try (30 samples, 0.09%)</title><rect x="82.6878%" y="2389" width="0.0862%" height="15" fill="rgb(217,156,26)" fg:x="28777" fg:w="30"/><text x="82.9378%" y="2399.50"></text></g><g><title>std::panicking::try::do_call (30 samples, 0.09%)</title><rect x="82.6878%" y="2373" width="0.0862%" height="15" fill="rgb(226,86,34)" fg:x="28777" fg:w="30"/><text x="82.9378%" y="2383.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (30 samples, 0.09%)</title><rect x="82.6878%" y="2357" width="0.0862%" height="15" fill="rgb(217,111,30)" fg:x="28777" fg:w="30"/><text x="82.9378%" y="2367.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (30 samples, 0.09%)</title><rect x="82.6878%" y="2341" width="0.0862%" height="15" fill="rgb(228,64,18)" fg:x="28777" fg:w="30"/><text x="82.9378%" y="2351.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (30 samples, 0.09%)</title><rect x="82.6878%" y="2325" width="0.0862%" height="15" fill="rgb(254,217,48)" fg:x="28777" fg:w="30"/><text x="82.9378%" y="2335.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (30 samples, 0.09%)</title><rect x="82.6878%" y="2309" width="0.0862%" height="15" fill="rgb(226,156,48)" fg:x="28777" fg:w="30"/><text x="82.9378%" y="2319.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (30 samples, 0.09%)</title><rect x="82.6878%" y="2293" width="0.0862%" height="15" fill="rgb(236,168,20)" fg:x="28777" fg:w="30"/><text x="82.9378%" y="2303.50"></text></g><g><title>rayon_core::join::join_context (30 samples, 0.09%)</title><rect x="82.6878%" y="2277" width="0.0862%" height="15" fill="rgb(239,210,33)" fg:x="28777" fg:w="30"/><text x="82.9378%" y="2287.50"></text></g><g><title>rayon_core::registry::in_worker (30 samples, 0.09%)</title><rect x="82.6878%" y="2261" width="0.0862%" height="15" fill="rgb(242,85,17)" fg:x="28777" fg:w="30"/><text x="82.9378%" y="2271.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (30 samples, 0.09%)</title><rect x="82.6878%" y="2245" width="0.0862%" height="15" fill="rgb(221,196,15)" fg:x="28777" fg:w="30"/><text x="82.9378%" y="2255.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (19 samples, 0.05%)</title><rect x="82.7194%" y="2229" width="0.0546%" height="15" fill="rgb(249,76,21)" fg:x="28788" fg:w="19"/><text x="82.9694%" y="2239.50"></text></g><g><title>std::panic::catch_unwind (19 samples, 0.05%)</title><rect x="82.7194%" y="2213" width="0.0546%" height="15" fill="rgb(243,67,29)" fg:x="28788" fg:w="19"/><text x="82.9694%" y="2223.50"></text></g><g><title>std::panicking::try (19 samples, 0.05%)</title><rect x="82.7194%" y="2197" width="0.0546%" height="15" fill="rgb(240,159,2)" fg:x="28788" fg:w="19"/><text x="82.9694%" y="2207.50"></text></g><g><title>std::panicking::try::do_call (19 samples, 0.05%)</title><rect x="82.7194%" y="2181" width="0.0546%" height="15" fill="rgb(244,64,3)" fg:x="28788" fg:w="19"/><text x="82.9694%" y="2191.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (19 samples, 0.05%)</title><rect x="82.7194%" y="2165" width="0.0546%" height="15" fill="rgb(220,86,40)" fg:x="28788" fg:w="19"/><text x="82.9694%" y="2175.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (19 samples, 0.05%)</title><rect x="82.7194%" y="2149" width="0.0546%" height="15" fill="rgb(222,194,51)" fg:x="28788" fg:w="19"/><text x="82.9694%" y="2159.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (19 samples, 0.05%)</title><rect x="82.7194%" y="2133" width="0.0546%" height="15" fill="rgb(207,154,19)" fg:x="28788" fg:w="19"/><text x="82.9694%" y="2143.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (19 samples, 0.05%)</title><rect x="82.7194%" y="2117" width="0.0546%" height="15" fill="rgb(206,178,36)" fg:x="28788" fg:w="19"/><text x="82.9694%" y="2127.50"></text></g><g><title>rayon_core::join::join_context (19 samples, 0.05%)</title><rect x="82.7194%" y="2101" width="0.0546%" height="15" fill="rgb(218,8,24)" fg:x="28788" fg:w="19"/><text x="82.9694%" y="2111.50"></text></g><g><title>rayon_core::registry::in_worker (19 samples, 0.05%)</title><rect x="82.7194%" y="2085" width="0.0546%" height="15" fill="rgb(226,83,41)" fg:x="28788" fg:w="19"/><text x="82.9694%" y="2095.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (19 samples, 0.05%)</title><rect x="82.7194%" y="2069" width="0.0546%" height="15" fill="rgb(224,23,22)" fg:x="28788" fg:w="19"/><text x="82.9694%" y="2079.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (12 samples, 0.03%)</title><rect x="82.7395%" y="2053" width="0.0345%" height="15" fill="rgb(218,198,45)" fg:x="28795" fg:w="12"/><text x="82.9895%" y="2063.50"></text></g><g><title>std::panic::catch_unwind (12 samples, 0.03%)</title><rect x="82.7395%" y="2037" width="0.0345%" height="15" fill="rgb(249,147,41)" fg:x="28795" fg:w="12"/><text x="82.9895%" y="2047.50"></text></g><g><title>std::panicking::try (12 samples, 0.03%)</title><rect x="82.7395%" y="2021" width="0.0345%" height="15" fill="rgb(244,224,13)" fg:x="28795" fg:w="12"/><text x="82.9895%" y="2031.50"></text></g><g><title>std::panicking::try::do_call (12 samples, 0.03%)</title><rect x="82.7395%" y="2005" width="0.0345%" height="15" fill="rgb(225,97,27)" fg:x="28795" fg:w="12"/><text x="82.9895%" y="2015.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (12 samples, 0.03%)</title><rect x="82.7395%" y="1989" width="0.0345%" height="15" fill="rgb(254,64,0)" fg:x="28795" fg:w="12"/><text x="82.9895%" y="1999.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (12 samples, 0.03%)</title><rect x="82.7395%" y="1973" width="0.0345%" height="15" fill="rgb(208,130,43)" fg:x="28795" fg:w="12"/><text x="82.9895%" y="1983.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (12 samples, 0.03%)</title><rect x="82.7395%" y="1957" width="0.0345%" height="15" fill="rgb(247,91,25)" fg:x="28795" fg:w="12"/><text x="82.9895%" y="1967.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.03%)</title><rect x="82.7395%" y="1941" width="0.0345%" height="15" fill="rgb(215,218,42)" fg:x="28795" fg:w="12"/><text x="82.9895%" y="1951.50"></text></g><g><title>rayon_core::join::join_context (12 samples, 0.03%)</title><rect x="82.7395%" y="1925" width="0.0345%" height="15" fill="rgb(233,9,24)" fg:x="28795" fg:w="12"/><text x="82.9895%" y="1935.50"></text></g><g><title>rayon_core::registry::in_worker (12 samples, 0.03%)</title><rect x="82.7395%" y="1909" width="0.0345%" height="15" fill="rgb(252,105,38)" fg:x="28795" fg:w="12"/><text x="82.9895%" y="1919.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (12 samples, 0.03%)</title><rect x="82.7395%" y="1893" width="0.0345%" height="15" fill="rgb(225,40,49)" fg:x="28795" fg:w="12"/><text x="82.9895%" y="1903.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (6 samples, 0.02%)</title><rect x="82.7567%" y="1877" width="0.0172%" height="15" fill="rgb(232,196,19)" fg:x="28801" fg:w="6"/><text x="83.0067%" y="1887.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.02%)</title><rect x="82.7567%" y="1861" width="0.0172%" height="15" fill="rgb(207,35,15)" fg:x="28801" fg:w="6"/><text x="83.0067%" y="1871.50"></text></g><g><title>std::panicking::try (6 samples, 0.02%)</title><rect x="82.7567%" y="1845" width="0.0172%" height="15" fill="rgb(238,68,36)" fg:x="28801" fg:w="6"/><text x="83.0067%" y="1855.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.02%)</title><rect x="82.7567%" y="1829" width="0.0172%" height="15" fill="rgb(205,158,20)" fg:x="28801" fg:w="6"/><text x="83.0067%" y="1839.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6 samples, 0.02%)</title><rect x="82.7567%" y="1813" width="0.0172%" height="15" fill="rgb(232,32,22)" fg:x="28801" fg:w="6"/><text x="83.0067%" y="1823.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (6 samples, 0.02%)</title><rect x="82.7567%" y="1797" width="0.0172%" height="15" fill="rgb(210,169,6)" fg:x="28801" fg:w="6"/><text x="83.0067%" y="1807.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (6 samples, 0.02%)</title><rect x="82.7567%" y="1781" width="0.0172%" height="15" fill="rgb(229,28,12)" fg:x="28801" fg:w="6"/><text x="83.0067%" y="1791.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (6 samples, 0.02%)</title><rect x="82.7567%" y="1765" width="0.0172%" height="15" fill="rgb(229,78,10)" fg:x="28801" fg:w="6"/><text x="83.0067%" y="1775.50"></text></g><g><title>rayon_core::join::join_context (6 samples, 0.02%)</title><rect x="82.7567%" y="1749" width="0.0172%" height="15" fill="rgb(223,139,54)" fg:x="28801" fg:w="6"/><text x="83.0067%" y="1759.50"></text></g><g><title>rayon_core::registry::in_worker (6 samples, 0.02%)</title><rect x="82.7567%" y="1733" width="0.0172%" height="15" fill="rgb(207,110,4)" fg:x="28801" fg:w="6"/><text x="83.0067%" y="1743.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (6 samples, 0.02%)</title><rect x="82.7567%" y="1717" width="0.0172%" height="15" fill="rgb(248,30,41)" fg:x="28801" fg:w="6"/><text x="83.0067%" y="1727.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (5 samples, 0.01%)</title><rect x="82.7740%" y="2229" width="0.0144%" height="15" fill="rgb(235,54,25)" fg:x="28807" fg:w="5"/><text x="83.0240%" y="2239.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (5 samples, 0.01%)</title><rect x="82.7740%" y="2213" width="0.0144%" height="15" fill="rgb(213,107,41)" fg:x="28807" fg:w="5"/><text x="83.0240%" y="2223.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (5 samples, 0.01%)</title><rect x="82.7740%" y="2197" width="0.0144%" height="15" fill="rgb(237,102,9)" fg:x="28807" fg:w="5"/><text x="83.0240%" y="2207.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (5 samples, 0.01%)</title><rect x="82.7740%" y="2181" width="0.0144%" height="15" fill="rgb(252,137,49)" fg:x="28807" fg:w="5"/><text x="83.0240%" y="2191.50"></text></g><g><title>rayon_core::join::join_context (5 samples, 0.01%)</title><rect x="82.7740%" y="2165" width="0.0144%" height="15" fill="rgb(233,202,33)" fg:x="28807" fg:w="5"/><text x="83.0240%" y="2175.50"></text></g><g><title>rayon_core::registry::in_worker (5 samples, 0.01%)</title><rect x="82.7740%" y="2149" width="0.0144%" height="15" fill="rgb(223,14,51)" fg:x="28807" fg:w="5"/><text x="83.0240%" y="2159.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5 samples, 0.01%)</title><rect x="82.7740%" y="2133" width="0.0144%" height="15" fill="rgb(248,70,23)" fg:x="28807" fg:w="5"/><text x="83.0240%" y="2143.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (5 samples, 0.01%)</title><rect x="82.7883%" y="2229" width="0.0144%" height="15" fill="rgb(209,207,47)" fg:x="28812" fg:w="5"/><text x="83.0383%" y="2239.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (5 samples, 0.01%)</title><rect x="82.7883%" y="2213" width="0.0144%" height="15" fill="rgb(245,124,2)" fg:x="28812" fg:w="5"/><text x="83.0383%" y="2223.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (5 samples, 0.01%)</title><rect x="82.7883%" y="2197" width="0.0144%" height="15" fill="rgb(249,208,11)" fg:x="28812" fg:w="5"/><text x="83.0383%" y="2207.50"></text></g><g><title>rayon_core::job::JobRef::execute (5 samples, 0.01%)</title><rect x="82.7883%" y="2181" width="0.0144%" height="15" fill="rgb(247,112,7)" fg:x="28812" fg:w="5"/><text x="83.0383%" y="2191.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (5 samples, 0.01%)</title><rect x="82.7883%" y="2165" width="0.0144%" height="15" fill="rgb(209,192,31)" fg:x="28812" fg:w="5"/><text x="83.0383%" y="2175.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (5 samples, 0.01%)</title><rect x="82.7883%" y="2149" width="0.0144%" height="15" fill="rgb(236,55,19)" fg:x="28812" fg:w="5"/><text x="83.0383%" y="2159.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (5 samples, 0.01%)</title><rect x="82.7883%" y="2133" width="0.0144%" height="15" fill="rgb(252,89,41)" fg:x="28812" fg:w="5"/><text x="83.0383%" y="2143.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.01%)</title><rect x="82.7883%" y="2117" width="0.0144%" height="15" fill="rgb(220,172,14)" fg:x="28812" fg:w="5"/><text x="83.0383%" y="2127.50"></text></g><g><title>std::panicking::try (5 samples, 0.01%)</title><rect x="82.7883%" y="2101" width="0.0144%" height="15" fill="rgb(252,65,2)" fg:x="28812" fg:w="5"/><text x="83.0383%" y="2111.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.01%)</title><rect x="82.7883%" y="2085" width="0.0144%" height="15" fill="rgb(250,20,8)" fg:x="28812" fg:w="5"/><text x="83.0383%" y="2095.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5 samples, 0.01%)</title><rect x="82.7883%" y="2069" width="0.0144%" height="15" fill="rgb(234,149,13)" fg:x="28812" fg:w="5"/><text x="83.0383%" y="2079.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (5 samples, 0.01%)</title><rect x="82.7883%" y="2053" width="0.0144%" height="15" fill="rgb(223,219,12)" fg:x="28812" fg:w="5"/><text x="83.0383%" y="2063.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (5 samples, 0.01%)</title><rect x="82.7883%" y="2037" width="0.0144%" height="15" fill="rgb(234,13,49)" fg:x="28812" fg:w="5"/><text x="83.0383%" y="2047.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (5 samples, 0.01%)</title><rect x="82.7883%" y="2021" width="0.0144%" height="15" fill="rgb(214,41,25)" fg:x="28812" fg:w="5"/><text x="83.0383%" y="2031.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (5 samples, 0.01%)</title><rect x="82.7883%" y="2005" width="0.0144%" height="15" fill="rgb(232,198,52)" fg:x="28812" fg:w="5"/><text x="83.0383%" y="2015.50"></text></g><g><title>rayon_core::join::join_context (5 samples, 0.01%)</title><rect x="82.7883%" y="1989" width="0.0144%" height="15" fill="rgb(236,111,46)" fg:x="28812" fg:w="5"/><text x="83.0383%" y="1999.50"></text></g><g><title>rayon_core::registry::in_worker (5 samples, 0.01%)</title><rect x="82.7883%" y="1973" width="0.0144%" height="15" fill="rgb(253,30,20)" fg:x="28812" fg:w="5"/><text x="83.0383%" y="1983.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5 samples, 0.01%)</title><rect x="82.7883%" y="1957" width="0.0144%" height="15" fill="rgb(247,141,17)" fg:x="28812" fg:w="5"/><text x="83.0383%" y="1967.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (4 samples, 0.01%)</title><rect x="82.7912%" y="1941" width="0.0115%" height="15" fill="rgb(214,195,21)" fg:x="28813" fg:w="4"/><text x="83.0412%" y="1951.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.01%)</title><rect x="82.7912%" y="1925" width="0.0115%" height="15" fill="rgb(214,98,12)" fg:x="28813" fg:w="4"/><text x="83.0412%" y="1935.50"></text></g><g><title>std::panicking::try (4 samples, 0.01%)</title><rect x="82.7912%" y="1909" width="0.0115%" height="15" fill="rgb(239,4,26)" fg:x="28813" fg:w="4"/><text x="83.0412%" y="1919.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.01%)</title><rect x="82.7912%" y="1893" width="0.0115%" height="15" fill="rgb(234,210,35)" fg:x="28813" fg:w="4"/><text x="83.0412%" y="1903.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.01%)</title><rect x="82.7912%" y="1877" width="0.0115%" height="15" fill="rgb(252,178,27)" fg:x="28813" fg:w="4"/><text x="83.0412%" y="1887.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (4 samples, 0.01%)</title><rect x="82.7912%" y="1861" width="0.0115%" height="15" fill="rgb(217,50,1)" fg:x="28813" fg:w="4"/><text x="83.0412%" y="1871.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.01%)</title><rect x="82.7912%" y="1845" width="0.0115%" height="15" fill="rgb(233,137,5)" fg:x="28813" fg:w="4"/><text x="83.0412%" y="1855.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.01%)</title><rect x="82.7912%" y="1829" width="0.0115%" height="15" fill="rgb(217,227,25)" fg:x="28813" fg:w="4"/><text x="83.0412%" y="1839.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.01%)</title><rect x="82.7912%" y="1813" width="0.0115%" height="15" fill="rgb(242,89,38)" fg:x="28813" fg:w="4"/><text x="83.0412%" y="1823.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.01%)</title><rect x="82.7912%" y="1797" width="0.0115%" height="15" fill="rgb(212,190,30)" fg:x="28813" fg:w="4"/><text x="83.0412%" y="1807.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.01%)</title><rect x="82.7912%" y="1781" width="0.0115%" height="15" fill="rgb(222,120,8)" fg:x="28813" fg:w="4"/><text x="83.0412%" y="1791.50"></text></g><g><title>par_exec_12 (17 samples, 0.05%)</title><rect x="82.7740%" y="2789" width="0.0488%" height="15" fill="rgb(227,181,9)" fg:x="28807" fg:w="17"/><text x="83.0240%" y="2799.50"></text></g><g><title>__GI___clone3 (17 samples, 0.05%)</title><rect x="82.7740%" y="2773" width="0.0488%" height="15" fill="rgb(222,125,29)" fg:x="28807" fg:w="17"/><text x="83.0240%" y="2783.50"></text></g><g><title>start_thread (17 samples, 0.05%)</title><rect x="82.7740%" y="2757" width="0.0488%" height="15" fill="rgb(215,153,31)" fg:x="28807" fg:w="17"/><text x="83.0240%" y="2767.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (17 samples, 0.05%)</title><rect x="82.7740%" y="2741" width="0.0488%" height="15" fill="rgb(228,77,30)" fg:x="28807" fg:w="17"/><text x="83.0240%" y="2751.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (17 samples, 0.05%)</title><rect x="82.7740%" y="2725" width="0.0488%" height="15" fill="rgb(226,110,9)" fg:x="28807" fg:w="17"/><text x="83.0240%" y="2735.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (17 samples, 0.05%)</title><rect x="82.7740%" y="2709" width="0.0488%" height="15" fill="rgb(219,111,7)" fg:x="28807" fg:w="17"/><text x="83.0240%" y="2719.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (17 samples, 0.05%)</title><rect x="82.7740%" y="2693" width="0.0488%" height="15" fill="rgb(229,167,25)" fg:x="28807" fg:w="17"/><text x="83.0240%" y="2703.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (17 samples, 0.05%)</title><rect x="82.7740%" y="2677" width="0.0488%" height="15" fill="rgb(209,77,43)" fg:x="28807" fg:w="17"/><text x="83.0240%" y="2687.50"></text></g><g><title>std::panic::catch_unwind (17 samples, 0.05%)</title><rect x="82.7740%" y="2661" width="0.0488%" height="15" fill="rgb(233,70,39)" fg:x="28807" fg:w="17"/><text x="83.0240%" y="2671.50"></text></g><g><title>std::panicking::try (17 samples, 0.05%)</title><rect x="82.7740%" y="2645" width="0.0488%" height="15" fill="rgb(207,171,44)" fg:x="28807" fg:w="17"/><text x="83.0240%" y="2655.50"></text></g><g><title>std::panicking::try::do_call (17 samples, 0.05%)</title><rect x="82.7740%" y="2629" width="0.0488%" height="15" fill="rgb(244,91,6)" fg:x="28807" fg:w="17"/><text x="83.0240%" y="2639.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (17 samples, 0.05%)</title><rect x="82.7740%" y="2613" width="0.0488%" height="15" fill="rgb(234,136,12)" fg:x="28807" fg:w="17"/><text x="83.0240%" y="2623.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (17 samples, 0.05%)</title><rect x="82.7740%" y="2597" width="0.0488%" height="15" fill="rgb(216,210,38)" fg:x="28807" fg:w="17"/><text x="83.0240%" y="2607.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (17 samples, 0.05%)</title><rect x="82.7740%" y="2581" width="0.0488%" height="15" fill="rgb(241,227,7)" fg:x="28807" fg:w="17"/><text x="83.0240%" y="2591.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (17 samples, 0.05%)</title><rect x="82.7740%" y="2565" width="0.0488%" height="15" fill="rgb(241,222,11)" fg:x="28807" fg:w="17"/><text x="83.0240%" y="2575.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (17 samples, 0.05%)</title><rect x="82.7740%" y="2549" width="0.0488%" height="15" fill="rgb(246,86,18)" fg:x="28807" fg:w="17"/><text x="83.0240%" y="2559.50"></text></g><g><title>rayon_core::registry::main_loop (17 samples, 0.05%)</title><rect x="82.7740%" y="2533" width="0.0488%" height="15" fill="rgb(224,151,49)" fg:x="28807" fg:w="17"/><text x="83.0240%" y="2543.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (17 samples, 0.05%)</title><rect x="82.7740%" y="2517" width="0.0488%" height="15" fill="rgb(235,4,41)" fg:x="28807" fg:w="17"/><text x="83.0240%" y="2527.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (17 samples, 0.05%)</title><rect x="82.7740%" y="2501" width="0.0488%" height="15" fill="rgb(218,30,52)" fg:x="28807" fg:w="17"/><text x="83.0240%" y="2511.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (17 samples, 0.05%)</title><rect x="82.7740%" y="2485" width="0.0488%" height="15" fill="rgb(205,124,51)" fg:x="28807" fg:w="17"/><text x="83.0240%" y="2495.50"></text></g><g><title>rayon_core::job::JobRef::execute (17 samples, 0.05%)</title><rect x="82.7740%" y="2469" width="0.0488%" height="15" fill="rgb(237,126,51)" fg:x="28807" fg:w="17"/><text x="83.0240%" y="2479.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (17 samples, 0.05%)</title><rect x="82.7740%" y="2453" width="0.0488%" height="15" fill="rgb(225,32,46)" fg:x="28807" fg:w="17"/><text x="83.0240%" y="2463.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (17 samples, 0.05%)</title><rect x="82.7740%" y="2437" width="0.0488%" height="15" fill="rgb(251,60,49)" fg:x="28807" fg:w="17"/><text x="83.0240%" y="2447.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (17 samples, 0.05%)</title><rect x="82.7740%" y="2421" width="0.0488%" height="15" fill="rgb(234,18,23)" fg:x="28807" fg:w="17"/><text x="83.0240%" y="2431.50"></text></g><g><title>std::panic::catch_unwind (17 samples, 0.05%)</title><rect x="82.7740%" y="2405" width="0.0488%" height="15" fill="rgb(234,25,23)" fg:x="28807" fg:w="17"/><text x="83.0240%" y="2415.50"></text></g><g><title>std::panicking::try (17 samples, 0.05%)</title><rect x="82.7740%" y="2389" width="0.0488%" height="15" fill="rgb(210,43,52)" fg:x="28807" fg:w="17"/><text x="83.0240%" y="2399.50"></text></g><g><title>std::panicking::try::do_call (17 samples, 0.05%)</title><rect x="82.7740%" y="2373" width="0.0488%" height="15" fill="rgb(237,198,21)" fg:x="28807" fg:w="17"/><text x="83.0240%" y="2383.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (17 samples, 0.05%)</title><rect x="82.7740%" y="2357" width="0.0488%" height="15" fill="rgb(211,20,34)" fg:x="28807" fg:w="17"/><text x="83.0240%" y="2367.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (17 samples, 0.05%)</title><rect x="82.7740%" y="2341" width="0.0488%" height="15" fill="rgb(221,155,50)" fg:x="28807" fg:w="17"/><text x="83.0240%" y="2351.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (17 samples, 0.05%)</title><rect x="82.7740%" y="2325" width="0.0488%" height="15" fill="rgb(213,214,53)" fg:x="28807" fg:w="17"/><text x="83.0240%" y="2335.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (17 samples, 0.05%)</title><rect x="82.7740%" y="2309" width="0.0488%" height="15" fill="rgb(215,229,48)" fg:x="28807" fg:w="17"/><text x="83.0240%" y="2319.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (17 samples, 0.05%)</title><rect x="82.7740%" y="2293" width="0.0488%" height="15" fill="rgb(243,88,5)" fg:x="28807" fg:w="17"/><text x="83.0240%" y="2303.50"></text></g><g><title>rayon_core::join::join_context (17 samples, 0.05%)</title><rect x="82.7740%" y="2277" width="0.0488%" height="15" fill="rgb(216,199,8)" fg:x="28807" fg:w="17"/><text x="83.0240%" y="2287.50"></text></g><g><title>rayon_core::registry::in_worker (17 samples, 0.05%)</title><rect x="82.7740%" y="2261" width="0.0488%" height="15" fill="rgb(241,22,4)" fg:x="28807" fg:w="17"/><text x="83.0240%" y="2271.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (17 samples, 0.05%)</title><rect x="82.7740%" y="2245" width="0.0488%" height="15" fill="rgb(209,190,22)" fg:x="28807" fg:w="17"/><text x="83.0240%" y="2255.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (7 samples, 0.02%)</title><rect x="82.8027%" y="2229" width="0.0201%" height="15" fill="rgb(251,138,45)" fg:x="28817" fg:w="7"/><text x="83.0527%" y="2239.50"></text></g><g><title>std::panic::catch_unwind (7 samples, 0.02%)</title><rect x="82.8027%" y="2213" width="0.0201%" height="15" fill="rgb(219,111,22)" fg:x="28817" fg:w="7"/><text x="83.0527%" y="2223.50"></text></g><g><title>std::panicking::try (7 samples, 0.02%)</title><rect x="82.8027%" y="2197" width="0.0201%" height="15" fill="rgb(253,29,49)" fg:x="28817" fg:w="7"/><text x="83.0527%" y="2207.50"></text></g><g><title>std::panicking::try::do_call (7 samples, 0.02%)</title><rect x="82.8027%" y="2181" width="0.0201%" height="15" fill="rgb(238,129,49)" fg:x="28817" fg:w="7"/><text x="83.0527%" y="2191.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (7 samples, 0.02%)</title><rect x="82.8027%" y="2165" width="0.0201%" height="15" fill="rgb(240,26,41)" fg:x="28817" fg:w="7"/><text x="83.0527%" y="2175.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (7 samples, 0.02%)</title><rect x="82.8027%" y="2149" width="0.0201%" height="15" fill="rgb(221,47,33)" fg:x="28817" fg:w="7"/><text x="83.0527%" y="2159.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (7 samples, 0.02%)</title><rect x="82.8027%" y="2133" width="0.0201%" height="15" fill="rgb(216,200,17)" fg:x="28817" fg:w="7"/><text x="83.0527%" y="2143.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (7 samples, 0.02%)</title><rect x="82.8027%" y="2117" width="0.0201%" height="15" fill="rgb(230,151,26)" fg:x="28817" fg:w="7"/><text x="83.0527%" y="2127.50"></text></g><g><title>rayon_core::join::join_context (7 samples, 0.02%)</title><rect x="82.8027%" y="2101" width="0.0201%" height="15" fill="rgb(242,182,16)" fg:x="28817" fg:w="7"/><text x="83.0527%" y="2111.50"></text></g><g><title>rayon_core::registry::in_worker (7 samples, 0.02%)</title><rect x="82.8027%" y="2085" width="0.0201%" height="15" fill="rgb(236,35,53)" fg:x="28817" fg:w="7"/><text x="83.0527%" y="2095.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (7 samples, 0.02%)</title><rect x="82.8027%" y="2069" width="0.0201%" height="15" fill="rgb(214,180,28)" fg:x="28817" fg:w="7"/><text x="83.0527%" y="2079.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (4 samples, 0.01%)</title><rect x="82.8113%" y="2053" width="0.0115%" height="15" fill="rgb(208,173,36)" fg:x="28820" fg:w="4"/><text x="83.0613%" y="2063.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.01%)</title><rect x="82.8113%" y="2037" width="0.0115%" height="15" fill="rgb(218,39,15)" fg:x="28820" fg:w="4"/><text x="83.0613%" y="2047.50"></text></g><g><title>std::panicking::try (4 samples, 0.01%)</title><rect x="82.8113%" y="2021" width="0.0115%" height="15" fill="rgb(213,145,15)" fg:x="28820" fg:w="4"/><text x="83.0613%" y="2031.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.01%)</title><rect x="82.8113%" y="2005" width="0.0115%" height="15" fill="rgb(242,110,37)" fg:x="28820" fg:w="4"/><text x="83.0613%" y="2015.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.01%)</title><rect x="82.8113%" y="1989" width="0.0115%" height="15" fill="rgb(247,146,22)" fg:x="28820" fg:w="4"/><text x="83.0613%" y="1999.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (4 samples, 0.01%)</title><rect x="82.8113%" y="1973" width="0.0115%" height="15" fill="rgb(215,191,7)" fg:x="28820" fg:w="4"/><text x="83.0613%" y="1983.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.01%)</title><rect x="82.8113%" y="1957" width="0.0115%" height="15" fill="rgb(240,158,1)" fg:x="28820" fg:w="4"/><text x="83.0613%" y="1967.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.01%)</title><rect x="82.8113%" y="1941" width="0.0115%" height="15" fill="rgb(241,78,32)" fg:x="28820" fg:w="4"/><text x="83.0613%" y="1951.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.01%)</title><rect x="82.8113%" y="1925" width="0.0115%" height="15" fill="rgb(248,83,10)" fg:x="28820" fg:w="4"/><text x="83.0613%" y="1935.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.01%)</title><rect x="82.8113%" y="1909" width="0.0115%" height="15" fill="rgb(241,52,0)" fg:x="28820" fg:w="4"/><text x="83.0613%" y="1919.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.01%)</title><rect x="82.8113%" y="1893" width="0.0115%" height="15" fill="rgb(238,37,13)" fg:x="28820" fg:w="4"/><text x="83.0613%" y="1903.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (6 samples, 0.02%)</title><rect x="82.8343%" y="2229" width="0.0172%" height="15" fill="rgb(242,194,17)" fg:x="28828" fg:w="6"/><text x="83.0843%" y="2239.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (6 samples, 0.02%)</title><rect x="82.8343%" y="2213" width="0.0172%" height="15" fill="rgb(236,96,3)" fg:x="28828" fg:w="6"/><text x="83.0843%" y="2223.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (6 samples, 0.02%)</title><rect x="82.8343%" y="2197" width="0.0172%" height="15" fill="rgb(235,148,34)" fg:x="28828" fg:w="6"/><text x="83.0843%" y="2207.50"></text></g><g><title>rayon_core::job::JobRef::execute (6 samples, 0.02%)</title><rect x="82.8343%" y="2181" width="0.0172%" height="15" fill="rgb(254,12,11)" fg:x="28828" fg:w="6"/><text x="83.0843%" y="2191.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (6 samples, 0.02%)</title><rect x="82.8343%" y="2165" width="0.0172%" height="15" fill="rgb(207,31,54)" fg:x="28828" fg:w="6"/><text x="83.0843%" y="2175.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (6 samples, 0.02%)</title><rect x="82.8343%" y="2149" width="0.0172%" height="15" fill="rgb(252,14,28)" fg:x="28828" fg:w="6"/><text x="83.0843%" y="2159.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (6 samples, 0.02%)</title><rect x="82.8343%" y="2133" width="0.0172%" height="15" fill="rgb(252,108,36)" fg:x="28828" fg:w="6"/><text x="83.0843%" y="2143.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.02%)</title><rect x="82.8343%" y="2117" width="0.0172%" height="15" fill="rgb(214,149,7)" fg:x="28828" fg:w="6"/><text x="83.0843%" y="2127.50"></text></g><g><title>std::panicking::try (6 samples, 0.02%)</title><rect x="82.8343%" y="2101" width="0.0172%" height="15" fill="rgb(243,94,12)" fg:x="28828" fg:w="6"/><text x="83.0843%" y="2111.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.02%)</title><rect x="82.8343%" y="2085" width="0.0172%" height="15" fill="rgb(208,36,10)" fg:x="28828" fg:w="6"/><text x="83.0843%" y="2095.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6 samples, 0.02%)</title><rect x="82.8343%" y="2069" width="0.0172%" height="15" fill="rgb(233,185,52)" fg:x="28828" fg:w="6"/><text x="83.0843%" y="2079.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (6 samples, 0.02%)</title><rect x="82.8343%" y="2053" width="0.0172%" height="15" fill="rgb(234,50,45)" fg:x="28828" fg:w="6"/><text x="83.0843%" y="2063.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (6 samples, 0.02%)</title><rect x="82.8343%" y="2037" width="0.0172%" height="15" fill="rgb(228,92,54)" fg:x="28828" fg:w="6"/><text x="83.0843%" y="2047.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (6 samples, 0.02%)</title><rect x="82.8343%" y="2021" width="0.0172%" height="15" fill="rgb(224,85,25)" fg:x="28828" fg:w="6"/><text x="83.0843%" y="2031.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (6 samples, 0.02%)</title><rect x="82.8343%" y="2005" width="0.0172%" height="15" fill="rgb(246,1,45)" fg:x="28828" fg:w="6"/><text x="83.0843%" y="2015.50"></text></g><g><title>rayon_core::join::join_context (6 samples, 0.02%)</title><rect x="82.8343%" y="1989" width="0.0172%" height="15" fill="rgb(240,66,23)" fg:x="28828" fg:w="6"/><text x="83.0843%" y="1999.50"></text></g><g><title>rayon_core::registry::in_worker (6 samples, 0.02%)</title><rect x="82.8343%" y="1973" width="0.0172%" height="15" fill="rgb(222,96,27)" fg:x="28828" fg:w="6"/><text x="83.0843%" y="1983.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (6 samples, 0.02%)</title><rect x="82.8343%" y="1957" width="0.0172%" height="15" fill="rgb(212,136,10)" fg:x="28828" fg:w="6"/><text x="83.0843%" y="1967.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (4 samples, 0.01%)</title><rect x="82.8401%" y="1941" width="0.0115%" height="15" fill="rgb(226,192,50)" fg:x="28830" fg:w="4"/><text x="83.0901%" y="1951.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.01%)</title><rect x="82.8401%" y="1925" width="0.0115%" height="15" fill="rgb(241,182,31)" fg:x="28830" fg:w="4"/><text x="83.0901%" y="1935.50"></text></g><g><title>std::panicking::try (4 samples, 0.01%)</title><rect x="82.8401%" y="1909" width="0.0115%" height="15" fill="rgb(219,205,47)" fg:x="28830" fg:w="4"/><text x="83.0901%" y="1919.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.01%)</title><rect x="82.8401%" y="1893" width="0.0115%" height="15" fill="rgb(207,96,14)" fg:x="28830" fg:w="4"/><text x="83.0901%" y="1903.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.01%)</title><rect x="82.8401%" y="1877" width="0.0115%" height="15" fill="rgb(216,119,9)" fg:x="28830" fg:w="4"/><text x="83.0901%" y="1887.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (4 samples, 0.01%)</title><rect x="82.8401%" y="1861" width="0.0115%" height="15" fill="rgb(235,62,36)" fg:x="28830" fg:w="4"/><text x="83.0901%" y="1871.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.01%)</title><rect x="82.8401%" y="1845" width="0.0115%" height="15" fill="rgb(214,41,27)" fg:x="28830" fg:w="4"/><text x="83.0901%" y="1855.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.01%)</title><rect x="82.8401%" y="1829" width="0.0115%" height="15" fill="rgb(214,174,37)" fg:x="28830" fg:w="4"/><text x="83.0901%" y="1839.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.01%)</title><rect x="82.8401%" y="1813" width="0.0115%" height="15" fill="rgb(212,11,25)" fg:x="28830" fg:w="4"/><text x="83.0901%" y="1823.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.01%)</title><rect x="82.8401%" y="1797" width="0.0115%" height="15" fill="rgb(217,71,35)" fg:x="28830" fg:w="4"/><text x="83.0901%" y="1807.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.01%)</title><rect x="82.8401%" y="1781" width="0.0115%" height="15" fill="rgb(234,152,9)" fg:x="28830" fg:w="4"/><text x="83.0901%" y="1791.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (8 samples, 0.02%)</title><rect x="82.8516%" y="2053" width="0.0230%" height="15" fill="rgb(228,32,51)" fg:x="28834" fg:w="8"/><text x="83.1016%" y="2063.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (8 samples, 0.02%)</title><rect x="82.8516%" y="2037" width="0.0230%" height="15" fill="rgb(209,14,47)" fg:x="28834" fg:w="8"/><text x="83.1016%" y="2047.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (8 samples, 0.02%)</title><rect x="82.8516%" y="2021" width="0.0230%" height="15" fill="rgb(218,201,17)" fg:x="28834" fg:w="8"/><text x="83.1016%" y="2031.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (8 samples, 0.02%)</title><rect x="82.8516%" y="2005" width="0.0230%" height="15" fill="rgb(218,98,15)" fg:x="28834" fg:w="8"/><text x="83.1016%" y="2015.50"></text></g><g><title>rayon_core::join::join_context (8 samples, 0.02%)</title><rect x="82.8516%" y="1989" width="0.0230%" height="15" fill="rgb(233,202,29)" fg:x="28834" fg:w="8"/><text x="83.1016%" y="1999.50"></text></g><g><title>rayon_core::registry::in_worker (8 samples, 0.02%)</title><rect x="82.8516%" y="1973" width="0.0230%" height="15" fill="rgb(207,196,44)" fg:x="28834" fg:w="8"/><text x="83.1016%" y="1983.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (8 samples, 0.02%)</title><rect x="82.8516%" y="1957" width="0.0230%" height="15" fill="rgb(218,63,34)" fg:x="28834" fg:w="8"/><text x="83.1016%" y="1967.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (7 samples, 0.02%)</title><rect x="82.8544%" y="1941" width="0.0201%" height="15" fill="rgb(209,10,5)" fg:x="28835" fg:w="7"/><text x="83.1044%" y="1951.50"></text></g><g><title>std::panic::catch_unwind (7 samples, 0.02%)</title><rect x="82.8544%" y="1925" width="0.0201%" height="15" fill="rgb(224,36,28)" fg:x="28835" fg:w="7"/><text x="83.1044%" y="1935.50"></text></g><g><title>std::panicking::try (7 samples, 0.02%)</title><rect x="82.8544%" y="1909" width="0.0201%" height="15" fill="rgb(249,178,7)" fg:x="28835" fg:w="7"/><text x="83.1044%" y="1919.50"></text></g><g><title>std::panicking::try::do_call (7 samples, 0.02%)</title><rect x="82.8544%" y="1893" width="0.0201%" height="15" fill="rgb(253,163,10)" fg:x="28835" fg:w="7"/><text x="83.1044%" y="1903.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (7 samples, 0.02%)</title><rect x="82.8544%" y="1877" width="0.0201%" height="15" fill="rgb(245,67,46)" fg:x="28835" fg:w="7"/><text x="83.1044%" y="1887.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (7 samples, 0.02%)</title><rect x="82.8544%" y="1861" width="0.0201%" height="15" fill="rgb(225,14,18)" fg:x="28835" fg:w="7"/><text x="83.1044%" y="1871.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (7 samples, 0.02%)</title><rect x="82.8544%" y="1845" width="0.0201%" height="15" fill="rgb(217,41,54)" fg:x="28835" fg:w="7"/><text x="83.1044%" y="1855.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (7 samples, 0.02%)</title><rect x="82.8544%" y="1829" width="0.0201%" height="15" fill="rgb(222,111,11)" fg:x="28835" fg:w="7"/><text x="83.1044%" y="1839.50"></text></g><g><title>rayon_core::join::join_context (7 samples, 0.02%)</title><rect x="82.8544%" y="1813" width="0.0201%" height="15" fill="rgb(211,85,31)" fg:x="28835" fg:w="7"/><text x="83.1044%" y="1823.50"></text></g><g><title>rayon_core::registry::in_worker (7 samples, 0.02%)</title><rect x="82.8544%" y="1797" width="0.0201%" height="15" fill="rgb(223,29,26)" fg:x="28835" fg:w="7"/><text x="83.1044%" y="1807.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (7 samples, 0.02%)</title><rect x="82.8544%" y="1781" width="0.0201%" height="15" fill="rgb(236,124,50)" fg:x="28835" fg:w="7"/><text x="83.1044%" y="1791.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (4 samples, 0.01%)</title><rect x="82.8631%" y="1765" width="0.0115%" height="15" fill="rgb(219,148,15)" fg:x="28838" fg:w="4"/><text x="83.1131%" y="1775.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.01%)</title><rect x="82.8631%" y="1749" width="0.0115%" height="15" fill="rgb(248,159,33)" fg:x="28838" fg:w="4"/><text x="83.1131%" y="1759.50"></text></g><g><title>std::panicking::try (4 samples, 0.01%)</title><rect x="82.8631%" y="1733" width="0.0115%" height="15" fill="rgb(252,65,8)" fg:x="28838" fg:w="4"/><text x="83.1131%" y="1743.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.01%)</title><rect x="82.8631%" y="1717" width="0.0115%" height="15" fill="rgb(236,45,7)" fg:x="28838" fg:w="4"/><text x="83.1131%" y="1727.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.01%)</title><rect x="82.8631%" y="1701" width="0.0115%" height="15" fill="rgb(244,3,48)" fg:x="28838" fg:w="4"/><text x="83.1131%" y="1711.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (4 samples, 0.01%)</title><rect x="82.8631%" y="1685" width="0.0115%" height="15" fill="rgb(224,123,53)" fg:x="28838" fg:w="4"/><text x="83.1131%" y="1695.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.01%)</title><rect x="82.8631%" y="1669" width="0.0115%" height="15" fill="rgb(223,173,15)" fg:x="28838" fg:w="4"/><text x="83.1131%" y="1679.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.01%)</title><rect x="82.8631%" y="1653" width="0.0115%" height="15" fill="rgb(254,181,5)" fg:x="28838" fg:w="4"/><text x="83.1131%" y="1663.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.01%)</title><rect x="82.8631%" y="1637" width="0.0115%" height="15" fill="rgb(243,124,33)" fg:x="28838" fg:w="4"/><text x="83.1131%" y="1647.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.01%)</title><rect x="82.8631%" y="1621" width="0.0115%" height="15" fill="rgb(253,220,11)" fg:x="28838" fg:w="4"/><text x="83.1131%" y="1631.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.01%)</title><rect x="82.8631%" y="1605" width="0.0115%" height="15" fill="rgb(217,14,4)" fg:x="28838" fg:w="4"/><text x="83.1131%" y="1615.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (5 samples, 0.01%)</title><rect x="82.8745%" y="2053" width="0.0144%" height="15" fill="rgb(209,196,12)" fg:x="28842" fg:w="5"/><text x="83.1245%" y="2063.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (5 samples, 0.01%)</title><rect x="82.8745%" y="2037" width="0.0144%" height="15" fill="rgb(237,108,29)" fg:x="28842" fg:w="5"/><text x="83.1245%" y="2047.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (5 samples, 0.01%)</title><rect x="82.8745%" y="2021" width="0.0144%" height="15" fill="rgb(216,173,20)" fg:x="28842" fg:w="5"/><text x="83.1245%" y="2031.50"></text></g><g><title>rayon_core::job::JobRef::execute (5 samples, 0.01%)</title><rect x="82.8745%" y="2005" width="0.0144%" height="15" fill="rgb(245,27,6)" fg:x="28842" fg:w="5"/><text x="83.1245%" y="2015.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (5 samples, 0.01%)</title><rect x="82.8745%" y="1989" width="0.0144%" height="15" fill="rgb(210,181,20)" fg:x="28842" fg:w="5"/><text x="83.1245%" y="1999.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (5 samples, 0.01%)</title><rect x="82.8745%" y="1973" width="0.0144%" height="15" fill="rgb(235,213,1)" fg:x="28842" fg:w="5"/><text x="83.1245%" y="1983.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (5 samples, 0.01%)</title><rect x="82.8745%" y="1957" width="0.0144%" height="15" fill="rgb(239,68,43)" fg:x="28842" fg:w="5"/><text x="83.1245%" y="1967.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.01%)</title><rect x="82.8745%" y="1941" width="0.0144%" height="15" fill="rgb(254,137,43)" fg:x="28842" fg:w="5"/><text x="83.1245%" y="1951.50"></text></g><g><title>std::panicking::try (5 samples, 0.01%)</title><rect x="82.8745%" y="1925" width="0.0144%" height="15" fill="rgb(252,170,38)" fg:x="28842" fg:w="5"/><text x="83.1245%" y="1935.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.01%)</title><rect x="82.8745%" y="1909" width="0.0144%" height="15" fill="rgb(234,21,42)" fg:x="28842" fg:w="5"/><text x="83.1245%" y="1919.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5 samples, 0.01%)</title><rect x="82.8745%" y="1893" width="0.0144%" height="15" fill="rgb(216,145,40)" fg:x="28842" fg:w="5"/><text x="83.1245%" y="1903.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (5 samples, 0.01%)</title><rect x="82.8745%" y="1877" width="0.0144%" height="15" fill="rgb(251,73,9)" fg:x="28842" fg:w="5"/><text x="83.1245%" y="1887.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (5 samples, 0.01%)</title><rect x="82.8745%" y="1861" width="0.0144%" height="15" fill="rgb(242,54,6)" fg:x="28842" fg:w="5"/><text x="83.1245%" y="1871.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (5 samples, 0.01%)</title><rect x="82.8745%" y="1845" width="0.0144%" height="15" fill="rgb(239,70,7)" fg:x="28842" fg:w="5"/><text x="83.1245%" y="1855.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (5 samples, 0.01%)</title><rect x="82.8745%" y="1829" width="0.0144%" height="15" fill="rgb(216,159,35)" fg:x="28842" fg:w="5"/><text x="83.1245%" y="1839.50"></text></g><g><title>rayon_core::join::join_context (5 samples, 0.01%)</title><rect x="82.8745%" y="1813" width="0.0144%" height="15" fill="rgb(224,50,39)" fg:x="28842" fg:w="5"/><text x="83.1245%" y="1823.50"></text></g><g><title>rayon_core::registry::in_worker (5 samples, 0.01%)</title><rect x="82.8745%" y="1797" width="0.0144%" height="15" fill="rgb(235,9,35)" fg:x="28842" fg:w="5"/><text x="83.1245%" y="1807.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5 samples, 0.01%)</title><rect x="82.8745%" y="1781" width="0.0144%" height="15" fill="rgb(239,34,21)" fg:x="28842" fg:w="5"/><text x="83.1245%" y="1791.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (4 samples, 0.01%)</title><rect x="82.8774%" y="1765" width="0.0115%" height="15" fill="rgb(218,162,43)" fg:x="28843" fg:w="4"/><text x="83.1274%" y="1775.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.01%)</title><rect x="82.8774%" y="1749" width="0.0115%" height="15" fill="rgb(219,89,33)" fg:x="28843" fg:w="4"/><text x="83.1274%" y="1759.50"></text></g><g><title>std::panicking::try (4 samples, 0.01%)</title><rect x="82.8774%" y="1733" width="0.0115%" height="15" fill="rgb(226,125,37)" fg:x="28843" fg:w="4"/><text x="83.1274%" y="1743.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.01%)</title><rect x="82.8774%" y="1717" width="0.0115%" height="15" fill="rgb(233,149,30)" fg:x="28843" fg:w="4"/><text x="83.1274%" y="1727.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.01%)</title><rect x="82.8774%" y="1701" width="0.0115%" height="15" fill="rgb(236,8,18)" fg:x="28843" fg:w="4"/><text x="83.1274%" y="1711.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (4 samples, 0.01%)</title><rect x="82.8774%" y="1685" width="0.0115%" height="15" fill="rgb(205,176,9)" fg:x="28843" fg:w="4"/><text x="83.1274%" y="1695.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.01%)</title><rect x="82.8774%" y="1669" width="0.0115%" height="15" fill="rgb(252,103,44)" fg:x="28843" fg:w="4"/><text x="83.1274%" y="1679.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.01%)</title><rect x="82.8774%" y="1653" width="0.0115%" height="15" fill="rgb(207,68,53)" fg:x="28843" fg:w="4"/><text x="83.1274%" y="1663.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.01%)</title><rect x="82.8774%" y="1637" width="0.0115%" height="15" fill="rgb(218,193,48)" fg:x="28843" fg:w="4"/><text x="83.1274%" y="1647.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.01%)</title><rect x="82.8774%" y="1621" width="0.0115%" height="15" fill="rgb(234,121,52)" fg:x="28843" fg:w="4"/><text x="83.1274%" y="1631.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.01%)</title><rect x="82.8774%" y="1605" width="0.0115%" height="15" fill="rgb(227,218,49)" fg:x="28843" fg:w="4"/><text x="83.1274%" y="1615.50"></text></g><g><title>par_exec_13 (27 samples, 0.08%)</title><rect x="82.8228%" y="2789" width="0.0776%" height="15" fill="rgb(221,8,7)" fg:x="28824" fg:w="27"/><text x="83.0728%" y="2799.50"></text></g><g><title>__GI___clone3 (27 samples, 0.08%)</title><rect x="82.8228%" y="2773" width="0.0776%" height="15" fill="rgb(217,151,36)" fg:x="28824" fg:w="27"/><text x="83.0728%" y="2783.50"></text></g><g><title>start_thread (27 samples, 0.08%)</title><rect x="82.8228%" y="2757" width="0.0776%" height="15" fill="rgb(213,71,5)" fg:x="28824" fg:w="27"/><text x="83.0728%" y="2767.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (27 samples, 0.08%)</title><rect x="82.8228%" y="2741" width="0.0776%" height="15" fill="rgb(225,145,43)" fg:x="28824" fg:w="27"/><text x="83.0728%" y="2751.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (27 samples, 0.08%)</title><rect x="82.8228%" y="2725" width="0.0776%" height="15" fill="rgb(235,118,19)" fg:x="28824" fg:w="27"/><text x="83.0728%" y="2735.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (27 samples, 0.08%)</title><rect x="82.8228%" y="2709" width="0.0776%" height="15" fill="rgb(214,102,36)" fg:x="28824" fg:w="27"/><text x="83.0728%" y="2719.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (27 samples, 0.08%)</title><rect x="82.8228%" y="2693" width="0.0776%" height="15" fill="rgb(220,56,43)" fg:x="28824" fg:w="27"/><text x="83.0728%" y="2703.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (27 samples, 0.08%)</title><rect x="82.8228%" y="2677" width="0.0776%" height="15" fill="rgb(246,136,46)" fg:x="28824" fg:w="27"/><text x="83.0728%" y="2687.50"></text></g><g><title>std::panic::catch_unwind (27 samples, 0.08%)</title><rect x="82.8228%" y="2661" width="0.0776%" height="15" fill="rgb(249,99,12)" fg:x="28824" fg:w="27"/><text x="83.0728%" y="2671.50"></text></g><g><title>std::panicking::try (27 samples, 0.08%)</title><rect x="82.8228%" y="2645" width="0.0776%" height="15" fill="rgb(224,31,42)" fg:x="28824" fg:w="27"/><text x="83.0728%" y="2655.50"></text></g><g><title>std::panicking::try::do_call (27 samples, 0.08%)</title><rect x="82.8228%" y="2629" width="0.0776%" height="15" fill="rgb(208,96,21)" fg:x="28824" fg:w="27"/><text x="83.0728%" y="2639.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (27 samples, 0.08%)</title><rect x="82.8228%" y="2613" width="0.0776%" height="15" fill="rgb(237,229,7)" fg:x="28824" fg:w="27"/><text x="83.0728%" y="2623.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (27 samples, 0.08%)</title><rect x="82.8228%" y="2597" width="0.0776%" height="15" fill="rgb(210,12,6)" fg:x="28824" fg:w="27"/><text x="83.0728%" y="2607.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (27 samples, 0.08%)</title><rect x="82.8228%" y="2581" width="0.0776%" height="15" fill="rgb(240,9,34)" fg:x="28824" fg:w="27"/><text x="83.0728%" y="2591.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (27 samples, 0.08%)</title><rect x="82.8228%" y="2565" width="0.0776%" height="15" fill="rgb(211,68,37)" fg:x="28824" fg:w="27"/><text x="83.0728%" y="2575.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (27 samples, 0.08%)</title><rect x="82.8228%" y="2549" width="0.0776%" height="15" fill="rgb(249,138,50)" fg:x="28824" fg:w="27"/><text x="83.0728%" y="2559.50"></text></g><g><title>rayon_core::registry::main_loop (27 samples, 0.08%)</title><rect x="82.8228%" y="2533" width="0.0776%" height="15" fill="rgb(243,185,40)" fg:x="28824" fg:w="27"/><text x="83.0728%" y="2543.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (27 samples, 0.08%)</title><rect x="82.8228%" y="2517" width="0.0776%" height="15" fill="rgb(242,92,35)" fg:x="28824" fg:w="27"/><text x="83.0728%" y="2527.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (27 samples, 0.08%)</title><rect x="82.8228%" y="2501" width="0.0776%" height="15" fill="rgb(244,98,5)" fg:x="28824" fg:w="27"/><text x="83.0728%" y="2511.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (25 samples, 0.07%)</title><rect x="82.8286%" y="2485" width="0.0718%" height="15" fill="rgb(228,186,29)" fg:x="28826" fg:w="25"/><text x="83.0786%" y="2495.50"></text></g><g><title>rayon_core::job::JobRef::execute (25 samples, 0.07%)</title><rect x="82.8286%" y="2469" width="0.0718%" height="15" fill="rgb(253,7,44)" fg:x="28826" fg:w="25"/><text x="83.0786%" y="2479.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (25 samples, 0.07%)</title><rect x="82.8286%" y="2453" width="0.0718%" height="15" fill="rgb(216,11,45)" fg:x="28826" fg:w="25"/><text x="83.0786%" y="2463.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (25 samples, 0.07%)</title><rect x="82.8286%" y="2437" width="0.0718%" height="15" fill="rgb(205,67,3)" fg:x="28826" fg:w="25"/><text x="83.0786%" y="2447.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (25 samples, 0.07%)</title><rect x="82.8286%" y="2421" width="0.0718%" height="15" fill="rgb(250,18,3)" fg:x="28826" fg:w="25"/><text x="83.0786%" y="2431.50"></text></g><g><title>std::panic::catch_unwind (25 samples, 0.07%)</title><rect x="82.8286%" y="2405" width="0.0718%" height="15" fill="rgb(241,222,43)" fg:x="28826" fg:w="25"/><text x="83.0786%" y="2415.50"></text></g><g><title>std::panicking::try (25 samples, 0.07%)</title><rect x="82.8286%" y="2389" width="0.0718%" height="15" fill="rgb(233,115,3)" fg:x="28826" fg:w="25"/><text x="83.0786%" y="2399.50"></text></g><g><title>std::panicking::try::do_call (25 samples, 0.07%)</title><rect x="82.8286%" y="2373" width="0.0718%" height="15" fill="rgb(215,165,25)" fg:x="28826" fg:w="25"/><text x="83.0786%" y="2383.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (25 samples, 0.07%)</title><rect x="82.8286%" y="2357" width="0.0718%" height="15" fill="rgb(234,179,6)" fg:x="28826" fg:w="25"/><text x="83.0786%" y="2367.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (25 samples, 0.07%)</title><rect x="82.8286%" y="2341" width="0.0718%" height="15" fill="rgb(215,82,23)" fg:x="28826" fg:w="25"/><text x="83.0786%" y="2351.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (25 samples, 0.07%)</title><rect x="82.8286%" y="2325" width="0.0718%" height="15" fill="rgb(211,47,18)" fg:x="28826" fg:w="25"/><text x="83.0786%" y="2335.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (25 samples, 0.07%)</title><rect x="82.8286%" y="2309" width="0.0718%" height="15" fill="rgb(248,17,9)" fg:x="28826" fg:w="25"/><text x="83.0786%" y="2319.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (25 samples, 0.07%)</title><rect x="82.8286%" y="2293" width="0.0718%" height="15" fill="rgb(210,212,12)" fg:x="28826" fg:w="25"/><text x="83.0786%" y="2303.50"></text></g><g><title>rayon_core::join::join_context (25 samples, 0.07%)</title><rect x="82.8286%" y="2277" width="0.0718%" height="15" fill="rgb(230,135,45)" fg:x="28826" fg:w="25"/><text x="83.0786%" y="2287.50"></text></g><g><title>rayon_core::registry::in_worker (25 samples, 0.07%)</title><rect x="82.8286%" y="2261" width="0.0718%" height="15" fill="rgb(214,121,41)" fg:x="28826" fg:w="25"/><text x="83.0786%" y="2271.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (25 samples, 0.07%)</title><rect x="82.8286%" y="2245" width="0.0718%" height="15" fill="rgb(239,165,45)" fg:x="28826" fg:w="25"/><text x="83.0786%" y="2255.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (17 samples, 0.05%)</title><rect x="82.8516%" y="2229" width="0.0488%" height="15" fill="rgb(214,85,51)" fg:x="28834" fg:w="17"/><text x="83.1016%" y="2239.50"></text></g><g><title>std::panic::catch_unwind (17 samples, 0.05%)</title><rect x="82.8516%" y="2213" width="0.0488%" height="15" fill="rgb(223,90,27)" fg:x="28834" fg:w="17"/><text x="83.1016%" y="2223.50"></text></g><g><title>std::panicking::try (17 samples, 0.05%)</title><rect x="82.8516%" y="2197" width="0.0488%" height="15" fill="rgb(244,84,11)" fg:x="28834" fg:w="17"/><text x="83.1016%" y="2207.50"></text></g><g><title>std::panicking::try::do_call (17 samples, 0.05%)</title><rect x="82.8516%" y="2181" width="0.0488%" height="15" fill="rgb(253,41,47)" fg:x="28834" fg:w="17"/><text x="83.1016%" y="2191.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (17 samples, 0.05%)</title><rect x="82.8516%" y="2165" width="0.0488%" height="15" fill="rgb(232,39,5)" fg:x="28834" fg:w="17"/><text x="83.1016%" y="2175.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (17 samples, 0.05%)</title><rect x="82.8516%" y="2149" width="0.0488%" height="15" fill="rgb(211,93,4)" fg:x="28834" fg:w="17"/><text x="83.1016%" y="2159.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (17 samples, 0.05%)</title><rect x="82.8516%" y="2133" width="0.0488%" height="15" fill="rgb(219,50,49)" fg:x="28834" fg:w="17"/><text x="83.1016%" y="2143.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (17 samples, 0.05%)</title><rect x="82.8516%" y="2117" width="0.0488%" height="15" fill="rgb(232,80,19)" fg:x="28834" fg:w="17"/><text x="83.1016%" y="2127.50"></text></g><g><title>rayon_core::join::join_context (17 samples, 0.05%)</title><rect x="82.8516%" y="2101" width="0.0488%" height="15" fill="rgb(215,227,39)" fg:x="28834" fg:w="17"/><text x="83.1016%" y="2111.50"></text></g><g><title>rayon_core::registry::in_worker (17 samples, 0.05%)</title><rect x="82.8516%" y="2085" width="0.0488%" height="15" fill="rgb(211,99,12)" fg:x="28834" fg:w="17"/><text x="83.1016%" y="2095.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (17 samples, 0.05%)</title><rect x="82.8516%" y="2069" width="0.0488%" height="15" fill="rgb(214,158,5)" fg:x="28834" fg:w="17"/><text x="83.1016%" y="2079.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (4 samples, 0.01%)</title><rect x="82.8889%" y="2053" width="0.0115%" height="15" fill="rgb(242,19,53)" fg:x="28847" fg:w="4"/><text x="83.1389%" y="2063.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.01%)</title><rect x="82.8889%" y="2037" width="0.0115%" height="15" fill="rgb(208,18,20)" fg:x="28847" fg:w="4"/><text x="83.1389%" y="2047.50"></text></g><g><title>std::panicking::try (4 samples, 0.01%)</title><rect x="82.8889%" y="2021" width="0.0115%" height="15" fill="rgb(250,44,11)" fg:x="28847" fg:w="4"/><text x="83.1389%" y="2031.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.01%)</title><rect x="82.8889%" y="2005" width="0.0115%" height="15" fill="rgb(238,159,13)" fg:x="28847" fg:w="4"/><text x="83.1389%" y="2015.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.01%)</title><rect x="82.8889%" y="1989" width="0.0115%" height="15" fill="rgb(231,74,18)" fg:x="28847" fg:w="4"/><text x="83.1389%" y="1999.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (4 samples, 0.01%)</title><rect x="82.8889%" y="1973" width="0.0115%" height="15" fill="rgb(229,219,45)" fg:x="28847" fg:w="4"/><text x="83.1389%" y="1983.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.01%)</title><rect x="82.8889%" y="1957" width="0.0115%" height="15" fill="rgb(210,221,1)" fg:x="28847" fg:w="4"/><text x="83.1389%" y="1967.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.01%)</title><rect x="82.8889%" y="1941" width="0.0115%" height="15" fill="rgb(209,60,51)" fg:x="28847" fg:w="4"/><text x="83.1389%" y="1951.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.01%)</title><rect x="82.8889%" y="1925" width="0.0115%" height="15" fill="rgb(252,97,34)" fg:x="28847" fg:w="4"/><text x="83.1389%" y="1935.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.01%)</title><rect x="82.8889%" y="1909" width="0.0115%" height="15" fill="rgb(243,211,37)" fg:x="28847" fg:w="4"/><text x="83.1389%" y="1919.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.01%)</title><rect x="82.8889%" y="1893" width="0.0115%" height="15" fill="rgb(210,229,37)" fg:x="28847" fg:w="4"/><text x="83.1389%" y="1903.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (4 samples, 0.01%)</title><rect x="82.8889%" y="1877" width="0.0115%" height="15" fill="rgb(220,208,43)" fg:x="28847" fg:w="4"/><text x="83.1389%" y="1887.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.01%)</title><rect x="82.8889%" y="1861" width="0.0115%" height="15" fill="rgb(218,118,50)" fg:x="28847" fg:w="4"/><text x="83.1389%" y="1871.50"></text></g><g><title>std::panicking::try (4 samples, 0.01%)</title><rect x="82.8889%" y="1845" width="0.0115%" height="15" fill="rgb(254,169,52)" fg:x="28847" fg:w="4"/><text x="83.1389%" y="1855.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.01%)</title><rect x="82.8889%" y="1829" width="0.0115%" height="15" fill="rgb(221,214,37)" fg:x="28847" fg:w="4"/><text x="83.1389%" y="1839.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.01%)</title><rect x="82.8889%" y="1813" width="0.0115%" height="15" fill="rgb(254,186,32)" fg:x="28847" fg:w="4"/><text x="83.1389%" y="1823.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (4 samples, 0.01%)</title><rect x="82.8889%" y="1797" width="0.0115%" height="15" fill="rgb(215,144,43)" fg:x="28847" fg:w="4"/><text x="83.1389%" y="1807.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.01%)</title><rect x="82.8889%" y="1781" width="0.0115%" height="15" fill="rgb(252,21,46)" fg:x="28847" fg:w="4"/><text x="83.1389%" y="1791.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.01%)</title><rect x="82.8889%" y="1765" width="0.0115%" height="15" fill="rgb(207,166,46)" fg:x="28847" fg:w="4"/><text x="83.1389%" y="1775.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.01%)</title><rect x="82.8889%" y="1749" width="0.0115%" height="15" fill="rgb(253,37,49)" fg:x="28847" fg:w="4"/><text x="83.1389%" y="1759.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.01%)</title><rect x="82.8889%" y="1733" width="0.0115%" height="15" fill="rgb(222,97,20)" fg:x="28847" fg:w="4"/><text x="83.1389%" y="1743.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.01%)</title><rect x="82.8889%" y="1717" width="0.0115%" height="15" fill="rgb(244,181,26)" fg:x="28847" fg:w="4"/><text x="83.1389%" y="1727.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (5 samples, 0.01%)</title><rect x="82.9004%" y="2229" width="0.0144%" height="15" fill="rgb(241,22,29)" fg:x="28851" fg:w="5"/><text x="83.1504%" y="2239.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (5 samples, 0.01%)</title><rect x="82.9004%" y="2213" width="0.0144%" height="15" fill="rgb(206,200,43)" fg:x="28851" fg:w="5"/><text x="83.1504%" y="2223.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (5 samples, 0.01%)</title><rect x="82.9004%" y="2197" width="0.0144%" height="15" fill="rgb(226,224,43)" fg:x="28851" fg:w="5"/><text x="83.1504%" y="2207.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (5 samples, 0.01%)</title><rect x="82.9004%" y="2181" width="0.0144%" height="15" fill="rgb(253,129,28)" fg:x="28851" fg:w="5"/><text x="83.1504%" y="2191.50"></text></g><g><title>rayon_core::join::join_context (5 samples, 0.01%)</title><rect x="82.9004%" y="2165" width="0.0144%" height="15" fill="rgb(252,99,33)" fg:x="28851" fg:w="5"/><text x="83.1504%" y="2175.50"></text></g><g><title>rayon_core::registry::in_worker (5 samples, 0.01%)</title><rect x="82.9004%" y="2149" width="0.0144%" height="15" fill="rgb(208,123,45)" fg:x="28851" fg:w="5"/><text x="83.1504%" y="2159.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5 samples, 0.01%)</title><rect x="82.9004%" y="2133" width="0.0144%" height="15" fill="rgb(251,106,12)" fg:x="28851" fg:w="5"/><text x="83.1504%" y="2143.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (6 samples, 0.02%)</title><rect x="82.9148%" y="2229" width="0.0172%" height="15" fill="rgb(240,209,35)" fg:x="28856" fg:w="6"/><text x="83.1648%" y="2239.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (6 samples, 0.02%)</title><rect x="82.9148%" y="2213" width="0.0172%" height="15" fill="rgb(214,52,50)" fg:x="28856" fg:w="6"/><text x="83.1648%" y="2223.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (6 samples, 0.02%)</title><rect x="82.9148%" y="2197" width="0.0172%" height="15" fill="rgb(234,119,4)" fg:x="28856" fg:w="6"/><text x="83.1648%" y="2207.50"></text></g><g><title>rayon_core::job::JobRef::execute (6 samples, 0.02%)</title><rect x="82.9148%" y="2181" width="0.0172%" height="15" fill="rgb(228,181,36)" fg:x="28856" fg:w="6"/><text x="83.1648%" y="2191.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (6 samples, 0.02%)</title><rect x="82.9148%" y="2165" width="0.0172%" height="15" fill="rgb(213,171,42)" fg:x="28856" fg:w="6"/><text x="83.1648%" y="2175.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (6 samples, 0.02%)</title><rect x="82.9148%" y="2149" width="0.0172%" height="15" fill="rgb(239,14,41)" fg:x="28856" fg:w="6"/><text x="83.1648%" y="2159.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (6 samples, 0.02%)</title><rect x="82.9148%" y="2133" width="0.0172%" height="15" fill="rgb(239,111,46)" fg:x="28856" fg:w="6"/><text x="83.1648%" y="2143.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.02%)</title><rect x="82.9148%" y="2117" width="0.0172%" height="15" fill="rgb(214,72,7)" fg:x="28856" fg:w="6"/><text x="83.1648%" y="2127.50"></text></g><g><title>std::panicking::try (6 samples, 0.02%)</title><rect x="82.9148%" y="2101" width="0.0172%" height="15" fill="rgb(221,114,1)" fg:x="28856" fg:w="6"/><text x="83.1648%" y="2111.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.02%)</title><rect x="82.9148%" y="2085" width="0.0172%" height="15" fill="rgb(213,143,14)" fg:x="28856" fg:w="6"/><text x="83.1648%" y="2095.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6 samples, 0.02%)</title><rect x="82.9148%" y="2069" width="0.0172%" height="15" fill="rgb(220,221,53)" fg:x="28856" fg:w="6"/><text x="83.1648%" y="2079.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (6 samples, 0.02%)</title><rect x="82.9148%" y="2053" width="0.0172%" height="15" fill="rgb(236,189,27)" fg:x="28856" fg:w="6"/><text x="83.1648%" y="2063.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (6 samples, 0.02%)</title><rect x="82.9148%" y="2037" width="0.0172%" height="15" fill="rgb(252,139,49)" fg:x="28856" fg:w="6"/><text x="83.1648%" y="2047.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (6 samples, 0.02%)</title><rect x="82.9148%" y="2021" width="0.0172%" height="15" fill="rgb(231,158,33)" fg:x="28856" fg:w="6"/><text x="83.1648%" y="2031.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (6 samples, 0.02%)</title><rect x="82.9148%" y="2005" width="0.0172%" height="15" fill="rgb(207,201,15)" fg:x="28856" fg:w="6"/><text x="83.1648%" y="2015.50"></text></g><g><title>rayon_core::join::join_context (6 samples, 0.02%)</title><rect x="82.9148%" y="1989" width="0.0172%" height="15" fill="rgb(218,43,48)" fg:x="28856" fg:w="6"/><text x="83.1648%" y="1999.50"></text></g><g><title>rayon_core::registry::in_worker (6 samples, 0.02%)</title><rect x="82.9148%" y="1973" width="0.0172%" height="15" fill="rgb(244,63,52)" fg:x="28856" fg:w="6"/><text x="83.1648%" y="1983.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (6 samples, 0.02%)</title><rect x="82.9148%" y="1957" width="0.0172%" height="15" fill="rgb(236,60,17)" fg:x="28856" fg:w="6"/><text x="83.1648%" y="1967.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (4 samples, 0.01%)</title><rect x="82.9205%" y="1941" width="0.0115%" height="15" fill="rgb(205,206,29)" fg:x="28858" fg:w="4"/><text x="83.1705%" y="1951.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.01%)</title><rect x="82.9205%" y="1925" width="0.0115%" height="15" fill="rgb(205,209,35)" fg:x="28858" fg:w="4"/><text x="83.1705%" y="1935.50"></text></g><g><title>std::panicking::try (4 samples, 0.01%)</title><rect x="82.9205%" y="1909" width="0.0115%" height="15" fill="rgb(227,112,14)" fg:x="28858" fg:w="4"/><text x="83.1705%" y="1919.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.01%)</title><rect x="82.9205%" y="1893" width="0.0115%" height="15" fill="rgb(248,151,9)" fg:x="28858" fg:w="4"/><text x="83.1705%" y="1903.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.01%)</title><rect x="82.9205%" y="1877" width="0.0115%" height="15" fill="rgb(247,45,40)" fg:x="28858" fg:w="4"/><text x="83.1705%" y="1887.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (4 samples, 0.01%)</title><rect x="82.9205%" y="1861" width="0.0115%" height="15" fill="rgb(232,185,16)" fg:x="28858" fg:w="4"/><text x="83.1705%" y="1871.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.01%)</title><rect x="82.9205%" y="1845" width="0.0115%" height="15" fill="rgb(215,45,44)" fg:x="28858" fg:w="4"/><text x="83.1705%" y="1855.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.01%)</title><rect x="82.9205%" y="1829" width="0.0115%" height="15" fill="rgb(206,69,32)" fg:x="28858" fg:w="4"/><text x="83.1705%" y="1839.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.01%)</title><rect x="82.9205%" y="1813" width="0.0115%" height="15" fill="rgb(233,98,50)" fg:x="28858" fg:w="4"/><text x="83.1705%" y="1823.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.01%)</title><rect x="82.9205%" y="1797" width="0.0115%" height="15" fill="rgb(232,217,52)" fg:x="28858" fg:w="4"/><text x="83.1705%" y="1807.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.01%)</title><rect x="82.9205%" y="1781" width="0.0115%" height="15" fill="rgb(250,42,51)" fg:x="28858" fg:w="4"/><text x="83.1705%" y="1791.50"></text></g><g><title>par_exec_14 (20 samples, 0.06%)</title><rect x="82.9004%" y="2789" width="0.0575%" height="15" fill="rgb(241,200,26)" fg:x="28851" fg:w="20"/><text x="83.1504%" y="2799.50"></text></g><g><title>__GI___clone3 (20 samples, 0.06%)</title><rect x="82.9004%" y="2773" width="0.0575%" height="15" fill="rgb(207,10,32)" fg:x="28851" fg:w="20"/><text x="83.1504%" y="2783.50"></text></g><g><title>start_thread (20 samples, 0.06%)</title><rect x="82.9004%" y="2757" width="0.0575%" height="15" fill="rgb(214,63,15)" fg:x="28851" fg:w="20"/><text x="83.1504%" y="2767.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (20 samples, 0.06%)</title><rect x="82.9004%" y="2741" width="0.0575%" height="15" fill="rgb(234,176,14)" fg:x="28851" fg:w="20"/><text x="83.1504%" y="2751.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (20 samples, 0.06%)</title><rect x="82.9004%" y="2725" width="0.0575%" height="15" fill="rgb(226,104,52)" fg:x="28851" fg:w="20"/><text x="83.1504%" y="2735.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (20 samples, 0.06%)</title><rect x="82.9004%" y="2709" width="0.0575%" height="15" fill="rgb(211,222,1)" fg:x="28851" fg:w="20"/><text x="83.1504%" y="2719.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (20 samples, 0.06%)</title><rect x="82.9004%" y="2693" width="0.0575%" height="15" fill="rgb(237,7,3)" fg:x="28851" fg:w="20"/><text x="83.1504%" y="2703.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (20 samples, 0.06%)</title><rect x="82.9004%" y="2677" width="0.0575%" height="15" fill="rgb(218,143,7)" fg:x="28851" fg:w="20"/><text x="83.1504%" y="2687.50"></text></g><g><title>std::panic::catch_unwind (20 samples, 0.06%)</title><rect x="82.9004%" y="2661" width="0.0575%" height="15" fill="rgb(208,25,22)" fg:x="28851" fg:w="20"/><text x="83.1504%" y="2671.50"></text></g><g><title>std::panicking::try (20 samples, 0.06%)</title><rect x="82.9004%" y="2645" width="0.0575%" height="15" fill="rgb(228,127,16)" fg:x="28851" fg:w="20"/><text x="83.1504%" y="2655.50"></text></g><g><title>std::panicking::try::do_call (20 samples, 0.06%)</title><rect x="82.9004%" y="2629" width="0.0575%" height="15" fill="rgb(237,86,27)" fg:x="28851" fg:w="20"/><text x="83.1504%" y="2639.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (20 samples, 0.06%)</title><rect x="82.9004%" y="2613" width="0.0575%" height="15" fill="rgb(207,125,19)" fg:x="28851" fg:w="20"/><text x="83.1504%" y="2623.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (20 samples, 0.06%)</title><rect x="82.9004%" y="2597" width="0.0575%" height="15" fill="rgb(243,195,0)" fg:x="28851" fg:w="20"/><text x="83.1504%" y="2607.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (20 samples, 0.06%)</title><rect x="82.9004%" y="2581" width="0.0575%" height="15" fill="rgb(230,95,18)" fg:x="28851" fg:w="20"/><text x="83.1504%" y="2591.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (20 samples, 0.06%)</title><rect x="82.9004%" y="2565" width="0.0575%" height="15" fill="rgb(232,157,21)" fg:x="28851" fg:w="20"/><text x="83.1504%" y="2575.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (20 samples, 0.06%)</title><rect x="82.9004%" y="2549" width="0.0575%" height="15" fill="rgb(212,120,50)" fg:x="28851" fg:w="20"/><text x="83.1504%" y="2559.50"></text></g><g><title>rayon_core::registry::main_loop (20 samples, 0.06%)</title><rect x="82.9004%" y="2533" width="0.0575%" height="15" fill="rgb(222,204,44)" fg:x="28851" fg:w="20"/><text x="83.1504%" y="2543.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (20 samples, 0.06%)</title><rect x="82.9004%" y="2517" width="0.0575%" height="15" fill="rgb(236,6,33)" fg:x="28851" fg:w="20"/><text x="83.1504%" y="2527.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (20 samples, 0.06%)</title><rect x="82.9004%" y="2501" width="0.0575%" height="15" fill="rgb(247,11,38)" fg:x="28851" fg:w="20"/><text x="83.1504%" y="2511.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (20 samples, 0.06%)</title><rect x="82.9004%" y="2485" width="0.0575%" height="15" fill="rgb(215,111,0)" fg:x="28851" fg:w="20"/><text x="83.1504%" y="2495.50"></text></g><g><title>rayon_core::job::JobRef::execute (20 samples, 0.06%)</title><rect x="82.9004%" y="2469" width="0.0575%" height="15" fill="rgb(211,65,46)" fg:x="28851" fg:w="20"/><text x="83.1504%" y="2479.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (20 samples, 0.06%)</title><rect x="82.9004%" y="2453" width="0.0575%" height="15" fill="rgb(216,5,12)" fg:x="28851" fg:w="20"/><text x="83.1504%" y="2463.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (20 samples, 0.06%)</title><rect x="82.9004%" y="2437" width="0.0575%" height="15" fill="rgb(226,7,2)" fg:x="28851" fg:w="20"/><text x="83.1504%" y="2447.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (20 samples, 0.06%)</title><rect x="82.9004%" y="2421" width="0.0575%" height="15" fill="rgb(242,116,12)" fg:x="28851" fg:w="20"/><text x="83.1504%" y="2431.50"></text></g><g><title>std::panic::catch_unwind (20 samples, 0.06%)</title><rect x="82.9004%" y="2405" width="0.0575%" height="15" fill="rgb(249,209,7)" fg:x="28851" fg:w="20"/><text x="83.1504%" y="2415.50"></text></g><g><title>std::panicking::try (20 samples, 0.06%)</title><rect x="82.9004%" y="2389" width="0.0575%" height="15" fill="rgb(232,73,17)" fg:x="28851" fg:w="20"/><text x="83.1504%" y="2399.50"></text></g><g><title>std::panicking::try::do_call (20 samples, 0.06%)</title><rect x="82.9004%" y="2373" width="0.0575%" height="15" fill="rgb(214,13,32)" fg:x="28851" fg:w="20"/><text x="83.1504%" y="2383.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (20 samples, 0.06%)</title><rect x="82.9004%" y="2357" width="0.0575%" height="15" fill="rgb(221,125,10)" fg:x="28851" fg:w="20"/><text x="83.1504%" y="2367.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (20 samples, 0.06%)</title><rect x="82.9004%" y="2341" width="0.0575%" height="15" fill="rgb(246,7,44)" fg:x="28851" fg:w="20"/><text x="83.1504%" y="2351.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (20 samples, 0.06%)</title><rect x="82.9004%" y="2325" width="0.0575%" height="15" fill="rgb(239,18,35)" fg:x="28851" fg:w="20"/><text x="83.1504%" y="2335.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (20 samples, 0.06%)</title><rect x="82.9004%" y="2309" width="0.0575%" height="15" fill="rgb(250,222,16)" fg:x="28851" fg:w="20"/><text x="83.1504%" y="2319.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (20 samples, 0.06%)</title><rect x="82.9004%" y="2293" width="0.0575%" height="15" fill="rgb(219,100,8)" fg:x="28851" fg:w="20"/><text x="83.1504%" y="2303.50"></text></g><g><title>rayon_core::join::join_context (20 samples, 0.06%)</title><rect x="82.9004%" y="2277" width="0.0575%" height="15" fill="rgb(240,62,13)" fg:x="28851" fg:w="20"/><text x="83.1504%" y="2287.50"></text></g><g><title>rayon_core::registry::in_worker (20 samples, 0.06%)</title><rect x="82.9004%" y="2261" width="0.0575%" height="15" fill="rgb(253,194,2)" fg:x="28851" fg:w="20"/><text x="83.1504%" y="2271.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (20 samples, 0.06%)</title><rect x="82.9004%" y="2245" width="0.0575%" height="15" fill="rgb(235,58,31)" fg:x="28851" fg:w="20"/><text x="83.1504%" y="2255.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (9 samples, 0.03%)</title><rect x="82.9320%" y="2229" width="0.0259%" height="15" fill="rgb(231,37,11)" fg:x="28862" fg:w="9"/><text x="83.1820%" y="2239.50"></text></g><g><title>std::panic::catch_unwind (9 samples, 0.03%)</title><rect x="82.9320%" y="2213" width="0.0259%" height="15" fill="rgb(235,133,0)" fg:x="28862" fg:w="9"/><text x="83.1820%" y="2223.50"></text></g><g><title>std::panicking::try (9 samples, 0.03%)</title><rect x="82.9320%" y="2197" width="0.0259%" height="15" fill="rgb(212,185,40)" fg:x="28862" fg:w="9"/><text x="83.1820%" y="2207.50"></text></g><g><title>std::panicking::try::do_call (9 samples, 0.03%)</title><rect x="82.9320%" y="2181" width="0.0259%" height="15" fill="rgb(216,68,42)" fg:x="28862" fg:w="9"/><text x="83.1820%" y="2191.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (9 samples, 0.03%)</title><rect x="82.9320%" y="2165" width="0.0259%" height="15" fill="rgb(239,81,4)" fg:x="28862" fg:w="9"/><text x="83.1820%" y="2175.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (9 samples, 0.03%)</title><rect x="82.9320%" y="2149" width="0.0259%" height="15" fill="rgb(206,86,6)" fg:x="28862" fg:w="9"/><text x="83.1820%" y="2159.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (9 samples, 0.03%)</title><rect x="82.9320%" y="2133" width="0.0259%" height="15" fill="rgb(249,95,27)" fg:x="28862" fg:w="9"/><text x="83.1820%" y="2143.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.03%)</title><rect x="82.9320%" y="2117" width="0.0259%" height="15" fill="rgb(205,155,45)" fg:x="28862" fg:w="9"/><text x="83.1820%" y="2127.50"></text></g><g><title>rayon_core::join::join_context (9 samples, 0.03%)</title><rect x="82.9320%" y="2101" width="0.0259%" height="15" fill="rgb(213,55,42)" fg:x="28862" fg:w="9"/><text x="83.1820%" y="2111.50"></text></g><g><title>rayon_core::registry::in_worker (9 samples, 0.03%)</title><rect x="82.9320%" y="2085" width="0.0259%" height="15" fill="rgb(249,197,4)" fg:x="28862" fg:w="9"/><text x="83.1820%" y="2095.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (9 samples, 0.03%)</title><rect x="82.9320%" y="2069" width="0.0259%" height="15" fill="rgb(212,128,32)" fg:x="28862" fg:w="9"/><text x="83.1820%" y="2079.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (9 samples, 0.03%)</title><rect x="82.9320%" y="2053" width="0.0259%" height="15" fill="rgb(252,47,30)" fg:x="28862" fg:w="9"/><text x="83.1820%" y="2063.50"></text></g><g><title>std::panic::catch_unwind (9 samples, 0.03%)</title><rect x="82.9320%" y="2037" width="0.0259%" height="15" fill="rgb(209,79,18)" fg:x="28862" fg:w="9"/><text x="83.1820%" y="2047.50"></text></g><g><title>std::panicking::try (9 samples, 0.03%)</title><rect x="82.9320%" y="2021" width="0.0259%" height="15" fill="rgb(225,81,38)" fg:x="28862" fg:w="9"/><text x="83.1820%" y="2031.50"></text></g><g><title>std::panicking::try::do_call (9 samples, 0.03%)</title><rect x="82.9320%" y="2005" width="0.0259%" height="15" fill="rgb(205,95,16)" fg:x="28862" fg:w="9"/><text x="83.1820%" y="2015.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (9 samples, 0.03%)</title><rect x="82.9320%" y="1989" width="0.0259%" height="15" fill="rgb(214,30,4)" fg:x="28862" fg:w="9"/><text x="83.1820%" y="1999.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (9 samples, 0.03%)</title><rect x="82.9320%" y="1973" width="0.0259%" height="15" fill="rgb(232,137,22)" fg:x="28862" fg:w="9"/><text x="83.1820%" y="1983.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (9 samples, 0.03%)</title><rect x="82.9320%" y="1957" width="0.0259%" height="15" fill="rgb(232,156,19)" fg:x="28862" fg:w="9"/><text x="83.1820%" y="1967.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.03%)</title><rect x="82.9320%" y="1941" width="0.0259%" height="15" fill="rgb(248,157,26)" fg:x="28862" fg:w="9"/><text x="83.1820%" y="1951.50"></text></g><g><title>rayon_core::join::join_context (9 samples, 0.03%)</title><rect x="82.9320%" y="1925" width="0.0259%" height="15" fill="rgb(242,24,3)" fg:x="28862" fg:w="9"/><text x="83.1820%" y="1935.50"></text></g><g><title>rayon_core::registry::in_worker (9 samples, 0.03%)</title><rect x="82.9320%" y="1909" width="0.0259%" height="15" fill="rgb(218,195,48)" fg:x="28862" fg:w="9"/><text x="83.1820%" y="1919.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (9 samples, 0.03%)</title><rect x="82.9320%" y="1893" width="0.0259%" height="15" fill="rgb(214,193,36)" fg:x="28862" fg:w="9"/><text x="83.1820%" y="1903.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (5 samples, 0.01%)</title><rect x="82.9435%" y="1877" width="0.0144%" height="15" fill="rgb(242,110,40)" fg:x="28866" fg:w="5"/><text x="83.1935%" y="1887.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.01%)</title><rect x="82.9435%" y="1861" width="0.0144%" height="15" fill="rgb(233,150,26)" fg:x="28866" fg:w="5"/><text x="83.1935%" y="1871.50"></text></g><g><title>std::panicking::try (5 samples, 0.01%)</title><rect x="82.9435%" y="1845" width="0.0144%" height="15" fill="rgb(239,200,30)" fg:x="28866" fg:w="5"/><text x="83.1935%" y="1855.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.01%)</title><rect x="82.9435%" y="1829" width="0.0144%" height="15" fill="rgb(226,28,11)" fg:x="28866" fg:w="5"/><text x="83.1935%" y="1839.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5 samples, 0.01%)</title><rect x="82.9435%" y="1813" width="0.0144%" height="15" fill="rgb(220,26,48)" fg:x="28866" fg:w="5"/><text x="83.1935%" y="1823.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (5 samples, 0.01%)</title><rect x="82.9435%" y="1797" width="0.0144%" height="15" fill="rgb(232,10,11)" fg:x="28866" fg:w="5"/><text x="83.1935%" y="1807.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (5 samples, 0.01%)</title><rect x="82.9435%" y="1781" width="0.0144%" height="15" fill="rgb(252,143,50)" fg:x="28866" fg:w="5"/><text x="83.1935%" y="1791.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (5 samples, 0.01%)</title><rect x="82.9435%" y="1765" width="0.0144%" height="15" fill="rgb(206,58,22)" fg:x="28866" fg:w="5"/><text x="83.1935%" y="1775.50"></text></g><g><title>rayon_core::join::join_context (5 samples, 0.01%)</title><rect x="82.9435%" y="1749" width="0.0144%" height="15" fill="rgb(250,9,45)" fg:x="28866" fg:w="5"/><text x="83.1935%" y="1759.50"></text></g><g><title>rayon_core::registry::in_worker (5 samples, 0.01%)</title><rect x="82.9435%" y="1733" width="0.0144%" height="15" fill="rgb(225,148,14)" fg:x="28866" fg:w="5"/><text x="83.1935%" y="1743.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5 samples, 0.01%)</title><rect x="82.9435%" y="1717" width="0.0144%" height="15" fill="rgb(205,178,40)" fg:x="28866" fg:w="5"/><text x="83.1935%" y="1727.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (4 samples, 0.01%)</title><rect x="82.9751%" y="2053" width="0.0115%" height="15" fill="rgb(215,201,4)" fg:x="28877" fg:w="4"/><text x="83.2251%" y="2063.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (4 samples, 0.01%)</title><rect x="82.9751%" y="2037" width="0.0115%" height="15" fill="rgb(219,223,24)" fg:x="28877" fg:w="4"/><text x="83.2251%" y="2047.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.01%)</title><rect x="82.9751%" y="2021" width="0.0115%" height="15" fill="rgb(217,19,31)" fg:x="28877" fg:w="4"/><text x="83.2251%" y="2031.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.01%)</title><rect x="82.9751%" y="2005" width="0.0115%" height="15" fill="rgb(235,33,3)" fg:x="28877" fg:w="4"/><text x="83.2251%" y="2015.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.01%)</title><rect x="82.9751%" y="1989" width="0.0115%" height="15" fill="rgb(221,39,18)" fg:x="28877" fg:w="4"/><text x="83.2251%" y="1999.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.01%)</title><rect x="82.9751%" y="1973" width="0.0115%" height="15" fill="rgb(242,162,33)" fg:x="28877" fg:w="4"/><text x="83.2251%" y="1983.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.01%)</title><rect x="82.9751%" y="1957" width="0.0115%" height="15" fill="rgb(233,215,28)" fg:x="28877" fg:w="4"/><text x="83.2251%" y="1967.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (4 samples, 0.01%)</title><rect x="82.9866%" y="2053" width="0.0115%" height="15" fill="rgb(212,117,9)" fg:x="28881" fg:w="4"/><text x="83.2366%" y="2063.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (4 samples, 0.01%)</title><rect x="82.9866%" y="2037" width="0.0115%" height="15" fill="rgb(237,70,47)" fg:x="28881" fg:w="4"/><text x="83.2366%" y="2047.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (4 samples, 0.01%)</title><rect x="82.9866%" y="2021" width="0.0115%" height="15" fill="rgb(206,177,13)" fg:x="28881" fg:w="4"/><text x="83.2366%" y="2031.50"></text></g><g><title>rayon_core::job::JobRef::execute (4 samples, 0.01%)</title><rect x="82.9866%" y="2005" width="0.0115%" height="15" fill="rgb(209,174,33)" fg:x="28881" fg:w="4"/><text x="83.2366%" y="2015.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (4 samples, 0.01%)</title><rect x="82.9866%" y="1989" width="0.0115%" height="15" fill="rgb(226,6,11)" fg:x="28881" fg:w="4"/><text x="83.2366%" y="1999.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (4 samples, 0.01%)</title><rect x="82.9866%" y="1973" width="0.0115%" height="15" fill="rgb(240,214,6)" fg:x="28881" fg:w="4"/><text x="83.2366%" y="1983.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (4 samples, 0.01%)</title><rect x="82.9866%" y="1957" width="0.0115%" height="15" fill="rgb(254,214,40)" fg:x="28881" fg:w="4"/><text x="83.2366%" y="1967.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.01%)</title><rect x="82.9866%" y="1941" width="0.0115%" height="15" fill="rgb(230,187,15)" fg:x="28881" fg:w="4"/><text x="83.2366%" y="1951.50"></text></g><g><title>std::panicking::try (4 samples, 0.01%)</title><rect x="82.9866%" y="1925" width="0.0115%" height="15" fill="rgb(250,11,27)" fg:x="28881" fg:w="4"/><text x="83.2366%" y="1935.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.01%)</title><rect x="82.9866%" y="1909" width="0.0115%" height="15" fill="rgb(243,107,19)" fg:x="28881" fg:w="4"/><text x="83.2366%" y="1919.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.01%)</title><rect x="82.9866%" y="1893" width="0.0115%" height="15" fill="rgb(253,66,26)" fg:x="28881" fg:w="4"/><text x="83.2366%" y="1903.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (4 samples, 0.01%)</title><rect x="82.9866%" y="1877" width="0.0115%" height="15" fill="rgb(228,43,8)" fg:x="28881" fg:w="4"/><text x="83.2366%" y="1887.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (4 samples, 0.01%)</title><rect x="82.9866%" y="1861" width="0.0115%" height="15" fill="rgb(232,197,36)" fg:x="28881" fg:w="4"/><text x="83.2366%" y="1871.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.01%)</title><rect x="82.9866%" y="1845" width="0.0115%" height="15" fill="rgb(221,182,31)" fg:x="28881" fg:w="4"/><text x="83.2366%" y="1855.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.01%)</title><rect x="82.9866%" y="1829" width="0.0115%" height="15" fill="rgb(244,25,36)" fg:x="28881" fg:w="4"/><text x="83.2366%" y="1839.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.01%)</title><rect x="82.9866%" y="1813" width="0.0115%" height="15" fill="rgb(247,101,19)" fg:x="28881" fg:w="4"/><text x="83.2366%" y="1823.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.01%)</title><rect x="82.9866%" y="1797" width="0.0115%" height="15" fill="rgb(223,117,19)" fg:x="28881" fg:w="4"/><text x="83.2366%" y="1807.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.01%)</title><rect x="82.9866%" y="1781" width="0.0115%" height="15" fill="rgb(249,63,38)" fg:x="28881" fg:w="4"/><text x="83.2366%" y="1791.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (5 samples, 0.01%)</title><rect x="82.9981%" y="1877" width="0.0144%" height="15" fill="rgb(220,143,23)" fg:x="28885" fg:w="5"/><text x="83.2481%" y="1887.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (5 samples, 0.01%)</title><rect x="82.9981%" y="1861" width="0.0144%" height="15" fill="rgb(252,183,22)" fg:x="28885" fg:w="5"/><text x="83.2481%" y="1871.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (5 samples, 0.01%)</title><rect x="82.9981%" y="1845" width="0.0144%" height="15" fill="rgb(243,176,15)" fg:x="28885" fg:w="5"/><text x="83.2481%" y="1855.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (5 samples, 0.01%)</title><rect x="82.9981%" y="1829" width="0.0144%" height="15" fill="rgb(244,204,46)" fg:x="28885" fg:w="5"/><text x="83.2481%" y="1839.50"></text></g><g><title>rayon_core::join::join_context (5 samples, 0.01%)</title><rect x="82.9981%" y="1813" width="0.0144%" height="15" fill="rgb(227,28,54)" fg:x="28885" fg:w="5"/><text x="83.2481%" y="1823.50"></text></g><g><title>rayon_core::registry::in_worker (5 samples, 0.01%)</title><rect x="82.9981%" y="1797" width="0.0144%" height="15" fill="rgb(231,10,15)" fg:x="28885" fg:w="5"/><text x="83.2481%" y="1807.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5 samples, 0.01%)</title><rect x="82.9981%" y="1781" width="0.0144%" height="15" fill="rgb(210,200,17)" fg:x="28885" fg:w="5"/><text x="83.2481%" y="1791.50"></text></g><g><title>par_exec_15 (26 samples, 0.07%)</title><rect x="82.9579%" y="2789" width="0.0747%" height="15" fill="rgb(251,106,46)" fg:x="28871" fg:w="26"/><text x="83.2079%" y="2799.50"></text></g><g><title>__GI___clone3 (26 samples, 0.07%)</title><rect x="82.9579%" y="2773" width="0.0747%" height="15" fill="rgb(218,211,15)" fg:x="28871" fg:w="26"/><text x="83.2079%" y="2783.50"></text></g><g><title>start_thread (26 samples, 0.07%)</title><rect x="82.9579%" y="2757" width="0.0747%" height="15" fill="rgb(239,62,10)" fg:x="28871" fg:w="26"/><text x="83.2079%" y="2767.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (26 samples, 0.07%)</title><rect x="82.9579%" y="2741" width="0.0747%" height="15" fill="rgb(225,53,53)" fg:x="28871" fg:w="26"/><text x="83.2079%" y="2751.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (26 samples, 0.07%)</title><rect x="82.9579%" y="2725" width="0.0747%" height="15" fill="rgb(207,16,24)" fg:x="28871" fg:w="26"/><text x="83.2079%" y="2735.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (26 samples, 0.07%)</title><rect x="82.9579%" y="2709" width="0.0747%" height="15" fill="rgb(217,52,28)" fg:x="28871" fg:w="26"/><text x="83.2079%" y="2719.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (26 samples, 0.07%)</title><rect x="82.9579%" y="2693" width="0.0747%" height="15" fill="rgb(246,1,5)" fg:x="28871" fg:w="26"/><text x="83.2079%" y="2703.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (26 samples, 0.07%)</title><rect x="82.9579%" y="2677" width="0.0747%" height="15" fill="rgb(221,29,26)" fg:x="28871" fg:w="26"/><text x="83.2079%" y="2687.50"></text></g><g><title>std::panic::catch_unwind (26 samples, 0.07%)</title><rect x="82.9579%" y="2661" width="0.0747%" height="15" fill="rgb(250,133,32)" fg:x="28871" fg:w="26"/><text x="83.2079%" y="2671.50"></text></g><g><title>std::panicking::try (26 samples, 0.07%)</title><rect x="82.9579%" y="2645" width="0.0747%" height="15" fill="rgb(236,63,16)" fg:x="28871" fg:w="26"/><text x="83.2079%" y="2655.50"></text></g><g><title>std::panicking::try::do_call (26 samples, 0.07%)</title><rect x="82.9579%" y="2629" width="0.0747%" height="15" fill="rgb(231,159,14)" fg:x="28871" fg:w="26"/><text x="83.2079%" y="2639.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (26 samples, 0.07%)</title><rect x="82.9579%" y="2613" width="0.0747%" height="15" fill="rgb(207,102,36)" fg:x="28871" fg:w="26"/><text x="83.2079%" y="2623.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (26 samples, 0.07%)</title><rect x="82.9579%" y="2597" width="0.0747%" height="15" fill="rgb(230,224,31)" fg:x="28871" fg:w="26"/><text x="83.2079%" y="2607.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (26 samples, 0.07%)</title><rect x="82.9579%" y="2581" width="0.0747%" height="15" fill="rgb(215,182,16)" fg:x="28871" fg:w="26"/><text x="83.2079%" y="2591.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (26 samples, 0.07%)</title><rect x="82.9579%" y="2565" width="0.0747%" height="15" fill="rgb(226,113,2)" fg:x="28871" fg:w="26"/><text x="83.2079%" y="2575.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (26 samples, 0.07%)</title><rect x="82.9579%" y="2549" width="0.0747%" height="15" fill="rgb(241,18,35)" fg:x="28871" fg:w="26"/><text x="83.2079%" y="2559.50"></text></g><g><title>rayon_core::registry::main_loop (26 samples, 0.07%)</title><rect x="82.9579%" y="2533" width="0.0747%" height="15" fill="rgb(240,165,44)" fg:x="28871" fg:w="26"/><text x="83.2079%" y="2543.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (26 samples, 0.07%)</title><rect x="82.9579%" y="2517" width="0.0747%" height="15" fill="rgb(229,130,47)" fg:x="28871" fg:w="26"/><text x="83.2079%" y="2527.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (26 samples, 0.07%)</title><rect x="82.9579%" y="2501" width="0.0747%" height="15" fill="rgb(223,93,7)" fg:x="28871" fg:w="26"/><text x="83.2079%" y="2511.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (26 samples, 0.07%)</title><rect x="82.9579%" y="2485" width="0.0747%" height="15" fill="rgb(205,180,36)" fg:x="28871" fg:w="26"/><text x="83.2079%" y="2495.50"></text></g><g><title>rayon_core::job::JobRef::execute (26 samples, 0.07%)</title><rect x="82.9579%" y="2469" width="0.0747%" height="15" fill="rgb(221,103,28)" fg:x="28871" fg:w="26"/><text x="83.2079%" y="2479.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (26 samples, 0.07%)</title><rect x="82.9579%" y="2453" width="0.0747%" height="15" fill="rgb(212,4,3)" fg:x="28871" fg:w="26"/><text x="83.2079%" y="2463.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (26 samples, 0.07%)</title><rect x="82.9579%" y="2437" width="0.0747%" height="15" fill="rgb(209,221,53)" fg:x="28871" fg:w="26"/><text x="83.2079%" y="2447.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (26 samples, 0.07%)</title><rect x="82.9579%" y="2421" width="0.0747%" height="15" fill="rgb(233,229,52)" fg:x="28871" fg:w="26"/><text x="83.2079%" y="2431.50"></text></g><g><title>std::panic::catch_unwind (26 samples, 0.07%)</title><rect x="82.9579%" y="2405" width="0.0747%" height="15" fill="rgb(254,127,37)" fg:x="28871" fg:w="26"/><text x="83.2079%" y="2415.50"></text></g><g><title>std::panicking::try (26 samples, 0.07%)</title><rect x="82.9579%" y="2389" width="0.0747%" height="15" fill="rgb(207,161,26)" fg:x="28871" fg:w="26"/><text x="83.2079%" y="2399.50"></text></g><g><title>std::panicking::try::do_call (26 samples, 0.07%)</title><rect x="82.9579%" y="2373" width="0.0747%" height="15" fill="rgb(223,75,5)" fg:x="28871" fg:w="26"/><text x="83.2079%" y="2383.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (26 samples, 0.07%)</title><rect x="82.9579%" y="2357" width="0.0747%" height="15" fill="rgb(235,115,52)" fg:x="28871" fg:w="26"/><text x="83.2079%" y="2367.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (26 samples, 0.07%)</title><rect x="82.9579%" y="2341" width="0.0747%" height="15" fill="rgb(240,91,46)" fg:x="28871" fg:w="26"/><text x="83.2079%" y="2351.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (26 samples, 0.07%)</title><rect x="82.9579%" y="2325" width="0.0747%" height="15" fill="rgb(251,144,21)" fg:x="28871" fg:w="26"/><text x="83.2079%" y="2335.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (26 samples, 0.07%)</title><rect x="82.9579%" y="2309" width="0.0747%" height="15" fill="rgb(247,220,47)" fg:x="28871" fg:w="26"/><text x="83.2079%" y="2319.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (26 samples, 0.07%)</title><rect x="82.9579%" y="2293" width="0.0747%" height="15" fill="rgb(253,122,1)" fg:x="28871" fg:w="26"/><text x="83.2079%" y="2303.50"></text></g><g><title>rayon_core::join::join_context (26 samples, 0.07%)</title><rect x="82.9579%" y="2277" width="0.0747%" height="15" fill="rgb(221,0,24)" fg:x="28871" fg:w="26"/><text x="83.2079%" y="2287.50"></text></g><g><title>rayon_core::registry::in_worker (26 samples, 0.07%)</title><rect x="82.9579%" y="2261" width="0.0747%" height="15" fill="rgb(220,204,54)" fg:x="28871" fg:w="26"/><text x="83.2079%" y="2271.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (26 samples, 0.07%)</title><rect x="82.9579%" y="2245" width="0.0747%" height="15" fill="rgb(205,96,25)" fg:x="28871" fg:w="26"/><text x="83.2079%" y="2255.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (20 samples, 0.06%)</title><rect x="82.9751%" y="2229" width="0.0575%" height="15" fill="rgb(247,77,20)" fg:x="28877" fg:w="20"/><text x="83.2251%" y="2239.50"></text></g><g><title>std::panic::catch_unwind (20 samples, 0.06%)</title><rect x="82.9751%" y="2213" width="0.0575%" height="15" fill="rgb(245,151,8)" fg:x="28877" fg:w="20"/><text x="83.2251%" y="2223.50"></text></g><g><title>std::panicking::try (20 samples, 0.06%)</title><rect x="82.9751%" y="2197" width="0.0575%" height="15" fill="rgb(242,158,39)" fg:x="28877" fg:w="20"/><text x="83.2251%" y="2207.50"></text></g><g><title>std::panicking::try::do_call (20 samples, 0.06%)</title><rect x="82.9751%" y="2181" width="0.0575%" height="15" fill="rgb(222,214,50)" fg:x="28877" fg:w="20"/><text x="83.2251%" y="2191.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (20 samples, 0.06%)</title><rect x="82.9751%" y="2165" width="0.0575%" height="15" fill="rgb(229,60,39)" fg:x="28877" fg:w="20"/><text x="83.2251%" y="2175.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (20 samples, 0.06%)</title><rect x="82.9751%" y="2149" width="0.0575%" height="15" fill="rgb(240,148,18)" fg:x="28877" fg:w="20"/><text x="83.2251%" y="2159.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (20 samples, 0.06%)</title><rect x="82.9751%" y="2133" width="0.0575%" height="15" fill="rgb(215,96,11)" fg:x="28877" fg:w="20"/><text x="83.2251%" y="2143.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (20 samples, 0.06%)</title><rect x="82.9751%" y="2117" width="0.0575%" height="15" fill="rgb(238,162,53)" fg:x="28877" fg:w="20"/><text x="83.2251%" y="2127.50"></text></g><g><title>rayon_core::join::join_context (20 samples, 0.06%)</title><rect x="82.9751%" y="2101" width="0.0575%" height="15" fill="rgb(214,83,18)" fg:x="28877" fg:w="20"/><text x="83.2251%" y="2111.50"></text></g><g><title>rayon_core::registry::in_worker (20 samples, 0.06%)</title><rect x="82.9751%" y="2085" width="0.0575%" height="15" fill="rgb(248,117,24)" fg:x="28877" fg:w="20"/><text x="83.2251%" y="2095.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (20 samples, 0.06%)</title><rect x="82.9751%" y="2069" width="0.0575%" height="15" fill="rgb(238,190,6)" fg:x="28877" fg:w="20"/><text x="83.2251%" y="2079.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (12 samples, 0.03%)</title><rect x="82.9981%" y="2053" width="0.0345%" height="15" fill="rgb(213,51,6)" fg:x="28885" fg:w="12"/><text x="83.2481%" y="2063.50"></text></g><g><title>std::panic::catch_unwind (12 samples, 0.03%)</title><rect x="82.9981%" y="2037" width="0.0345%" height="15" fill="rgb(212,136,1)" fg:x="28885" fg:w="12"/><text x="83.2481%" y="2047.50"></text></g><g><title>std::panicking::try (12 samples, 0.03%)</title><rect x="82.9981%" y="2021" width="0.0345%" height="15" fill="rgb(221,192,14)" fg:x="28885" fg:w="12"/><text x="83.2481%" y="2031.50"></text></g><g><title>std::panicking::try::do_call (12 samples, 0.03%)</title><rect x="82.9981%" y="2005" width="0.0345%" height="15" fill="rgb(244,38,54)" fg:x="28885" fg:w="12"/><text x="83.2481%" y="2015.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (12 samples, 0.03%)</title><rect x="82.9981%" y="1989" width="0.0345%" height="15" fill="rgb(240,45,28)" fg:x="28885" fg:w="12"/><text x="83.2481%" y="1999.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (12 samples, 0.03%)</title><rect x="82.9981%" y="1973" width="0.0345%" height="15" fill="rgb(240,123,12)" fg:x="28885" fg:w="12"/><text x="83.2481%" y="1983.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (12 samples, 0.03%)</title><rect x="82.9981%" y="1957" width="0.0345%" height="15" fill="rgb(216,14,30)" fg:x="28885" fg:w="12"/><text x="83.2481%" y="1967.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.03%)</title><rect x="82.9981%" y="1941" width="0.0345%" height="15" fill="rgb(212,50,24)" fg:x="28885" fg:w="12"/><text x="83.2481%" y="1951.50"></text></g><g><title>rayon_core::join::join_context (12 samples, 0.03%)</title><rect x="82.9981%" y="1925" width="0.0345%" height="15" fill="rgb(253,229,47)" fg:x="28885" fg:w="12"/><text x="83.2481%" y="1935.50"></text></g><g><title>rayon_core::registry::in_worker (12 samples, 0.03%)</title><rect x="82.9981%" y="1909" width="0.0345%" height="15" fill="rgb(214,26,17)" fg:x="28885" fg:w="12"/><text x="83.2481%" y="1919.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (12 samples, 0.03%)</title><rect x="82.9981%" y="1893" width="0.0345%" height="15" fill="rgb(252,60,11)" fg:x="28885" fg:w="12"/><text x="83.2481%" y="1903.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (6 samples, 0.02%)</title><rect x="83.0153%" y="1877" width="0.0172%" height="15" fill="rgb(209,59,37)" fg:x="28891" fg:w="6"/><text x="83.2653%" y="1887.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.02%)</title><rect x="83.0153%" y="1861" width="0.0172%" height="15" fill="rgb(228,126,53)" fg:x="28891" fg:w="6"/><text x="83.2653%" y="1871.50"></text></g><g><title>std::panicking::try (6 samples, 0.02%)</title><rect x="83.0153%" y="1845" width="0.0172%" height="15" fill="rgb(233,99,2)" fg:x="28891" fg:w="6"/><text x="83.2653%" y="1855.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.02%)</title><rect x="83.0153%" y="1829" width="0.0172%" height="15" fill="rgb(217,106,34)" fg:x="28891" fg:w="6"/><text x="83.2653%" y="1839.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6 samples, 0.02%)</title><rect x="83.0153%" y="1813" width="0.0172%" height="15" fill="rgb(222,46,19)" fg:x="28891" fg:w="6"/><text x="83.2653%" y="1823.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (6 samples, 0.02%)</title><rect x="83.0153%" y="1797" width="0.0172%" height="15" fill="rgb(251,87,31)" fg:x="28891" fg:w="6"/><text x="83.2653%" y="1807.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (6 samples, 0.02%)</title><rect x="83.0153%" y="1781" width="0.0172%" height="15" fill="rgb(213,70,51)" fg:x="28891" fg:w="6"/><text x="83.2653%" y="1791.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (6 samples, 0.02%)</title><rect x="83.0153%" y="1765" width="0.0172%" height="15" fill="rgb(229,144,18)" fg:x="28891" fg:w="6"/><text x="83.2653%" y="1775.50"></text></g><g><title>rayon_core::join::join_context (6 samples, 0.02%)</title><rect x="83.0153%" y="1749" width="0.0172%" height="15" fill="rgb(254,60,26)" fg:x="28891" fg:w="6"/><text x="83.2653%" y="1759.50"></text></g><g><title>rayon_core::registry::in_worker (6 samples, 0.02%)</title><rect x="83.0153%" y="1733" width="0.0172%" height="15" fill="rgb(243,127,51)" fg:x="28891" fg:w="6"/><text x="83.2653%" y="1743.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (6 samples, 0.02%)</title><rect x="83.0153%" y="1717" width="0.0172%" height="15" fill="rgb(221,51,25)" fg:x="28891" fg:w="6"/><text x="83.2653%" y="1727.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (4 samples, 0.01%)</title><rect x="83.0383%" y="2053" width="0.0115%" height="15" fill="rgb(205,42,7)" fg:x="28899" fg:w="4"/><text x="83.2883%" y="2063.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (4 samples, 0.01%)</title><rect x="83.0383%" y="2037" width="0.0115%" height="15" fill="rgb(236,177,48)" fg:x="28899" fg:w="4"/><text x="83.2883%" y="2047.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.01%)</title><rect x="83.0383%" y="2021" width="0.0115%" height="15" fill="rgb(226,79,31)" fg:x="28899" fg:w="4"/><text x="83.2883%" y="2031.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.01%)</title><rect x="83.0383%" y="2005" width="0.0115%" height="15" fill="rgb(216,170,12)" fg:x="28899" fg:w="4"/><text x="83.2883%" y="2015.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.01%)</title><rect x="83.0383%" y="1989" width="0.0115%" height="15" fill="rgb(208,62,51)" fg:x="28899" fg:w="4"/><text x="83.2883%" y="1999.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.01%)</title><rect x="83.0383%" y="1973" width="0.0115%" height="15" fill="rgb(254,129,9)" fg:x="28899" fg:w="4"/><text x="83.2883%" y="1983.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.01%)</title><rect x="83.0383%" y="1957" width="0.0115%" height="15" fill="rgb(243,209,31)" fg:x="28899" fg:w="4"/><text x="83.2883%" y="1967.50"></text></g><g><title>par_exec_16 (10 samples, 0.03%)</title><rect x="83.0326%" y="2789" width="0.0287%" height="15" fill="rgb(213,159,23)" fg:x="28897" fg:w="10"/><text x="83.2826%" y="2799.50"></text></g><g><title>__GI___clone3 (10 samples, 0.03%)</title><rect x="83.0326%" y="2773" width="0.0287%" height="15" fill="rgb(249,77,39)" fg:x="28897" fg:w="10"/><text x="83.2826%" y="2783.50"></text></g><g><title>start_thread (10 samples, 0.03%)</title><rect x="83.0326%" y="2757" width="0.0287%" height="15" fill="rgb(230,13,33)" fg:x="28897" fg:w="10"/><text x="83.2826%" y="2767.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (10 samples, 0.03%)</title><rect x="83.0326%" y="2741" width="0.0287%" height="15" fill="rgb(215,215,7)" fg:x="28897" fg:w="10"/><text x="83.2826%" y="2751.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (10 samples, 0.03%)</title><rect x="83.0326%" y="2725" width="0.0287%" height="15" fill="rgb(222,92,25)" fg:x="28897" fg:w="10"/><text x="83.2826%" y="2735.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (10 samples, 0.03%)</title><rect x="83.0326%" y="2709" width="0.0287%" height="15" fill="rgb(215,173,22)" fg:x="28897" fg:w="10"/><text x="83.2826%" y="2719.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (10 samples, 0.03%)</title><rect x="83.0326%" y="2693" width="0.0287%" height="15" fill="rgb(247,205,52)" fg:x="28897" fg:w="10"/><text x="83.2826%" y="2703.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (10 samples, 0.03%)</title><rect x="83.0326%" y="2677" width="0.0287%" height="15" fill="rgb(240,210,37)" fg:x="28897" fg:w="10"/><text x="83.2826%" y="2687.50"></text></g><g><title>std::panic::catch_unwind (10 samples, 0.03%)</title><rect x="83.0326%" y="2661" width="0.0287%" height="15" fill="rgb(224,13,10)" fg:x="28897" fg:w="10"/><text x="83.2826%" y="2671.50"></text></g><g><title>std::panicking::try (10 samples, 0.03%)</title><rect x="83.0326%" y="2645" width="0.0287%" height="15" fill="rgb(209,48,33)" fg:x="28897" fg:w="10"/><text x="83.2826%" y="2655.50"></text></g><g><title>std::panicking::try::do_call (10 samples, 0.03%)</title><rect x="83.0326%" y="2629" width="0.0287%" height="15" fill="rgb(228,219,23)" fg:x="28897" fg:w="10"/><text x="83.2826%" y="2639.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (10 samples, 0.03%)</title><rect x="83.0326%" y="2613" width="0.0287%" height="15" fill="rgb(239,46,49)" fg:x="28897" fg:w="10"/><text x="83.2826%" y="2623.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (10 samples, 0.03%)</title><rect x="83.0326%" y="2597" width="0.0287%" height="15" fill="rgb(206,172,51)" fg:x="28897" fg:w="10"/><text x="83.2826%" y="2607.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (10 samples, 0.03%)</title><rect x="83.0326%" y="2581" width="0.0287%" height="15" fill="rgb(213,212,35)" fg:x="28897" fg:w="10"/><text x="83.2826%" y="2591.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (10 samples, 0.03%)</title><rect x="83.0326%" y="2565" width="0.0287%" height="15" fill="rgb(252,40,27)" fg:x="28897" fg:w="10"/><text x="83.2826%" y="2575.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (10 samples, 0.03%)</title><rect x="83.0326%" y="2549" width="0.0287%" height="15" fill="rgb(212,33,41)" fg:x="28897" fg:w="10"/><text x="83.2826%" y="2559.50"></text></g><g><title>rayon_core::registry::main_loop (10 samples, 0.03%)</title><rect x="83.0326%" y="2533" width="0.0287%" height="15" fill="rgb(232,160,27)" fg:x="28897" fg:w="10"/><text x="83.2826%" y="2543.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (10 samples, 0.03%)</title><rect x="83.0326%" y="2517" width="0.0287%" height="15" fill="rgb(244,160,20)" fg:x="28897" fg:w="10"/><text x="83.2826%" y="2527.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (10 samples, 0.03%)</title><rect x="83.0326%" y="2501" width="0.0287%" height="15" fill="rgb(205,66,20)" fg:x="28897" fg:w="10"/><text x="83.2826%" y="2511.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (9 samples, 0.03%)</title><rect x="83.0355%" y="2485" width="0.0259%" height="15" fill="rgb(236,158,6)" fg:x="28898" fg:w="9"/><text x="83.2855%" y="2495.50"></text></g><g><title>rayon_core::job::JobRef::execute (9 samples, 0.03%)</title><rect x="83.0355%" y="2469" width="0.0259%" height="15" fill="rgb(232,25,36)" fg:x="28898" fg:w="9"/><text x="83.2855%" y="2479.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (9 samples, 0.03%)</title><rect x="83.0355%" y="2453" width="0.0259%" height="15" fill="rgb(220,153,35)" fg:x="28898" fg:w="9"/><text x="83.2855%" y="2463.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (9 samples, 0.03%)</title><rect x="83.0355%" y="2437" width="0.0259%" height="15" fill="rgb(216,5,8)" fg:x="28898" fg:w="9"/><text x="83.2855%" y="2447.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (9 samples, 0.03%)</title><rect x="83.0355%" y="2421" width="0.0259%" height="15" fill="rgb(240,97,3)" fg:x="28898" fg:w="9"/><text x="83.2855%" y="2431.50"></text></g><g><title>std::panic::catch_unwind (9 samples, 0.03%)</title><rect x="83.0355%" y="2405" width="0.0259%" height="15" fill="rgb(220,99,26)" fg:x="28898" fg:w="9"/><text x="83.2855%" y="2415.50"></text></g><g><title>std::panicking::try (9 samples, 0.03%)</title><rect x="83.0355%" y="2389" width="0.0259%" height="15" fill="rgb(237,96,2)" fg:x="28898" fg:w="9"/><text x="83.2855%" y="2399.50"></text></g><g><title>std::panicking::try::do_call (9 samples, 0.03%)</title><rect x="83.0355%" y="2373" width="0.0259%" height="15" fill="rgb(217,197,47)" fg:x="28898" fg:w="9"/><text x="83.2855%" y="2383.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (9 samples, 0.03%)</title><rect x="83.0355%" y="2357" width="0.0259%" height="15" fill="rgb(252,133,54)" fg:x="28898" fg:w="9"/><text x="83.2855%" y="2367.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (9 samples, 0.03%)</title><rect x="83.0355%" y="2341" width="0.0259%" height="15" fill="rgb(233,37,30)" fg:x="28898" fg:w="9"/><text x="83.2855%" y="2351.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (9 samples, 0.03%)</title><rect x="83.0355%" y="2325" width="0.0259%" height="15" fill="rgb(239,182,12)" fg:x="28898" fg:w="9"/><text x="83.2855%" y="2335.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (9 samples, 0.03%)</title><rect x="83.0355%" y="2309" width="0.0259%" height="15" fill="rgb(245,83,39)" fg:x="28898" fg:w="9"/><text x="83.2855%" y="2319.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.03%)</title><rect x="83.0355%" y="2293" width="0.0259%" height="15" fill="rgb(222,109,36)" fg:x="28898" fg:w="9"/><text x="83.2855%" y="2303.50"></text></g><g><title>rayon_core::join::join_context (9 samples, 0.03%)</title><rect x="83.0355%" y="2277" width="0.0259%" height="15" fill="rgb(237,95,44)" fg:x="28898" fg:w="9"/><text x="83.2855%" y="2287.50"></text></g><g><title>rayon_core::registry::in_worker (9 samples, 0.03%)</title><rect x="83.0355%" y="2261" width="0.0259%" height="15" fill="rgb(216,36,54)" fg:x="28898" fg:w="9"/><text x="83.2855%" y="2271.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (9 samples, 0.03%)</title><rect x="83.0355%" y="2245" width="0.0259%" height="15" fill="rgb(236,164,3)" fg:x="28898" fg:w="9"/><text x="83.2855%" y="2255.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (8 samples, 0.02%)</title><rect x="83.0383%" y="2229" width="0.0230%" height="15" fill="rgb(223,15,21)" fg:x="28899" fg:w="8"/><text x="83.2883%" y="2239.50"></text></g><g><title>std::panic::catch_unwind (8 samples, 0.02%)</title><rect x="83.0383%" y="2213" width="0.0230%" height="15" fill="rgb(239,191,12)" fg:x="28899" fg:w="8"/><text x="83.2883%" y="2223.50"></text></g><g><title>std::panicking::try (8 samples, 0.02%)</title><rect x="83.0383%" y="2197" width="0.0230%" height="15" fill="rgb(231,191,37)" fg:x="28899" fg:w="8"/><text x="83.2883%" y="2207.50"></text></g><g><title>std::panicking::try::do_call (8 samples, 0.02%)</title><rect x="83.0383%" y="2181" width="0.0230%" height="15" fill="rgb(209,155,36)" fg:x="28899" fg:w="8"/><text x="83.2883%" y="2191.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (8 samples, 0.02%)</title><rect x="83.0383%" y="2165" width="0.0230%" height="15" fill="rgb(216,222,49)" fg:x="28899" fg:w="8"/><text x="83.2883%" y="2175.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (8 samples, 0.02%)</title><rect x="83.0383%" y="2149" width="0.0230%" height="15" fill="rgb(218,181,2)" fg:x="28899" fg:w="8"/><text x="83.2883%" y="2159.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (8 samples, 0.02%)</title><rect x="83.0383%" y="2133" width="0.0230%" height="15" fill="rgb(239,125,9)" fg:x="28899" fg:w="8"/><text x="83.2883%" y="2143.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (8 samples, 0.02%)</title><rect x="83.0383%" y="2117" width="0.0230%" height="15" fill="rgb(233,103,7)" fg:x="28899" fg:w="8"/><text x="83.2883%" y="2127.50"></text></g><g><title>rayon_core::join::join_context (8 samples, 0.02%)</title><rect x="83.0383%" y="2101" width="0.0230%" height="15" fill="rgb(209,223,5)" fg:x="28899" fg:w="8"/><text x="83.2883%" y="2111.50"></text></g><g><title>rayon_core::registry::in_worker (8 samples, 0.02%)</title><rect x="83.0383%" y="2085" width="0.0230%" height="15" fill="rgb(234,71,27)" fg:x="28899" fg:w="8"/><text x="83.2883%" y="2095.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (8 samples, 0.02%)</title><rect x="83.0383%" y="2069" width="0.0230%" height="15" fill="rgb(251,202,16)" fg:x="28899" fg:w="8"/><text x="83.2883%" y="2079.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (4 samples, 0.01%)</title><rect x="83.0498%" y="2053" width="0.0115%" height="15" fill="rgb(231,180,0)" fg:x="28903" fg:w="4"/><text x="83.2998%" y="2063.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.01%)</title><rect x="83.0498%" y="2037" width="0.0115%" height="15" fill="rgb(223,58,28)" fg:x="28903" fg:w="4"/><text x="83.2998%" y="2047.50"></text></g><g><title>std::panicking::try (4 samples, 0.01%)</title><rect x="83.0498%" y="2021" width="0.0115%" height="15" fill="rgb(250,34,24)" fg:x="28903" fg:w="4"/><text x="83.2998%" y="2031.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.01%)</title><rect x="83.0498%" y="2005" width="0.0115%" height="15" fill="rgb(235,24,16)" fg:x="28903" fg:w="4"/><text x="83.2998%" y="2015.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.01%)</title><rect x="83.0498%" y="1989" width="0.0115%" height="15" fill="rgb(219,28,33)" fg:x="28903" fg:w="4"/><text x="83.2998%" y="1999.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (4 samples, 0.01%)</title><rect x="83.0498%" y="1973" width="0.0115%" height="15" fill="rgb(228,150,43)" fg:x="28903" fg:w="4"/><text x="83.2998%" y="1983.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.01%)</title><rect x="83.0498%" y="1957" width="0.0115%" height="15" fill="rgb(221,228,36)" fg:x="28903" fg:w="4"/><text x="83.2998%" y="1967.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.01%)</title><rect x="83.0498%" y="1941" width="0.0115%" height="15" fill="rgb(232,116,17)" fg:x="28903" fg:w="4"/><text x="83.2998%" y="1951.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.01%)</title><rect x="83.0498%" y="1925" width="0.0115%" height="15" fill="rgb(220,110,51)" fg:x="28903" fg:w="4"/><text x="83.2998%" y="1935.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.01%)</title><rect x="83.0498%" y="1909" width="0.0115%" height="15" fill="rgb(207,26,25)" fg:x="28903" fg:w="4"/><text x="83.2998%" y="1919.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.01%)</title><rect x="83.0498%" y="1893" width="0.0115%" height="15" fill="rgb(223,58,19)" fg:x="28903" fg:w="4"/><text x="83.2998%" y="1903.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (6 samples, 0.02%)</title><rect x="83.0671%" y="2229" width="0.0172%" height="15" fill="rgb(234,125,39)" fg:x="28909" fg:w="6"/><text x="83.3171%" y="2239.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (6 samples, 0.02%)</title><rect x="83.0671%" y="2213" width="0.0172%" height="15" fill="rgb(241,48,36)" fg:x="28909" fg:w="6"/><text x="83.3171%" y="2223.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (6 samples, 0.02%)</title><rect x="83.0671%" y="2197" width="0.0172%" height="15" fill="rgb(217,148,51)" fg:x="28909" fg:w="6"/><text x="83.3171%" y="2207.50"></text></g><g><title>rayon_core::job::JobRef::execute (6 samples, 0.02%)</title><rect x="83.0671%" y="2181" width="0.0172%" height="15" fill="rgb(247,17,25)" fg:x="28909" fg:w="6"/><text x="83.3171%" y="2191.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (6 samples, 0.02%)</title><rect x="83.0671%" y="2165" width="0.0172%" height="15" fill="rgb(219,89,38)" fg:x="28909" fg:w="6"/><text x="83.3171%" y="2175.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (6 samples, 0.02%)</title><rect x="83.0671%" y="2149" width="0.0172%" height="15" fill="rgb(220,145,2)" fg:x="28909" fg:w="6"/><text x="83.3171%" y="2159.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (6 samples, 0.02%)</title><rect x="83.0671%" y="2133" width="0.0172%" height="15" fill="rgb(244,66,47)" fg:x="28909" fg:w="6"/><text x="83.3171%" y="2143.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.02%)</title><rect x="83.0671%" y="2117" width="0.0172%" height="15" fill="rgb(226,182,5)" fg:x="28909" fg:w="6"/><text x="83.3171%" y="2127.50"></text></g><g><title>std::panicking::try (6 samples, 0.02%)</title><rect x="83.0671%" y="2101" width="0.0172%" height="15" fill="rgb(211,98,20)" fg:x="28909" fg:w="6"/><text x="83.3171%" y="2111.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.02%)</title><rect x="83.0671%" y="2085" width="0.0172%" height="15" fill="rgb(217,103,52)" fg:x="28909" fg:w="6"/><text x="83.3171%" y="2095.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6 samples, 0.02%)</title><rect x="83.0671%" y="2069" width="0.0172%" height="15" fill="rgb(208,125,52)" fg:x="28909" fg:w="6"/><text x="83.3171%" y="2079.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (6 samples, 0.02%)</title><rect x="83.0671%" y="2053" width="0.0172%" height="15" fill="rgb(244,70,13)" fg:x="28909" fg:w="6"/><text x="83.3171%" y="2063.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (6 samples, 0.02%)</title><rect x="83.0671%" y="2037" width="0.0172%" height="15" fill="rgb(253,124,3)" fg:x="28909" fg:w="6"/><text x="83.3171%" y="2047.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (6 samples, 0.02%)</title><rect x="83.0671%" y="2021" width="0.0172%" height="15" fill="rgb(222,145,32)" fg:x="28909" fg:w="6"/><text x="83.3171%" y="2031.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (6 samples, 0.02%)</title><rect x="83.0671%" y="2005" width="0.0172%" height="15" fill="rgb(232,183,47)" fg:x="28909" fg:w="6"/><text x="83.3171%" y="2015.50"></text></g><g><title>rayon_core::join::join_context (6 samples, 0.02%)</title><rect x="83.0671%" y="1989" width="0.0172%" height="15" fill="rgb(246,226,4)" fg:x="28909" fg:w="6"/><text x="83.3171%" y="1999.50"></text></g><g><title>rayon_core::registry::in_worker (6 samples, 0.02%)</title><rect x="83.0671%" y="1973" width="0.0172%" height="15" fill="rgb(228,185,46)" fg:x="28909" fg:w="6"/><text x="83.3171%" y="1983.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (6 samples, 0.02%)</title><rect x="83.0671%" y="1957" width="0.0172%" height="15" fill="rgb(213,196,4)" fg:x="28909" fg:w="6"/><text x="83.3171%" y="1967.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (6 samples, 0.02%)</title><rect x="83.0671%" y="1941" width="0.0172%" height="15" fill="rgb(212,2,45)" fg:x="28909" fg:w="6"/><text x="83.3171%" y="1951.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.02%)</title><rect x="83.0671%" y="1925" width="0.0172%" height="15" fill="rgb(217,145,50)" fg:x="28909" fg:w="6"/><text x="83.3171%" y="1935.50"></text></g><g><title>std::panicking::try (6 samples, 0.02%)</title><rect x="83.0671%" y="1909" width="0.0172%" height="15" fill="rgb(242,10,46)" fg:x="28909" fg:w="6"/><text x="83.3171%" y="1919.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.02%)</title><rect x="83.0671%" y="1893" width="0.0172%" height="15" fill="rgb(252,91,48)" fg:x="28909" fg:w="6"/><text x="83.3171%" y="1903.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6 samples, 0.02%)</title><rect x="83.0671%" y="1877" width="0.0172%" height="15" fill="rgb(216,72,13)" fg:x="28909" fg:w="6"/><text x="83.3171%" y="1887.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (6 samples, 0.02%)</title><rect x="83.0671%" y="1861" width="0.0172%" height="15" fill="rgb(219,6,37)" fg:x="28909" fg:w="6"/><text x="83.3171%" y="1871.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (6 samples, 0.02%)</title><rect x="83.0671%" y="1845" width="0.0172%" height="15" fill="rgb(236,185,40)" fg:x="28909" fg:w="6"/><text x="83.3171%" y="1855.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (6 samples, 0.02%)</title><rect x="83.0671%" y="1829" width="0.0172%" height="15" fill="rgb(208,81,48)" fg:x="28909" fg:w="6"/><text x="83.3171%" y="1839.50"></text></g><g><title>rayon_core::join::join_context (6 samples, 0.02%)</title><rect x="83.0671%" y="1813" width="0.0172%" height="15" fill="rgb(211,42,33)" fg:x="28909" fg:w="6"/><text x="83.3171%" y="1823.50"></text></g><g><title>rayon_core::registry::in_worker (6 samples, 0.02%)</title><rect x="83.0671%" y="1797" width="0.0172%" height="15" fill="rgb(211,90,39)" fg:x="28909" fg:w="6"/><text x="83.3171%" y="1807.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (6 samples, 0.02%)</title><rect x="83.0671%" y="1781" width="0.0172%" height="15" fill="rgb(218,136,12)" fg:x="28909" fg:w="6"/><text x="83.3171%" y="1791.50"></text></g><g><title>par_exec_17 (20 samples, 0.06%)</title><rect x="83.0613%" y="2789" width="0.0575%" height="15" fill="rgb(234,12,32)" fg:x="28907" fg:w="20"/><text x="83.3113%" y="2799.50"></text></g><g><title>__GI___clone3 (20 samples, 0.06%)</title><rect x="83.0613%" y="2773" width="0.0575%" height="15" fill="rgb(221,164,18)" fg:x="28907" fg:w="20"/><text x="83.3113%" y="2783.50"></text></g><g><title>start_thread (20 samples, 0.06%)</title><rect x="83.0613%" y="2757" width="0.0575%" height="15" fill="rgb(239,135,14)" fg:x="28907" fg:w="20"/><text x="83.3113%" y="2767.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (20 samples, 0.06%)</title><rect x="83.0613%" y="2741" width="0.0575%" height="15" fill="rgb(226,198,47)" fg:x="28907" fg:w="20"/><text x="83.3113%" y="2751.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (20 samples, 0.06%)</title><rect x="83.0613%" y="2725" width="0.0575%" height="15" fill="rgb(244,121,47)" fg:x="28907" fg:w="20"/><text x="83.3113%" y="2735.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (20 samples, 0.06%)</title><rect x="83.0613%" y="2709" width="0.0575%" height="15" fill="rgb(226,21,48)" fg:x="28907" fg:w="20"/><text x="83.3113%" y="2719.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (20 samples, 0.06%)</title><rect x="83.0613%" y="2693" width="0.0575%" height="15" fill="rgb(215,178,47)" fg:x="28907" fg:w="20"/><text x="83.3113%" y="2703.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (20 samples, 0.06%)</title><rect x="83.0613%" y="2677" width="0.0575%" height="15" fill="rgb(206,212,19)" fg:x="28907" fg:w="20"/><text x="83.3113%" y="2687.50"></text></g><g><title>std::panic::catch_unwind (20 samples, 0.06%)</title><rect x="83.0613%" y="2661" width="0.0575%" height="15" fill="rgb(230,104,34)" fg:x="28907" fg:w="20"/><text x="83.3113%" y="2671.50"></text></g><g><title>std::panicking::try (20 samples, 0.06%)</title><rect x="83.0613%" y="2645" width="0.0575%" height="15" fill="rgb(210,96,51)" fg:x="28907" fg:w="20"/><text x="83.3113%" y="2655.50"></text></g><g><title>std::panicking::try::do_call (20 samples, 0.06%)</title><rect x="83.0613%" y="2629" width="0.0575%" height="15" fill="rgb(229,111,47)" fg:x="28907" fg:w="20"/><text x="83.3113%" y="2639.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (20 samples, 0.06%)</title><rect x="83.0613%" y="2613" width="0.0575%" height="15" fill="rgb(218,174,45)" fg:x="28907" fg:w="20"/><text x="83.3113%" y="2623.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (20 samples, 0.06%)</title><rect x="83.0613%" y="2597" width="0.0575%" height="15" fill="rgb(215,21,32)" fg:x="28907" fg:w="20"/><text x="83.3113%" y="2607.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (20 samples, 0.06%)</title><rect x="83.0613%" y="2581" width="0.0575%" height="15" fill="rgb(235,72,21)" fg:x="28907" fg:w="20"/><text x="83.3113%" y="2591.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (20 samples, 0.06%)</title><rect x="83.0613%" y="2565" width="0.0575%" height="15" fill="rgb(250,113,30)" fg:x="28907" fg:w="20"/><text x="83.3113%" y="2575.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (20 samples, 0.06%)</title><rect x="83.0613%" y="2549" width="0.0575%" height="15" fill="rgb(244,136,34)" fg:x="28907" fg:w="20"/><text x="83.3113%" y="2559.50"></text></g><g><title>rayon_core::registry::main_loop (20 samples, 0.06%)</title><rect x="83.0613%" y="2533" width="0.0575%" height="15" fill="rgb(213,226,47)" fg:x="28907" fg:w="20"/><text x="83.3113%" y="2543.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (20 samples, 0.06%)</title><rect x="83.0613%" y="2517" width="0.0575%" height="15" fill="rgb(224,136,40)" fg:x="28907" fg:w="20"/><text x="83.3113%" y="2527.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (20 samples, 0.06%)</title><rect x="83.0613%" y="2501" width="0.0575%" height="15" fill="rgb(253,124,12)" fg:x="28907" fg:w="20"/><text x="83.3113%" y="2511.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (20 samples, 0.06%)</title><rect x="83.0613%" y="2485" width="0.0575%" height="15" fill="rgb(210,67,8)" fg:x="28907" fg:w="20"/><text x="83.3113%" y="2495.50"></text></g><g><title>rayon_core::job::JobRef::execute (20 samples, 0.06%)</title><rect x="83.0613%" y="2469" width="0.0575%" height="15" fill="rgb(210,204,0)" fg:x="28907" fg:w="20"/><text x="83.3113%" y="2479.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (20 samples, 0.06%)</title><rect x="83.0613%" y="2453" width="0.0575%" height="15" fill="rgb(217,179,22)" fg:x="28907" fg:w="20"/><text x="83.3113%" y="2463.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (20 samples, 0.06%)</title><rect x="83.0613%" y="2437" width="0.0575%" height="15" fill="rgb(237,192,33)" fg:x="28907" fg:w="20"/><text x="83.3113%" y="2447.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (20 samples, 0.06%)</title><rect x="83.0613%" y="2421" width="0.0575%" height="15" fill="rgb(211,104,28)" fg:x="28907" fg:w="20"/><text x="83.3113%" y="2431.50"></text></g><g><title>std::panic::catch_unwind (20 samples, 0.06%)</title><rect x="83.0613%" y="2405" width="0.0575%" height="15" fill="rgb(214,75,30)" fg:x="28907" fg:w="20"/><text x="83.3113%" y="2415.50"></text></g><g><title>std::panicking::try (20 samples, 0.06%)</title><rect x="83.0613%" y="2389" width="0.0575%" height="15" fill="rgb(220,227,12)" fg:x="28907" fg:w="20"/><text x="83.3113%" y="2399.50"></text></g><g><title>std::panicking::try::do_call (20 samples, 0.06%)</title><rect x="83.0613%" y="2373" width="0.0575%" height="15" fill="rgb(233,134,28)" fg:x="28907" fg:w="20"/><text x="83.3113%" y="2383.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (20 samples, 0.06%)</title><rect x="83.0613%" y="2357" width="0.0575%" height="15" fill="rgb(215,146,24)" fg:x="28907" fg:w="20"/><text x="83.3113%" y="2367.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (20 samples, 0.06%)</title><rect x="83.0613%" y="2341" width="0.0575%" height="15" fill="rgb(248,227,20)" fg:x="28907" fg:w="20"/><text x="83.3113%" y="2351.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (20 samples, 0.06%)</title><rect x="83.0613%" y="2325" width="0.0575%" height="15" fill="rgb(250,44,42)" fg:x="28907" fg:w="20"/><text x="83.3113%" y="2335.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (20 samples, 0.06%)</title><rect x="83.0613%" y="2309" width="0.0575%" height="15" fill="rgb(219,5,35)" fg:x="28907" fg:w="20"/><text x="83.3113%" y="2319.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (20 samples, 0.06%)</title><rect x="83.0613%" y="2293" width="0.0575%" height="15" fill="rgb(241,132,32)" fg:x="28907" fg:w="20"/><text x="83.3113%" y="2303.50"></text></g><g><title>rayon_core::join::join_context (20 samples, 0.06%)</title><rect x="83.0613%" y="2277" width="0.0575%" height="15" fill="rgb(234,212,51)" fg:x="28907" fg:w="20"/><text x="83.3113%" y="2287.50"></text></g><g><title>rayon_core::registry::in_worker (20 samples, 0.06%)</title><rect x="83.0613%" y="2261" width="0.0575%" height="15" fill="rgb(242,173,29)" fg:x="28907" fg:w="20"/><text x="83.3113%" y="2271.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (20 samples, 0.06%)</title><rect x="83.0613%" y="2245" width="0.0575%" height="15" fill="rgb(212,159,2)" fg:x="28907" fg:w="20"/><text x="83.3113%" y="2255.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (12 samples, 0.03%)</title><rect x="83.0843%" y="2229" width="0.0345%" height="15" fill="rgb(238,165,31)" fg:x="28915" fg:w="12"/><text x="83.3343%" y="2239.50"></text></g><g><title>std::panic::catch_unwind (12 samples, 0.03%)</title><rect x="83.0843%" y="2213" width="0.0345%" height="15" fill="rgb(241,57,36)" fg:x="28915" fg:w="12"/><text x="83.3343%" y="2223.50"></text></g><g><title>std::panicking::try (12 samples, 0.03%)</title><rect x="83.0843%" y="2197" width="0.0345%" height="15" fill="rgb(249,7,4)" fg:x="28915" fg:w="12"/><text x="83.3343%" y="2207.50"></text></g><g><title>std::panicking::try::do_call (12 samples, 0.03%)</title><rect x="83.0843%" y="2181" width="0.0345%" height="15" fill="rgb(250,137,44)" fg:x="28915" fg:w="12"/><text x="83.3343%" y="2191.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (12 samples, 0.03%)</title><rect x="83.0843%" y="2165" width="0.0345%" height="15" fill="rgb(244,185,1)" fg:x="28915" fg:w="12"/><text x="83.3343%" y="2175.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (12 samples, 0.03%)</title><rect x="83.0843%" y="2149" width="0.0345%" height="15" fill="rgb(216,5,53)" fg:x="28915" fg:w="12"/><text x="83.3343%" y="2159.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (12 samples, 0.03%)</title><rect x="83.0843%" y="2133" width="0.0345%" height="15" fill="rgb(234,89,21)" fg:x="28915" fg:w="12"/><text x="83.3343%" y="2143.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.03%)</title><rect x="83.0843%" y="2117" width="0.0345%" height="15" fill="rgb(250,81,43)" fg:x="28915" fg:w="12"/><text x="83.3343%" y="2127.50"></text></g><g><title>rayon_core::join::join_context (12 samples, 0.03%)</title><rect x="83.0843%" y="2101" width="0.0345%" height="15" fill="rgb(243,132,11)" fg:x="28915" fg:w="12"/><text x="83.3343%" y="2111.50"></text></g><g><title>rayon_core::registry::in_worker (12 samples, 0.03%)</title><rect x="83.0843%" y="2085" width="0.0345%" height="15" fill="rgb(253,159,28)" fg:x="28915" fg:w="12"/><text x="83.3343%" y="2095.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (12 samples, 0.03%)</title><rect x="83.0843%" y="2069" width="0.0345%" height="15" fill="rgb(237,167,34)" fg:x="28915" fg:w="12"/><text x="83.3343%" y="2079.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (9 samples, 0.03%)</title><rect x="83.0929%" y="2053" width="0.0259%" height="15" fill="rgb(237,16,50)" fg:x="28918" fg:w="9"/><text x="83.3429%" y="2063.50"></text></g><g><title>std::panic::catch_unwind (9 samples, 0.03%)</title><rect x="83.0929%" y="2037" width="0.0259%" height="15" fill="rgb(247,125,2)" fg:x="28918" fg:w="9"/><text x="83.3429%" y="2047.50"></text></g><g><title>std::panicking::try (9 samples, 0.03%)</title><rect x="83.0929%" y="2021" width="0.0259%" height="15" fill="rgb(254,35,3)" fg:x="28918" fg:w="9"/><text x="83.3429%" y="2031.50"></text></g><g><title>std::panicking::try::do_call (9 samples, 0.03%)</title><rect x="83.0929%" y="2005" width="0.0259%" height="15" fill="rgb(237,209,21)" fg:x="28918" fg:w="9"/><text x="83.3429%" y="2015.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (9 samples, 0.03%)</title><rect x="83.0929%" y="1989" width="0.0259%" height="15" fill="rgb(224,122,20)" fg:x="28918" fg:w="9"/><text x="83.3429%" y="1999.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (9 samples, 0.03%)</title><rect x="83.0929%" y="1973" width="0.0259%" height="15" fill="rgb(224,11,46)" fg:x="28918" fg:w="9"/><text x="83.3429%" y="1983.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (9 samples, 0.03%)</title><rect x="83.0929%" y="1957" width="0.0259%" height="15" fill="rgb(248,21,33)" fg:x="28918" fg:w="9"/><text x="83.3429%" y="1967.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.03%)</title><rect x="83.0929%" y="1941" width="0.0259%" height="15" fill="rgb(222,144,7)" fg:x="28918" fg:w="9"/><text x="83.3429%" y="1951.50"></text></g><g><title>rayon_core::join::join_context (9 samples, 0.03%)</title><rect x="83.0929%" y="1925" width="0.0259%" height="15" fill="rgb(205,141,37)" fg:x="28918" fg:w="9"/><text x="83.3429%" y="1935.50"></text></g><g><title>rayon_core::registry::in_worker (9 samples, 0.03%)</title><rect x="83.0929%" y="1909" width="0.0259%" height="15" fill="rgb(237,130,8)" fg:x="28918" fg:w="9"/><text x="83.3429%" y="1919.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (9 samples, 0.03%)</title><rect x="83.0929%" y="1893" width="0.0259%" height="15" fill="rgb(209,179,39)" fg:x="28918" fg:w="9"/><text x="83.3429%" y="1903.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (6 samples, 0.02%)</title><rect x="83.1015%" y="1877" width="0.0172%" height="15" fill="rgb(207,52,17)" fg:x="28921" fg:w="6"/><text x="83.3515%" y="1887.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.02%)</title><rect x="83.1015%" y="1861" width="0.0172%" height="15" fill="rgb(253,158,17)" fg:x="28921" fg:w="6"/><text x="83.3515%" y="1871.50"></text></g><g><title>std::panicking::try (6 samples, 0.02%)</title><rect x="83.1015%" y="1845" width="0.0172%" height="15" fill="rgb(208,19,53)" fg:x="28921" fg:w="6"/><text x="83.3515%" y="1855.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.02%)</title><rect x="83.1015%" y="1829" width="0.0172%" height="15" fill="rgb(233,152,13)" fg:x="28921" fg:w="6"/><text x="83.3515%" y="1839.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6 samples, 0.02%)</title><rect x="83.1015%" y="1813" width="0.0172%" height="15" fill="rgb(231,84,1)" fg:x="28921" fg:w="6"/><text x="83.3515%" y="1823.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (6 samples, 0.02%)</title><rect x="83.1015%" y="1797" width="0.0172%" height="15" fill="rgb(229,142,48)" fg:x="28921" fg:w="6"/><text x="83.3515%" y="1807.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (6 samples, 0.02%)</title><rect x="83.1015%" y="1781" width="0.0172%" height="15" fill="rgb(248,70,29)" fg:x="28921" fg:w="6"/><text x="83.3515%" y="1791.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (6 samples, 0.02%)</title><rect x="83.1015%" y="1765" width="0.0172%" height="15" fill="rgb(250,85,7)" fg:x="28921" fg:w="6"/><text x="83.3515%" y="1775.50"></text></g><g><title>rayon_core::join::join_context (6 samples, 0.02%)</title><rect x="83.1015%" y="1749" width="0.0172%" height="15" fill="rgb(235,140,43)" fg:x="28921" fg:w="6"/><text x="83.3515%" y="1759.50"></text></g><g><title>rayon_core::registry::in_worker (6 samples, 0.02%)</title><rect x="83.1015%" y="1733" width="0.0172%" height="15" fill="rgb(216,0,5)" fg:x="28921" fg:w="6"/><text x="83.3515%" y="1743.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (6 samples, 0.02%)</title><rect x="83.1015%" y="1717" width="0.0172%" height="15" fill="rgb(223,167,29)" fg:x="28921" fg:w="6"/><text x="83.3515%" y="1727.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (6 samples, 0.02%)</title><rect x="83.1015%" y="1701" width="0.0172%" height="15" fill="rgb(229,150,33)" fg:x="28921" fg:w="6"/><text x="83.3515%" y="1711.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.02%)</title><rect x="83.1015%" y="1685" width="0.0172%" height="15" fill="rgb(227,26,52)" fg:x="28921" fg:w="6"/><text x="83.3515%" y="1695.50"></text></g><g><title>std::panicking::try (6 samples, 0.02%)</title><rect x="83.1015%" y="1669" width="0.0172%" height="15" fill="rgb(250,60,52)" fg:x="28921" fg:w="6"/><text x="83.3515%" y="1679.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.02%)</title><rect x="83.1015%" y="1653" width="0.0172%" height="15" fill="rgb(228,81,46)" fg:x="28921" fg:w="6"/><text x="83.3515%" y="1663.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6 samples, 0.02%)</title><rect x="83.1015%" y="1637" width="0.0172%" height="15" fill="rgb(225,218,31)" fg:x="28921" fg:w="6"/><text x="83.3515%" y="1647.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (6 samples, 0.02%)</title><rect x="83.1015%" y="1621" width="0.0172%" height="15" fill="rgb(230,35,16)" fg:x="28921" fg:w="6"/><text x="83.3515%" y="1631.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (6 samples, 0.02%)</title><rect x="83.1015%" y="1605" width="0.0172%" height="15" fill="rgb(247,100,0)" fg:x="28921" fg:w="6"/><text x="83.3515%" y="1615.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (6 samples, 0.02%)</title><rect x="83.1015%" y="1589" width="0.0172%" height="15" fill="rgb(223,135,11)" fg:x="28921" fg:w="6"/><text x="83.3515%" y="1599.50"></text></g><g><title>rayon_core::join::join_context (6 samples, 0.02%)</title><rect x="83.1015%" y="1573" width="0.0172%" height="15" fill="rgb(207,136,0)" fg:x="28921" fg:w="6"/><text x="83.3515%" y="1583.50"></text></g><g><title>rayon_core::registry::in_worker (6 samples, 0.02%)</title><rect x="83.1015%" y="1557" width="0.0172%" height="15" fill="rgb(246,131,25)" fg:x="28921" fg:w="6"/><text x="83.3515%" y="1567.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (6 samples, 0.02%)</title><rect x="83.1015%" y="1541" width="0.0172%" height="15" fill="rgb(209,47,12)" fg:x="28921" fg:w="6"/><text x="83.3515%" y="1551.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (5 samples, 0.01%)</title><rect x="83.1217%" y="2229" width="0.0144%" height="15" fill="rgb(221,25,16)" fg:x="28928" fg:w="5"/><text x="83.3717%" y="2239.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (5 samples, 0.01%)</title><rect x="83.1217%" y="2213" width="0.0144%" height="15" fill="rgb(223,164,33)" fg:x="28928" fg:w="5"/><text x="83.3717%" y="2223.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (5 samples, 0.01%)</title><rect x="83.1217%" y="2197" width="0.0144%" height="15" fill="rgb(220,26,23)" fg:x="28928" fg:w="5"/><text x="83.3717%" y="2207.50"></text></g><g><title>rayon_core::job::JobRef::execute (5 samples, 0.01%)</title><rect x="83.1217%" y="2181" width="0.0144%" height="15" fill="rgb(231,224,1)" fg:x="28928" fg:w="5"/><text x="83.3717%" y="2191.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (5 samples, 0.01%)</title><rect x="83.1217%" y="2165" width="0.0144%" height="15" fill="rgb(229,221,24)" fg:x="28928" fg:w="5"/><text x="83.3717%" y="2175.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (5 samples, 0.01%)</title><rect x="83.1217%" y="2149" width="0.0144%" height="15" fill="rgb(213,34,10)" fg:x="28928" fg:w="5"/><text x="83.3717%" y="2159.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (5 samples, 0.01%)</title><rect x="83.1217%" y="2133" width="0.0144%" height="15" fill="rgb(215,33,11)" fg:x="28928" fg:w="5"/><text x="83.3717%" y="2143.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.01%)</title><rect x="83.1217%" y="2117" width="0.0144%" height="15" fill="rgb(216,20,41)" fg:x="28928" fg:w="5"/><text x="83.3717%" y="2127.50"></text></g><g><title>std::panicking::try (5 samples, 0.01%)</title><rect x="83.1217%" y="2101" width="0.0144%" height="15" fill="rgb(228,43,31)" fg:x="28928" fg:w="5"/><text x="83.3717%" y="2111.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.01%)</title><rect x="83.1217%" y="2085" width="0.0144%" height="15" fill="rgb(227,83,26)" fg:x="28928" fg:w="5"/><text x="83.3717%" y="2095.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5 samples, 0.01%)</title><rect x="83.1217%" y="2069" width="0.0144%" height="15" fill="rgb(217,168,19)" fg:x="28928" fg:w="5"/><text x="83.3717%" y="2079.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (5 samples, 0.01%)</title><rect x="83.1217%" y="2053" width="0.0144%" height="15" fill="rgb(231,34,33)" fg:x="28928" fg:w="5"/><text x="83.3717%" y="2063.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (5 samples, 0.01%)</title><rect x="83.1217%" y="2037" width="0.0144%" height="15" fill="rgb(230,120,51)" fg:x="28928" fg:w="5"/><text x="83.3717%" y="2047.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (5 samples, 0.01%)</title><rect x="83.1217%" y="2021" width="0.0144%" height="15" fill="rgb(215,138,27)" fg:x="28928" fg:w="5"/><text x="83.3717%" y="2031.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (5 samples, 0.01%)</title><rect x="83.1217%" y="2005" width="0.0144%" height="15" fill="rgb(246,80,47)" fg:x="28928" fg:w="5"/><text x="83.3717%" y="2015.50"></text></g><g><title>rayon_core::join::join_context (5 samples, 0.01%)</title><rect x="83.1217%" y="1989" width="0.0144%" height="15" fill="rgb(215,57,53)" fg:x="28928" fg:w="5"/><text x="83.3717%" y="1999.50"></text></g><g><title>rayon_core::registry::in_worker (5 samples, 0.01%)</title><rect x="83.1217%" y="1973" width="0.0144%" height="15" fill="rgb(229,137,5)" fg:x="28928" fg:w="5"/><text x="83.3717%" y="1983.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5 samples, 0.01%)</title><rect x="83.1217%" y="1957" width="0.0144%" height="15" fill="rgb(210,86,2)" fg:x="28928" fg:w="5"/><text x="83.3717%" y="1967.50"></text></g><g><title>par_exec_18 (12 samples, 0.03%)</title><rect x="83.1188%" y="2789" width="0.0345%" height="15" fill="rgb(231,226,51)" fg:x="28927" fg:w="12"/><text x="83.3688%" y="2799.50"></text></g><g><title>__GI___clone3 (12 samples, 0.03%)</title><rect x="83.1188%" y="2773" width="0.0345%" height="15" fill="rgb(216,62,29)" fg:x="28927" fg:w="12"/><text x="83.3688%" y="2783.50"></text></g><g><title>start_thread (12 samples, 0.03%)</title><rect x="83.1188%" y="2757" width="0.0345%" height="15" fill="rgb(248,202,3)" fg:x="28927" fg:w="12"/><text x="83.3688%" y="2767.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (12 samples, 0.03%)</title><rect x="83.1188%" y="2741" width="0.0345%" height="15" fill="rgb(225,181,7)" fg:x="28927" fg:w="12"/><text x="83.3688%" y="2751.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (12 samples, 0.03%)</title><rect x="83.1188%" y="2725" width="0.0345%" height="15" fill="rgb(247,170,54)" fg:x="28927" fg:w="12"/><text x="83.3688%" y="2735.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (12 samples, 0.03%)</title><rect x="83.1188%" y="2709" width="0.0345%" height="15" fill="rgb(236,204,33)" fg:x="28927" fg:w="12"/><text x="83.3688%" y="2719.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (12 samples, 0.03%)</title><rect x="83.1188%" y="2693" width="0.0345%" height="15" fill="rgb(216,45,30)" fg:x="28927" fg:w="12"/><text x="83.3688%" y="2703.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (12 samples, 0.03%)</title><rect x="83.1188%" y="2677" width="0.0345%" height="15" fill="rgb(213,203,16)" fg:x="28927" fg:w="12"/><text x="83.3688%" y="2687.50"></text></g><g><title>std::panic::catch_unwind (12 samples, 0.03%)</title><rect x="83.1188%" y="2661" width="0.0345%" height="15" fill="rgb(215,46,16)" fg:x="28927" fg:w="12"/><text x="83.3688%" y="2671.50"></text></g><g><title>std::panicking::try (12 samples, 0.03%)</title><rect x="83.1188%" y="2645" width="0.0345%" height="15" fill="rgb(217,162,46)" fg:x="28927" fg:w="12"/><text x="83.3688%" y="2655.50"></text></g><g><title>std::panicking::try::do_call (12 samples, 0.03%)</title><rect x="83.1188%" y="2629" width="0.0345%" height="15" fill="rgb(224,189,20)" fg:x="28927" fg:w="12"/><text x="83.3688%" y="2639.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (12 samples, 0.03%)</title><rect x="83.1188%" y="2613" width="0.0345%" height="15" fill="rgb(232,35,51)" fg:x="28927" fg:w="12"/><text x="83.3688%" y="2623.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (12 samples, 0.03%)</title><rect x="83.1188%" y="2597" width="0.0345%" height="15" fill="rgb(243,221,46)" fg:x="28927" fg:w="12"/><text x="83.3688%" y="2607.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (12 samples, 0.03%)</title><rect x="83.1188%" y="2581" width="0.0345%" height="15" fill="rgb(248,16,16)" fg:x="28927" fg:w="12"/><text x="83.3688%" y="2591.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (12 samples, 0.03%)</title><rect x="83.1188%" y="2565" width="0.0345%" height="15" fill="rgb(220,168,13)" fg:x="28927" fg:w="12"/><text x="83.3688%" y="2575.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (12 samples, 0.03%)</title><rect x="83.1188%" y="2549" width="0.0345%" height="15" fill="rgb(243,102,39)" fg:x="28927" fg:w="12"/><text x="83.3688%" y="2559.50"></text></g><g><title>rayon_core::registry::main_loop (12 samples, 0.03%)</title><rect x="83.1188%" y="2533" width="0.0345%" height="15" fill="rgb(245,82,32)" fg:x="28927" fg:w="12"/><text x="83.3688%" y="2543.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (12 samples, 0.03%)</title><rect x="83.1188%" y="2517" width="0.0345%" height="15" fill="rgb(230,164,19)" fg:x="28927" fg:w="12"/><text x="83.3688%" y="2527.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (12 samples, 0.03%)</title><rect x="83.1188%" y="2501" width="0.0345%" height="15" fill="rgb(221,9,41)" fg:x="28927" fg:w="12"/><text x="83.3688%" y="2511.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (12 samples, 0.03%)</title><rect x="83.1188%" y="2485" width="0.0345%" height="15" fill="rgb(216,93,0)" fg:x="28927" fg:w="12"/><text x="83.3688%" y="2495.50"></text></g><g><title>rayon_core::job::JobRef::execute (12 samples, 0.03%)</title><rect x="83.1188%" y="2469" width="0.0345%" height="15" fill="rgb(235,113,9)" fg:x="28927" fg:w="12"/><text x="83.3688%" y="2479.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (12 samples, 0.03%)</title><rect x="83.1188%" y="2453" width="0.0345%" height="15" fill="rgb(209,224,10)" fg:x="28927" fg:w="12"/><text x="83.3688%" y="2463.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (12 samples, 0.03%)</title><rect x="83.1188%" y="2437" width="0.0345%" height="15" fill="rgb(226,54,34)" fg:x="28927" fg:w="12"/><text x="83.3688%" y="2447.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (12 samples, 0.03%)</title><rect x="83.1188%" y="2421" width="0.0345%" height="15" fill="rgb(222,60,8)" fg:x="28927" fg:w="12"/><text x="83.3688%" y="2431.50"></text></g><g><title>std::panic::catch_unwind (12 samples, 0.03%)</title><rect x="83.1188%" y="2405" width="0.0345%" height="15" fill="rgb(248,228,41)" fg:x="28927" fg:w="12"/><text x="83.3688%" y="2415.50"></text></g><g><title>std::panicking::try (12 samples, 0.03%)</title><rect x="83.1188%" y="2389" width="0.0345%" height="15" fill="rgb(226,31,32)" fg:x="28927" fg:w="12"/><text x="83.3688%" y="2399.50"></text></g><g><title>std::panicking::try::do_call (12 samples, 0.03%)</title><rect x="83.1188%" y="2373" width="0.0345%" height="15" fill="rgb(242,132,49)" fg:x="28927" fg:w="12"/><text x="83.3688%" y="2383.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (12 samples, 0.03%)</title><rect x="83.1188%" y="2357" width="0.0345%" height="15" fill="rgb(224,194,19)" fg:x="28927" fg:w="12"/><text x="83.3688%" y="2367.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (12 samples, 0.03%)</title><rect x="83.1188%" y="2341" width="0.0345%" height="15" fill="rgb(232,200,51)" fg:x="28927" fg:w="12"/><text x="83.3688%" y="2351.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (12 samples, 0.03%)</title><rect x="83.1188%" y="2325" width="0.0345%" height="15" fill="rgb(235,60,46)" fg:x="28927" fg:w="12"/><text x="83.3688%" y="2335.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (12 samples, 0.03%)</title><rect x="83.1188%" y="2309" width="0.0345%" height="15" fill="rgb(240,109,52)" fg:x="28927" fg:w="12"/><text x="83.3688%" y="2319.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.03%)</title><rect x="83.1188%" y="2293" width="0.0345%" height="15" fill="rgb(215,78,37)" fg:x="28927" fg:w="12"/><text x="83.3688%" y="2303.50"></text></g><g><title>rayon_core::join::join_context (12 samples, 0.03%)</title><rect x="83.1188%" y="2277" width="0.0345%" height="15" fill="rgb(225,141,7)" fg:x="28927" fg:w="12"/><text x="83.3688%" y="2287.50"></text></g><g><title>rayon_core::registry::in_worker (12 samples, 0.03%)</title><rect x="83.1188%" y="2261" width="0.0345%" height="15" fill="rgb(216,102,54)" fg:x="28927" fg:w="12"/><text x="83.3688%" y="2271.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (12 samples, 0.03%)</title><rect x="83.1188%" y="2245" width="0.0345%" height="15" fill="rgb(238,143,13)" fg:x="28927" fg:w="12"/><text x="83.3688%" y="2255.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (6 samples, 0.02%)</title><rect x="83.1360%" y="2229" width="0.0172%" height="15" fill="rgb(219,45,51)" fg:x="28933" fg:w="6"/><text x="83.3860%" y="2239.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.02%)</title><rect x="83.1360%" y="2213" width="0.0172%" height="15" fill="rgb(242,105,46)" fg:x="28933" fg:w="6"/><text x="83.3860%" y="2223.50"></text></g><g><title>std::panicking::try (6 samples, 0.02%)</title><rect x="83.1360%" y="2197" width="0.0172%" height="15" fill="rgb(206,154,49)" fg:x="28933" fg:w="6"/><text x="83.3860%" y="2207.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.02%)</title><rect x="83.1360%" y="2181" width="0.0172%" height="15" fill="rgb(239,215,4)" fg:x="28933" fg:w="6"/><text x="83.3860%" y="2191.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6 samples, 0.02%)</title><rect x="83.1360%" y="2165" width="0.0172%" height="15" fill="rgb(238,82,17)" fg:x="28933" fg:w="6"/><text x="83.3860%" y="2175.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (6 samples, 0.02%)</title><rect x="83.1360%" y="2149" width="0.0172%" height="15" fill="rgb(242,49,30)" fg:x="28933" fg:w="6"/><text x="83.3860%" y="2159.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (6 samples, 0.02%)</title><rect x="83.1360%" y="2133" width="0.0172%" height="15" fill="rgb(248,5,16)" fg:x="28933" fg:w="6"/><text x="83.3860%" y="2143.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (6 samples, 0.02%)</title><rect x="83.1360%" y="2117" width="0.0172%" height="15" fill="rgb(237,138,32)" fg:x="28933" fg:w="6"/><text x="83.3860%" y="2127.50"></text></g><g><title>rayon_core::join::join_context (6 samples, 0.02%)</title><rect x="83.1360%" y="2101" width="0.0172%" height="15" fill="rgb(235,79,45)" fg:x="28933" fg:w="6"/><text x="83.3860%" y="2111.50"></text></g><g><title>rayon_core::registry::in_worker (6 samples, 0.02%)</title><rect x="83.1360%" y="2085" width="0.0172%" height="15" fill="rgb(213,105,25)" fg:x="28933" fg:w="6"/><text x="83.3860%" y="2095.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (6 samples, 0.02%)</title><rect x="83.1360%" y="2069" width="0.0172%" height="15" fill="rgb(251,131,7)" fg:x="28933" fg:w="6"/><text x="83.3860%" y="2079.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (4 samples, 0.01%)</title><rect x="83.1533%" y="2117" width="0.0115%" height="15" fill="rgb(211,155,7)" fg:x="28939" fg:w="4"/><text x="83.4033%" y="2127.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (4 samples, 0.01%)</title><rect x="83.1533%" y="2101" width="0.0115%" height="15" fill="rgb(243,70,15)" fg:x="28939" fg:w="4"/><text x="83.4033%" y="2111.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.01%)</title><rect x="83.1533%" y="2085" width="0.0115%" height="15" fill="rgb(215,171,2)" fg:x="28939" fg:w="4"/><text x="83.4033%" y="2095.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.01%)</title><rect x="83.1533%" y="2069" width="0.0115%" height="15" fill="rgb(244,121,35)" fg:x="28939" fg:w="4"/><text x="83.4033%" y="2079.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.01%)</title><rect x="83.1533%" y="2053" width="0.0115%" height="15" fill="rgb(249,147,17)" fg:x="28939" fg:w="4"/><text x="83.4033%" y="2063.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.01%)</title><rect x="83.1533%" y="2037" width="0.0115%" height="15" fill="rgb(241,193,52)" fg:x="28939" fg:w="4"/><text x="83.4033%" y="2047.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.01%)</title><rect x="83.1533%" y="2021" width="0.0115%" height="15" fill="rgb(217,159,39)" fg:x="28939" fg:w="4"/><text x="83.4033%" y="2031.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (4 samples, 0.01%)</title><rect x="83.1533%" y="2005" width="0.0115%" height="15" fill="rgb(248,110,0)" fg:x="28939" fg:w="4"/><text x="83.4033%" y="2015.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (4 samples, 0.01%)</title><rect x="83.1533%" y="1989" width="0.0115%" height="15" fill="rgb(233,227,0)" fg:x="28939" fg:w="4"/><text x="83.4033%" y="1999.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.01%)</title><rect x="83.1533%" y="1973" width="0.0115%" height="15" fill="rgb(252,55,2)" fg:x="28939" fg:w="4"/><text x="83.4033%" y="1983.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.01%)</title><rect x="83.1533%" y="1957" width="0.0115%" height="15" fill="rgb(224,194,24)" fg:x="28939" fg:w="4"/><text x="83.4033%" y="1967.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.01%)</title><rect x="83.1533%" y="1941" width="0.0115%" height="15" fill="rgb(247,5,33)" fg:x="28939" fg:w="4"/><text x="83.4033%" y="1951.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.01%)</title><rect x="83.1533%" y="1925" width="0.0115%" height="15" fill="rgb(242,66,47)" fg:x="28939" fg:w="4"/><text x="83.4033%" y="1935.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.01%)</title><rect x="83.1533%" y="1909" width="0.0115%" height="15" fill="rgb(213,107,12)" fg:x="28939" fg:w="4"/><text x="83.4033%" y="1919.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (6 samples, 0.02%)</title><rect x="83.1533%" y="2229" width="0.0172%" height="15" fill="rgb(206,131,1)" fg:x="28939" fg:w="6"/><text x="83.4033%" y="2239.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (6 samples, 0.02%)</title><rect x="83.1533%" y="2213" width="0.0172%" height="15" fill="rgb(214,9,36)" fg:x="28939" fg:w="6"/><text x="83.4033%" y="2223.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (6 samples, 0.02%)</title><rect x="83.1533%" y="2197" width="0.0172%" height="15" fill="rgb(251,215,18)" fg:x="28939" fg:w="6"/><text x="83.4033%" y="2207.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (6 samples, 0.02%)</title><rect x="83.1533%" y="2181" width="0.0172%" height="15" fill="rgb(251,64,9)" fg:x="28939" fg:w="6"/><text x="83.4033%" y="2191.50"></text></g><g><title>rayon_core::join::join_context (6 samples, 0.02%)</title><rect x="83.1533%" y="2165" width="0.0172%" height="15" fill="rgb(235,68,21)" fg:x="28939" fg:w="6"/><text x="83.4033%" y="2175.50"></text></g><g><title>rayon_core::registry::in_worker (6 samples, 0.02%)</title><rect x="83.1533%" y="2149" width="0.0172%" height="15" fill="rgb(240,69,38)" fg:x="28939" fg:w="6"/><text x="83.4033%" y="2159.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (6 samples, 0.02%)</title><rect x="83.1533%" y="2133" width="0.0172%" height="15" fill="rgb(231,18,27)" fg:x="28939" fg:w="6"/><text x="83.4033%" y="2143.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (7 samples, 0.02%)</title><rect x="83.1791%" y="2053" width="0.0201%" height="15" fill="rgb(215,154,25)" fg:x="28948" fg:w="7"/><text x="83.4291%" y="2063.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (7 samples, 0.02%)</title><rect x="83.1791%" y="2037" width="0.0201%" height="15" fill="rgb(224,33,46)" fg:x="28948" fg:w="7"/><text x="83.4291%" y="2047.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (7 samples, 0.02%)</title><rect x="83.1791%" y="2021" width="0.0201%" height="15" fill="rgb(248,191,53)" fg:x="28948" fg:w="7"/><text x="83.4291%" y="2031.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (7 samples, 0.02%)</title><rect x="83.1791%" y="2005" width="0.0201%" height="15" fill="rgb(231,3,37)" fg:x="28948" fg:w="7"/><text x="83.4291%" y="2015.50"></text></g><g><title>rayon_core::join::join_context (7 samples, 0.02%)</title><rect x="83.1791%" y="1989" width="0.0201%" height="15" fill="rgb(209,152,2)" fg:x="28948" fg:w="7"/><text x="83.4291%" y="1999.50"></text></g><g><title>rayon_core::registry::in_worker (7 samples, 0.02%)</title><rect x="83.1791%" y="1973" width="0.0201%" height="15" fill="rgb(212,208,43)" fg:x="28948" fg:w="7"/><text x="83.4291%" y="1983.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (7 samples, 0.02%)</title><rect x="83.1791%" y="1957" width="0.0201%" height="15" fill="rgb(208,60,49)" fg:x="28948" fg:w="7"/><text x="83.4291%" y="1967.50"></text></g><g><title>par_exec_19 (23 samples, 0.07%)</title><rect x="83.1533%" y="2789" width="0.0661%" height="15" fill="rgb(245,135,6)" fg:x="28939" fg:w="23"/><text x="83.4033%" y="2799.50"></text></g><g><title>__GI___clone3 (23 samples, 0.07%)</title><rect x="83.1533%" y="2773" width="0.0661%" height="15" fill="rgb(243,86,23)" fg:x="28939" fg:w="23"/><text x="83.4033%" y="2783.50"></text></g><g><title>start_thread (23 samples, 0.07%)</title><rect x="83.1533%" y="2757" width="0.0661%" height="15" fill="rgb(223,7,20)" fg:x="28939" fg:w="23"/><text x="83.4033%" y="2767.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (23 samples, 0.07%)</title><rect x="83.1533%" y="2741" width="0.0661%" height="15" fill="rgb(212,182,17)" fg:x="28939" fg:w="23"/><text x="83.4033%" y="2751.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (23 samples, 0.07%)</title><rect x="83.1533%" y="2725" width="0.0661%" height="15" fill="rgb(237,94,50)" fg:x="28939" fg:w="23"/><text x="83.4033%" y="2735.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (23 samples, 0.07%)</title><rect x="83.1533%" y="2709" width="0.0661%" height="15" fill="rgb(232,185,44)" fg:x="28939" fg:w="23"/><text x="83.4033%" y="2719.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (23 samples, 0.07%)</title><rect x="83.1533%" y="2693" width="0.0661%" height="15" fill="rgb(205,50,36)" fg:x="28939" fg:w="23"/><text x="83.4033%" y="2703.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (23 samples, 0.07%)</title><rect x="83.1533%" y="2677" width="0.0661%" height="15" fill="rgb(252,32,32)" fg:x="28939" fg:w="23"/><text x="83.4033%" y="2687.50"></text></g><g><title>std::panic::catch_unwind (23 samples, 0.07%)</title><rect x="83.1533%" y="2661" width="0.0661%" height="15" fill="rgb(241,123,33)" fg:x="28939" fg:w="23"/><text x="83.4033%" y="2671.50"></text></g><g><title>std::panicking::try (23 samples, 0.07%)</title><rect x="83.1533%" y="2645" width="0.0661%" height="15" fill="rgb(212,140,16)" fg:x="28939" fg:w="23"/><text x="83.4033%" y="2655.50"></text></g><g><title>std::panicking::try::do_call (23 samples, 0.07%)</title><rect x="83.1533%" y="2629" width="0.0661%" height="15" fill="rgb(247,132,5)" fg:x="28939" fg:w="23"/><text x="83.4033%" y="2639.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (23 samples, 0.07%)</title><rect x="83.1533%" y="2613" width="0.0661%" height="15" fill="rgb(209,137,38)" fg:x="28939" fg:w="23"/><text x="83.4033%" y="2623.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (23 samples, 0.07%)</title><rect x="83.1533%" y="2597" width="0.0661%" height="15" fill="rgb(248,32,42)" fg:x="28939" fg:w="23"/><text x="83.4033%" y="2607.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (23 samples, 0.07%)</title><rect x="83.1533%" y="2581" width="0.0661%" height="15" fill="rgb(216,188,40)" fg:x="28939" fg:w="23"/><text x="83.4033%" y="2591.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (23 samples, 0.07%)</title><rect x="83.1533%" y="2565" width="0.0661%" height="15" fill="rgb(209,127,53)" fg:x="28939" fg:w="23"/><text x="83.4033%" y="2575.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (23 samples, 0.07%)</title><rect x="83.1533%" y="2549" width="0.0661%" height="15" fill="rgb(254,162,9)" fg:x="28939" fg:w="23"/><text x="83.4033%" y="2559.50"></text></g><g><title>rayon_core::registry::main_loop (23 samples, 0.07%)</title><rect x="83.1533%" y="2533" width="0.0661%" height="15" fill="rgb(219,183,10)" fg:x="28939" fg:w="23"/><text x="83.4033%" y="2543.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (23 samples, 0.07%)</title><rect x="83.1533%" y="2517" width="0.0661%" height="15" fill="rgb(217,192,21)" fg:x="28939" fg:w="23"/><text x="83.4033%" y="2527.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (23 samples, 0.07%)</title><rect x="83.1533%" y="2501" width="0.0661%" height="15" fill="rgb(251,89,27)" fg:x="28939" fg:w="23"/><text x="83.4033%" y="2511.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (23 samples, 0.07%)</title><rect x="83.1533%" y="2485" width="0.0661%" height="15" fill="rgb(253,55,28)" fg:x="28939" fg:w="23"/><text x="83.4033%" y="2495.50"></text></g><g><title>rayon_core::job::JobRef::execute (23 samples, 0.07%)</title><rect x="83.1533%" y="2469" width="0.0661%" height="15" fill="rgb(216,159,8)" fg:x="28939" fg:w="23"/><text x="83.4033%" y="2479.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (23 samples, 0.07%)</title><rect x="83.1533%" y="2453" width="0.0661%" height="15" fill="rgb(231,228,44)" fg:x="28939" fg:w="23"/><text x="83.4033%" y="2463.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (23 samples, 0.07%)</title><rect x="83.1533%" y="2437" width="0.0661%" height="15" fill="rgb(247,34,48)" fg:x="28939" fg:w="23"/><text x="83.4033%" y="2447.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (23 samples, 0.07%)</title><rect x="83.1533%" y="2421" width="0.0661%" height="15" fill="rgb(247,222,18)" fg:x="28939" fg:w="23"/><text x="83.4033%" y="2431.50"></text></g><g><title>std::panic::catch_unwind (23 samples, 0.07%)</title><rect x="83.1533%" y="2405" width="0.0661%" height="15" fill="rgb(227,49,4)" fg:x="28939" fg:w="23"/><text x="83.4033%" y="2415.50"></text></g><g><title>std::panicking::try (23 samples, 0.07%)</title><rect x="83.1533%" y="2389" width="0.0661%" height="15" fill="rgb(219,189,53)" fg:x="28939" fg:w="23"/><text x="83.4033%" y="2399.50"></text></g><g><title>std::panicking::try::do_call (23 samples, 0.07%)</title><rect x="83.1533%" y="2373" width="0.0661%" height="15" fill="rgb(241,160,53)" fg:x="28939" fg:w="23"/><text x="83.4033%" y="2383.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (23 samples, 0.07%)</title><rect x="83.1533%" y="2357" width="0.0661%" height="15" fill="rgb(227,115,4)" fg:x="28939" fg:w="23"/><text x="83.4033%" y="2367.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (23 samples, 0.07%)</title><rect x="83.1533%" y="2341" width="0.0661%" height="15" fill="rgb(215,28,28)" fg:x="28939" fg:w="23"/><text x="83.4033%" y="2351.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (23 samples, 0.07%)</title><rect x="83.1533%" y="2325" width="0.0661%" height="15" fill="rgb(237,143,40)" fg:x="28939" fg:w="23"/><text x="83.4033%" y="2335.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (23 samples, 0.07%)</title><rect x="83.1533%" y="2309" width="0.0661%" height="15" fill="rgb(205,107,24)" fg:x="28939" fg:w="23"/><text x="83.4033%" y="2319.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (23 samples, 0.07%)</title><rect x="83.1533%" y="2293" width="0.0661%" height="15" fill="rgb(209,112,35)" fg:x="28939" fg:w="23"/><text x="83.4033%" y="2303.50"></text></g><g><title>rayon_core::join::join_context (23 samples, 0.07%)</title><rect x="83.1533%" y="2277" width="0.0661%" height="15" fill="rgb(206,135,5)" fg:x="28939" fg:w="23"/><text x="83.4033%" y="2287.50"></text></g><g><title>rayon_core::registry::in_worker (23 samples, 0.07%)</title><rect x="83.1533%" y="2261" width="0.0661%" height="15" fill="rgb(227,217,38)" fg:x="28939" fg:w="23"/><text x="83.4033%" y="2271.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (23 samples, 0.07%)</title><rect x="83.1533%" y="2245" width="0.0661%" height="15" fill="rgb(205,0,41)" fg:x="28939" fg:w="23"/><text x="83.4033%" y="2255.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (14 samples, 0.04%)</title><rect x="83.1791%" y="2229" width="0.0402%" height="15" fill="rgb(220,20,40)" fg:x="28948" fg:w="14"/><text x="83.4291%" y="2239.50"></text></g><g><title>std::panic::catch_unwind (14 samples, 0.04%)</title><rect x="83.1791%" y="2213" width="0.0402%" height="15" fill="rgb(216,145,3)" fg:x="28948" fg:w="14"/><text x="83.4291%" y="2223.50"></text></g><g><title>std::panicking::try (14 samples, 0.04%)</title><rect x="83.1791%" y="2197" width="0.0402%" height="15" fill="rgb(207,130,51)" fg:x="28948" fg:w="14"/><text x="83.4291%" y="2207.50"></text></g><g><title>std::panicking::try::do_call (14 samples, 0.04%)</title><rect x="83.1791%" y="2181" width="0.0402%" height="15" fill="rgb(252,93,13)" fg:x="28948" fg:w="14"/><text x="83.4291%" y="2191.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (14 samples, 0.04%)</title><rect x="83.1791%" y="2165" width="0.0402%" height="15" fill="rgb(210,105,15)" fg:x="28948" fg:w="14"/><text x="83.4291%" y="2175.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (14 samples, 0.04%)</title><rect x="83.1791%" y="2149" width="0.0402%" height="15" fill="rgb(212,126,31)" fg:x="28948" fg:w="14"/><text x="83.4291%" y="2159.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (14 samples, 0.04%)</title><rect x="83.1791%" y="2133" width="0.0402%" height="15" fill="rgb(241,167,46)" fg:x="28948" fg:w="14"/><text x="83.4291%" y="2143.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (14 samples, 0.04%)</title><rect x="83.1791%" y="2117" width="0.0402%" height="15" fill="rgb(217,143,19)" fg:x="28948" fg:w="14"/><text x="83.4291%" y="2127.50"></text></g><g><title>rayon_core::join::join_context (14 samples, 0.04%)</title><rect x="83.1791%" y="2101" width="0.0402%" height="15" fill="rgb(235,117,33)" fg:x="28948" fg:w="14"/><text x="83.4291%" y="2111.50"></text></g><g><title>rayon_core::registry::in_worker (14 samples, 0.04%)</title><rect x="83.1791%" y="2085" width="0.0402%" height="15" fill="rgb(247,95,6)" fg:x="28948" fg:w="14"/><text x="83.4291%" y="2095.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (14 samples, 0.04%)</title><rect x="83.1791%" y="2069" width="0.0402%" height="15" fill="rgb(243,206,43)" fg:x="28948" fg:w="14"/><text x="83.4291%" y="2079.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (6 samples, 0.02%)</title><rect x="83.2021%" y="2053" width="0.0172%" height="15" fill="rgb(229,65,54)" fg:x="28956" fg:w="6"/><text x="83.4521%" y="2063.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.02%)</title><rect x="83.2021%" y="2037" width="0.0172%" height="15" fill="rgb(247,137,34)" fg:x="28956" fg:w="6"/><text x="83.4521%" y="2047.50"></text></g><g><title>std::panicking::try (6 samples, 0.02%)</title><rect x="83.2021%" y="2021" width="0.0172%" height="15" fill="rgb(245,174,44)" fg:x="28956" fg:w="6"/><text x="83.4521%" y="2031.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.02%)</title><rect x="83.2021%" y="2005" width="0.0172%" height="15" fill="rgb(223,64,15)" fg:x="28956" fg:w="6"/><text x="83.4521%" y="2015.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6 samples, 0.02%)</title><rect x="83.2021%" y="1989" width="0.0172%" height="15" fill="rgb(243,153,36)" fg:x="28956" fg:w="6"/><text x="83.4521%" y="1999.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (6 samples, 0.02%)</title><rect x="83.2021%" y="1973" width="0.0172%" height="15" fill="rgb(252,23,4)" fg:x="28956" fg:w="6"/><text x="83.4521%" y="1983.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (6 samples, 0.02%)</title><rect x="83.2021%" y="1957" width="0.0172%" height="15" fill="rgb(209,132,13)" fg:x="28956" fg:w="6"/><text x="83.4521%" y="1967.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (6 samples, 0.02%)</title><rect x="83.2021%" y="1941" width="0.0172%" height="15" fill="rgb(209,196,21)" fg:x="28956" fg:w="6"/><text x="83.4521%" y="1951.50"></text></g><g><title>rayon_core::join::join_context (6 samples, 0.02%)</title><rect x="83.2021%" y="1925" width="0.0172%" height="15" fill="rgb(252,197,1)" fg:x="28956" fg:w="6"/><text x="83.4521%" y="1935.50"></text></g><g><title>rayon_core::registry::in_worker (6 samples, 0.02%)</title><rect x="83.2021%" y="1909" width="0.0172%" height="15" fill="rgb(229,42,46)" fg:x="28956" fg:w="6"/><text x="83.4521%" y="1919.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (6 samples, 0.02%)</title><rect x="83.2021%" y="1893" width="0.0172%" height="15" fill="rgb(219,85,8)" fg:x="28956" fg:w="6"/><text x="83.4521%" y="1903.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (4 samples, 0.01%)</title><rect x="83.2510%" y="1525" width="0.0115%" height="15" fill="rgb(223,185,14)" fg:x="28973" fg:w="4"/><text x="83.5010%" y="1535.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (4 samples, 0.01%)</title><rect x="83.2510%" y="1509" width="0.0115%" height="15" fill="rgb(217,196,18)" fg:x="28973" fg:w="4"/><text x="83.5010%" y="1519.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (4 samples, 0.01%)</title><rect x="83.2510%" y="1493" width="0.0115%" height="15" fill="rgb(220,122,37)" fg:x="28973" fg:w="4"/><text x="83.5010%" y="1503.50"></text></g><g><title>rayon_core::job::JobRef::execute (4 samples, 0.01%)</title><rect x="83.2510%" y="1477" width="0.0115%" height="15" fill="rgb(236,135,33)" fg:x="28973" fg:w="4"/><text x="83.5010%" y="1487.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (4 samples, 0.01%)</title><rect x="83.2510%" y="1461" width="0.0115%" height="15" fill="rgb(222,86,54)" fg:x="28973" fg:w="4"/><text x="83.5010%" y="1471.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (4 samples, 0.01%)</title><rect x="83.2510%" y="1445" width="0.0115%" height="15" fill="rgb(227,42,22)" fg:x="28973" fg:w="4"/><text x="83.5010%" y="1455.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (4 samples, 0.01%)</title><rect x="83.2510%" y="1429" width="0.0115%" height="15" fill="rgb(243,101,27)" fg:x="28973" fg:w="4"/><text x="83.5010%" y="1439.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.01%)</title><rect x="83.2510%" y="1413" width="0.0115%" height="15" fill="rgb(229,100,8)" fg:x="28973" fg:w="4"/><text x="83.5010%" y="1423.50"></text></g><g><title>std::panicking::try (4 samples, 0.01%)</title><rect x="83.2510%" y="1397" width="0.0115%" height="15" fill="rgb(252,68,10)" fg:x="28973" fg:w="4"/><text x="83.5010%" y="1407.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.01%)</title><rect x="83.2510%" y="1381" width="0.0115%" height="15" fill="rgb(219,19,31)" fg:x="28973" fg:w="4"/><text x="83.5010%" y="1391.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.01%)</title><rect x="83.2510%" y="1365" width="0.0115%" height="15" fill="rgb(246,150,44)" fg:x="28973" fg:w="4"/><text x="83.5010%" y="1375.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (4 samples, 0.01%)</title><rect x="83.2510%" y="1349" width="0.0115%" height="15" fill="rgb(211,14,39)" fg:x="28973" fg:w="4"/><text x="83.5010%" y="1359.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (4 samples, 0.01%)</title><rect x="83.2510%" y="1333" width="0.0115%" height="15" fill="rgb(221,98,29)" fg:x="28973" fg:w="4"/><text x="83.5010%" y="1343.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.01%)</title><rect x="83.2510%" y="1317" width="0.0115%" height="15" fill="rgb(221,70,26)" fg:x="28973" fg:w="4"/><text x="83.5010%" y="1327.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.01%)</title><rect x="83.2510%" y="1301" width="0.0115%" height="15" fill="rgb(236,146,30)" fg:x="28973" fg:w="4"/><text x="83.5010%" y="1311.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.01%)</title><rect x="83.2510%" y="1285" width="0.0115%" height="15" fill="rgb(226,94,34)" fg:x="28973" fg:w="4"/><text x="83.5010%" y="1295.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.01%)</title><rect x="83.2510%" y="1269" width="0.0115%" height="15" fill="rgb(248,132,21)" fg:x="28973" fg:w="4"/><text x="83.5010%" y="1279.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.01%)</title><rect x="83.2510%" y="1253" width="0.0115%" height="15" fill="rgb(245,43,50)" fg:x="28973" fg:w="4"/><text x="83.5010%" y="1263.50"></text></g><g><title>par_exec_1 (19 samples, 0.05%)</title><rect x="83.2194%" y="2789" width="0.0546%" height="15" fill="rgb(245,132,31)" fg:x="28962" fg:w="19"/><text x="83.4694%" y="2799.50"></text></g><g><title>__GI___clone3 (19 samples, 0.05%)</title><rect x="83.2194%" y="2773" width="0.0546%" height="15" fill="rgb(230,171,4)" fg:x="28962" fg:w="19"/><text x="83.4694%" y="2783.50"></text></g><g><title>start_thread (19 samples, 0.05%)</title><rect x="83.2194%" y="2757" width="0.0546%" height="15" fill="rgb(235,6,45)" fg:x="28962" fg:w="19"/><text x="83.4694%" y="2767.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (19 samples, 0.05%)</title><rect x="83.2194%" y="2741" width="0.0546%" height="15" fill="rgb(220,80,28)" fg:x="28962" fg:w="19"/><text x="83.4694%" y="2751.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (19 samples, 0.05%)</title><rect x="83.2194%" y="2725" width="0.0546%" height="15" fill="rgb(242,171,9)" fg:x="28962" fg:w="19"/><text x="83.4694%" y="2735.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (19 samples, 0.05%)</title><rect x="83.2194%" y="2709" width="0.0546%" height="15" fill="rgb(214,135,29)" fg:x="28962" fg:w="19"/><text x="83.4694%" y="2719.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (19 samples, 0.05%)</title><rect x="83.2194%" y="2693" width="0.0546%" height="15" fill="rgb(221,229,16)" fg:x="28962" fg:w="19"/><text x="83.4694%" y="2703.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (19 samples, 0.05%)</title><rect x="83.2194%" y="2677" width="0.0546%" height="15" fill="rgb(253,59,46)" fg:x="28962" fg:w="19"/><text x="83.4694%" y="2687.50"></text></g><g><title>std::panic::catch_unwind (19 samples, 0.05%)</title><rect x="83.2194%" y="2661" width="0.0546%" height="15" fill="rgb(250,147,20)" fg:x="28962" fg:w="19"/><text x="83.4694%" y="2671.50"></text></g><g><title>std::panicking::try (19 samples, 0.05%)</title><rect x="83.2194%" y="2645" width="0.0546%" height="15" fill="rgb(236,64,48)" fg:x="28962" fg:w="19"/><text x="83.4694%" y="2655.50"></text></g><g><title>std::panicking::try::do_call (19 samples, 0.05%)</title><rect x="83.2194%" y="2629" width="0.0546%" height="15" fill="rgb(240,37,42)" fg:x="28962" fg:w="19"/><text x="83.4694%" y="2639.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (19 samples, 0.05%)</title><rect x="83.2194%" y="2613" width="0.0546%" height="15" fill="rgb(220,41,50)" fg:x="28962" fg:w="19"/><text x="83.4694%" y="2623.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (19 samples, 0.05%)</title><rect x="83.2194%" y="2597" width="0.0546%" height="15" fill="rgb(216,51,14)" fg:x="28962" fg:w="19"/><text x="83.4694%" y="2607.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (19 samples, 0.05%)</title><rect x="83.2194%" y="2581" width="0.0546%" height="15" fill="rgb(215,83,10)" fg:x="28962" fg:w="19"/><text x="83.4694%" y="2591.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (19 samples, 0.05%)</title><rect x="83.2194%" y="2565" width="0.0546%" height="15" fill="rgb(206,144,17)" fg:x="28962" fg:w="19"/><text x="83.4694%" y="2575.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (19 samples, 0.05%)</title><rect x="83.2194%" y="2549" width="0.0546%" height="15" fill="rgb(219,196,37)" fg:x="28962" fg:w="19"/><text x="83.4694%" y="2559.50"></text></g><g><title>rayon_core::registry::main_loop (19 samples, 0.05%)</title><rect x="83.2194%" y="2533" width="0.0546%" height="15" fill="rgb(226,135,26)" fg:x="28962" fg:w="19"/><text x="83.4694%" y="2543.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (19 samples, 0.05%)</title><rect x="83.2194%" y="2517" width="0.0546%" height="15" fill="rgb(237,195,40)" fg:x="28962" fg:w="19"/><text x="83.4694%" y="2527.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (19 samples, 0.05%)</title><rect x="83.2194%" y="2501" width="0.0546%" height="15" fill="rgb(228,182,42)" fg:x="28962" fg:w="19"/><text x="83.4694%" y="2511.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (19 samples, 0.05%)</title><rect x="83.2194%" y="2485" width="0.0546%" height="15" fill="rgb(224,135,50)" fg:x="28962" fg:w="19"/><text x="83.4694%" y="2495.50"></text></g><g><title>rayon_core::job::JobRef::execute (19 samples, 0.05%)</title><rect x="83.2194%" y="2469" width="0.0546%" height="15" fill="rgb(236,215,34)" fg:x="28962" fg:w="19"/><text x="83.4694%" y="2479.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (19 samples, 0.05%)</title><rect x="83.2194%" y="2453" width="0.0546%" height="15" fill="rgb(244,213,27)" fg:x="28962" fg:w="19"/><text x="83.4694%" y="2463.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (19 samples, 0.05%)</title><rect x="83.2194%" y="2437" width="0.0546%" height="15" fill="rgb(233,37,53)" fg:x="28962" fg:w="19"/><text x="83.4694%" y="2447.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (19 samples, 0.05%)</title><rect x="83.2194%" y="2421" width="0.0546%" height="15" fill="rgb(222,132,14)" fg:x="28962" fg:w="19"/><text x="83.4694%" y="2431.50"></text></g><g><title>std::panic::catch_unwind (19 samples, 0.05%)</title><rect x="83.2194%" y="2405" width="0.0546%" height="15" fill="rgb(219,202,29)" fg:x="28962" fg:w="19"/><text x="83.4694%" y="2415.50"></text></g><g><title>std::panicking::try (19 samples, 0.05%)</title><rect x="83.2194%" y="2389" width="0.0546%" height="15" fill="rgb(226,157,39)" fg:x="28962" fg:w="19"/><text x="83.4694%" y="2399.50"></text></g><g><title>std::panicking::try::do_call (19 samples, 0.05%)</title><rect x="83.2194%" y="2373" width="0.0546%" height="15" fill="rgb(235,213,2)" fg:x="28962" fg:w="19"/><text x="83.4694%" y="2383.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (19 samples, 0.05%)</title><rect x="83.2194%" y="2357" width="0.0546%" height="15" fill="rgb(250,121,2)" fg:x="28962" fg:w="19"/><text x="83.4694%" y="2367.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (19 samples, 0.05%)</title><rect x="83.2194%" y="2341" width="0.0546%" height="15" fill="rgb(206,192,33)" fg:x="28962" fg:w="19"/><text x="83.4694%" y="2351.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (19 samples, 0.05%)</title><rect x="83.2194%" y="2325" width="0.0546%" height="15" fill="rgb(240,161,6)" fg:x="28962" fg:w="19"/><text x="83.4694%" y="2335.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (19 samples, 0.05%)</title><rect x="83.2194%" y="2309" width="0.0546%" height="15" fill="rgb(246,53,30)" fg:x="28962" fg:w="19"/><text x="83.4694%" y="2319.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (19 samples, 0.05%)</title><rect x="83.2194%" y="2293" width="0.0546%" height="15" fill="rgb(219,123,43)" fg:x="28962" fg:w="19"/><text x="83.4694%" y="2303.50"></text></g><g><title>rayon_core::join::join_context (19 samples, 0.05%)</title><rect x="83.2194%" y="2277" width="0.0546%" height="15" fill="rgb(236,53,49)" fg:x="28962" fg:w="19"/><text x="83.4694%" y="2287.50"></text></g><g><title>rayon_core::registry::in_worker (19 samples, 0.05%)</title><rect x="83.2194%" y="2261" width="0.0546%" height="15" fill="rgb(241,156,1)" fg:x="28962" fg:w="19"/><text x="83.4694%" y="2271.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (19 samples, 0.05%)</title><rect x="83.2194%" y="2245" width="0.0546%" height="15" fill="rgb(209,73,26)" fg:x="28962" fg:w="19"/><text x="83.4694%" y="2255.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (19 samples, 0.05%)</title><rect x="83.2194%" y="2229" width="0.0546%" height="15" fill="rgb(206,114,3)" fg:x="28962" fg:w="19"/><text x="83.4694%" y="2239.50"></text></g><g><title>std::panic::catch_unwind (19 samples, 0.05%)</title><rect x="83.2194%" y="2213" width="0.0546%" height="15" fill="rgb(230,214,9)" fg:x="28962" fg:w="19"/><text x="83.4694%" y="2223.50"></text></g><g><title>std::panicking::try (19 samples, 0.05%)</title><rect x="83.2194%" y="2197" width="0.0546%" height="15" fill="rgb(240,184,46)" fg:x="28962" fg:w="19"/><text x="83.4694%" y="2207.50"></text></g><g><title>std::panicking::try::do_call (19 samples, 0.05%)</title><rect x="83.2194%" y="2181" width="0.0546%" height="15" fill="rgb(242,169,54)" fg:x="28962" fg:w="19"/><text x="83.4694%" y="2191.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (19 samples, 0.05%)</title><rect x="83.2194%" y="2165" width="0.0546%" height="15" fill="rgb(207,168,50)" fg:x="28962" fg:w="19"/><text x="83.4694%" y="2175.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (19 samples, 0.05%)</title><rect x="83.2194%" y="2149" width="0.0546%" height="15" fill="rgb(240,114,2)" fg:x="28962" fg:w="19"/><text x="83.4694%" y="2159.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (19 samples, 0.05%)</title><rect x="83.2194%" y="2133" width="0.0546%" height="15" fill="rgb(211,17,40)" fg:x="28962" fg:w="19"/><text x="83.4694%" y="2143.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (19 samples, 0.05%)</title><rect x="83.2194%" y="2117" width="0.0546%" height="15" fill="rgb(235,97,36)" fg:x="28962" fg:w="19"/><text x="83.4694%" y="2127.50"></text></g><g><title>rayon_core::join::join_context (19 samples, 0.05%)</title><rect x="83.2194%" y="2101" width="0.0546%" height="15" fill="rgb(208,164,11)" fg:x="28962" fg:w="19"/><text x="83.4694%" y="2111.50"></text></g><g><title>rayon_core::registry::in_worker (19 samples, 0.05%)</title><rect x="83.2194%" y="2085" width="0.0546%" height="15" fill="rgb(242,11,17)" fg:x="28962" fg:w="19"/><text x="83.4694%" y="2095.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (19 samples, 0.05%)</title><rect x="83.2194%" y="2069" width="0.0546%" height="15" fill="rgb(215,86,33)" fg:x="28962" fg:w="19"/><text x="83.4694%" y="2079.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (14 samples, 0.04%)</title><rect x="83.2337%" y="2053" width="0.0402%" height="15" fill="rgb(245,185,28)" fg:x="28967" fg:w="14"/><text x="83.4837%" y="2063.50"></text></g><g><title>std::panic::catch_unwind (14 samples, 0.04%)</title><rect x="83.2337%" y="2037" width="0.0402%" height="15" fill="rgb(231,89,42)" fg:x="28967" fg:w="14"/><text x="83.4837%" y="2047.50"></text></g><g><title>std::panicking::try (14 samples, 0.04%)</title><rect x="83.2337%" y="2021" width="0.0402%" height="15" fill="rgb(210,18,47)" fg:x="28967" fg:w="14"/><text x="83.4837%" y="2031.50"></text></g><g><title>std::panicking::try::do_call (14 samples, 0.04%)</title><rect x="83.2337%" y="2005" width="0.0402%" height="15" fill="rgb(214,84,8)" fg:x="28967" fg:w="14"/><text x="83.4837%" y="2015.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (14 samples, 0.04%)</title><rect x="83.2337%" y="1989" width="0.0402%" height="15" fill="rgb(214,222,23)" fg:x="28967" fg:w="14"/><text x="83.4837%" y="1999.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (14 samples, 0.04%)</title><rect x="83.2337%" y="1973" width="0.0402%" height="15" fill="rgb(213,104,21)" fg:x="28967" fg:w="14"/><text x="83.4837%" y="1983.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (14 samples, 0.04%)</title><rect x="83.2337%" y="1957" width="0.0402%" height="15" fill="rgb(238,138,6)" fg:x="28967" fg:w="14"/><text x="83.4837%" y="1967.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (14 samples, 0.04%)</title><rect x="83.2337%" y="1941" width="0.0402%" height="15" fill="rgb(205,167,50)" fg:x="28967" fg:w="14"/><text x="83.4837%" y="1951.50"></text></g><g><title>rayon_core::join::join_context (14 samples, 0.04%)</title><rect x="83.2337%" y="1925" width="0.0402%" height="15" fill="rgb(230,105,27)" fg:x="28967" fg:w="14"/><text x="83.4837%" y="1935.50"></text></g><g><title>rayon_core::registry::in_worker (14 samples, 0.04%)</title><rect x="83.2337%" y="1909" width="0.0402%" height="15" fill="rgb(222,97,48)" fg:x="28967" fg:w="14"/><text x="83.4837%" y="1919.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (14 samples, 0.04%)</title><rect x="83.2337%" y="1893" width="0.0402%" height="15" fill="rgb(222,197,14)" fg:x="28967" fg:w="14"/><text x="83.4837%" y="1903.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (11 samples, 0.03%)</title><rect x="83.2423%" y="1877" width="0.0316%" height="15" fill="rgb(210,105,47)" fg:x="28970" fg:w="11"/><text x="83.4923%" y="1887.50"></text></g><g><title>std::panic::catch_unwind (11 samples, 0.03%)</title><rect x="83.2423%" y="1861" width="0.0316%" height="15" fill="rgb(238,158,19)" fg:x="28970" fg:w="11"/><text x="83.4923%" y="1871.50"></text></g><g><title>std::panicking::try (11 samples, 0.03%)</title><rect x="83.2423%" y="1845" width="0.0316%" height="15" fill="rgb(226,176,23)" fg:x="28970" fg:w="11"/><text x="83.4923%" y="1855.50"></text></g><g><title>std::panicking::try::do_call (11 samples, 0.03%)</title><rect x="83.2423%" y="1829" width="0.0316%" height="15" fill="rgb(208,79,31)" fg:x="28970" fg:w="11"/><text x="83.4923%" y="1839.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (11 samples, 0.03%)</title><rect x="83.2423%" y="1813" width="0.0316%" height="15" fill="rgb(221,154,21)" fg:x="28970" fg:w="11"/><text x="83.4923%" y="1823.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (11 samples, 0.03%)</title><rect x="83.2423%" y="1797" width="0.0316%" height="15" fill="rgb(213,61,41)" fg:x="28970" fg:w="11"/><text x="83.4923%" y="1807.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (11 samples, 0.03%)</title><rect x="83.2423%" y="1781" width="0.0316%" height="15" fill="rgb(215,28,33)" fg:x="28970" fg:w="11"/><text x="83.4923%" y="1791.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.03%)</title><rect x="83.2423%" y="1765" width="0.0316%" height="15" fill="rgb(231,139,26)" fg:x="28970" fg:w="11"/><text x="83.4923%" y="1775.50"></text></g><g><title>rayon_core::join::join_context (11 samples, 0.03%)</title><rect x="83.2423%" y="1749" width="0.0316%" height="15" fill="rgb(232,159,16)" fg:x="28970" fg:w="11"/><text x="83.4923%" y="1759.50"></text></g><g><title>rayon_core::registry::in_worker (11 samples, 0.03%)</title><rect x="83.2423%" y="1733" width="0.0316%" height="15" fill="rgb(233,80,10)" fg:x="28970" fg:w="11"/><text x="83.4923%" y="1743.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (11 samples, 0.03%)</title><rect x="83.2423%" y="1717" width="0.0316%" height="15" fill="rgb(208,147,29)" fg:x="28970" fg:w="11"/><text x="83.4923%" y="1727.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (9 samples, 0.03%)</title><rect x="83.2481%" y="1701" width="0.0259%" height="15" fill="rgb(213,10,12)" fg:x="28972" fg:w="9"/><text x="83.4981%" y="1711.50"></text></g><g><title>std::panic::catch_unwind (9 samples, 0.03%)</title><rect x="83.2481%" y="1685" width="0.0259%" height="15" fill="rgb(231,218,13)" fg:x="28972" fg:w="9"/><text x="83.4981%" y="1695.50"></text></g><g><title>std::panicking::try (9 samples, 0.03%)</title><rect x="83.2481%" y="1669" width="0.0259%" height="15" fill="rgb(244,199,44)" fg:x="28972" fg:w="9"/><text x="83.4981%" y="1679.50"></text></g><g><title>std::panicking::try::do_call (9 samples, 0.03%)</title><rect x="83.2481%" y="1653" width="0.0259%" height="15" fill="rgb(240,144,53)" fg:x="28972" fg:w="9"/><text x="83.4981%" y="1663.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (9 samples, 0.03%)</title><rect x="83.2481%" y="1637" width="0.0259%" height="15" fill="rgb(223,57,28)" fg:x="28972" fg:w="9"/><text x="83.4981%" y="1647.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (9 samples, 0.03%)</title><rect x="83.2481%" y="1621" width="0.0259%" height="15" fill="rgb(213,134,38)" fg:x="28972" fg:w="9"/><text x="83.4981%" y="1631.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (9 samples, 0.03%)</title><rect x="83.2481%" y="1605" width="0.0259%" height="15" fill="rgb(251,182,42)" fg:x="28972" fg:w="9"/><text x="83.4981%" y="1615.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.03%)</title><rect x="83.2481%" y="1589" width="0.0259%" height="15" fill="rgb(229,93,13)" fg:x="28972" fg:w="9"/><text x="83.4981%" y="1599.50"></text></g><g><title>rayon_core::join::join_context (9 samples, 0.03%)</title><rect x="83.2481%" y="1573" width="0.0259%" height="15" fill="rgb(234,171,3)" fg:x="28972" fg:w="9"/><text x="83.4981%" y="1583.50"></text></g><g><title>rayon_core::registry::in_worker (9 samples, 0.03%)</title><rect x="83.2481%" y="1557" width="0.0259%" height="15" fill="rgb(241,105,32)" fg:x="28972" fg:w="9"/><text x="83.4981%" y="1567.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (9 samples, 0.03%)</title><rect x="83.2481%" y="1541" width="0.0259%" height="15" fill="rgb(221,66,3)" fg:x="28972" fg:w="9"/><text x="83.4981%" y="1551.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (4 samples, 0.01%)</title><rect x="83.2625%" y="1525" width="0.0115%" height="15" fill="rgb(248,155,29)" fg:x="28977" fg:w="4"/><text x="83.5125%" y="1535.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.01%)</title><rect x="83.2625%" y="1509" width="0.0115%" height="15" fill="rgb(231,31,5)" fg:x="28977" fg:w="4"/><text x="83.5125%" y="1519.50"></text></g><g><title>std::panicking::try (4 samples, 0.01%)</title><rect x="83.2625%" y="1493" width="0.0115%" height="15" fill="rgb(213,188,31)" fg:x="28977" fg:w="4"/><text x="83.5125%" y="1503.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.01%)</title><rect x="83.2625%" y="1477" width="0.0115%" height="15" fill="rgb(212,104,33)" fg:x="28977" fg:w="4"/><text x="83.5125%" y="1487.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.01%)</title><rect x="83.2625%" y="1461" width="0.0115%" height="15" fill="rgb(254,77,51)" fg:x="28977" fg:w="4"/><text x="83.5125%" y="1471.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (4 samples, 0.01%)</title><rect x="83.2625%" y="1445" width="0.0115%" height="15" fill="rgb(234,39,26)" fg:x="28977" fg:w="4"/><text x="83.5125%" y="1455.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.01%)</title><rect x="83.2625%" y="1429" width="0.0115%" height="15" fill="rgb(208,88,36)" fg:x="28977" fg:w="4"/><text x="83.5125%" y="1439.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.01%)</title><rect x="83.2625%" y="1413" width="0.0115%" height="15" fill="rgb(243,222,10)" fg:x="28977" fg:w="4"/><text x="83.5125%" y="1423.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.01%)</title><rect x="83.2625%" y="1397" width="0.0115%" height="15" fill="rgb(218,133,52)" fg:x="28977" fg:w="4"/><text x="83.5125%" y="1407.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.01%)</title><rect x="83.2625%" y="1381" width="0.0115%" height="15" fill="rgb(222,25,26)" fg:x="28977" fg:w="4"/><text x="83.5125%" y="1391.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.01%)</title><rect x="83.2625%" y="1365" width="0.0115%" height="15" fill="rgb(243,174,24)" fg:x="28977" fg:w="4"/><text x="83.5125%" y="1375.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (7 samples, 0.02%)</title><rect x="83.2739%" y="2229" width="0.0201%" height="15" fill="rgb(233,188,52)" fg:x="28981" fg:w="7"/><text x="83.5239%" y="2239.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (7 samples, 0.02%)</title><rect x="83.2739%" y="2213" width="0.0201%" height="15" fill="rgb(208,89,14)" fg:x="28981" fg:w="7"/><text x="83.5239%" y="2223.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (7 samples, 0.02%)</title><rect x="83.2739%" y="2197" width="0.0201%" height="15" fill="rgb(205,204,21)" fg:x="28981" fg:w="7"/><text x="83.5239%" y="2207.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (7 samples, 0.02%)</title><rect x="83.2739%" y="2181" width="0.0201%" height="15" fill="rgb(246,39,28)" fg:x="28981" fg:w="7"/><text x="83.5239%" y="2191.50"></text></g><g><title>rayon_core::join::join_context (7 samples, 0.02%)</title><rect x="83.2739%" y="2165" width="0.0201%" height="15" fill="rgb(235,71,19)" fg:x="28981" fg:w="7"/><text x="83.5239%" y="2175.50"></text></g><g><title>rayon_core::registry::in_worker (7 samples, 0.02%)</title><rect x="83.2739%" y="2149" width="0.0201%" height="15" fill="rgb(211,62,39)" fg:x="28981" fg:w="7"/><text x="83.5239%" y="2159.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (7 samples, 0.02%)</title><rect x="83.2739%" y="2133" width="0.0201%" height="15" fill="rgb(246,118,20)" fg:x="28981" fg:w="7"/><text x="83.5239%" y="2143.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (4 samples, 0.01%)</title><rect x="83.2826%" y="2117" width="0.0115%" height="15" fill="rgb(230,82,12)" fg:x="28984" fg:w="4"/><text x="83.5326%" y="2127.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.01%)</title><rect x="83.2826%" y="2101" width="0.0115%" height="15" fill="rgb(205,212,34)" fg:x="28984" fg:w="4"/><text x="83.5326%" y="2111.50"></text></g><g><title>std::panicking::try (4 samples, 0.01%)</title><rect x="83.2826%" y="2085" width="0.0115%" height="15" fill="rgb(239,90,1)" fg:x="28984" fg:w="4"/><text x="83.5326%" y="2095.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.01%)</title><rect x="83.2826%" y="2069" width="0.0115%" height="15" fill="rgb(225,198,50)" fg:x="28984" fg:w="4"/><text x="83.5326%" y="2079.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.01%)</title><rect x="83.2826%" y="2053" width="0.0115%" height="15" fill="rgb(227,208,48)" fg:x="28984" fg:w="4"/><text x="83.5326%" y="2063.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (4 samples, 0.01%)</title><rect x="83.2826%" y="2037" width="0.0115%" height="15" fill="rgb(238,134,41)" fg:x="28984" fg:w="4"/><text x="83.5326%" y="2047.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.01%)</title><rect x="83.2826%" y="2021" width="0.0115%" height="15" fill="rgb(241,58,39)" fg:x="28984" fg:w="4"/><text x="83.5326%" y="2031.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.01%)</title><rect x="83.2826%" y="2005" width="0.0115%" height="15" fill="rgb(214,126,4)" fg:x="28984" fg:w="4"/><text x="83.5326%" y="2015.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.01%)</title><rect x="83.2826%" y="1989" width="0.0115%" height="15" fill="rgb(235,149,4)" fg:x="28984" fg:w="4"/><text x="83.5326%" y="1999.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.01%)</title><rect x="83.2826%" y="1973" width="0.0115%" height="15" fill="rgb(236,59,29)" fg:x="28984" fg:w="4"/><text x="83.5326%" y="1983.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.01%)</title><rect x="83.2826%" y="1957" width="0.0115%" height="15" fill="rgb(246,11,33)" fg:x="28984" fg:w="4"/><text x="83.5326%" y="1967.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (4 samples, 0.01%)</title><rect x="83.2826%" y="1941" width="0.0115%" height="15" fill="rgb(232,180,35)" fg:x="28984" fg:w="4"/><text x="83.5326%" y="1951.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (4 samples, 0.01%)</title><rect x="83.2826%" y="1925" width="0.0115%" height="15" fill="rgb(220,35,37)" fg:x="28984" fg:w="4"/><text x="83.5326%" y="1935.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.01%)</title><rect x="83.2826%" y="1909" width="0.0115%" height="15" fill="rgb(238,107,48)" fg:x="28984" fg:w="4"/><text x="83.5326%" y="1919.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.01%)</title><rect x="83.2826%" y="1893" width="0.0115%" height="15" fill="rgb(205,65,21)" fg:x="28984" fg:w="4"/><text x="83.5326%" y="1903.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.01%)</title><rect x="83.2826%" y="1877" width="0.0115%" height="15" fill="rgb(246,138,48)" fg:x="28984" fg:w="4"/><text x="83.5326%" y="1887.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.01%)</title><rect x="83.2826%" y="1861" width="0.0115%" height="15" fill="rgb(209,220,47)" fg:x="28984" fg:w="4"/><text x="83.5326%" y="1871.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.01%)</title><rect x="83.2826%" y="1845" width="0.0115%" height="15" fill="rgb(222,162,49)" fg:x="28984" fg:w="4"/><text x="83.5326%" y="1855.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (4 samples, 0.01%)</title><rect x="83.2941%" y="2229" width="0.0115%" height="15" fill="rgb(243,123,11)" fg:x="28988" fg:w="4"/><text x="83.5441%" y="2239.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (4 samples, 0.01%)</title><rect x="83.2941%" y="2213" width="0.0115%" height="15" fill="rgb(221,229,41)" fg:x="28988" fg:w="4"/><text x="83.5441%" y="2223.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (4 samples, 0.01%)</title><rect x="83.2941%" y="2197" width="0.0115%" height="15" fill="rgb(216,68,4)" fg:x="28988" fg:w="4"/><text x="83.5441%" y="2207.50"></text></g><g><title>rayon_core::job::JobRef::execute (4 samples, 0.01%)</title><rect x="83.2941%" y="2181" width="0.0115%" height="15" fill="rgb(207,88,35)" fg:x="28988" fg:w="4"/><text x="83.5441%" y="2191.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (4 samples, 0.01%)</title><rect x="83.2941%" y="2165" width="0.0115%" height="15" fill="rgb(252,2,5)" fg:x="28988" fg:w="4"/><text x="83.5441%" y="2175.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (4 samples, 0.01%)</title><rect x="83.2941%" y="2149" width="0.0115%" height="15" fill="rgb(209,173,7)" fg:x="28988" fg:w="4"/><text x="83.5441%" y="2159.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (4 samples, 0.01%)</title><rect x="83.2941%" y="2133" width="0.0115%" height="15" fill="rgb(210,198,52)" fg:x="28988" fg:w="4"/><text x="83.5441%" y="2143.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.01%)</title><rect x="83.2941%" y="2117" width="0.0115%" height="15" fill="rgb(228,152,32)" fg:x="28988" fg:w="4"/><text x="83.5441%" y="2127.50"></text></g><g><title>std::panicking::try (4 samples, 0.01%)</title><rect x="83.2941%" y="2101" width="0.0115%" height="15" fill="rgb(249,98,29)" fg:x="28988" fg:w="4"/><text x="83.5441%" y="2111.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.01%)</title><rect x="83.2941%" y="2085" width="0.0115%" height="15" fill="rgb(205,148,48)" fg:x="28988" fg:w="4"/><text x="83.5441%" y="2095.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.01%)</title><rect x="83.2941%" y="2069" width="0.0115%" height="15" fill="rgb(236,69,34)" fg:x="28988" fg:w="4"/><text x="83.5441%" y="2079.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (4 samples, 0.01%)</title><rect x="83.2941%" y="2053" width="0.0115%" height="15" fill="rgb(220,151,41)" fg:x="28988" fg:w="4"/><text x="83.5441%" y="2063.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (4 samples, 0.01%)</title><rect x="83.2941%" y="2037" width="0.0115%" height="15" fill="rgb(254,106,24)" fg:x="28988" fg:w="4"/><text x="83.5441%" y="2047.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.01%)</title><rect x="83.2941%" y="2021" width="0.0115%" height="15" fill="rgb(210,37,48)" fg:x="28988" fg:w="4"/><text x="83.5441%" y="2031.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.01%)</title><rect x="83.2941%" y="2005" width="0.0115%" height="15" fill="rgb(254,131,5)" fg:x="28988" fg:w="4"/><text x="83.5441%" y="2015.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.01%)</title><rect x="83.2941%" y="1989" width="0.0115%" height="15" fill="rgb(216,55,41)" fg:x="28988" fg:w="4"/><text x="83.5441%" y="1999.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.01%)</title><rect x="83.2941%" y="1973" width="0.0115%" height="15" fill="rgb(250,35,31)" fg:x="28988" fg:w="4"/><text x="83.5441%" y="1983.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.01%)</title><rect x="83.2941%" y="1957" width="0.0115%" height="15" fill="rgb(207,124,33)" fg:x="28988" fg:w="4"/><text x="83.5441%" y="1967.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (18 samples, 0.05%)</title><rect x="83.2739%" y="2485" width="0.0517%" height="15" fill="rgb(249,175,17)" fg:x="28981" fg:w="18"/><text x="83.5239%" y="2495.50"></text></g><g><title>rayon_core::job::JobRef::execute (18 samples, 0.05%)</title><rect x="83.2739%" y="2469" width="0.0517%" height="15" fill="rgb(224,175,39)" fg:x="28981" fg:w="18"/><text x="83.5239%" y="2479.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (18 samples, 0.05%)</title><rect x="83.2739%" y="2453" width="0.0517%" height="15" fill="rgb(208,67,49)" fg:x="28981" fg:w="18"/><text x="83.5239%" y="2463.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (18 samples, 0.05%)</title><rect x="83.2739%" y="2437" width="0.0517%" height="15" fill="rgb(222,188,41)" fg:x="28981" fg:w="18"/><text x="83.5239%" y="2447.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (18 samples, 0.05%)</title><rect x="83.2739%" y="2421" width="0.0517%" height="15" fill="rgb(243,213,30)" fg:x="28981" fg:w="18"/><text x="83.5239%" y="2431.50"></text></g><g><title>std::panic::catch_unwind (18 samples, 0.05%)</title><rect x="83.2739%" y="2405" width="0.0517%" height="15" fill="rgb(253,100,45)" fg:x="28981" fg:w="18"/><text x="83.5239%" y="2415.50"></text></g><g><title>std::panicking::try (18 samples, 0.05%)</title><rect x="83.2739%" y="2389" width="0.0517%" height="15" fill="rgb(226,24,44)" fg:x="28981" fg:w="18"/><text x="83.5239%" y="2399.50"></text></g><g><title>std::panicking::try::do_call (18 samples, 0.05%)</title><rect x="83.2739%" y="2373" width="0.0517%" height="15" fill="rgb(215,41,24)" fg:x="28981" fg:w="18"/><text x="83.5239%" y="2383.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (18 samples, 0.05%)</title><rect x="83.2739%" y="2357" width="0.0517%" height="15" fill="rgb(254,53,33)" fg:x="28981" fg:w="18"/><text x="83.5239%" y="2367.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (18 samples, 0.05%)</title><rect x="83.2739%" y="2341" width="0.0517%" height="15" fill="rgb(242,103,10)" fg:x="28981" fg:w="18"/><text x="83.5239%" y="2351.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (18 samples, 0.05%)</title><rect x="83.2739%" y="2325" width="0.0517%" height="15" fill="rgb(246,29,21)" fg:x="28981" fg:w="18"/><text x="83.5239%" y="2335.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (18 samples, 0.05%)</title><rect x="83.2739%" y="2309" width="0.0517%" height="15" fill="rgb(251,154,1)" fg:x="28981" fg:w="18"/><text x="83.5239%" y="2319.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (18 samples, 0.05%)</title><rect x="83.2739%" y="2293" width="0.0517%" height="15" fill="rgb(254,212,26)" fg:x="28981" fg:w="18"/><text x="83.5239%" y="2303.50"></text></g><g><title>rayon_core::join::join_context (18 samples, 0.05%)</title><rect x="83.2739%" y="2277" width="0.0517%" height="15" fill="rgb(251,187,46)" fg:x="28981" fg:w="18"/><text x="83.5239%" y="2287.50"></text></g><g><title>rayon_core::registry::in_worker (18 samples, 0.05%)</title><rect x="83.2739%" y="2261" width="0.0517%" height="15" fill="rgb(224,208,14)" fg:x="28981" fg:w="18"/><text x="83.5239%" y="2271.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (18 samples, 0.05%)</title><rect x="83.2739%" y="2245" width="0.0517%" height="15" fill="rgb(222,176,26)" fg:x="28981" fg:w="18"/><text x="83.5239%" y="2255.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (7 samples, 0.02%)</title><rect x="83.3056%" y="2229" width="0.0201%" height="15" fill="rgb(241,219,52)" fg:x="28992" fg:w="7"/><text x="83.5556%" y="2239.50"></text></g><g><title>std::panic::catch_unwind (7 samples, 0.02%)</title><rect x="83.3056%" y="2213" width="0.0201%" height="15" fill="rgb(252,198,21)" fg:x="28992" fg:w="7"/><text x="83.5556%" y="2223.50"></text></g><g><title>std::panicking::try (7 samples, 0.02%)</title><rect x="83.3056%" y="2197" width="0.0201%" height="15" fill="rgb(244,196,23)" fg:x="28992" fg:w="7"/><text x="83.5556%" y="2207.50"></text></g><g><title>std::panicking::try::do_call (7 samples, 0.02%)</title><rect x="83.3056%" y="2181" width="0.0201%" height="15" fill="rgb(239,121,44)" fg:x="28992" fg:w="7"/><text x="83.5556%" y="2191.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (7 samples, 0.02%)</title><rect x="83.3056%" y="2165" width="0.0201%" height="15" fill="rgb(249,203,23)" fg:x="28992" fg:w="7"/><text x="83.5556%" y="2175.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (7 samples, 0.02%)</title><rect x="83.3056%" y="2149" width="0.0201%" height="15" fill="rgb(238,219,10)" fg:x="28992" fg:w="7"/><text x="83.5556%" y="2159.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (7 samples, 0.02%)</title><rect x="83.3056%" y="2133" width="0.0201%" height="15" fill="rgb(241,35,46)" fg:x="28992" fg:w="7"/><text x="83.5556%" y="2143.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (7 samples, 0.02%)</title><rect x="83.3056%" y="2117" width="0.0201%" height="15" fill="rgb(218,28,6)" fg:x="28992" fg:w="7"/><text x="83.5556%" y="2127.50"></text></g><g><title>rayon_core::join::join_context (7 samples, 0.02%)</title><rect x="83.3056%" y="2101" width="0.0201%" height="15" fill="rgb(233,151,50)" fg:x="28992" fg:w="7"/><text x="83.5556%" y="2111.50"></text></g><g><title>rayon_core::registry::in_worker (7 samples, 0.02%)</title><rect x="83.3056%" y="2085" width="0.0201%" height="15" fill="rgb(208,57,8)" fg:x="28992" fg:w="7"/><text x="83.5556%" y="2095.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (7 samples, 0.02%)</title><rect x="83.3056%" y="2069" width="0.0201%" height="15" fill="rgb(253,99,10)" fg:x="28992" fg:w="7"/><text x="83.5556%" y="2079.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (6 samples, 0.02%)</title><rect x="83.3084%" y="2053" width="0.0172%" height="15" fill="rgb(237,196,49)" fg:x="28993" fg:w="6"/><text x="83.5584%" y="2063.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.02%)</title><rect x="83.3084%" y="2037" width="0.0172%" height="15" fill="rgb(209,51,3)" fg:x="28993" fg:w="6"/><text x="83.5584%" y="2047.50"></text></g><g><title>std::panicking::try (6 samples, 0.02%)</title><rect x="83.3084%" y="2021" width="0.0172%" height="15" fill="rgb(238,129,10)" fg:x="28993" fg:w="6"/><text x="83.5584%" y="2031.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.02%)</title><rect x="83.3084%" y="2005" width="0.0172%" height="15" fill="rgb(246,201,16)" fg:x="28993" fg:w="6"/><text x="83.5584%" y="2015.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6 samples, 0.02%)</title><rect x="83.3084%" y="1989" width="0.0172%" height="15" fill="rgb(250,160,20)" fg:x="28993" fg:w="6"/><text x="83.5584%" y="1999.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (6 samples, 0.02%)</title><rect x="83.3084%" y="1973" width="0.0172%" height="15" fill="rgb(251,107,25)" fg:x="28993" fg:w="6"/><text x="83.5584%" y="1983.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (6 samples, 0.02%)</title><rect x="83.3084%" y="1957" width="0.0172%" height="15" fill="rgb(212,103,39)" fg:x="28993" fg:w="6"/><text x="83.5584%" y="1967.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (6 samples, 0.02%)</title><rect x="83.3084%" y="1941" width="0.0172%" height="15" fill="rgb(207,9,29)" fg:x="28993" fg:w="6"/><text x="83.5584%" y="1951.50"></text></g><g><title>rayon_core::join::join_context (6 samples, 0.02%)</title><rect x="83.3084%" y="1925" width="0.0172%" height="15" fill="rgb(227,84,3)" fg:x="28993" fg:w="6"/><text x="83.5584%" y="1935.50"></text></g><g><title>rayon_core::registry::in_worker (6 samples, 0.02%)</title><rect x="83.3084%" y="1909" width="0.0172%" height="15" fill="rgb(242,194,7)" fg:x="28993" fg:w="6"/><text x="83.5584%" y="1919.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (6 samples, 0.02%)</title><rect x="83.3084%" y="1893" width="0.0172%" height="15" fill="rgb(230,40,4)" fg:x="28993" fg:w="6"/><text x="83.5584%" y="1903.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (4 samples, 0.01%)</title><rect x="83.3142%" y="1877" width="0.0115%" height="15" fill="rgb(243,229,33)" fg:x="28995" fg:w="4"/><text x="83.5642%" y="1887.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.01%)</title><rect x="83.3142%" y="1861" width="0.0115%" height="15" fill="rgb(240,65,24)" fg:x="28995" fg:w="4"/><text x="83.5642%" y="1871.50"></text></g><g><title>std::panicking::try (4 samples, 0.01%)</title><rect x="83.3142%" y="1845" width="0.0115%" height="15" fill="rgb(212,28,20)" fg:x="28995" fg:w="4"/><text x="83.5642%" y="1855.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.01%)</title><rect x="83.3142%" y="1829" width="0.0115%" height="15" fill="rgb(209,72,3)" fg:x="28995" fg:w="4"/><text x="83.5642%" y="1839.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.01%)</title><rect x="83.3142%" y="1813" width="0.0115%" height="15" fill="rgb(238,170,36)" fg:x="28995" fg:w="4"/><text x="83.5642%" y="1823.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (4 samples, 0.01%)</title><rect x="83.3142%" y="1797" width="0.0115%" height="15" fill="rgb(236,19,38)" fg:x="28995" fg:w="4"/><text x="83.5642%" y="1807.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.01%)</title><rect x="83.3142%" y="1781" width="0.0115%" height="15" fill="rgb(230,67,43)" fg:x="28995" fg:w="4"/><text x="83.5642%" y="1791.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.01%)</title><rect x="83.3142%" y="1765" width="0.0115%" height="15" fill="rgb(227,14,36)" fg:x="28995" fg:w="4"/><text x="83.5642%" y="1775.50"></text></g><g><title>par_exec_20 (19 samples, 0.05%)</title><rect x="83.2739%" y="2789" width="0.0546%" height="15" fill="rgb(247,171,49)" fg:x="28981" fg:w="19"/><text x="83.5239%" y="2799.50"></text></g><g><title>__GI___clone3 (19 samples, 0.05%)</title><rect x="83.2739%" y="2773" width="0.0546%" height="15" fill="rgb(235,164,51)" fg:x="28981" fg:w="19"/><text x="83.5239%" y="2783.50"></text></g><g><title>start_thread (19 samples, 0.05%)</title><rect x="83.2739%" y="2757" width="0.0546%" height="15" fill="rgb(246,107,20)" fg:x="28981" fg:w="19"/><text x="83.5239%" y="2767.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (19 samples, 0.05%)</title><rect x="83.2739%" y="2741" width="0.0546%" height="15" fill="rgb(226,88,18)" fg:x="28981" fg:w="19"/><text x="83.5239%" y="2751.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (19 samples, 0.05%)</title><rect x="83.2739%" y="2725" width="0.0546%" height="15" fill="rgb(235,136,9)" fg:x="28981" fg:w="19"/><text x="83.5239%" y="2735.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (19 samples, 0.05%)</title><rect x="83.2739%" y="2709" width="0.0546%" height="15" fill="rgb(209,3,34)" fg:x="28981" fg:w="19"/><text x="83.5239%" y="2719.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (19 samples, 0.05%)</title><rect x="83.2739%" y="2693" width="0.0546%" height="15" fill="rgb(213,38,19)" fg:x="28981" fg:w="19"/><text x="83.5239%" y="2703.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (19 samples, 0.05%)</title><rect x="83.2739%" y="2677" width="0.0546%" height="15" fill="rgb(254,24,24)" fg:x="28981" fg:w="19"/><text x="83.5239%" y="2687.50"></text></g><g><title>std::panic::catch_unwind (19 samples, 0.05%)</title><rect x="83.2739%" y="2661" width="0.0546%" height="15" fill="rgb(219,122,42)" fg:x="28981" fg:w="19"/><text x="83.5239%" y="2671.50"></text></g><g><title>std::panicking::try (19 samples, 0.05%)</title><rect x="83.2739%" y="2645" width="0.0546%" height="15" fill="rgb(205,128,31)" fg:x="28981" fg:w="19"/><text x="83.5239%" y="2655.50"></text></g><g><title>std::panicking::try::do_call (19 samples, 0.05%)</title><rect x="83.2739%" y="2629" width="0.0546%" height="15" fill="rgb(212,142,0)" fg:x="28981" fg:w="19"/><text x="83.5239%" y="2639.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (19 samples, 0.05%)</title><rect x="83.2739%" y="2613" width="0.0546%" height="15" fill="rgb(211,25,35)" fg:x="28981" fg:w="19"/><text x="83.5239%" y="2623.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (19 samples, 0.05%)</title><rect x="83.2739%" y="2597" width="0.0546%" height="15" fill="rgb(220,150,53)" fg:x="28981" fg:w="19"/><text x="83.5239%" y="2607.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (19 samples, 0.05%)</title><rect x="83.2739%" y="2581" width="0.0546%" height="15" fill="rgb(220,30,24)" fg:x="28981" fg:w="19"/><text x="83.5239%" y="2591.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (19 samples, 0.05%)</title><rect x="83.2739%" y="2565" width="0.0546%" height="15" fill="rgb(218,86,23)" fg:x="28981" fg:w="19"/><text x="83.5239%" y="2575.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (19 samples, 0.05%)</title><rect x="83.2739%" y="2549" width="0.0546%" height="15" fill="rgb(206,62,27)" fg:x="28981" fg:w="19"/><text x="83.5239%" y="2559.50"></text></g><g><title>rayon_core::registry::main_loop (19 samples, 0.05%)</title><rect x="83.2739%" y="2533" width="0.0546%" height="15" fill="rgb(249,174,0)" fg:x="28981" fg:w="19"/><text x="83.5239%" y="2543.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (19 samples, 0.05%)</title><rect x="83.2739%" y="2517" width="0.0546%" height="15" fill="rgb(246,67,27)" fg:x="28981" fg:w="19"/><text x="83.5239%" y="2527.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (19 samples, 0.05%)</title><rect x="83.2739%" y="2501" width="0.0546%" height="15" fill="rgb(250,195,30)" fg:x="28981" fg:w="19"/><text x="83.5239%" y="2511.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (5 samples, 0.01%)</title><rect x="83.3285%" y="2229" width="0.0144%" height="15" fill="rgb(251,171,50)" fg:x="29000" fg:w="5"/><text x="83.5785%" y="2239.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (5 samples, 0.01%)</title><rect x="83.3285%" y="2213" width="0.0144%" height="15" fill="rgb(236,196,10)" fg:x="29000" fg:w="5"/><text x="83.5785%" y="2223.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (5 samples, 0.01%)</title><rect x="83.3285%" y="2197" width="0.0144%" height="15" fill="rgb(249,228,52)" fg:x="29000" fg:w="5"/><text x="83.5785%" y="2207.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (5 samples, 0.01%)</title><rect x="83.3285%" y="2181" width="0.0144%" height="15" fill="rgb(219,60,51)" fg:x="29000" fg:w="5"/><text x="83.5785%" y="2191.50"></text></g><g><title>rayon_core::join::join_context (5 samples, 0.01%)</title><rect x="83.3285%" y="2165" width="0.0144%" height="15" fill="rgb(240,198,24)" fg:x="29000" fg:w="5"/><text x="83.5785%" y="2175.50"></text></g><g><title>rayon_core::registry::in_worker (5 samples, 0.01%)</title><rect x="83.3285%" y="2149" width="0.0144%" height="15" fill="rgb(240,192,40)" fg:x="29000" fg:w="5"/><text x="83.5785%" y="2159.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5 samples, 0.01%)</title><rect x="83.3285%" y="2133" width="0.0144%" height="15" fill="rgb(219,118,5)" fg:x="29000" fg:w="5"/><text x="83.5785%" y="2143.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (6 samples, 0.02%)</title><rect x="83.3429%" y="2229" width="0.0172%" height="15" fill="rgb(205,202,34)" fg:x="29005" fg:w="6"/><text x="83.5929%" y="2239.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (6 samples, 0.02%)</title><rect x="83.3429%" y="2213" width="0.0172%" height="15" fill="rgb(234,153,26)" fg:x="29005" fg:w="6"/><text x="83.5929%" y="2223.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (6 samples, 0.02%)</title><rect x="83.3429%" y="2197" width="0.0172%" height="15" fill="rgb(229,26,29)" fg:x="29005" fg:w="6"/><text x="83.5929%" y="2207.50"></text></g><g><title>rayon_core::job::JobRef::execute (6 samples, 0.02%)</title><rect x="83.3429%" y="2181" width="0.0172%" height="15" fill="rgb(237,115,21)" fg:x="29005" fg:w="6"/><text x="83.5929%" y="2191.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (6 samples, 0.02%)</title><rect x="83.3429%" y="2165" width="0.0172%" height="15" fill="rgb(252,144,15)" fg:x="29005" fg:w="6"/><text x="83.5929%" y="2175.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (6 samples, 0.02%)</title><rect x="83.3429%" y="2149" width="0.0172%" height="15" fill="rgb(232,26,13)" fg:x="29005" fg:w="6"/><text x="83.5929%" y="2159.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (6 samples, 0.02%)</title><rect x="83.3429%" y="2133" width="0.0172%" height="15" fill="rgb(206,44,19)" fg:x="29005" fg:w="6"/><text x="83.5929%" y="2143.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.02%)</title><rect x="83.3429%" y="2117" width="0.0172%" height="15" fill="rgb(249,159,2)" fg:x="29005" fg:w="6"/><text x="83.5929%" y="2127.50"></text></g><g><title>std::panicking::try (6 samples, 0.02%)</title><rect x="83.3429%" y="2101" width="0.0172%" height="15" fill="rgb(231,5,32)" fg:x="29005" fg:w="6"/><text x="83.5929%" y="2111.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.02%)</title><rect x="83.3429%" y="2085" width="0.0172%" height="15" fill="rgb(249,210,18)" fg:x="29005" fg:w="6"/><text x="83.5929%" y="2095.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6 samples, 0.02%)</title><rect x="83.3429%" y="2069" width="0.0172%" height="15" fill="rgb(215,223,36)" fg:x="29005" fg:w="6"/><text x="83.5929%" y="2079.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (6 samples, 0.02%)</title><rect x="83.3429%" y="2053" width="0.0172%" height="15" fill="rgb(245,185,20)" fg:x="29005" fg:w="6"/><text x="83.5929%" y="2063.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (6 samples, 0.02%)</title><rect x="83.3429%" y="2037" width="0.0172%" height="15" fill="rgb(206,224,11)" fg:x="29005" fg:w="6"/><text x="83.5929%" y="2047.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (6 samples, 0.02%)</title><rect x="83.3429%" y="2021" width="0.0172%" height="15" fill="rgb(248,73,42)" fg:x="29005" fg:w="6"/><text x="83.5929%" y="2031.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (6 samples, 0.02%)</title><rect x="83.3429%" y="2005" width="0.0172%" height="15" fill="rgb(219,149,31)" fg:x="29005" fg:w="6"/><text x="83.5929%" y="2015.50"></text></g><g><title>rayon_core::join::join_context (6 samples, 0.02%)</title><rect x="83.3429%" y="1989" width="0.0172%" height="15" fill="rgb(243,104,17)" fg:x="29005" fg:w="6"/><text x="83.5929%" y="1999.50"></text></g><g><title>rayon_core::registry::in_worker (6 samples, 0.02%)</title><rect x="83.3429%" y="1973" width="0.0172%" height="15" fill="rgb(244,117,33)" fg:x="29005" fg:w="6"/><text x="83.5929%" y="1983.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (6 samples, 0.02%)</title><rect x="83.3429%" y="1957" width="0.0172%" height="15" fill="rgb(251,25,47)" fg:x="29005" fg:w="6"/><text x="83.5929%" y="1967.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (4 samples, 0.01%)</title><rect x="83.3602%" y="2053" width="0.0115%" height="15" fill="rgb(249,70,13)" fg:x="29011" fg:w="4"/><text x="83.6102%" y="2063.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (4 samples, 0.01%)</title><rect x="83.3602%" y="2037" width="0.0115%" height="15" fill="rgb(217,133,18)" fg:x="29011" fg:w="4"/><text x="83.6102%" y="2047.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.01%)</title><rect x="83.3602%" y="2021" width="0.0115%" height="15" fill="rgb(248,97,28)" fg:x="29011" fg:w="4"/><text x="83.6102%" y="2031.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.01%)</title><rect x="83.3602%" y="2005" width="0.0115%" height="15" fill="rgb(237,193,4)" fg:x="29011" fg:w="4"/><text x="83.6102%" y="2015.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.01%)</title><rect x="83.3602%" y="1989" width="0.0115%" height="15" fill="rgb(247,198,45)" fg:x="29011" fg:w="4"/><text x="83.6102%" y="1999.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.01%)</title><rect x="83.3602%" y="1973" width="0.0115%" height="15" fill="rgb(245,2,20)" fg:x="29011" fg:w="4"/><text x="83.6102%" y="1983.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.01%)</title><rect x="83.3602%" y="1957" width="0.0115%" height="15" fill="rgb(210,71,36)" fg:x="29011" fg:w="4"/><text x="83.6102%" y="1967.50"></text></g><g><title>par_exec_21 (21 samples, 0.06%)</title><rect x="83.3285%" y="2789" width="0.0603%" height="15" fill="rgb(238,114,30)" fg:x="29000" fg:w="21"/><text x="83.5785%" y="2799.50"></text></g><g><title>__GI___clone3 (21 samples, 0.06%)</title><rect x="83.3285%" y="2773" width="0.0603%" height="15" fill="rgb(241,200,2)" fg:x="29000" fg:w="21"/><text x="83.5785%" y="2783.50"></text></g><g><title>start_thread (21 samples, 0.06%)</title><rect x="83.3285%" y="2757" width="0.0603%" height="15" fill="rgb(232,106,18)" fg:x="29000" fg:w="21"/><text x="83.5785%" y="2767.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (21 samples, 0.06%)</title><rect x="83.3285%" y="2741" width="0.0603%" height="15" fill="rgb(211,141,18)" fg:x="29000" fg:w="21"/><text x="83.5785%" y="2751.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (21 samples, 0.06%)</title><rect x="83.3285%" y="2725" width="0.0603%" height="15" fill="rgb(224,9,9)" fg:x="29000" fg:w="21"/><text x="83.5785%" y="2735.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (21 samples, 0.06%)</title><rect x="83.3285%" y="2709" width="0.0603%" height="15" fill="rgb(249,137,46)" fg:x="29000" fg:w="21"/><text x="83.5785%" y="2719.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (21 samples, 0.06%)</title><rect x="83.3285%" y="2693" width="0.0603%" height="15" fill="rgb(236,44,45)" fg:x="29000" fg:w="21"/><text x="83.5785%" y="2703.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (21 samples, 0.06%)</title><rect x="83.3285%" y="2677" width="0.0603%" height="15" fill="rgb(205,68,40)" fg:x="29000" fg:w="21"/><text x="83.5785%" y="2687.50"></text></g><g><title>std::panic::catch_unwind (21 samples, 0.06%)</title><rect x="83.3285%" y="2661" width="0.0603%" height="15" fill="rgb(214,198,49)" fg:x="29000" fg:w="21"/><text x="83.5785%" y="2671.50"></text></g><g><title>std::panicking::try (21 samples, 0.06%)</title><rect x="83.3285%" y="2645" width="0.0603%" height="15" fill="rgb(226,140,45)" fg:x="29000" fg:w="21"/><text x="83.5785%" y="2655.50"></text></g><g><title>std::panicking::try::do_call (21 samples, 0.06%)</title><rect x="83.3285%" y="2629" width="0.0603%" height="15" fill="rgb(209,109,20)" fg:x="29000" fg:w="21"/><text x="83.5785%" y="2639.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (21 samples, 0.06%)</title><rect x="83.3285%" y="2613" width="0.0603%" height="15" fill="rgb(217,33,46)" fg:x="29000" fg:w="21"/><text x="83.5785%" y="2623.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (21 samples, 0.06%)</title><rect x="83.3285%" y="2597" width="0.0603%" height="15" fill="rgb(232,150,33)" fg:x="29000" fg:w="21"/><text x="83.5785%" y="2607.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (21 samples, 0.06%)</title><rect x="83.3285%" y="2581" width="0.0603%" height="15" fill="rgb(233,76,25)" fg:x="29000" fg:w="21"/><text x="83.5785%" y="2591.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (21 samples, 0.06%)</title><rect x="83.3285%" y="2565" width="0.0603%" height="15" fill="rgb(254,219,23)" fg:x="29000" fg:w="21"/><text x="83.5785%" y="2575.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (21 samples, 0.06%)</title><rect x="83.3285%" y="2549" width="0.0603%" height="15" fill="rgb(233,108,4)" fg:x="29000" fg:w="21"/><text x="83.5785%" y="2559.50"></text></g><g><title>rayon_core::registry::main_loop (21 samples, 0.06%)</title><rect x="83.3285%" y="2533" width="0.0603%" height="15" fill="rgb(229,98,6)" fg:x="29000" fg:w="21"/><text x="83.5785%" y="2543.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (21 samples, 0.06%)</title><rect x="83.3285%" y="2517" width="0.0603%" height="15" fill="rgb(217,40,27)" fg:x="29000" fg:w="21"/><text x="83.5785%" y="2527.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (21 samples, 0.06%)</title><rect x="83.3285%" y="2501" width="0.0603%" height="15" fill="rgb(221,35,43)" fg:x="29000" fg:w="21"/><text x="83.5785%" y="2511.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (21 samples, 0.06%)</title><rect x="83.3285%" y="2485" width="0.0603%" height="15" fill="rgb(212,107,11)" fg:x="29000" fg:w="21"/><text x="83.5785%" y="2495.50"></text></g><g><title>rayon_core::job::JobRef::execute (21 samples, 0.06%)</title><rect x="83.3285%" y="2469" width="0.0603%" height="15" fill="rgb(245,42,44)" fg:x="29000" fg:w="21"/><text x="83.5785%" y="2479.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (21 samples, 0.06%)</title><rect x="83.3285%" y="2453" width="0.0603%" height="15" fill="rgb(209,31,12)" fg:x="29000" fg:w="21"/><text x="83.5785%" y="2463.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (21 samples, 0.06%)</title><rect x="83.3285%" y="2437" width="0.0603%" height="15" fill="rgb(210,228,54)" fg:x="29000" fg:w="21"/><text x="83.5785%" y="2447.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (21 samples, 0.06%)</title><rect x="83.3285%" y="2421" width="0.0603%" height="15" fill="rgb(241,19,33)" fg:x="29000" fg:w="21"/><text x="83.5785%" y="2431.50"></text></g><g><title>std::panic::catch_unwind (21 samples, 0.06%)</title><rect x="83.3285%" y="2405" width="0.0603%" height="15" fill="rgb(229,51,27)" fg:x="29000" fg:w="21"/><text x="83.5785%" y="2415.50"></text></g><g><title>std::panicking::try (21 samples, 0.06%)</title><rect x="83.3285%" y="2389" width="0.0603%" height="15" fill="rgb(214,167,49)" fg:x="29000" fg:w="21"/><text x="83.5785%" y="2399.50"></text></g><g><title>std::panicking::try::do_call (21 samples, 0.06%)</title><rect x="83.3285%" y="2373" width="0.0603%" height="15" fill="rgb(248,140,47)" fg:x="29000" fg:w="21"/><text x="83.5785%" y="2383.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (21 samples, 0.06%)</title><rect x="83.3285%" y="2357" width="0.0603%" height="15" fill="rgb(228,6,51)" fg:x="29000" fg:w="21"/><text x="83.5785%" y="2367.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (21 samples, 0.06%)</title><rect x="83.3285%" y="2341" width="0.0603%" height="15" fill="rgb(242,44,53)" fg:x="29000" fg:w="21"/><text x="83.5785%" y="2351.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (21 samples, 0.06%)</title><rect x="83.3285%" y="2325" width="0.0603%" height="15" fill="rgb(249,90,50)" fg:x="29000" fg:w="21"/><text x="83.5785%" y="2335.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (21 samples, 0.06%)</title><rect x="83.3285%" y="2309" width="0.0603%" height="15" fill="rgb(222,84,19)" fg:x="29000" fg:w="21"/><text x="83.5785%" y="2319.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (21 samples, 0.06%)</title><rect x="83.3285%" y="2293" width="0.0603%" height="15" fill="rgb(214,140,12)" fg:x="29000" fg:w="21"/><text x="83.5785%" y="2303.50"></text></g><g><title>rayon_core::join::join_context (21 samples, 0.06%)</title><rect x="83.3285%" y="2277" width="0.0603%" height="15" fill="rgb(210,20,43)" fg:x="29000" fg:w="21"/><text x="83.5785%" y="2287.50"></text></g><g><title>rayon_core::registry::in_worker (21 samples, 0.06%)</title><rect x="83.3285%" y="2261" width="0.0603%" height="15" fill="rgb(243,1,40)" fg:x="29000" fg:w="21"/><text x="83.5785%" y="2271.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (21 samples, 0.06%)</title><rect x="83.3285%" y="2245" width="0.0603%" height="15" fill="rgb(224,102,26)" fg:x="29000" fg:w="21"/><text x="83.5785%" y="2255.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (10 samples, 0.03%)</title><rect x="83.3602%" y="2229" width="0.0287%" height="15" fill="rgb(221,179,1)" fg:x="29011" fg:w="10"/><text x="83.6102%" y="2239.50"></text></g><g><title>std::panic::catch_unwind (10 samples, 0.03%)</title><rect x="83.3602%" y="2213" width="0.0287%" height="15" fill="rgb(216,209,47)" fg:x="29011" fg:w="10"/><text x="83.6102%" y="2223.50"></text></g><g><title>std::panicking::try (10 samples, 0.03%)</title><rect x="83.3602%" y="2197" width="0.0287%" height="15" fill="rgb(251,135,9)" fg:x="29011" fg:w="10"/><text x="83.6102%" y="2207.50"></text></g><g><title>std::panicking::try::do_call (10 samples, 0.03%)</title><rect x="83.3602%" y="2181" width="0.0287%" height="15" fill="rgb(242,9,36)" fg:x="29011" fg:w="10"/><text x="83.6102%" y="2191.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (10 samples, 0.03%)</title><rect x="83.3602%" y="2165" width="0.0287%" height="15" fill="rgb(249,60,37)" fg:x="29011" fg:w="10"/><text x="83.6102%" y="2175.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (10 samples, 0.03%)</title><rect x="83.3602%" y="2149" width="0.0287%" height="15" fill="rgb(230,66,45)" fg:x="29011" fg:w="10"/><text x="83.6102%" y="2159.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (10 samples, 0.03%)</title><rect x="83.3602%" y="2133" width="0.0287%" height="15" fill="rgb(216,1,47)" fg:x="29011" fg:w="10"/><text x="83.6102%" y="2143.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.03%)</title><rect x="83.3602%" y="2117" width="0.0287%" height="15" fill="rgb(235,8,23)" fg:x="29011" fg:w="10"/><text x="83.6102%" y="2127.50"></text></g><g><title>rayon_core::join::join_context (10 samples, 0.03%)</title><rect x="83.3602%" y="2101" width="0.0287%" height="15" fill="rgb(225,136,11)" fg:x="29011" fg:w="10"/><text x="83.6102%" y="2111.50"></text></g><g><title>rayon_core::registry::in_worker (10 samples, 0.03%)</title><rect x="83.3602%" y="2085" width="0.0287%" height="15" fill="rgb(228,63,44)" fg:x="29011" fg:w="10"/><text x="83.6102%" y="2095.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (10 samples, 0.03%)</title><rect x="83.3602%" y="2069" width="0.0287%" height="15" fill="rgb(240,43,52)" fg:x="29011" fg:w="10"/><text x="83.6102%" y="2079.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (6 samples, 0.02%)</title><rect x="83.3716%" y="2053" width="0.0172%" height="15" fill="rgb(217,167,36)" fg:x="29015" fg:w="6"/><text x="83.6216%" y="2063.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.02%)</title><rect x="83.3716%" y="2037" width="0.0172%" height="15" fill="rgb(250,19,6)" fg:x="29015" fg:w="6"/><text x="83.6216%" y="2047.50"></text></g><g><title>std::panicking::try (6 samples, 0.02%)</title><rect x="83.3716%" y="2021" width="0.0172%" height="15" fill="rgb(236,60,51)" fg:x="29015" fg:w="6"/><text x="83.6216%" y="2031.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.02%)</title><rect x="83.3716%" y="2005" width="0.0172%" height="15" fill="rgb(222,217,20)" fg:x="29015" fg:w="6"/><text x="83.6216%" y="2015.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6 samples, 0.02%)</title><rect x="83.3716%" y="1989" width="0.0172%" height="15" fill="rgb(242,65,52)" fg:x="29015" fg:w="6"/><text x="83.6216%" y="1999.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (6 samples, 0.02%)</title><rect x="83.3716%" y="1973" width="0.0172%" height="15" fill="rgb(217,5,41)" fg:x="29015" fg:w="6"/><text x="83.6216%" y="1983.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (6 samples, 0.02%)</title><rect x="83.3716%" y="1957" width="0.0172%" height="15" fill="rgb(223,208,53)" fg:x="29015" fg:w="6"/><text x="83.6216%" y="1967.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (6 samples, 0.02%)</title><rect x="83.3716%" y="1941" width="0.0172%" height="15" fill="rgb(221,104,30)" fg:x="29015" fg:w="6"/><text x="83.6216%" y="1951.50"></text></g><g><title>rayon_core::join::join_context (5 samples, 0.01%)</title><rect x="83.3745%" y="1925" width="0.0144%" height="15" fill="rgb(230,210,42)" fg:x="29016" fg:w="5"/><text x="83.6245%" y="1935.50"></text></g><g><title>rayon_core::registry::in_worker (5 samples, 0.01%)</title><rect x="83.3745%" y="1909" width="0.0144%" height="15" fill="rgb(206,205,27)" fg:x="29016" fg:w="5"/><text x="83.6245%" y="1919.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5 samples, 0.01%)</title><rect x="83.3745%" y="1893" width="0.0144%" height="15" fill="rgb(233,114,38)" fg:x="29016" fg:w="5"/><text x="83.6245%" y="1903.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (4 samples, 0.01%)</title><rect x="83.3889%" y="2229" width="0.0115%" height="15" fill="rgb(216,174,36)" fg:x="29021" fg:w="4"/><text x="83.6389%" y="2239.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (4 samples, 0.01%)</title><rect x="83.3889%" y="2213" width="0.0115%" height="15" fill="rgb(211,30,9)" fg:x="29021" fg:w="4"/><text x="83.6389%" y="2223.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.01%)</title><rect x="83.3889%" y="2197" width="0.0115%" height="15" fill="rgb(216,8,21)" fg:x="29021" fg:w="4"/><text x="83.6389%" y="2207.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.01%)</title><rect x="83.3889%" y="2181" width="0.0115%" height="15" fill="rgb(237,209,39)" fg:x="29021" fg:w="4"/><text x="83.6389%" y="2191.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.01%)</title><rect x="83.3889%" y="2165" width="0.0115%" height="15" fill="rgb(235,111,47)" fg:x="29021" fg:w="4"/><text x="83.6389%" y="2175.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.01%)</title><rect x="83.3889%" y="2149" width="0.0115%" height="15" fill="rgb(216,139,9)" fg:x="29021" fg:w="4"/><text x="83.6389%" y="2159.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.01%)</title><rect x="83.3889%" y="2133" width="0.0115%" height="15" fill="rgb(248,185,4)" fg:x="29021" fg:w="4"/><text x="83.6389%" y="2143.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (5 samples, 0.01%)</title><rect x="83.4090%" y="2053" width="0.0144%" height="15" fill="rgb(239,185,25)" fg:x="29028" fg:w="5"/><text x="83.6590%" y="2063.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (5 samples, 0.01%)</title><rect x="83.4090%" y="2037" width="0.0144%" height="15" fill="rgb(233,207,8)" fg:x="29028" fg:w="5"/><text x="83.6590%" y="2047.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (5 samples, 0.01%)</title><rect x="83.4090%" y="2021" width="0.0144%" height="15" fill="rgb(249,220,24)" fg:x="29028" fg:w="5"/><text x="83.6590%" y="2031.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (5 samples, 0.01%)</title><rect x="83.4090%" y="2005" width="0.0144%" height="15" fill="rgb(221,50,14)" fg:x="29028" fg:w="5"/><text x="83.6590%" y="2015.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.01%)</title><rect x="83.4119%" y="1989" width="0.0115%" height="15" fill="rgb(227,79,42)" fg:x="29029" fg:w="4"/><text x="83.6619%" y="1999.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.01%)</title><rect x="83.4119%" y="1973" width="0.0115%" height="15" fill="rgb(228,218,49)" fg:x="29029" fg:w="4"/><text x="83.6619%" y="1983.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.01%)</title><rect x="83.4119%" y="1957" width="0.0115%" height="15" fill="rgb(249,18,15)" fg:x="29029" fg:w="4"/><text x="83.6619%" y="1967.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (4 samples, 0.01%)</title><rect x="83.4234%" y="1765" width="0.0115%" height="15" fill="rgb(212,84,27)" fg:x="29033" fg:w="4"/><text x="83.6734%" y="1775.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (4 samples, 0.01%)</title><rect x="83.4234%" y="1749" width="0.0115%" height="15" fill="rgb(207,83,24)" fg:x="29033" fg:w="4"/><text x="83.6734%" y="1759.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.01%)</title><rect x="83.4234%" y="1733" width="0.0115%" height="15" fill="rgb(219,61,7)" fg:x="29033" fg:w="4"/><text x="83.6734%" y="1743.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.01%)</title><rect x="83.4234%" y="1717" width="0.0115%" height="15" fill="rgb(211,43,29)" fg:x="29033" fg:w="4"/><text x="83.6734%" y="1727.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.01%)</title><rect x="83.4234%" y="1701" width="0.0115%" height="15" fill="rgb(243,15,23)" fg:x="29033" fg:w="4"/><text x="83.6734%" y="1711.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.01%)</title><rect x="83.4234%" y="1685" width="0.0115%" height="15" fill="rgb(217,52,28)" fg:x="29033" fg:w="4"/><text x="83.6734%" y="1695.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.01%)</title><rect x="83.4234%" y="1669" width="0.0115%" height="15" fill="rgb(210,35,6)" fg:x="29033" fg:w="4"/><text x="83.6734%" y="1679.50"></text></g><g><title>par_exec_22 (18 samples, 0.05%)</title><rect x="83.3889%" y="2789" width="0.0517%" height="15" fill="rgb(237,187,28)" fg:x="29021" fg:w="18"/><text x="83.6389%" y="2799.50"></text></g><g><title>__GI___clone3 (18 samples, 0.05%)</title><rect x="83.3889%" y="2773" width="0.0517%" height="15" fill="rgb(231,136,24)" fg:x="29021" fg:w="18"/><text x="83.6389%" y="2783.50"></text></g><g><title>start_thread (18 samples, 0.05%)</title><rect x="83.3889%" y="2757" width="0.0517%" height="15" fill="rgb(205,176,52)" fg:x="29021" fg:w="18"/><text x="83.6389%" y="2767.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (18 samples, 0.05%)</title><rect x="83.3889%" y="2741" width="0.0517%" height="15" fill="rgb(218,65,12)" fg:x="29021" fg:w="18"/><text x="83.6389%" y="2751.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (18 samples, 0.05%)</title><rect x="83.3889%" y="2725" width="0.0517%" height="15" fill="rgb(234,101,21)" fg:x="29021" fg:w="18"/><text x="83.6389%" y="2735.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (18 samples, 0.05%)</title><rect x="83.3889%" y="2709" width="0.0517%" height="15" fill="rgb(206,13,20)" fg:x="29021" fg:w="18"/><text x="83.6389%" y="2719.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (18 samples, 0.05%)</title><rect x="83.3889%" y="2693" width="0.0517%" height="15" fill="rgb(236,89,44)" fg:x="29021" fg:w="18"/><text x="83.6389%" y="2703.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (18 samples, 0.05%)</title><rect x="83.3889%" y="2677" width="0.0517%" height="15" fill="rgb(225,52,17)" fg:x="29021" fg:w="18"/><text x="83.6389%" y="2687.50"></text></g><g><title>std::panic::catch_unwind (18 samples, 0.05%)</title><rect x="83.3889%" y="2661" width="0.0517%" height="15" fill="rgb(214,27,25)" fg:x="29021" fg:w="18"/><text x="83.6389%" y="2671.50"></text></g><g><title>std::panicking::try (18 samples, 0.05%)</title><rect x="83.3889%" y="2645" width="0.0517%" height="15" fill="rgb(240,141,35)" fg:x="29021" fg:w="18"/><text x="83.6389%" y="2655.50"></text></g><g><title>std::panicking::try::do_call (18 samples, 0.05%)</title><rect x="83.3889%" y="2629" width="0.0517%" height="15" fill="rgb(216,126,3)" fg:x="29021" fg:w="18"/><text x="83.6389%" y="2639.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (18 samples, 0.05%)</title><rect x="83.3889%" y="2613" width="0.0517%" height="15" fill="rgb(249,196,23)" fg:x="29021" fg:w="18"/><text x="83.6389%" y="2623.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (18 samples, 0.05%)</title><rect x="83.3889%" y="2597" width="0.0517%" height="15" fill="rgb(215,185,43)" fg:x="29021" fg:w="18"/><text x="83.6389%" y="2607.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (18 samples, 0.05%)</title><rect x="83.3889%" y="2581" width="0.0517%" height="15" fill="rgb(208,194,36)" fg:x="29021" fg:w="18"/><text x="83.6389%" y="2591.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (18 samples, 0.05%)</title><rect x="83.3889%" y="2565" width="0.0517%" height="15" fill="rgb(245,182,12)" fg:x="29021" fg:w="18"/><text x="83.6389%" y="2575.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (18 samples, 0.05%)</title><rect x="83.3889%" y="2549" width="0.0517%" height="15" fill="rgb(244,222,52)" fg:x="29021" fg:w="18"/><text x="83.6389%" y="2559.50"></text></g><g><title>rayon_core::registry::main_loop (18 samples, 0.05%)</title><rect x="83.3889%" y="2533" width="0.0517%" height="15" fill="rgb(236,222,51)" fg:x="29021" fg:w="18"/><text x="83.6389%" y="2543.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (18 samples, 0.05%)</title><rect x="83.3889%" y="2517" width="0.0517%" height="15" fill="rgb(254,71,22)" fg:x="29021" fg:w="18"/><text x="83.6389%" y="2527.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (18 samples, 0.05%)</title><rect x="83.3889%" y="2501" width="0.0517%" height="15" fill="rgb(250,104,15)" fg:x="29021" fg:w="18"/><text x="83.6389%" y="2511.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (18 samples, 0.05%)</title><rect x="83.3889%" y="2485" width="0.0517%" height="15" fill="rgb(229,223,46)" fg:x="29021" fg:w="18"/><text x="83.6389%" y="2495.50"></text></g><g><title>rayon_core::job::JobRef::execute (18 samples, 0.05%)</title><rect x="83.3889%" y="2469" width="0.0517%" height="15" fill="rgb(209,129,18)" fg:x="29021" fg:w="18"/><text x="83.6389%" y="2479.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (18 samples, 0.05%)</title><rect x="83.3889%" y="2453" width="0.0517%" height="15" fill="rgb(224,160,1)" fg:x="29021" fg:w="18"/><text x="83.6389%" y="2463.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (18 samples, 0.05%)</title><rect x="83.3889%" y="2437" width="0.0517%" height="15" fill="rgb(237,112,21)" fg:x="29021" fg:w="18"/><text x="83.6389%" y="2447.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (18 samples, 0.05%)</title><rect x="83.3889%" y="2421" width="0.0517%" height="15" fill="rgb(215,198,53)" fg:x="29021" fg:w="18"/><text x="83.6389%" y="2431.50"></text></g><g><title>std::panic::catch_unwind (18 samples, 0.05%)</title><rect x="83.3889%" y="2405" width="0.0517%" height="15" fill="rgb(218,227,35)" fg:x="29021" fg:w="18"/><text x="83.6389%" y="2415.50"></text></g><g><title>std::panicking::try (18 samples, 0.05%)</title><rect x="83.3889%" y="2389" width="0.0517%" height="15" fill="rgb(232,121,22)" fg:x="29021" fg:w="18"/><text x="83.6389%" y="2399.50"></text></g><g><title>std::panicking::try::do_call (18 samples, 0.05%)</title><rect x="83.3889%" y="2373" width="0.0517%" height="15" fill="rgb(235,52,54)" fg:x="29021" fg:w="18"/><text x="83.6389%" y="2383.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (18 samples, 0.05%)</title><rect x="83.3889%" y="2357" width="0.0517%" height="15" fill="rgb(219,21,44)" fg:x="29021" fg:w="18"/><text x="83.6389%" y="2367.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (18 samples, 0.05%)</title><rect x="83.3889%" y="2341" width="0.0517%" height="15" fill="rgb(221,51,43)" fg:x="29021" fg:w="18"/><text x="83.6389%" y="2351.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (18 samples, 0.05%)</title><rect x="83.3889%" y="2325" width="0.0517%" height="15" fill="rgb(225,77,42)" fg:x="29021" fg:w="18"/><text x="83.6389%" y="2335.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (18 samples, 0.05%)</title><rect x="83.3889%" y="2309" width="0.0517%" height="15" fill="rgb(214,117,53)" fg:x="29021" fg:w="18"/><text x="83.6389%" y="2319.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (18 samples, 0.05%)</title><rect x="83.3889%" y="2293" width="0.0517%" height="15" fill="rgb(218,227,27)" fg:x="29021" fg:w="18"/><text x="83.6389%" y="2303.50"></text></g><g><title>rayon_core::join::join_context (18 samples, 0.05%)</title><rect x="83.3889%" y="2277" width="0.0517%" height="15" fill="rgb(223,214,36)" fg:x="29021" fg:w="18"/><text x="83.6389%" y="2287.50"></text></g><g><title>rayon_core::registry::in_worker (18 samples, 0.05%)</title><rect x="83.3889%" y="2261" width="0.0517%" height="15" fill="rgb(235,21,7)" fg:x="29021" fg:w="18"/><text x="83.6389%" y="2271.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (18 samples, 0.05%)</title><rect x="83.3889%" y="2245" width="0.0517%" height="15" fill="rgb(244,216,4)" fg:x="29021" fg:w="18"/><text x="83.6389%" y="2255.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (12 samples, 0.03%)</title><rect x="83.4061%" y="2229" width="0.0345%" height="15" fill="rgb(249,197,24)" fg:x="29027" fg:w="12"/><text x="83.6561%" y="2239.50"></text></g><g><title>std::panic::catch_unwind (12 samples, 0.03%)</title><rect x="83.4061%" y="2213" width="0.0345%" height="15" fill="rgb(222,169,49)" fg:x="29027" fg:w="12"/><text x="83.6561%" y="2223.50"></text></g><g><title>std::panicking::try (12 samples, 0.03%)</title><rect x="83.4061%" y="2197" width="0.0345%" height="15" fill="rgb(207,137,33)" fg:x="29027" fg:w="12"/><text x="83.6561%" y="2207.50"></text></g><g><title>std::panicking::try::do_call (12 samples, 0.03%)</title><rect x="83.4061%" y="2181" width="0.0345%" height="15" fill="rgb(219,180,40)" fg:x="29027" fg:w="12"/><text x="83.6561%" y="2191.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (12 samples, 0.03%)</title><rect x="83.4061%" y="2165" width="0.0345%" height="15" fill="rgb(250,163,42)" fg:x="29027" fg:w="12"/><text x="83.6561%" y="2175.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (12 samples, 0.03%)</title><rect x="83.4061%" y="2149" width="0.0345%" height="15" fill="rgb(239,163,0)" fg:x="29027" fg:w="12"/><text x="83.6561%" y="2159.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (12 samples, 0.03%)</title><rect x="83.4061%" y="2133" width="0.0345%" height="15" fill="rgb(252,38,28)" fg:x="29027" fg:w="12"/><text x="83.6561%" y="2143.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.03%)</title><rect x="83.4061%" y="2117" width="0.0345%" height="15" fill="rgb(254,203,26)" fg:x="29027" fg:w="12"/><text x="83.6561%" y="2127.50"></text></g><g><title>rayon_core::join::join_context (11 samples, 0.03%)</title><rect x="83.4090%" y="2101" width="0.0316%" height="15" fill="rgb(209,129,32)" fg:x="29028" fg:w="11"/><text x="83.6590%" y="2111.50"></text></g><g><title>rayon_core::registry::in_worker (11 samples, 0.03%)</title><rect x="83.4090%" y="2085" width="0.0316%" height="15" fill="rgb(207,177,52)" fg:x="29028" fg:w="11"/><text x="83.6590%" y="2095.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (11 samples, 0.03%)</title><rect x="83.4090%" y="2069" width="0.0316%" height="15" fill="rgb(230,209,36)" fg:x="29028" fg:w="11"/><text x="83.6590%" y="2079.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (6 samples, 0.02%)</title><rect x="83.4234%" y="2053" width="0.0172%" height="15" fill="rgb(238,131,0)" fg:x="29033" fg:w="6"/><text x="83.6734%" y="2063.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.02%)</title><rect x="83.4234%" y="2037" width="0.0172%" height="15" fill="rgb(218,61,31)" fg:x="29033" fg:w="6"/><text x="83.6734%" y="2047.50"></text></g><g><title>std::panicking::try (6 samples, 0.02%)</title><rect x="83.4234%" y="2021" width="0.0172%" height="15" fill="rgb(232,6,53)" fg:x="29033" fg:w="6"/><text x="83.6734%" y="2031.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.02%)</title><rect x="83.4234%" y="2005" width="0.0172%" height="15" fill="rgb(254,100,32)" fg:x="29033" fg:w="6"/><text x="83.6734%" y="2015.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6 samples, 0.02%)</title><rect x="83.4234%" y="1989" width="0.0172%" height="15" fill="rgb(229,194,49)" fg:x="29033" fg:w="6"/><text x="83.6734%" y="1999.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (6 samples, 0.02%)</title><rect x="83.4234%" y="1973" width="0.0172%" height="15" fill="rgb(206,208,39)" fg:x="29033" fg:w="6"/><text x="83.6734%" y="1983.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (6 samples, 0.02%)</title><rect x="83.4234%" y="1957" width="0.0172%" height="15" fill="rgb(246,226,14)" fg:x="29033" fg:w="6"/><text x="83.6734%" y="1967.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (6 samples, 0.02%)</title><rect x="83.4234%" y="1941" width="0.0172%" height="15" fill="rgb(226,48,32)" fg:x="29033" fg:w="6"/><text x="83.6734%" y="1951.50"></text></g><g><title>rayon_core::join::join_context (6 samples, 0.02%)</title><rect x="83.4234%" y="1925" width="0.0172%" height="15" fill="rgb(252,43,54)" fg:x="29033" fg:w="6"/><text x="83.6734%" y="1935.50"></text></g><g><title>rayon_core::registry::in_worker (6 samples, 0.02%)</title><rect x="83.4234%" y="1909" width="0.0172%" height="15" fill="rgb(207,124,0)" fg:x="29033" fg:w="6"/><text x="83.6734%" y="1919.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (6 samples, 0.02%)</title><rect x="83.4234%" y="1893" width="0.0172%" height="15" fill="rgb(248,188,30)" fg:x="29033" fg:w="6"/><text x="83.6734%" y="1903.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (6 samples, 0.02%)</title><rect x="83.4234%" y="1877" width="0.0172%" height="15" fill="rgb(232,14,43)" fg:x="29033" fg:w="6"/><text x="83.6734%" y="1887.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (6 samples, 0.02%)</title><rect x="83.4234%" y="1861" width="0.0172%" height="15" fill="rgb(218,52,29)" fg:x="29033" fg:w="6"/><text x="83.6734%" y="1871.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (6 samples, 0.02%)</title><rect x="83.4234%" y="1845" width="0.0172%" height="15" fill="rgb(218,176,50)" fg:x="29033" fg:w="6"/><text x="83.6734%" y="1855.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (6 samples, 0.02%)</title><rect x="83.4234%" y="1829" width="0.0172%" height="15" fill="rgb(213,112,0)" fg:x="29033" fg:w="6"/><text x="83.6734%" y="1839.50"></text></g><g><title>rayon_core::join::join_context (6 samples, 0.02%)</title><rect x="83.4234%" y="1813" width="0.0172%" height="15" fill="rgb(244,216,8)" fg:x="29033" fg:w="6"/><text x="83.6734%" y="1823.50"></text></g><g><title>rayon_core::registry::in_worker (6 samples, 0.02%)</title><rect x="83.4234%" y="1797" width="0.0172%" height="15" fill="rgb(224,148,53)" fg:x="29033" fg:w="6"/><text x="83.6734%" y="1807.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (6 samples, 0.02%)</title><rect x="83.4234%" y="1781" width="0.0172%" height="15" fill="rgb(241,133,40)" fg:x="29033" fg:w="6"/><text x="83.6734%" y="1791.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (5 samples, 0.01%)</title><rect x="83.4406%" y="2229" width="0.0144%" height="15" fill="rgb(232,17,44)" fg:x="29039" fg:w="5"/><text x="83.6906%" y="2239.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (5 samples, 0.01%)</title><rect x="83.4406%" y="2213" width="0.0144%" height="15" fill="rgb(213,32,25)" fg:x="29039" fg:w="5"/><text x="83.6906%" y="2223.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (5 samples, 0.01%)</title><rect x="83.4406%" y="2197" width="0.0144%" height="15" fill="rgb(249,115,27)" fg:x="29039" fg:w="5"/><text x="83.6906%" y="2207.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (5 samples, 0.01%)</title><rect x="83.4406%" y="2181" width="0.0144%" height="15" fill="rgb(241,50,1)" fg:x="29039" fg:w="5"/><text x="83.6906%" y="2191.50"></text></g><g><title>rayon_core::join::join_context (5 samples, 0.01%)</title><rect x="83.4406%" y="2165" width="0.0144%" height="15" fill="rgb(244,175,40)" fg:x="29039" fg:w="5"/><text x="83.6906%" y="2175.50"></text></g><g><title>rayon_core::registry::in_worker (5 samples, 0.01%)</title><rect x="83.4406%" y="2149" width="0.0144%" height="15" fill="rgb(230,94,34)" fg:x="29039" fg:w="5"/><text x="83.6906%" y="2159.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5 samples, 0.01%)</title><rect x="83.4406%" y="2133" width="0.0144%" height="15" fill="rgb(223,185,29)" fg:x="29039" fg:w="5"/><text x="83.6906%" y="2143.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (6 samples, 0.02%)</title><rect x="83.4550%" y="2229" width="0.0172%" height="15" fill="rgb(225,193,15)" fg:x="29044" fg:w="6"/><text x="83.7050%" y="2239.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (6 samples, 0.02%)</title><rect x="83.4550%" y="2213" width="0.0172%" height="15" fill="rgb(252,121,38)" fg:x="29044" fg:w="6"/><text x="83.7050%" y="2223.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (6 samples, 0.02%)</title><rect x="83.4550%" y="2197" width="0.0172%" height="15" fill="rgb(232,44,12)" fg:x="29044" fg:w="6"/><text x="83.7050%" y="2207.50"></text></g><g><title>rayon_core::job::JobRef::execute (6 samples, 0.02%)</title><rect x="83.4550%" y="2181" width="0.0172%" height="15" fill="rgb(226,45,54)" fg:x="29044" fg:w="6"/><text x="83.7050%" y="2191.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (6 samples, 0.02%)</title><rect x="83.4550%" y="2165" width="0.0172%" height="15" fill="rgb(209,67,17)" fg:x="29044" fg:w="6"/><text x="83.7050%" y="2175.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (6 samples, 0.02%)</title><rect x="83.4550%" y="2149" width="0.0172%" height="15" fill="rgb(219,108,52)" fg:x="29044" fg:w="6"/><text x="83.7050%" y="2159.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (6 samples, 0.02%)</title><rect x="83.4550%" y="2133" width="0.0172%" height="15" fill="rgb(216,118,19)" fg:x="29044" fg:w="6"/><text x="83.7050%" y="2143.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.02%)</title><rect x="83.4550%" y="2117" width="0.0172%" height="15" fill="rgb(228,120,40)" fg:x="29044" fg:w="6"/><text x="83.7050%" y="2127.50"></text></g><g><title>std::panicking::try (6 samples, 0.02%)</title><rect x="83.4550%" y="2101" width="0.0172%" height="15" fill="rgb(221,218,34)" fg:x="29044" fg:w="6"/><text x="83.7050%" y="2111.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.02%)</title><rect x="83.4550%" y="2085" width="0.0172%" height="15" fill="rgb(235,89,14)" fg:x="29044" fg:w="6"/><text x="83.7050%" y="2095.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6 samples, 0.02%)</title><rect x="83.4550%" y="2069" width="0.0172%" height="15" fill="rgb(248,89,7)" fg:x="29044" fg:w="6"/><text x="83.7050%" y="2079.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (6 samples, 0.02%)</title><rect x="83.4550%" y="2053" width="0.0172%" height="15" fill="rgb(212,114,34)" fg:x="29044" fg:w="6"/><text x="83.7050%" y="2063.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (6 samples, 0.02%)</title><rect x="83.4550%" y="2037" width="0.0172%" height="15" fill="rgb(246,88,32)" fg:x="29044" fg:w="6"/><text x="83.7050%" y="2047.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (6 samples, 0.02%)</title><rect x="83.4550%" y="2021" width="0.0172%" height="15" fill="rgb(237,135,0)" fg:x="29044" fg:w="6"/><text x="83.7050%" y="2031.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (6 samples, 0.02%)</title><rect x="83.4550%" y="2005" width="0.0172%" height="15" fill="rgb(220,201,54)" fg:x="29044" fg:w="6"/><text x="83.7050%" y="2015.50"></text></g><g><title>rayon_core::join::join_context (6 samples, 0.02%)</title><rect x="83.4550%" y="1989" width="0.0172%" height="15" fill="rgb(210,142,36)" fg:x="29044" fg:w="6"/><text x="83.7050%" y="1999.50"></text></g><g><title>rayon_core::registry::in_worker (6 samples, 0.02%)</title><rect x="83.4550%" y="1973" width="0.0172%" height="15" fill="rgb(247,189,26)" fg:x="29044" fg:w="6"/><text x="83.7050%" y="1983.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (6 samples, 0.02%)</title><rect x="83.4550%" y="1957" width="0.0172%" height="15" fill="rgb(223,89,24)" fg:x="29044" fg:w="6"/><text x="83.7050%" y="1967.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (4 samples, 0.01%)</title><rect x="83.4722%" y="1829" width="0.0115%" height="15" fill="rgb(205,90,19)" fg:x="29050" fg:w="4"/><text x="83.7222%" y="1839.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (4 samples, 0.01%)</title><rect x="83.4722%" y="1813" width="0.0115%" height="15" fill="rgb(234,57,40)" fg:x="29050" fg:w="4"/><text x="83.7222%" y="1823.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.01%)</title><rect x="83.4722%" y="1797" width="0.0115%" height="15" fill="rgb(213,109,10)" fg:x="29050" fg:w="4"/><text x="83.7222%" y="1807.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.01%)</title><rect x="83.4722%" y="1781" width="0.0115%" height="15" fill="rgb(214,189,23)" fg:x="29050" fg:w="4"/><text x="83.7222%" y="1791.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.01%)</title><rect x="83.4722%" y="1765" width="0.0115%" height="15" fill="rgb(234,200,10)" fg:x="29050" fg:w="4"/><text x="83.7222%" y="1775.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.01%)</title><rect x="83.4722%" y="1749" width="0.0115%" height="15" fill="rgb(221,148,16)" fg:x="29050" fg:w="4"/><text x="83.7222%" y="1759.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.01%)</title><rect x="83.4722%" y="1733" width="0.0115%" height="15" fill="rgb(230,115,10)" fg:x="29050" fg:w="4"/><text x="83.7222%" y="1743.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (4 samples, 0.01%)</title><rect x="83.4722%" y="1717" width="0.0115%" height="15" fill="rgb(220,106,42)" fg:x="29050" fg:w="4"/><text x="83.7222%" y="1727.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (4 samples, 0.01%)</title><rect x="83.4722%" y="1701" width="0.0115%" height="15" fill="rgb(225,105,39)" fg:x="29050" fg:w="4"/><text x="83.7222%" y="1711.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.01%)</title><rect x="83.4722%" y="1685" width="0.0115%" height="15" fill="rgb(211,161,38)" fg:x="29050" fg:w="4"/><text x="83.7222%" y="1695.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.01%)</title><rect x="83.4722%" y="1669" width="0.0115%" height="15" fill="rgb(213,23,19)" fg:x="29050" fg:w="4"/><text x="83.7222%" y="1679.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.01%)</title><rect x="83.4722%" y="1653" width="0.0115%" height="15" fill="rgb(240,2,33)" fg:x="29050" fg:w="4"/><text x="83.7222%" y="1663.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.01%)</title><rect x="83.4722%" y="1637" width="0.0115%" height="15" fill="rgb(221,29,45)" fg:x="29050" fg:w="4"/><text x="83.7222%" y="1647.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.01%)</title><rect x="83.4722%" y="1621" width="0.0115%" height="15" fill="rgb(242,10,19)" fg:x="29050" fg:w="4"/><text x="83.7222%" y="1631.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (5 samples, 0.01%)</title><rect x="83.4722%" y="1941" width="0.0144%" height="15" fill="rgb(250,84,37)" fg:x="29050" fg:w="5"/><text x="83.7222%" y="1951.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (5 samples, 0.01%)</title><rect x="83.4722%" y="1925" width="0.0144%" height="15" fill="rgb(214,136,7)" fg:x="29050" fg:w="5"/><text x="83.7222%" y="1935.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (5 samples, 0.01%)</title><rect x="83.4722%" y="1909" width="0.0144%" height="15" fill="rgb(231,189,12)" fg:x="29050" fg:w="5"/><text x="83.7222%" y="1919.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (5 samples, 0.01%)</title><rect x="83.4722%" y="1893" width="0.0144%" height="15" fill="rgb(244,40,16)" fg:x="29050" fg:w="5"/><text x="83.7222%" y="1903.50"></text></g><g><title>rayon_core::join::join_context (5 samples, 0.01%)</title><rect x="83.4722%" y="1877" width="0.0144%" height="15" fill="rgb(217,29,15)" fg:x="29050" fg:w="5"/><text x="83.7222%" y="1887.50"></text></g><g><title>rayon_core::registry::in_worker (5 samples, 0.01%)</title><rect x="83.4722%" y="1861" width="0.0144%" height="15" fill="rgb(235,172,33)" fg:x="29050" fg:w="5"/><text x="83.7222%" y="1871.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5 samples, 0.01%)</title><rect x="83.4722%" y="1845" width="0.0144%" height="15" fill="rgb(206,148,28)" fg:x="29050" fg:w="5"/><text x="83.7222%" y="1855.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (9 samples, 0.03%)</title><rect x="83.4722%" y="2053" width="0.0259%" height="15" fill="rgb(251,167,37)" fg:x="29050" fg:w="9"/><text x="83.7222%" y="2063.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (9 samples, 0.03%)</title><rect x="83.4722%" y="2037" width="0.0259%" height="15" fill="rgb(229,94,52)" fg:x="29050" fg:w="9"/><text x="83.7222%" y="2047.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (9 samples, 0.03%)</title><rect x="83.4722%" y="2021" width="0.0259%" height="15" fill="rgb(216,132,9)" fg:x="29050" fg:w="9"/><text x="83.7222%" y="2031.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.03%)</title><rect x="83.4722%" y="2005" width="0.0259%" height="15" fill="rgb(208,110,29)" fg:x="29050" fg:w="9"/><text x="83.7222%" y="2015.50"></text></g><g><title>rayon_core::join::join_context (9 samples, 0.03%)</title><rect x="83.4722%" y="1989" width="0.0259%" height="15" fill="rgb(241,23,8)" fg:x="29050" fg:w="9"/><text x="83.7222%" y="1999.50"></text></g><g><title>rayon_core::registry::in_worker (9 samples, 0.03%)</title><rect x="83.4722%" y="1973" width="0.0259%" height="15" fill="rgb(208,26,35)" fg:x="29050" fg:w="9"/><text x="83.7222%" y="1983.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (9 samples, 0.03%)</title><rect x="83.4722%" y="1957" width="0.0259%" height="15" fill="rgb(242,165,34)" fg:x="29050" fg:w="9"/><text x="83.7222%" y="1967.50"></text></g><g><title>par_exec_23 (25 samples, 0.07%)</title><rect x="83.4406%" y="2789" width="0.0718%" height="15" fill="rgb(222,222,33)" fg:x="29039" fg:w="25"/><text x="83.6906%" y="2799.50"></text></g><g><title>__GI___clone3 (25 samples, 0.07%)</title><rect x="83.4406%" y="2773" width="0.0718%" height="15" fill="rgb(227,16,52)" fg:x="29039" fg:w="25"/><text x="83.6906%" y="2783.50"></text></g><g><title>start_thread (25 samples, 0.07%)</title><rect x="83.4406%" y="2757" width="0.0718%" height="15" fill="rgb(213,93,12)" fg:x="29039" fg:w="25"/><text x="83.6906%" y="2767.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (25 samples, 0.07%)</title><rect x="83.4406%" y="2741" width="0.0718%" height="15" fill="rgb(238,41,5)" fg:x="29039" fg:w="25"/><text x="83.6906%" y="2751.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (25 samples, 0.07%)</title><rect x="83.4406%" y="2725" width="0.0718%" height="15" fill="rgb(211,60,15)" fg:x="29039" fg:w="25"/><text x="83.6906%" y="2735.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (25 samples, 0.07%)</title><rect x="83.4406%" y="2709" width="0.0718%" height="15" fill="rgb(209,11,34)" fg:x="29039" fg:w="25"/><text x="83.6906%" y="2719.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (25 samples, 0.07%)</title><rect x="83.4406%" y="2693" width="0.0718%" height="15" fill="rgb(254,155,53)" fg:x="29039" fg:w="25"/><text x="83.6906%" y="2703.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (25 samples, 0.07%)</title><rect x="83.4406%" y="2677" width="0.0718%" height="15" fill="rgb(236,174,8)" fg:x="29039" fg:w="25"/><text x="83.6906%" y="2687.50"></text></g><g><title>std::panic::catch_unwind (25 samples, 0.07%)</title><rect x="83.4406%" y="2661" width="0.0718%" height="15" fill="rgb(229,31,27)" fg:x="29039" fg:w="25"/><text x="83.6906%" y="2671.50"></text></g><g><title>std::panicking::try (25 samples, 0.07%)</title><rect x="83.4406%" y="2645" width="0.0718%" height="15" fill="rgb(242,226,26)" fg:x="29039" fg:w="25"/><text x="83.6906%" y="2655.50"></text></g><g><title>std::panicking::try::do_call (25 samples, 0.07%)</title><rect x="83.4406%" y="2629" width="0.0718%" height="15" fill="rgb(234,32,40)" fg:x="29039" fg:w="25"/><text x="83.6906%" y="2639.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (25 samples, 0.07%)</title><rect x="83.4406%" y="2613" width="0.0718%" height="15" fill="rgb(249,226,47)" fg:x="29039" fg:w="25"/><text x="83.6906%" y="2623.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (25 samples, 0.07%)</title><rect x="83.4406%" y="2597" width="0.0718%" height="15" fill="rgb(212,6,26)" fg:x="29039" fg:w="25"/><text x="83.6906%" y="2607.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (25 samples, 0.07%)</title><rect x="83.4406%" y="2581" width="0.0718%" height="15" fill="rgb(249,202,29)" fg:x="29039" fg:w="25"/><text x="83.6906%" y="2591.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (25 samples, 0.07%)</title><rect x="83.4406%" y="2565" width="0.0718%" height="15" fill="rgb(226,106,4)" fg:x="29039" fg:w="25"/><text x="83.6906%" y="2575.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (25 samples, 0.07%)</title><rect x="83.4406%" y="2549" width="0.0718%" height="15" fill="rgb(251,2,27)" fg:x="29039" fg:w="25"/><text x="83.6906%" y="2559.50"></text></g><g><title>rayon_core::registry::main_loop (25 samples, 0.07%)</title><rect x="83.4406%" y="2533" width="0.0718%" height="15" fill="rgb(236,208,0)" fg:x="29039" fg:w="25"/><text x="83.6906%" y="2543.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (25 samples, 0.07%)</title><rect x="83.4406%" y="2517" width="0.0718%" height="15" fill="rgb(211,66,17)" fg:x="29039" fg:w="25"/><text x="83.6906%" y="2527.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (25 samples, 0.07%)</title><rect x="83.4406%" y="2501" width="0.0718%" height="15" fill="rgb(216,129,9)" fg:x="29039" fg:w="25"/><text x="83.6906%" y="2511.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (25 samples, 0.07%)</title><rect x="83.4406%" y="2485" width="0.0718%" height="15" fill="rgb(215,130,23)" fg:x="29039" fg:w="25"/><text x="83.6906%" y="2495.50"></text></g><g><title>rayon_core::job::JobRef::execute (25 samples, 0.07%)</title><rect x="83.4406%" y="2469" width="0.0718%" height="15" fill="rgb(253,157,11)" fg:x="29039" fg:w="25"/><text x="83.6906%" y="2479.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (25 samples, 0.07%)</title><rect x="83.4406%" y="2453" width="0.0718%" height="15" fill="rgb(224,25,14)" fg:x="29039" fg:w="25"/><text x="83.6906%" y="2463.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (25 samples, 0.07%)</title><rect x="83.4406%" y="2437" width="0.0718%" height="15" fill="rgb(238,16,7)" fg:x="29039" fg:w="25"/><text x="83.6906%" y="2447.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (25 samples, 0.07%)</title><rect x="83.4406%" y="2421" width="0.0718%" height="15" fill="rgb(228,74,11)" fg:x="29039" fg:w="25"/><text x="83.6906%" y="2431.50"></text></g><g><title>std::panic::catch_unwind (25 samples, 0.07%)</title><rect x="83.4406%" y="2405" width="0.0718%" height="15" fill="rgb(239,221,27)" fg:x="29039" fg:w="25"/><text x="83.6906%" y="2415.50"></text></g><g><title>std::panicking::try (25 samples, 0.07%)</title><rect x="83.4406%" y="2389" width="0.0718%" height="15" fill="rgb(229,166,18)" fg:x="29039" fg:w="25"/><text x="83.6906%" y="2399.50"></text></g><g><title>std::panicking::try::do_call (25 samples, 0.07%)</title><rect x="83.4406%" y="2373" width="0.0718%" height="15" fill="rgb(254,94,46)" fg:x="29039" fg:w="25"/><text x="83.6906%" y="2383.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (25 samples, 0.07%)</title><rect x="83.4406%" y="2357" width="0.0718%" height="15" fill="rgb(241,79,19)" fg:x="29039" fg:w="25"/><text x="83.6906%" y="2367.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (25 samples, 0.07%)</title><rect x="83.4406%" y="2341" width="0.0718%" height="15" fill="rgb(228,99,51)" fg:x="29039" fg:w="25"/><text x="83.6906%" y="2351.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (25 samples, 0.07%)</title><rect x="83.4406%" y="2325" width="0.0718%" height="15" fill="rgb(211,15,6)" fg:x="29039" fg:w="25"/><text x="83.6906%" y="2335.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (25 samples, 0.07%)</title><rect x="83.4406%" y="2309" width="0.0718%" height="15" fill="rgb(245,107,54)" fg:x="29039" fg:w="25"/><text x="83.6906%" y="2319.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (25 samples, 0.07%)</title><rect x="83.4406%" y="2293" width="0.0718%" height="15" fill="rgb(243,3,2)" fg:x="29039" fg:w="25"/><text x="83.6906%" y="2303.50"></text></g><g><title>rayon_core::join::join_context (25 samples, 0.07%)</title><rect x="83.4406%" y="2277" width="0.0718%" height="15" fill="rgb(206,122,10)" fg:x="29039" fg:w="25"/><text x="83.6906%" y="2287.50"></text></g><g><title>rayon_core::registry::in_worker (25 samples, 0.07%)</title><rect x="83.4406%" y="2261" width="0.0718%" height="15" fill="rgb(224,88,4)" fg:x="29039" fg:w="25"/><text x="83.6906%" y="2271.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (25 samples, 0.07%)</title><rect x="83.4406%" y="2245" width="0.0718%" height="15" fill="rgb(230,1,41)" fg:x="29039" fg:w="25"/><text x="83.6906%" y="2255.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (14 samples, 0.04%)</title><rect x="83.4722%" y="2229" width="0.0402%" height="15" fill="rgb(230,1,31)" fg:x="29050" fg:w="14"/><text x="83.7222%" y="2239.50"></text></g><g><title>std::panic::catch_unwind (14 samples, 0.04%)</title><rect x="83.4722%" y="2213" width="0.0402%" height="15" fill="rgb(232,67,19)" fg:x="29050" fg:w="14"/><text x="83.7222%" y="2223.50"></text></g><g><title>std::panicking::try (14 samples, 0.04%)</title><rect x="83.4722%" y="2197" width="0.0402%" height="15" fill="rgb(222,206,20)" fg:x="29050" fg:w="14"/><text x="83.7222%" y="2207.50"></text></g><g><title>std::panicking::try::do_call (14 samples, 0.04%)</title><rect x="83.4722%" y="2181" width="0.0402%" height="15" fill="rgb(217,225,19)" fg:x="29050" fg:w="14"/><text x="83.7222%" y="2191.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (14 samples, 0.04%)</title><rect x="83.4722%" y="2165" width="0.0402%" height="15" fill="rgb(234,13,33)" fg:x="29050" fg:w="14"/><text x="83.7222%" y="2175.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (14 samples, 0.04%)</title><rect x="83.4722%" y="2149" width="0.0402%" height="15" fill="rgb(254,5,1)" fg:x="29050" fg:w="14"/><text x="83.7222%" y="2159.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (14 samples, 0.04%)</title><rect x="83.4722%" y="2133" width="0.0402%" height="15" fill="rgb(211,121,41)" fg:x="29050" fg:w="14"/><text x="83.7222%" y="2143.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (14 samples, 0.04%)</title><rect x="83.4722%" y="2117" width="0.0402%" height="15" fill="rgb(213,199,35)" fg:x="29050" fg:w="14"/><text x="83.7222%" y="2127.50"></text></g><g><title>rayon_core::join::join_context (14 samples, 0.04%)</title><rect x="83.4722%" y="2101" width="0.0402%" height="15" fill="rgb(240,118,22)" fg:x="29050" fg:w="14"/><text x="83.7222%" y="2111.50"></text></g><g><title>rayon_core::registry::in_worker (14 samples, 0.04%)</title><rect x="83.4722%" y="2085" width="0.0402%" height="15" fill="rgb(238,184,25)" fg:x="29050" fg:w="14"/><text x="83.7222%" y="2095.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (14 samples, 0.04%)</title><rect x="83.4722%" y="2069" width="0.0402%" height="15" fill="rgb(210,165,6)" fg:x="29050" fg:w="14"/><text x="83.7222%" y="2079.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (4 samples, 0.01%)</title><rect x="83.5009%" y="2053" width="0.0115%" height="15" fill="rgb(235,149,5)" fg:x="29060" fg:w="4"/><text x="83.7509%" y="2063.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.01%)</title><rect x="83.5009%" y="2037" width="0.0115%" height="15" fill="rgb(221,63,5)" fg:x="29060" fg:w="4"/><text x="83.7509%" y="2047.50"></text></g><g><title>std::panicking::try (4 samples, 0.01%)</title><rect x="83.5009%" y="2021" width="0.0115%" height="15" fill="rgb(250,44,41)" fg:x="29060" fg:w="4"/><text x="83.7509%" y="2031.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.01%)</title><rect x="83.5009%" y="2005" width="0.0115%" height="15" fill="rgb(235,112,47)" fg:x="29060" fg:w="4"/><text x="83.7509%" y="2015.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.01%)</title><rect x="83.5009%" y="1989" width="0.0115%" height="15" fill="rgb(252,176,34)" fg:x="29060" fg:w="4"/><text x="83.7509%" y="1999.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (4 samples, 0.01%)</title><rect x="83.5009%" y="1973" width="0.0115%" height="15" fill="rgb(234,50,19)" fg:x="29060" fg:w="4"/><text x="83.7509%" y="1983.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.01%)</title><rect x="83.5009%" y="1957" width="0.0115%" height="15" fill="rgb(241,195,31)" fg:x="29060" fg:w="4"/><text x="83.7509%" y="1967.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.01%)</title><rect x="83.5009%" y="1941" width="0.0115%" height="15" fill="rgb(212,93,11)" fg:x="29060" fg:w="4"/><text x="83.7509%" y="1951.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.01%)</title><rect x="83.5009%" y="1925" width="0.0115%" height="15" fill="rgb(254,98,51)" fg:x="29060" fg:w="4"/><text x="83.7509%" y="1935.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.01%)</title><rect x="83.5009%" y="1909" width="0.0115%" height="15" fill="rgb(246,18,45)" fg:x="29060" fg:w="4"/><text x="83.7509%" y="1919.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.01%)</title><rect x="83.5009%" y="1893" width="0.0115%" height="15" fill="rgb(215,148,23)" fg:x="29060" fg:w="4"/><text x="83.7509%" y="1903.50"></text></g><g><title>par_exec_2 (15 samples, 0.04%)</title><rect x="83.5124%" y="2789" width="0.0431%" height="15" fill="rgb(227,22,7)" fg:x="29064" fg:w="15"/><text x="83.7624%" y="2799.50"></text></g><g><title>__GI___clone3 (15 samples, 0.04%)</title><rect x="83.5124%" y="2773" width="0.0431%" height="15" fill="rgb(207,210,37)" fg:x="29064" fg:w="15"/><text x="83.7624%" y="2783.50"></text></g><g><title>start_thread (15 samples, 0.04%)</title><rect x="83.5124%" y="2757" width="0.0431%" height="15" fill="rgb(247,147,42)" fg:x="29064" fg:w="15"/><text x="83.7624%" y="2767.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (15 samples, 0.04%)</title><rect x="83.5124%" y="2741" width="0.0431%" height="15" fill="rgb(226,213,14)" fg:x="29064" fg:w="15"/><text x="83.7624%" y="2751.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (15 samples, 0.04%)</title><rect x="83.5124%" y="2725" width="0.0431%" height="15" fill="rgb(223,18,10)" fg:x="29064" fg:w="15"/><text x="83.7624%" y="2735.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (15 samples, 0.04%)</title><rect x="83.5124%" y="2709" width="0.0431%" height="15" fill="rgb(253,34,22)" fg:x="29064" fg:w="15"/><text x="83.7624%" y="2719.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (15 samples, 0.04%)</title><rect x="83.5124%" y="2693" width="0.0431%" height="15" fill="rgb(222,90,31)" fg:x="29064" fg:w="15"/><text x="83.7624%" y="2703.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (15 samples, 0.04%)</title><rect x="83.5124%" y="2677" width="0.0431%" height="15" fill="rgb(220,182,30)" fg:x="29064" fg:w="15"/><text x="83.7624%" y="2687.50"></text></g><g><title>std::panic::catch_unwind (15 samples, 0.04%)</title><rect x="83.5124%" y="2661" width="0.0431%" height="15" fill="rgb(229,170,12)" fg:x="29064" fg:w="15"/><text x="83.7624%" y="2671.50"></text></g><g><title>std::panicking::try (15 samples, 0.04%)</title><rect x="83.5124%" y="2645" width="0.0431%" height="15" fill="rgb(210,101,21)" fg:x="29064" fg:w="15"/><text x="83.7624%" y="2655.50"></text></g><g><title>std::panicking::try::do_call (15 samples, 0.04%)</title><rect x="83.5124%" y="2629" width="0.0431%" height="15" fill="rgb(237,177,31)" fg:x="29064" fg:w="15"/><text x="83.7624%" y="2639.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (15 samples, 0.04%)</title><rect x="83.5124%" y="2613" width="0.0431%" height="15" fill="rgb(215,91,34)" fg:x="29064" fg:w="15"/><text x="83.7624%" y="2623.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (15 samples, 0.04%)</title><rect x="83.5124%" y="2597" width="0.0431%" height="15" fill="rgb(229,206,16)" fg:x="29064" fg:w="15"/><text x="83.7624%" y="2607.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (15 samples, 0.04%)</title><rect x="83.5124%" y="2581" width="0.0431%" height="15" fill="rgb(235,207,10)" fg:x="29064" fg:w="15"/><text x="83.7624%" y="2591.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (15 samples, 0.04%)</title><rect x="83.5124%" y="2565" width="0.0431%" height="15" fill="rgb(247,18,10)" fg:x="29064" fg:w="15"/><text x="83.7624%" y="2575.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (15 samples, 0.04%)</title><rect x="83.5124%" y="2549" width="0.0431%" height="15" fill="rgb(232,4,6)" fg:x="29064" fg:w="15"/><text x="83.7624%" y="2559.50"></text></g><g><title>rayon_core::registry::main_loop (15 samples, 0.04%)</title><rect x="83.5124%" y="2533" width="0.0431%" height="15" fill="rgb(247,93,45)" fg:x="29064" fg:w="15"/><text x="83.7624%" y="2543.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (15 samples, 0.04%)</title><rect x="83.5124%" y="2517" width="0.0431%" height="15" fill="rgb(240,181,18)" fg:x="29064" fg:w="15"/><text x="83.7624%" y="2527.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (15 samples, 0.04%)</title><rect x="83.5124%" y="2501" width="0.0431%" height="15" fill="rgb(208,224,0)" fg:x="29064" fg:w="15"/><text x="83.7624%" y="2511.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (14 samples, 0.04%)</title><rect x="83.5153%" y="2485" width="0.0402%" height="15" fill="rgb(224,207,54)" fg:x="29065" fg:w="14"/><text x="83.7653%" y="2495.50"></text></g><g><title>rayon_core::job::JobRef::execute (14 samples, 0.04%)</title><rect x="83.5153%" y="2469" width="0.0402%" height="15" fill="rgb(217,152,29)" fg:x="29065" fg:w="14"/><text x="83.7653%" y="2479.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (14 samples, 0.04%)</title><rect x="83.5153%" y="2453" width="0.0402%" height="15" fill="rgb(243,78,27)" fg:x="29065" fg:w="14"/><text x="83.7653%" y="2463.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (14 samples, 0.04%)</title><rect x="83.5153%" y="2437" width="0.0402%" height="15" fill="rgb(228,111,9)" fg:x="29065" fg:w="14"/><text x="83.7653%" y="2447.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (14 samples, 0.04%)</title><rect x="83.5153%" y="2421" width="0.0402%" height="15" fill="rgb(230,213,21)" fg:x="29065" fg:w="14"/><text x="83.7653%" y="2431.50"></text></g><g><title>std::panic::catch_unwind (14 samples, 0.04%)</title><rect x="83.5153%" y="2405" width="0.0402%" height="15" fill="rgb(248,50,36)" fg:x="29065" fg:w="14"/><text x="83.7653%" y="2415.50"></text></g><g><title>std::panicking::try (14 samples, 0.04%)</title><rect x="83.5153%" y="2389" width="0.0402%" height="15" fill="rgb(226,19,31)" fg:x="29065" fg:w="14"/><text x="83.7653%" y="2399.50"></text></g><g><title>std::panicking::try::do_call (14 samples, 0.04%)</title><rect x="83.5153%" y="2373" width="0.0402%" height="15" fill="rgb(205,132,21)" fg:x="29065" fg:w="14"/><text x="83.7653%" y="2383.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (14 samples, 0.04%)</title><rect x="83.5153%" y="2357" width="0.0402%" height="15" fill="rgb(207,42,19)" fg:x="29065" fg:w="14"/><text x="83.7653%" y="2367.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (14 samples, 0.04%)</title><rect x="83.5153%" y="2341" width="0.0402%" height="15" fill="rgb(229,69,35)" fg:x="29065" fg:w="14"/><text x="83.7653%" y="2351.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (14 samples, 0.04%)</title><rect x="83.5153%" y="2325" width="0.0402%" height="15" fill="rgb(226,96,11)" fg:x="29065" fg:w="14"/><text x="83.7653%" y="2335.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (14 samples, 0.04%)</title><rect x="83.5153%" y="2309" width="0.0402%" height="15" fill="rgb(236,133,54)" fg:x="29065" fg:w="14"/><text x="83.7653%" y="2319.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (14 samples, 0.04%)</title><rect x="83.5153%" y="2293" width="0.0402%" height="15" fill="rgb(247,166,21)" fg:x="29065" fg:w="14"/><text x="83.7653%" y="2303.50"></text></g><g><title>rayon_core::join::join_context (14 samples, 0.04%)</title><rect x="83.5153%" y="2277" width="0.0402%" height="15" fill="rgb(220,132,12)" fg:x="29065" fg:w="14"/><text x="83.7653%" y="2287.50"></text></g><g><title>rayon_core::registry::in_worker (14 samples, 0.04%)</title><rect x="83.5153%" y="2261" width="0.0402%" height="15" fill="rgb(233,27,30)" fg:x="29065" fg:w="14"/><text x="83.7653%" y="2271.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (14 samples, 0.04%)</title><rect x="83.5153%" y="2245" width="0.0402%" height="15" fill="rgb(246,161,27)" fg:x="29065" fg:w="14"/><text x="83.7653%" y="2255.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (13 samples, 0.04%)</title><rect x="83.5182%" y="2229" width="0.0374%" height="15" fill="rgb(240,56,3)" fg:x="29066" fg:w="13"/><text x="83.7682%" y="2239.50"></text></g><g><title>std::panic::catch_unwind (13 samples, 0.04%)</title><rect x="83.5182%" y="2213" width="0.0374%" height="15" fill="rgb(242,190,9)" fg:x="29066" fg:w="13"/><text x="83.7682%" y="2223.50"></text></g><g><title>std::panicking::try (13 samples, 0.04%)</title><rect x="83.5182%" y="2197" width="0.0374%" height="15" fill="rgb(234,3,52)" fg:x="29066" fg:w="13"/><text x="83.7682%" y="2207.50"></text></g><g><title>std::panicking::try::do_call (13 samples, 0.04%)</title><rect x="83.5182%" y="2181" width="0.0374%" height="15" fill="rgb(220,221,19)" fg:x="29066" fg:w="13"/><text x="83.7682%" y="2191.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (13 samples, 0.04%)</title><rect x="83.5182%" y="2165" width="0.0374%" height="15" fill="rgb(247,178,30)" fg:x="29066" fg:w="13"/><text x="83.7682%" y="2175.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (13 samples, 0.04%)</title><rect x="83.5182%" y="2149" width="0.0374%" height="15" fill="rgb(234,212,27)" fg:x="29066" fg:w="13"/><text x="83.7682%" y="2159.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (13 samples, 0.04%)</title><rect x="83.5182%" y="2133" width="0.0374%" height="15" fill="rgb(226,199,38)" fg:x="29066" fg:w="13"/><text x="83.7682%" y="2143.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (13 samples, 0.04%)</title><rect x="83.5182%" y="2117" width="0.0374%" height="15" fill="rgb(248,114,22)" fg:x="29066" fg:w="13"/><text x="83.7682%" y="2127.50"></text></g><g><title>rayon_core::join::join_context (13 samples, 0.04%)</title><rect x="83.5182%" y="2101" width="0.0374%" height="15" fill="rgb(221,180,4)" fg:x="29066" fg:w="13"/><text x="83.7682%" y="2111.50"></text></g><g><title>rayon_core::registry::in_worker (13 samples, 0.04%)</title><rect x="83.5182%" y="2085" width="0.0374%" height="15" fill="rgb(220,229,24)" fg:x="29066" fg:w="13"/><text x="83.7682%" y="2095.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (13 samples, 0.04%)</title><rect x="83.5182%" y="2069" width="0.0374%" height="15" fill="rgb(226,184,27)" fg:x="29066" fg:w="13"/><text x="83.7682%" y="2079.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (12 samples, 0.03%)</title><rect x="83.5211%" y="2053" width="0.0345%" height="15" fill="rgb(232,99,15)" fg:x="29067" fg:w="12"/><text x="83.7711%" y="2063.50"></text></g><g><title>std::panic::catch_unwind (12 samples, 0.03%)</title><rect x="83.5211%" y="2037" width="0.0345%" height="15" fill="rgb(250,167,16)" fg:x="29067" fg:w="12"/><text x="83.7711%" y="2047.50"></text></g><g><title>std::panicking::try (12 samples, 0.03%)</title><rect x="83.5211%" y="2021" width="0.0345%" height="15" fill="rgb(243,113,6)" fg:x="29067" fg:w="12"/><text x="83.7711%" y="2031.50"></text></g><g><title>std::panicking::try::do_call (12 samples, 0.03%)</title><rect x="83.5211%" y="2005" width="0.0345%" height="15" fill="rgb(244,147,52)" fg:x="29067" fg:w="12"/><text x="83.7711%" y="2015.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (12 samples, 0.03%)</title><rect x="83.5211%" y="1989" width="0.0345%" height="15" fill="rgb(235,59,50)" fg:x="29067" fg:w="12"/><text x="83.7711%" y="1999.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (12 samples, 0.03%)</title><rect x="83.5211%" y="1973" width="0.0345%" height="15" fill="rgb(250,188,6)" fg:x="29067" fg:w="12"/><text x="83.7711%" y="1983.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (12 samples, 0.03%)</title><rect x="83.5211%" y="1957" width="0.0345%" height="15" fill="rgb(236,173,11)" fg:x="29067" fg:w="12"/><text x="83.7711%" y="1967.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.03%)</title><rect x="83.5211%" y="1941" width="0.0345%" height="15" fill="rgb(233,64,3)" fg:x="29067" fg:w="12"/><text x="83.7711%" y="1951.50"></text></g><g><title>rayon_core::join::join_context (12 samples, 0.03%)</title><rect x="83.5211%" y="1925" width="0.0345%" height="15" fill="rgb(207,92,7)" fg:x="29067" fg:w="12"/><text x="83.7711%" y="1935.50"></text></g><g><title>rayon_core::registry::in_worker (12 samples, 0.03%)</title><rect x="83.5211%" y="1909" width="0.0345%" height="15" fill="rgb(221,30,19)" fg:x="29067" fg:w="12"/><text x="83.7711%" y="1919.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (12 samples, 0.03%)</title><rect x="83.5211%" y="1893" width="0.0345%" height="15" fill="rgb(245,22,49)" fg:x="29067" fg:w="12"/><text x="83.7711%" y="1903.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (12 samples, 0.03%)</title><rect x="83.5211%" y="1877" width="0.0345%" height="15" fill="rgb(218,39,20)" fg:x="29067" fg:w="12"/><text x="83.7711%" y="1887.50"></text></g><g><title>std::panic::catch_unwind (12 samples, 0.03%)</title><rect x="83.5211%" y="1861" width="0.0345%" height="15" fill="rgb(222,144,21)" fg:x="29067" fg:w="12"/><text x="83.7711%" y="1871.50"></text></g><g><title>std::panicking::try (12 samples, 0.03%)</title><rect x="83.5211%" y="1845" width="0.0345%" height="15" fill="rgb(222,78,51)" fg:x="29067" fg:w="12"/><text x="83.7711%" y="1855.50"></text></g><g><title>std::panicking::try::do_call (12 samples, 0.03%)</title><rect x="83.5211%" y="1829" width="0.0345%" height="15" fill="rgb(248,213,53)" fg:x="29067" fg:w="12"/><text x="83.7711%" y="1839.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (12 samples, 0.03%)</title><rect x="83.5211%" y="1813" width="0.0345%" height="15" fill="rgb(245,28,34)" fg:x="29067" fg:w="12"/><text x="83.7711%" y="1823.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (12 samples, 0.03%)</title><rect x="83.5211%" y="1797" width="0.0345%" height="15" fill="rgb(229,186,26)" fg:x="29067" fg:w="12"/><text x="83.7711%" y="1807.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (12 samples, 0.03%)</title><rect x="83.5211%" y="1781" width="0.0345%" height="15" fill="rgb(224,0,41)" fg:x="29067" fg:w="12"/><text x="83.7711%" y="1791.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (12 samples, 0.03%)</title><rect x="83.5211%" y="1765" width="0.0345%" height="15" fill="rgb(223,136,51)" fg:x="29067" fg:w="12"/><text x="83.7711%" y="1775.50"></text></g><g><title>rayon_core::join::join_context (12 samples, 0.03%)</title><rect x="83.5211%" y="1749" width="0.0345%" height="15" fill="rgb(234,50,9)" fg:x="29067" fg:w="12"/><text x="83.7711%" y="1759.50"></text></g><g><title>rayon_core::registry::in_worker (12 samples, 0.03%)</title><rect x="83.5211%" y="1733" width="0.0345%" height="15" fill="rgb(242,164,20)" fg:x="29067" fg:w="12"/><text x="83.7711%" y="1743.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (12 samples, 0.03%)</title><rect x="83.5211%" y="1717" width="0.0345%" height="15" fill="rgb(230,169,22)" fg:x="29067" fg:w="12"/><text x="83.7711%" y="1727.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (10 samples, 0.03%)</title><rect x="83.5268%" y="1701" width="0.0287%" height="15" fill="rgb(228,82,26)" fg:x="29069" fg:w="10"/><text x="83.7768%" y="1711.50"></text></g><g><title>std::panic::catch_unwind (10 samples, 0.03%)</title><rect x="83.5268%" y="1685" width="0.0287%" height="15" fill="rgb(244,220,31)" fg:x="29069" fg:w="10"/><text x="83.7768%" y="1695.50"></text></g><g><title>std::panicking::try (10 samples, 0.03%)</title><rect x="83.5268%" y="1669" width="0.0287%" height="15" fill="rgb(214,35,25)" fg:x="29069" fg:w="10"/><text x="83.7768%" y="1679.50"></text></g><g><title>std::panicking::try::do_call (10 samples, 0.03%)</title><rect x="83.5268%" y="1653" width="0.0287%" height="15" fill="rgb(245,162,54)" fg:x="29069" fg:w="10"/><text x="83.7768%" y="1663.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (10 samples, 0.03%)</title><rect x="83.5268%" y="1637" width="0.0287%" height="15" fill="rgb(210,43,24)" fg:x="29069" fg:w="10"/><text x="83.7768%" y="1647.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (10 samples, 0.03%)</title><rect x="83.5268%" y="1621" width="0.0287%" height="15" fill="rgb(226,145,51)" fg:x="29069" fg:w="10"/><text x="83.7768%" y="1631.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (10 samples, 0.03%)</title><rect x="83.5268%" y="1605" width="0.0287%" height="15" fill="rgb(237,52,53)" fg:x="29069" fg:w="10"/><text x="83.7768%" y="1615.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.03%)</title><rect x="83.5268%" y="1589" width="0.0287%" height="15" fill="rgb(216,226,7)" fg:x="29069" fg:w="10"/><text x="83.7768%" y="1599.50"></text></g><g><title>rayon_core::join::join_context (10 samples, 0.03%)</title><rect x="83.5268%" y="1573" width="0.0287%" height="15" fill="rgb(206,223,18)" fg:x="29069" fg:w="10"/><text x="83.7768%" y="1583.50"></text></g><g><title>rayon_core::registry::in_worker (10 samples, 0.03%)</title><rect x="83.5268%" y="1557" width="0.0287%" height="15" fill="rgb(221,1,10)" fg:x="29069" fg:w="10"/><text x="83.7768%" y="1567.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (10 samples, 0.03%)</title><rect x="83.5268%" y="1541" width="0.0287%" height="15" fill="rgb(221,151,42)" fg:x="29069" fg:w="10"/><text x="83.7768%" y="1551.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (7 samples, 0.02%)</title><rect x="83.5354%" y="1525" width="0.0201%" height="15" fill="rgb(205,183,46)" fg:x="29072" fg:w="7"/><text x="83.7854%" y="1535.50"></text></g><g><title>std::panic::catch_unwind (7 samples, 0.02%)</title><rect x="83.5354%" y="1509" width="0.0201%" height="15" fill="rgb(239,229,1)" fg:x="29072" fg:w="7"/><text x="83.7854%" y="1519.50"></text></g><g><title>std::panicking::try (7 samples, 0.02%)</title><rect x="83.5354%" y="1493" width="0.0201%" height="15" fill="rgb(236,192,23)" fg:x="29072" fg:w="7"/><text x="83.7854%" y="1503.50"></text></g><g><title>std::panicking::try::do_call (7 samples, 0.02%)</title><rect x="83.5354%" y="1477" width="0.0201%" height="15" fill="rgb(215,146,3)" fg:x="29072" fg:w="7"/><text x="83.7854%" y="1487.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (7 samples, 0.02%)</title><rect x="83.5354%" y="1461" width="0.0201%" height="15" fill="rgb(235,52,27)" fg:x="29072" fg:w="7"/><text x="83.7854%" y="1471.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (7 samples, 0.02%)</title><rect x="83.5354%" y="1445" width="0.0201%" height="15" fill="rgb(236,45,20)" fg:x="29072" fg:w="7"/><text x="83.7854%" y="1455.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (7 samples, 0.02%)</title><rect x="83.5354%" y="1429" width="0.0201%" height="15" fill="rgb(235,86,41)" fg:x="29072" fg:w="7"/><text x="83.7854%" y="1439.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (7 samples, 0.02%)</title><rect x="83.5354%" y="1413" width="0.0201%" height="15" fill="rgb(235,27,27)" fg:x="29072" fg:w="7"/><text x="83.7854%" y="1423.50"></text></g><g><title>rayon_core::join::join_context (7 samples, 0.02%)</title><rect x="83.5354%" y="1397" width="0.0201%" height="15" fill="rgb(232,4,34)" fg:x="29072" fg:w="7"/><text x="83.7854%" y="1407.50"></text></g><g><title>rayon_core::registry::in_worker (7 samples, 0.02%)</title><rect x="83.5354%" y="1381" width="0.0201%" height="15" fill="rgb(215,22,10)" fg:x="29072" fg:w="7"/><text x="83.7854%" y="1391.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (7 samples, 0.02%)</title><rect x="83.5354%" y="1365" width="0.0201%" height="15" fill="rgb(230,228,27)" fg:x="29072" fg:w="7"/><text x="83.7854%" y="1375.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (6 samples, 0.02%)</title><rect x="83.5757%" y="1701" width="0.0172%" height="15" fill="rgb(216,26,51)" fg:x="29086" fg:w="6"/><text x="83.8257%" y="1711.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (6 samples, 0.02%)</title><rect x="83.5757%" y="1685" width="0.0172%" height="15" fill="rgb(225,180,50)" fg:x="29086" fg:w="6"/><text x="83.8257%" y="1695.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (6 samples, 0.02%)</title><rect x="83.5757%" y="1669" width="0.0172%" height="15" fill="rgb(236,211,2)" fg:x="29086" fg:w="6"/><text x="83.8257%" y="1679.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (6 samples, 0.02%)</title><rect x="83.5757%" y="1653" width="0.0172%" height="15" fill="rgb(250,51,20)" fg:x="29086" fg:w="6"/><text x="83.8257%" y="1663.50"></text></g><g><title>rayon_core::join::join_context (6 samples, 0.02%)</title><rect x="83.5757%" y="1637" width="0.0172%" height="15" fill="rgb(232,70,37)" fg:x="29086" fg:w="6"/><text x="83.8257%" y="1647.50"></text></g><g><title>rayon_core::registry::in_worker (6 samples, 0.02%)</title><rect x="83.5757%" y="1621" width="0.0172%" height="15" fill="rgb(226,183,39)" fg:x="29086" fg:w="6"/><text x="83.8257%" y="1631.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (6 samples, 0.02%)</title><rect x="83.5757%" y="1605" width="0.0172%" height="15" fill="rgb(232,228,21)" fg:x="29086" fg:w="6"/><text x="83.8257%" y="1615.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (4 samples, 0.01%)</title><rect x="83.6101%" y="1525" width="0.0115%" height="15" fill="rgb(251,118,32)" fg:x="29098" fg:w="4"/><text x="83.8601%" y="1535.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (4 samples, 0.01%)</title><rect x="83.6101%" y="1509" width="0.0115%" height="15" fill="rgb(235,172,38)" fg:x="29098" fg:w="4"/><text x="83.8601%" y="1519.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (4 samples, 0.01%)</title><rect x="83.6101%" y="1493" width="0.0115%" height="15" fill="rgb(235,63,18)" fg:x="29098" fg:w="4"/><text x="83.8601%" y="1503.50"></text></g><g><title>rayon_core::job::JobRef::execute (4 samples, 0.01%)</title><rect x="83.6101%" y="1477" width="0.0115%" height="15" fill="rgb(225,4,7)" fg:x="29098" fg:w="4"/><text x="83.8601%" y="1487.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (4 samples, 0.01%)</title><rect x="83.6101%" y="1461" width="0.0115%" height="15" fill="rgb(231,61,1)" fg:x="29098" fg:w="4"/><text x="83.8601%" y="1471.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (4 samples, 0.01%)</title><rect x="83.6101%" y="1445" width="0.0115%" height="15" fill="rgb(241,155,22)" fg:x="29098" fg:w="4"/><text x="83.8601%" y="1455.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (4 samples, 0.01%)</title><rect x="83.6101%" y="1429" width="0.0115%" height="15" fill="rgb(209,100,26)" fg:x="29098" fg:w="4"/><text x="83.8601%" y="1439.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.01%)</title><rect x="83.6101%" y="1413" width="0.0115%" height="15" fill="rgb(248,181,15)" fg:x="29098" fg:w="4"/><text x="83.8601%" y="1423.50"></text></g><g><title>std::panicking::try (4 samples, 0.01%)</title><rect x="83.6101%" y="1397" width="0.0115%" height="15" fill="rgb(214,94,31)" fg:x="29098" fg:w="4"/><text x="83.8601%" y="1407.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.01%)</title><rect x="83.6101%" y="1381" width="0.0115%" height="15" fill="rgb(207,16,42)" fg:x="29098" fg:w="4"/><text x="83.8601%" y="1391.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.01%)</title><rect x="83.6101%" y="1365" width="0.0115%" height="15" fill="rgb(208,127,13)" fg:x="29098" fg:w="4"/><text x="83.8601%" y="1375.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (4 samples, 0.01%)</title><rect x="83.6101%" y="1349" width="0.0115%" height="15" fill="rgb(220,211,18)" fg:x="29098" fg:w="4"/><text x="83.8601%" y="1359.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (4 samples, 0.01%)</title><rect x="83.6101%" y="1333" width="0.0115%" height="15" fill="rgb(221,55,38)" fg:x="29098" fg:w="4"/><text x="83.8601%" y="1343.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.01%)</title><rect x="83.6101%" y="1317" width="0.0115%" height="15" fill="rgb(252,219,45)" fg:x="29098" fg:w="4"/><text x="83.8601%" y="1327.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.01%)</title><rect x="83.6101%" y="1301" width="0.0115%" height="15" fill="rgb(248,53,35)" fg:x="29098" fg:w="4"/><text x="83.8601%" y="1311.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.01%)</title><rect x="83.6101%" y="1285" width="0.0115%" height="15" fill="rgb(210,87,2)" fg:x="29098" fg:w="4"/><text x="83.8601%" y="1295.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.01%)</title><rect x="83.6101%" y="1269" width="0.0115%" height="15" fill="rgb(239,133,9)" fg:x="29098" fg:w="4"/><text x="83.8601%" y="1279.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.01%)</title><rect x="83.6101%" y="1253" width="0.0115%" height="15" fill="rgb(214,114,5)" fg:x="29098" fg:w="4"/><text x="83.8601%" y="1263.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (4 samples, 0.01%)</title><rect x="83.6101%" y="1237" width="0.0115%" height="15" fill="rgb(206,124,24)" fg:x="29098" fg:w="4"/><text x="83.8601%" y="1247.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (4 samples, 0.01%)</title><rect x="83.6101%" y="1221" width="0.0115%" height="15" fill="rgb(212,57,33)" fg:x="29098" fg:w="4"/><text x="83.8601%" y="1231.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (4 samples, 0.01%)</title><rect x="83.6101%" y="1205" width="0.0115%" height="15" fill="rgb(246,21,20)" fg:x="29098" fg:w="4"/><text x="83.8601%" y="1215.50"></text></g><g><title>rayon_core::job::JobRef::execute (4 samples, 0.01%)</title><rect x="83.6101%" y="1189" width="0.0115%" height="15" fill="rgb(253,210,39)" fg:x="29098" fg:w="4"/><text x="83.8601%" y="1199.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (4 samples, 0.01%)</title><rect x="83.6101%" y="1173" width="0.0115%" height="15" fill="rgb(209,187,24)" fg:x="29098" fg:w="4"/><text x="83.8601%" y="1183.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (4 samples, 0.01%)</title><rect x="83.6101%" y="1157" width="0.0115%" height="15" fill="rgb(246,136,17)" fg:x="29098" fg:w="4"/><text x="83.8601%" y="1167.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (4 samples, 0.01%)</title><rect x="83.6101%" y="1141" width="0.0115%" height="15" fill="rgb(211,0,30)" fg:x="29098" fg:w="4"/><text x="83.8601%" y="1151.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.01%)</title><rect x="83.6101%" y="1125" width="0.0115%" height="15" fill="rgb(216,199,7)" fg:x="29098" fg:w="4"/><text x="83.8601%" y="1135.50"></text></g><g><title>std::panicking::try (4 samples, 0.01%)</title><rect x="83.6101%" y="1109" width="0.0115%" height="15" fill="rgb(207,210,19)" fg:x="29098" fg:w="4"/><text x="83.8601%" y="1119.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.01%)</title><rect x="83.6101%" y="1093" width="0.0115%" height="15" fill="rgb(237,187,39)" fg:x="29098" fg:w="4"/><text x="83.8601%" y="1103.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.01%)</title><rect x="83.6101%" y="1077" width="0.0115%" height="15" fill="rgb(243,194,42)" fg:x="29098" fg:w="4"/><text x="83.8601%" y="1087.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (4 samples, 0.01%)</title><rect x="83.6101%" y="1061" width="0.0115%" height="15" fill="rgb(225,194,19)" fg:x="29098" fg:w="4"/><text x="83.8601%" y="1071.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (4 samples, 0.01%)</title><rect x="83.6101%" y="1045" width="0.0115%" height="15" fill="rgb(224,192,14)" fg:x="29098" fg:w="4"/><text x="83.8601%" y="1055.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.01%)</title><rect x="83.6101%" y="1029" width="0.0115%" height="15" fill="rgb(252,21,18)" fg:x="29098" fg:w="4"/><text x="83.8601%" y="1039.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.01%)</title><rect x="83.6101%" y="1013" width="0.0115%" height="15" fill="rgb(229,69,19)" fg:x="29098" fg:w="4"/><text x="83.8601%" y="1023.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.01%)</title><rect x="83.6101%" y="997" width="0.0115%" height="15" fill="rgb(251,31,53)" fg:x="29098" fg:w="4"/><text x="83.8601%" y="1007.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.01%)</title><rect x="83.6101%" y="981" width="0.0115%" height="15" fill="rgb(218,39,50)" fg:x="29098" fg:w="4"/><text x="83.8601%" y="991.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.01%)</title><rect x="83.6101%" y="965" width="0.0115%" height="15" fill="rgb(231,50,17)" fg:x="29098" fg:w="4"/><text x="83.8601%" y="975.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (4 samples, 0.01%)</title><rect x="83.6101%" y="949" width="0.0115%" height="15" fill="rgb(223,217,31)" fg:x="29098" fg:w="4"/><text x="83.8601%" y="959.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (4 samples, 0.01%)</title><rect x="83.6101%" y="933" width="0.0115%" height="15" fill="rgb(225,91,12)" fg:x="29098" fg:w="4"/><text x="83.8601%" y="943.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (4 samples, 0.01%)</title><rect x="83.6101%" y="917" width="0.0115%" height="15" fill="rgb(242,58,43)" fg:x="29098" fg:w="4"/><text x="83.8601%" y="927.50"></text></g><g><title>rayon_core::job::JobRef::execute (4 samples, 0.01%)</title><rect x="83.6101%" y="901" width="0.0115%" height="15" fill="rgb(242,32,21)" fg:x="29098" fg:w="4"/><text x="83.8601%" y="911.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (4 samples, 0.01%)</title><rect x="83.6101%" y="885" width="0.0115%" height="15" fill="rgb(211,127,1)" fg:x="29098" fg:w="4"/><text x="83.8601%" y="895.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (4 samples, 0.01%)</title><rect x="83.6101%" y="869" width="0.0115%" height="15" fill="rgb(231,93,13)" fg:x="29098" fg:w="4"/><text x="83.8601%" y="879.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (4 samples, 0.01%)</title><rect x="83.6101%" y="853" width="0.0115%" height="15" fill="rgb(218,83,4)" fg:x="29098" fg:w="4"/><text x="83.8601%" y="863.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.01%)</title><rect x="83.6101%" y="837" width="0.0115%" height="15" fill="rgb(230,218,10)" fg:x="29098" fg:w="4"/><text x="83.8601%" y="847.50"></text></g><g><title>std::panicking::try (4 samples, 0.01%)</title><rect x="83.6101%" y="821" width="0.0115%" height="15" fill="rgb(235,127,18)" fg:x="29098" fg:w="4"/><text x="83.8601%" y="831.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.01%)</title><rect x="83.6101%" y="805" width="0.0115%" height="15" fill="rgb(213,137,46)" fg:x="29098" fg:w="4"/><text x="83.8601%" y="815.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.01%)</title><rect x="83.6101%" y="789" width="0.0115%" height="15" fill="rgb(235,179,24)" fg:x="29098" fg:w="4"/><text x="83.8601%" y="799.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (4 samples, 0.01%)</title><rect x="83.6101%" y="773" width="0.0115%" height="15" fill="rgb(247,58,49)" fg:x="29098" fg:w="4"/><text x="83.8601%" y="783.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (4 samples, 0.01%)</title><rect x="83.6101%" y="757" width="0.0115%" height="15" fill="rgb(242,222,5)" fg:x="29098" fg:w="4"/><text x="83.8601%" y="767.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.01%)</title><rect x="83.6101%" y="741" width="0.0115%" height="15" fill="rgb(230,16,48)" fg:x="29098" fg:w="4"/><text x="83.8601%" y="751.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.01%)</title><rect x="83.6101%" y="725" width="0.0115%" height="15" fill="rgb(241,192,16)" fg:x="29098" fg:w="4"/><text x="83.8601%" y="735.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.01%)</title><rect x="83.6101%" y="709" width="0.0115%" height="15" fill="rgb(209,25,37)" fg:x="29098" fg:w="4"/><text x="83.8601%" y="719.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.01%)</title><rect x="83.6101%" y="693" width="0.0115%" height="15" fill="rgb(229,215,13)" fg:x="29098" fg:w="4"/><text x="83.8601%" y="703.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.01%)</title><rect x="83.6101%" y="677" width="0.0115%" height="15" fill="rgb(213,199,8)" fg:x="29098" fg:w="4"/><text x="83.8601%" y="687.50"></text></g><g><title>par_exec_3 (26 samples, 0.07%)</title><rect x="83.5555%" y="2789" width="0.0747%" height="15" fill="rgb(226,151,19)" fg:x="29079" fg:w="26"/><text x="83.8055%" y="2799.50"></text></g><g><title>__GI___clone3 (26 samples, 0.07%)</title><rect x="83.5555%" y="2773" width="0.0747%" height="15" fill="rgb(254,183,12)" fg:x="29079" fg:w="26"/><text x="83.8055%" y="2783.50"></text></g><g><title>start_thread (26 samples, 0.07%)</title><rect x="83.5555%" y="2757" width="0.0747%" height="15" fill="rgb(245,8,3)" fg:x="29079" fg:w="26"/><text x="83.8055%" y="2767.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (26 samples, 0.07%)</title><rect x="83.5555%" y="2741" width="0.0747%" height="15" fill="rgb(229,159,35)" fg:x="29079" fg:w="26"/><text x="83.8055%" y="2751.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (26 samples, 0.07%)</title><rect x="83.5555%" y="2725" width="0.0747%" height="15" fill="rgb(209,145,1)" fg:x="29079" fg:w="26"/><text x="83.8055%" y="2735.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (26 samples, 0.07%)</title><rect x="83.5555%" y="2709" width="0.0747%" height="15" fill="rgb(228,183,16)" fg:x="29079" fg:w="26"/><text x="83.8055%" y="2719.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (26 samples, 0.07%)</title><rect x="83.5555%" y="2693" width="0.0747%" height="15" fill="rgb(222,68,0)" fg:x="29079" fg:w="26"/><text x="83.8055%" y="2703.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (26 samples, 0.07%)</title><rect x="83.5555%" y="2677" width="0.0747%" height="15" fill="rgb(209,130,50)" fg:x="29079" fg:w="26"/><text x="83.8055%" y="2687.50"></text></g><g><title>std::panic::catch_unwind (26 samples, 0.07%)</title><rect x="83.5555%" y="2661" width="0.0747%" height="15" fill="rgb(228,176,44)" fg:x="29079" fg:w="26"/><text x="83.8055%" y="2671.50"></text></g><g><title>std::panicking::try (26 samples, 0.07%)</title><rect x="83.5555%" y="2645" width="0.0747%" height="15" fill="rgb(221,164,2)" fg:x="29079" fg:w="26"/><text x="83.8055%" y="2655.50"></text></g><g><title>std::panicking::try::do_call (26 samples, 0.07%)</title><rect x="83.5555%" y="2629" width="0.0747%" height="15" fill="rgb(249,199,49)" fg:x="29079" fg:w="26"/><text x="83.8055%" y="2639.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (26 samples, 0.07%)</title><rect x="83.5555%" y="2613" width="0.0747%" height="15" fill="rgb(228,205,53)" fg:x="29079" fg:w="26"/><text x="83.8055%" y="2623.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (26 samples, 0.07%)</title><rect x="83.5555%" y="2597" width="0.0747%" height="15" fill="rgb(235,77,20)" fg:x="29079" fg:w="26"/><text x="83.8055%" y="2607.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (26 samples, 0.07%)</title><rect x="83.5555%" y="2581" width="0.0747%" height="15" fill="rgb(227,147,34)" fg:x="29079" fg:w="26"/><text x="83.8055%" y="2591.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (26 samples, 0.07%)</title><rect x="83.5555%" y="2565" width="0.0747%" height="15" fill="rgb(226,203,52)" fg:x="29079" fg:w="26"/><text x="83.8055%" y="2575.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (26 samples, 0.07%)</title><rect x="83.5555%" y="2549" width="0.0747%" height="15" fill="rgb(226,186,23)" fg:x="29079" fg:w="26"/><text x="83.8055%" y="2559.50"></text></g><g><title>rayon_core::registry::main_loop (26 samples, 0.07%)</title><rect x="83.5555%" y="2533" width="0.0747%" height="15" fill="rgb(236,13,30)" fg:x="29079" fg:w="26"/><text x="83.8055%" y="2543.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (26 samples, 0.07%)</title><rect x="83.5555%" y="2517" width="0.0747%" height="15" fill="rgb(228,121,22)" fg:x="29079" fg:w="26"/><text x="83.8055%" y="2527.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (26 samples, 0.07%)</title><rect x="83.5555%" y="2501" width="0.0747%" height="15" fill="rgb(248,222,26)" fg:x="29079" fg:w="26"/><text x="83.8055%" y="2511.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (26 samples, 0.07%)</title><rect x="83.5555%" y="2485" width="0.0747%" height="15" fill="rgb(251,72,25)" fg:x="29079" fg:w="26"/><text x="83.8055%" y="2495.50"></text></g><g><title>rayon_core::job::JobRef::execute (26 samples, 0.07%)</title><rect x="83.5555%" y="2469" width="0.0747%" height="15" fill="rgb(223,114,24)" fg:x="29079" fg:w="26"/><text x="83.8055%" y="2479.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (26 samples, 0.07%)</title><rect x="83.5555%" y="2453" width="0.0747%" height="15" fill="rgb(232,190,43)" fg:x="29079" fg:w="26"/><text x="83.8055%" y="2463.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (26 samples, 0.07%)</title><rect x="83.5555%" y="2437" width="0.0747%" height="15" fill="rgb(208,90,0)" fg:x="29079" fg:w="26"/><text x="83.8055%" y="2447.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (26 samples, 0.07%)</title><rect x="83.5555%" y="2421" width="0.0747%" height="15" fill="rgb(234,149,31)" fg:x="29079" fg:w="26"/><text x="83.8055%" y="2431.50"></text></g><g><title>std::panic::catch_unwind (26 samples, 0.07%)</title><rect x="83.5555%" y="2405" width="0.0747%" height="15" fill="rgb(235,188,36)" fg:x="29079" fg:w="26"/><text x="83.8055%" y="2415.50"></text></g><g><title>std::panicking::try (26 samples, 0.07%)</title><rect x="83.5555%" y="2389" width="0.0747%" height="15" fill="rgb(219,59,51)" fg:x="29079" fg:w="26"/><text x="83.8055%" y="2399.50"></text></g><g><title>std::panicking::try::do_call (26 samples, 0.07%)</title><rect x="83.5555%" y="2373" width="0.0747%" height="15" fill="rgb(236,101,40)" fg:x="29079" fg:w="26"/><text x="83.8055%" y="2383.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (26 samples, 0.07%)</title><rect x="83.5555%" y="2357" width="0.0747%" height="15" fill="rgb(235,33,7)" fg:x="29079" fg:w="26"/><text x="83.8055%" y="2367.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (26 samples, 0.07%)</title><rect x="83.5555%" y="2341" width="0.0747%" height="15" fill="rgb(213,169,26)" fg:x="29079" fg:w="26"/><text x="83.8055%" y="2351.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (26 samples, 0.07%)</title><rect x="83.5555%" y="2325" width="0.0747%" height="15" fill="rgb(218,99,34)" fg:x="29079" fg:w="26"/><text x="83.8055%" y="2335.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (26 samples, 0.07%)</title><rect x="83.5555%" y="2309" width="0.0747%" height="15" fill="rgb(210,57,24)" fg:x="29079" fg:w="26"/><text x="83.8055%" y="2319.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (26 samples, 0.07%)</title><rect x="83.5555%" y="2293" width="0.0747%" height="15" fill="rgb(231,181,54)" fg:x="29079" fg:w="26"/><text x="83.8055%" y="2303.50"></text></g><g><title>rayon_core::join::join_context (26 samples, 0.07%)</title><rect x="83.5555%" y="2277" width="0.0747%" height="15" fill="rgb(251,188,48)" fg:x="29079" fg:w="26"/><text x="83.8055%" y="2287.50"></text></g><g><title>rayon_core::registry::in_worker (26 samples, 0.07%)</title><rect x="83.5555%" y="2261" width="0.0747%" height="15" fill="rgb(243,12,45)" fg:x="29079" fg:w="26"/><text x="83.8055%" y="2271.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (26 samples, 0.07%)</title><rect x="83.5555%" y="2245" width="0.0747%" height="15" fill="rgb(250,197,9)" fg:x="29079" fg:w="26"/><text x="83.8055%" y="2255.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (26 samples, 0.07%)</title><rect x="83.5555%" y="2229" width="0.0747%" height="15" fill="rgb(235,149,35)" fg:x="29079" fg:w="26"/><text x="83.8055%" y="2239.50"></text></g><g><title>std::panic::catch_unwind (26 samples, 0.07%)</title><rect x="83.5555%" y="2213" width="0.0747%" height="15" fill="rgb(219,27,19)" fg:x="29079" fg:w="26"/><text x="83.8055%" y="2223.50"></text></g><g><title>std::panicking::try (26 samples, 0.07%)</title><rect x="83.5555%" y="2197" width="0.0747%" height="15" fill="rgb(244,78,31)" fg:x="29079" fg:w="26"/><text x="83.8055%" y="2207.50"></text></g><g><title>std::panicking::try::do_call (26 samples, 0.07%)</title><rect x="83.5555%" y="2181" width="0.0747%" height="15" fill="rgb(241,13,4)" fg:x="29079" fg:w="26"/><text x="83.8055%" y="2191.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (26 samples, 0.07%)</title><rect x="83.5555%" y="2165" width="0.0747%" height="15" fill="rgb(212,194,26)" fg:x="29079" fg:w="26"/><text x="83.8055%" y="2175.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (26 samples, 0.07%)</title><rect x="83.5555%" y="2149" width="0.0747%" height="15" fill="rgb(236,80,11)" fg:x="29079" fg:w="26"/><text x="83.8055%" y="2159.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (26 samples, 0.07%)</title><rect x="83.5555%" y="2133" width="0.0747%" height="15" fill="rgb(206,1,24)" fg:x="29079" fg:w="26"/><text x="83.8055%" y="2143.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (26 samples, 0.07%)</title><rect x="83.5555%" y="2117" width="0.0747%" height="15" fill="rgb(238,215,50)" fg:x="29079" fg:w="26"/><text x="83.8055%" y="2127.50"></text></g><g><title>rayon_core::join::join_context (26 samples, 0.07%)</title><rect x="83.5555%" y="2101" width="0.0747%" height="15" fill="rgb(254,126,32)" fg:x="29079" fg:w="26"/><text x="83.8055%" y="2111.50"></text></g><g><title>rayon_core::registry::in_worker (26 samples, 0.07%)</title><rect x="83.5555%" y="2085" width="0.0747%" height="15" fill="rgb(206,111,53)" fg:x="29079" fg:w="26"/><text x="83.8055%" y="2095.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (26 samples, 0.07%)</title><rect x="83.5555%" y="2069" width="0.0747%" height="15" fill="rgb(218,72,44)" fg:x="29079" fg:w="26"/><text x="83.8055%" y="2079.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (24 samples, 0.07%)</title><rect x="83.5613%" y="2053" width="0.0690%" height="15" fill="rgb(238,25,3)" fg:x="29081" fg:w="24"/><text x="83.8113%" y="2063.50"></text></g><g><title>std::panic::catch_unwind (24 samples, 0.07%)</title><rect x="83.5613%" y="2037" width="0.0690%" height="15" fill="rgb(250,191,7)" fg:x="29081" fg:w="24"/><text x="83.8113%" y="2047.50"></text></g><g><title>std::panicking::try (24 samples, 0.07%)</title><rect x="83.5613%" y="2021" width="0.0690%" height="15" fill="rgb(238,56,30)" fg:x="29081" fg:w="24"/><text x="83.8113%" y="2031.50"></text></g><g><title>std::panicking::try::do_call (24 samples, 0.07%)</title><rect x="83.5613%" y="2005" width="0.0690%" height="15" fill="rgb(210,27,45)" fg:x="29081" fg:w="24"/><text x="83.8113%" y="2015.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (24 samples, 0.07%)</title><rect x="83.5613%" y="1989" width="0.0690%" height="15" fill="rgb(207,10,50)" fg:x="29081" fg:w="24"/><text x="83.8113%" y="1999.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (24 samples, 0.07%)</title><rect x="83.5613%" y="1973" width="0.0690%" height="15" fill="rgb(249,30,23)" fg:x="29081" fg:w="24"/><text x="83.8113%" y="1983.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (24 samples, 0.07%)</title><rect x="83.5613%" y="1957" width="0.0690%" height="15" fill="rgb(250,80,12)" fg:x="29081" fg:w="24"/><text x="83.8113%" y="1967.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (24 samples, 0.07%)</title><rect x="83.5613%" y="1941" width="0.0690%" height="15" fill="rgb(210,221,37)" fg:x="29081" fg:w="24"/><text x="83.8113%" y="1951.50"></text></g><g><title>rayon_core::join::join_context (24 samples, 0.07%)</title><rect x="83.5613%" y="1925" width="0.0690%" height="15" fill="rgb(205,96,24)" fg:x="29081" fg:w="24"/><text x="83.8113%" y="1935.50"></text></g><g><title>rayon_core::registry::in_worker (24 samples, 0.07%)</title><rect x="83.5613%" y="1909" width="0.0690%" height="15" fill="rgb(247,104,22)" fg:x="29081" fg:w="24"/><text x="83.8113%" y="1919.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (24 samples, 0.07%)</title><rect x="83.5613%" y="1893" width="0.0690%" height="15" fill="rgb(222,61,53)" fg:x="29081" fg:w="24"/><text x="83.8113%" y="1903.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (19 samples, 0.05%)</title><rect x="83.5757%" y="1877" width="0.0546%" height="15" fill="rgb(241,11,53)" fg:x="29086" fg:w="19"/><text x="83.8257%" y="1887.50"></text></g><g><title>std::panic::catch_unwind (19 samples, 0.05%)</title><rect x="83.5757%" y="1861" width="0.0546%" height="15" fill="rgb(230,111,47)" fg:x="29086" fg:w="19"/><text x="83.8257%" y="1871.50"></text></g><g><title>std::panicking::try (19 samples, 0.05%)</title><rect x="83.5757%" y="1845" width="0.0546%" height="15" fill="rgb(218,187,29)" fg:x="29086" fg:w="19"/><text x="83.8257%" y="1855.50"></text></g><g><title>std::panicking::try::do_call (19 samples, 0.05%)</title><rect x="83.5757%" y="1829" width="0.0546%" height="15" fill="rgb(210,121,46)" fg:x="29086" fg:w="19"/><text x="83.8257%" y="1839.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (19 samples, 0.05%)</title><rect x="83.5757%" y="1813" width="0.0546%" height="15" fill="rgb(250,43,19)" fg:x="29086" fg:w="19"/><text x="83.8257%" y="1823.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (19 samples, 0.05%)</title><rect x="83.5757%" y="1797" width="0.0546%" height="15" fill="rgb(238,61,12)" fg:x="29086" fg:w="19"/><text x="83.8257%" y="1807.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (19 samples, 0.05%)</title><rect x="83.5757%" y="1781" width="0.0546%" height="15" fill="rgb(251,198,9)" fg:x="29086" fg:w="19"/><text x="83.8257%" y="1791.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (19 samples, 0.05%)</title><rect x="83.5757%" y="1765" width="0.0546%" height="15" fill="rgb(214,192,38)" fg:x="29086" fg:w="19"/><text x="83.8257%" y="1775.50"></text></g><g><title>rayon_core::join::join_context (19 samples, 0.05%)</title><rect x="83.5757%" y="1749" width="0.0546%" height="15" fill="rgb(214,73,19)" fg:x="29086" fg:w="19"/><text x="83.8257%" y="1759.50"></text></g><g><title>rayon_core::registry::in_worker (19 samples, 0.05%)</title><rect x="83.5757%" y="1733" width="0.0546%" height="15" fill="rgb(249,222,49)" fg:x="29086" fg:w="19"/><text x="83.8257%" y="1743.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (19 samples, 0.05%)</title><rect x="83.5757%" y="1717" width="0.0546%" height="15" fill="rgb(231,181,54)" fg:x="29086" fg:w="19"/><text x="83.8257%" y="1727.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (10 samples, 0.03%)</title><rect x="83.6015%" y="1701" width="0.0287%" height="15" fill="rgb(240,1,13)" fg:x="29095" fg:w="10"/><text x="83.8515%" y="1711.50"></text></g><g><title>std::panic::catch_unwind (10 samples, 0.03%)</title><rect x="83.6015%" y="1685" width="0.0287%" height="15" fill="rgb(225,21,16)" fg:x="29095" fg:w="10"/><text x="83.8515%" y="1695.50"></text></g><g><title>std::panicking::try (10 samples, 0.03%)</title><rect x="83.6015%" y="1669" width="0.0287%" height="15" fill="rgb(246,176,50)" fg:x="29095" fg:w="10"/><text x="83.8515%" y="1679.50"></text></g><g><title>std::panicking::try::do_call (10 samples, 0.03%)</title><rect x="83.6015%" y="1653" width="0.0287%" height="15" fill="rgb(208,96,50)" fg:x="29095" fg:w="10"/><text x="83.8515%" y="1663.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (10 samples, 0.03%)</title><rect x="83.6015%" y="1637" width="0.0287%" height="15" fill="rgb(240,219,19)" fg:x="29095" fg:w="10"/><text x="83.8515%" y="1647.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (10 samples, 0.03%)</title><rect x="83.6015%" y="1621" width="0.0287%" height="15" fill="rgb(234,73,5)" fg:x="29095" fg:w="10"/><text x="83.8515%" y="1631.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (10 samples, 0.03%)</title><rect x="83.6015%" y="1605" width="0.0287%" height="15" fill="rgb(225,52,53)" fg:x="29095" fg:w="10"/><text x="83.8515%" y="1615.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.03%)</title><rect x="83.6015%" y="1589" width="0.0287%" height="15" fill="rgb(250,12,14)" fg:x="29095" fg:w="10"/><text x="83.8515%" y="1599.50"></text></g><g><title>rayon_core::join::join_context (10 samples, 0.03%)</title><rect x="83.6015%" y="1573" width="0.0287%" height="15" fill="rgb(242,185,54)" fg:x="29095" fg:w="10"/><text x="83.8515%" y="1583.50"></text></g><g><title>rayon_core::registry::in_worker (10 samples, 0.03%)</title><rect x="83.6015%" y="1557" width="0.0287%" height="15" fill="rgb(211,206,31)" fg:x="29095" fg:w="10"/><text x="83.8515%" y="1567.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (10 samples, 0.03%)</title><rect x="83.6015%" y="1541" width="0.0287%" height="15" fill="rgb(252,10,33)" fg:x="29095" fg:w="10"/><text x="83.8515%" y="1551.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (5 samples, 0.01%)</title><rect x="83.6331%" y="1877" width="0.0144%" height="15" fill="rgb(216,26,7)" fg:x="29106" fg:w="5"/><text x="83.8831%" y="1887.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (5 samples, 0.01%)</title><rect x="83.6331%" y="1861" width="0.0144%" height="15" fill="rgb(228,112,40)" fg:x="29106" fg:w="5"/><text x="83.8831%" y="1871.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (5 samples, 0.01%)</title><rect x="83.6331%" y="1845" width="0.0144%" height="15" fill="rgb(212,21,16)" fg:x="29106" fg:w="5"/><text x="83.8831%" y="1855.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (5 samples, 0.01%)</title><rect x="83.6331%" y="1829" width="0.0144%" height="15" fill="rgb(249,3,29)" fg:x="29106" fg:w="5"/><text x="83.8831%" y="1839.50"></text></g><g><title>rayon_core::join::join_context (5 samples, 0.01%)</title><rect x="83.6331%" y="1813" width="0.0144%" height="15" fill="rgb(221,42,51)" fg:x="29106" fg:w="5"/><text x="83.8831%" y="1823.50"></text></g><g><title>rayon_core::registry::in_worker (5 samples, 0.01%)</title><rect x="83.6331%" y="1797" width="0.0144%" height="15" fill="rgb(225,90,21)" fg:x="29106" fg:w="5"/><text x="83.8831%" y="1807.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5 samples, 0.01%)</title><rect x="83.6331%" y="1781" width="0.0144%" height="15" fill="rgb(242,131,5)" fg:x="29106" fg:w="5"/><text x="83.8831%" y="1791.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (6 samples, 0.02%)</title><rect x="83.6475%" y="1877" width="0.0172%" height="15" fill="rgb(220,187,28)" fg:x="29111" fg:w="6"/><text x="83.8975%" y="1887.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (6 samples, 0.02%)</title><rect x="83.6475%" y="1861" width="0.0172%" height="15" fill="rgb(210,75,48)" fg:x="29111" fg:w="6"/><text x="83.8975%" y="1871.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (6 samples, 0.02%)</title><rect x="83.6475%" y="1845" width="0.0172%" height="15" fill="rgb(211,91,40)" fg:x="29111" fg:w="6"/><text x="83.8975%" y="1855.50"></text></g><g><title>rayon_core::job::JobRef::execute (6 samples, 0.02%)</title><rect x="83.6475%" y="1829" width="0.0172%" height="15" fill="rgb(205,43,18)" fg:x="29111" fg:w="6"/><text x="83.8975%" y="1839.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (6 samples, 0.02%)</title><rect x="83.6475%" y="1813" width="0.0172%" height="15" fill="rgb(207,123,11)" fg:x="29111" fg:w="6"/><text x="83.8975%" y="1823.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (6 samples, 0.02%)</title><rect x="83.6475%" y="1797" width="0.0172%" height="15" fill="rgb(235,89,39)" fg:x="29111" fg:w="6"/><text x="83.8975%" y="1807.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (6 samples, 0.02%)</title><rect x="83.6475%" y="1781" width="0.0172%" height="15" fill="rgb(245,217,27)" fg:x="29111" fg:w="6"/><text x="83.8975%" y="1791.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.02%)</title><rect x="83.6475%" y="1765" width="0.0172%" height="15" fill="rgb(216,55,17)" fg:x="29111" fg:w="6"/><text x="83.8975%" y="1775.50"></text></g><g><title>std::panicking::try (6 samples, 0.02%)</title><rect x="83.6475%" y="1749" width="0.0172%" height="15" fill="rgb(252,116,44)" fg:x="29111" fg:w="6"/><text x="83.8975%" y="1759.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.02%)</title><rect x="83.6475%" y="1733" width="0.0172%" height="15" fill="rgb(229,153,4)" fg:x="29111" fg:w="6"/><text x="83.8975%" y="1743.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6 samples, 0.02%)</title><rect x="83.6475%" y="1717" width="0.0172%" height="15" fill="rgb(222,24,35)" fg:x="29111" fg:w="6"/><text x="83.8975%" y="1727.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (6 samples, 0.02%)</title><rect x="83.6475%" y="1701" width="0.0172%" height="15" fill="rgb(214,26,20)" fg:x="29111" fg:w="6"/><text x="83.8975%" y="1711.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (6 samples, 0.02%)</title><rect x="83.6475%" y="1685" width="0.0172%" height="15" fill="rgb(215,14,45)" fg:x="29111" fg:w="6"/><text x="83.8975%" y="1695.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (6 samples, 0.02%)</title><rect x="83.6475%" y="1669" width="0.0172%" height="15" fill="rgb(217,212,50)" fg:x="29111" fg:w="6"/><text x="83.8975%" y="1679.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (6 samples, 0.02%)</title><rect x="83.6475%" y="1653" width="0.0172%" height="15" fill="rgb(230,172,52)" fg:x="29111" fg:w="6"/><text x="83.8975%" y="1663.50"></text></g><g><title>rayon_core::join::join_context (6 samples, 0.02%)</title><rect x="83.6475%" y="1637" width="0.0172%" height="15" fill="rgb(210,48,36)" fg:x="29111" fg:w="6"/><text x="83.8975%" y="1647.50"></text></g><g><title>rayon_core::registry::in_worker (6 samples, 0.02%)</title><rect x="83.6475%" y="1621" width="0.0172%" height="15" fill="rgb(216,213,32)" fg:x="29111" fg:w="6"/><text x="83.8975%" y="1631.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (6 samples, 0.02%)</title><rect x="83.6475%" y="1605" width="0.0172%" height="15" fill="rgb(237,202,41)" fg:x="29111" fg:w="6"/><text x="83.8975%" y="1615.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (6 samples, 0.02%)</title><rect x="83.6475%" y="1589" width="0.0172%" height="15" fill="rgb(209,14,29)" fg:x="29111" fg:w="6"/><text x="83.8975%" y="1599.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.02%)</title><rect x="83.6475%" y="1573" width="0.0172%" height="15" fill="rgb(219,29,3)" fg:x="29111" fg:w="6"/><text x="83.8975%" y="1583.50"></text></g><g><title>std::panicking::try (6 samples, 0.02%)</title><rect x="83.6475%" y="1557" width="0.0172%" height="15" fill="rgb(229,13,49)" fg:x="29111" fg:w="6"/><text x="83.8975%" y="1567.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.02%)</title><rect x="83.6475%" y="1541" width="0.0172%" height="15" fill="rgb(210,206,2)" fg:x="29111" fg:w="6"/><text x="83.8975%" y="1551.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6 samples, 0.02%)</title><rect x="83.6475%" y="1525" width="0.0172%" height="15" fill="rgb(216,154,46)" fg:x="29111" fg:w="6"/><text x="83.8975%" y="1535.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (6 samples, 0.02%)</title><rect x="83.6475%" y="1509" width="0.0172%" height="15" fill="rgb(211,170,52)" fg:x="29111" fg:w="6"/><text x="83.8975%" y="1519.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (6 samples, 0.02%)</title><rect x="83.6475%" y="1493" width="0.0172%" height="15" fill="rgb(233,109,47)" fg:x="29111" fg:w="6"/><text x="83.8975%" y="1503.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (6 samples, 0.02%)</title><rect x="83.6475%" y="1477" width="0.0172%" height="15" fill="rgb(208,212,30)" fg:x="29111" fg:w="6"/><text x="83.8975%" y="1487.50"></text></g><g><title>rayon_core::join::join_context (6 samples, 0.02%)</title><rect x="83.6475%" y="1461" width="0.0172%" height="15" fill="rgb(215,190,19)" fg:x="29111" fg:w="6"/><text x="83.8975%" y="1471.50"></text></g><g><title>rayon_core::registry::in_worker (6 samples, 0.02%)</title><rect x="83.6475%" y="1445" width="0.0172%" height="15" fill="rgb(207,164,53)" fg:x="29111" fg:w="6"/><text x="83.8975%" y="1455.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (6 samples, 0.02%)</title><rect x="83.6475%" y="1429" width="0.0172%" height="15" fill="rgb(213,87,49)" fg:x="29111" fg:w="6"/><text x="83.8975%" y="1439.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (5 samples, 0.01%)</title><rect x="83.6504%" y="1413" width="0.0144%" height="15" fill="rgb(241,216,24)" fg:x="29112" fg:w="5"/><text x="83.9004%" y="1423.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.01%)</title><rect x="83.6504%" y="1397" width="0.0144%" height="15" fill="rgb(241,123,45)" fg:x="29112" fg:w="5"/><text x="83.9004%" y="1407.50"></text></g><g><title>std::panicking::try (5 samples, 0.01%)</title><rect x="83.6504%" y="1381" width="0.0144%" height="15" fill="rgb(220,36,15)" fg:x="29112" fg:w="5"/><text x="83.9004%" y="1391.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.01%)</title><rect x="83.6504%" y="1365" width="0.0144%" height="15" fill="rgb(215,202,9)" fg:x="29112" fg:w="5"/><text x="83.9004%" y="1375.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5 samples, 0.01%)</title><rect x="83.6504%" y="1349" width="0.0144%" height="15" fill="rgb(252,71,26)" fg:x="29112" fg:w="5"/><text x="83.9004%" y="1359.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (5 samples, 0.01%)</title><rect x="83.6504%" y="1333" width="0.0144%" height="15" fill="rgb(243,195,19)" fg:x="29112" fg:w="5"/><text x="83.9004%" y="1343.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (5 samples, 0.01%)</title><rect x="83.6504%" y="1317" width="0.0144%" height="15" fill="rgb(207,167,27)" fg:x="29112" fg:w="5"/><text x="83.9004%" y="1327.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (5 samples, 0.01%)</title><rect x="83.6504%" y="1301" width="0.0144%" height="15" fill="rgb(250,146,54)" fg:x="29112" fg:w="5"/><text x="83.9004%" y="1311.50"></text></g><g><title>rayon_core::join::join_context (5 samples, 0.01%)</title><rect x="83.6504%" y="1285" width="0.0144%" height="15" fill="rgb(245,79,9)" fg:x="29112" fg:w="5"/><text x="83.9004%" y="1295.50"></text></g><g><title>rayon_core::registry::in_worker (5 samples, 0.01%)</title><rect x="83.6504%" y="1269" width="0.0144%" height="15" fill="rgb(234,197,22)" fg:x="29112" fg:w="5"/><text x="83.9004%" y="1279.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5 samples, 0.01%)</title><rect x="83.6504%" y="1253" width="0.0144%" height="15" fill="rgb(221,52,48)" fg:x="29112" fg:w="5"/><text x="83.9004%" y="1263.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (4 samples, 0.01%)</title><rect x="83.6647%" y="1701" width="0.0115%" height="15" fill="rgb(235,80,0)" fg:x="29117" fg:w="4"/><text x="83.9147%" y="1711.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (4 samples, 0.01%)</title><rect x="83.6647%" y="1685" width="0.0115%" height="15" fill="rgb(221,117,53)" fg:x="29117" fg:w="4"/><text x="83.9147%" y="1695.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.01%)</title><rect x="83.6647%" y="1669" width="0.0115%" height="15" fill="rgb(239,48,47)" fg:x="29117" fg:w="4"/><text x="83.9147%" y="1679.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.01%)</title><rect x="83.6647%" y="1653" width="0.0115%" height="15" fill="rgb(227,191,52)" fg:x="29117" fg:w="4"/><text x="83.9147%" y="1663.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.01%)</title><rect x="83.6647%" y="1637" width="0.0115%" height="15" fill="rgb(241,118,1)" fg:x="29117" fg:w="4"/><text x="83.9147%" y="1647.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.01%)</title><rect x="83.6647%" y="1621" width="0.0115%" height="15" fill="rgb(240,85,3)" fg:x="29117" fg:w="4"/><text x="83.9147%" y="1631.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.01%)</title><rect x="83.6647%" y="1605" width="0.0115%" height="15" fill="rgb(237,68,37)" fg:x="29117" fg:w="4"/><text x="83.9147%" y="1615.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (4 samples, 0.01%)</title><rect x="83.6877%" y="1413" width="0.0115%" height="15" fill="rgb(212,9,20)" fg:x="29125" fg:w="4"/><text x="83.9377%" y="1423.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (4 samples, 0.01%)</title><rect x="83.6877%" y="1397" width="0.0115%" height="15" fill="rgb(218,84,17)" fg:x="29125" fg:w="4"/><text x="83.9377%" y="1407.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (4 samples, 0.01%)</title><rect x="83.6877%" y="1381" width="0.0115%" height="15" fill="rgb(235,147,20)" fg:x="29125" fg:w="4"/><text x="83.9377%" y="1391.50"></text></g><g><title>rayon_core::job::JobRef::execute (4 samples, 0.01%)</title><rect x="83.6877%" y="1365" width="0.0115%" height="15" fill="rgb(208,224,1)" fg:x="29125" fg:w="4"/><text x="83.9377%" y="1375.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (4 samples, 0.01%)</title><rect x="83.6877%" y="1349" width="0.0115%" height="15" fill="rgb(232,97,50)" fg:x="29125" fg:w="4"/><text x="83.9377%" y="1359.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (4 samples, 0.01%)</title><rect x="83.6877%" y="1333" width="0.0115%" height="15" fill="rgb(238,15,45)" fg:x="29125" fg:w="4"/><text x="83.9377%" y="1343.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (4 samples, 0.01%)</title><rect x="83.6877%" y="1317" width="0.0115%" height="15" fill="rgb(231,46,18)" fg:x="29125" fg:w="4"/><text x="83.9377%" y="1327.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.01%)</title><rect x="83.6877%" y="1301" width="0.0115%" height="15" fill="rgb(254,169,10)" fg:x="29125" fg:w="4"/><text x="83.9377%" y="1311.50"></text></g><g><title>std::panicking::try (4 samples, 0.01%)</title><rect x="83.6877%" y="1285" width="0.0115%" height="15" fill="rgb(243,169,30)" fg:x="29125" fg:w="4"/><text x="83.9377%" y="1295.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.01%)</title><rect x="83.6877%" y="1269" width="0.0115%" height="15" fill="rgb(236,90,49)" fg:x="29125" fg:w="4"/><text x="83.9377%" y="1279.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.01%)</title><rect x="83.6877%" y="1253" width="0.0115%" height="15" fill="rgb(218,80,15)" fg:x="29125" fg:w="4"/><text x="83.9377%" y="1263.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (4 samples, 0.01%)</title><rect x="83.6877%" y="1237" width="0.0115%" height="15" fill="rgb(222,115,37)" fg:x="29125" fg:w="4"/><text x="83.9377%" y="1247.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (4 samples, 0.01%)</title><rect x="83.6877%" y="1221" width="0.0115%" height="15" fill="rgb(227,0,6)" fg:x="29125" fg:w="4"/><text x="83.9377%" y="1231.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.01%)</title><rect x="83.6877%" y="1205" width="0.0115%" height="15" fill="rgb(217,189,13)" fg:x="29125" fg:w="4"/><text x="83.9377%" y="1215.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.01%)</title><rect x="83.6877%" y="1189" width="0.0115%" height="15" fill="rgb(220,74,19)" fg:x="29125" fg:w="4"/><text x="83.9377%" y="1199.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.01%)</title><rect x="83.6877%" y="1173" width="0.0115%" height="15" fill="rgb(224,81,18)" fg:x="29125" fg:w="4"/><text x="83.9377%" y="1183.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.01%)</title><rect x="83.6877%" y="1157" width="0.0115%" height="15" fill="rgb(245,178,48)" fg:x="29125" fg:w="4"/><text x="83.9377%" y="1167.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.01%)</title><rect x="83.6877%" y="1141" width="0.0115%" height="15" fill="rgb(207,78,24)" fg:x="29125" fg:w="4"/><text x="83.9377%" y="1151.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (10 samples, 0.03%)</title><rect x="83.6848%" y="1525" width="0.0287%" height="15" fill="rgb(223,222,30)" fg:x="29124" fg:w="10"/><text x="83.9348%" y="1535.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (10 samples, 0.03%)</title><rect x="83.6848%" y="1509" width="0.0287%" height="15" fill="rgb(234,101,12)" fg:x="29124" fg:w="10"/><text x="83.9348%" y="1519.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (10 samples, 0.03%)</title><rect x="83.6848%" y="1493" width="0.0287%" height="15" fill="rgb(209,80,46)" fg:x="29124" fg:w="10"/><text x="83.9348%" y="1503.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.03%)</title><rect x="83.6848%" y="1477" width="0.0287%" height="15" fill="rgb(228,79,14)" fg:x="29124" fg:w="10"/><text x="83.9348%" y="1487.50"></text></g><g><title>rayon_core::join::join_context (10 samples, 0.03%)</title><rect x="83.6848%" y="1461" width="0.0287%" height="15" fill="rgb(220,219,34)" fg:x="29124" fg:w="10"/><text x="83.9348%" y="1471.50"></text></g><g><title>rayon_core::registry::in_worker (10 samples, 0.03%)</title><rect x="83.6848%" y="1445" width="0.0287%" height="15" fill="rgb(207,80,21)" fg:x="29124" fg:w="10"/><text x="83.9348%" y="1455.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (10 samples, 0.03%)</title><rect x="83.6848%" y="1429" width="0.0287%" height="15" fill="rgb(210,154,44)" fg:x="29124" fg:w="10"/><text x="83.9348%" y="1439.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (5 samples, 0.01%)</title><rect x="83.6992%" y="1413" width="0.0144%" height="15" fill="rgb(246,44,39)" fg:x="29129" fg:w="5"/><text x="83.9492%" y="1423.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.01%)</title><rect x="83.6992%" y="1397" width="0.0144%" height="15" fill="rgb(252,175,13)" fg:x="29129" fg:w="5"/><text x="83.9492%" y="1407.50"></text></g><g><title>std::panicking::try (5 samples, 0.01%)</title><rect x="83.6992%" y="1381" width="0.0144%" height="15" fill="rgb(211,50,39)" fg:x="29129" fg:w="5"/><text x="83.9492%" y="1391.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.01%)</title><rect x="83.6992%" y="1365" width="0.0144%" height="15" fill="rgb(231,204,27)" fg:x="29129" fg:w="5"/><text x="83.9492%" y="1375.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5 samples, 0.01%)</title><rect x="83.6992%" y="1349" width="0.0144%" height="15" fill="rgb(253,26,34)" fg:x="29129" fg:w="5"/><text x="83.9492%" y="1359.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (5 samples, 0.01%)</title><rect x="83.6992%" y="1333" width="0.0144%" height="15" fill="rgb(207,139,38)" fg:x="29129" fg:w="5"/><text x="83.9492%" y="1343.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (5 samples, 0.01%)</title><rect x="83.6992%" y="1317" width="0.0144%" height="15" fill="rgb(248,54,27)" fg:x="29129" fg:w="5"/><text x="83.9492%" y="1327.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (5 samples, 0.01%)</title><rect x="83.6992%" y="1301" width="0.0144%" height="15" fill="rgb(234,25,33)" fg:x="29129" fg:w="5"/><text x="83.9492%" y="1311.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (5 samples, 0.01%)</title><rect x="83.6992%" y="1285" width="0.0144%" height="15" fill="rgb(249,107,47)" fg:x="29129" fg:w="5"/><text x="83.9492%" y="1295.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (5 samples, 0.01%)</title><rect x="83.6992%" y="1269" width="0.0144%" height="15" fill="rgb(230,190,31)" fg:x="29129" fg:w="5"/><text x="83.9492%" y="1279.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (5 samples, 0.01%)</title><rect x="83.6992%" y="1253" width="0.0144%" height="15" fill="rgb(238,173,45)" fg:x="29129" fg:w="5"/><text x="83.9492%" y="1263.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.01%)</title><rect x="83.6992%" y="1237" width="0.0144%" height="15" fill="rgb(222,16,50)" fg:x="29129" fg:w="5"/><text x="83.9492%" y="1247.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (5 samples, 0.01%)</title><rect x="83.6992%" y="1221" width="0.0144%" height="15" fill="rgb(251,204,47)" fg:x="29129" fg:w="5"/><text x="83.9492%" y="1231.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (5 samples, 0.01%)</title><rect x="83.6992%" y="1205" width="0.0144%" height="15" fill="rgb(225,12,3)" fg:x="29129" fg:w="5"/><text x="83.9492%" y="1215.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (5 samples, 0.01%)</title><rect x="83.6992%" y="1189" width="0.0144%" height="15" fill="rgb(214,208,22)" fg:x="29129" fg:w="5"/><text x="83.9492%" y="1199.50"></text></g><g><title>core::ops::function::Fn::call (5 samples, 0.01%)</title><rect x="83.6992%" y="1173" width="0.0144%" height="15" fill="rgb(240,57,32)" fg:x="29129" fg:w="5"/><text x="83.9492%" y="1183.50"></text></g><g><title>aptos_block_executor::adapter_common::preprocess_transaction (5 samples, 0.01%)</title><rect x="83.6992%" y="1157" width="0.0144%" height="15" fill="rgb(243,113,48)" fg:x="29129" fg:w="5"/><text x="83.9492%" y="1167.50"></text></g><g><title>&lt;aptos_block_executor::aptos_vm::AptosVM as aptos_block_executor::adapter_common::VMAdapter&gt;::check_signature (5 samples, 0.01%)</title><rect x="83.6992%" y="1141" width="0.0144%" height="15" fill="rgb(225,135,30)" fg:x="29129" fg:w="5"/><text x="83.9492%" y="1151.50"></text></g><g><title>aptos_types::transaction::SignedTransaction::check_signature (5 samples, 0.01%)</title><rect x="83.6992%" y="1125" width="0.0144%" height="15" fill="rgb(222,3,53)" fg:x="29129" fg:w="5"/><text x="83.9492%" y="1135.50"></text></g><g><title>aptos_types::transaction::authenticator::TransactionAuthenticator::verify (5 samples, 0.01%)</title><rect x="83.6992%" y="1109" width="0.0144%" height="15" fill="rgb(243,142,2)" fg:x="29129" fg:w="5"/><text x="83.9492%" y="1119.50"></text></g><g><title>&lt;aptos_crypto::secp256k1::Secp256k1Signature as aptos_crypto::traits::Signature&gt;::verify_arbitrary_msg (5 samples, 0.01%)</title><rect x="83.6992%" y="1093" width="0.0144%" height="15" fill="rgb(233,67,14)" fg:x="29129" fg:w="5"/><text x="83.9492%" y="1103.50"></text></g><g><title>aptos_crypto::secp256k1::Secp256k1Signature::verify_arbitrary_msg (5 samples, 0.01%)</title><rect x="83.6992%" y="1077" width="0.0144%" height="15" fill="rgb(245,125,36)" fg:x="29129" fg:w="5"/><text x="83.9492%" y="1087.50"></text></g><g><title>cfxkey::signature::verify_public (5 samples, 0.01%)</title><rect x="83.6992%" y="1061" width="0.0144%" height="15" fill="rgb(225,199,6)" fg:x="29129" fg:w="5"/><text x="83.9492%" y="1071.50"></text></g><g><title>secp256k1::Secp256k1::verify (5 samples, 0.01%)</title><rect x="83.6992%" y="1045" width="0.0144%" height="15" fill="rgb(244,71,6)" fg:x="29129" fg:w="5"/><text x="83.9492%" y="1055.50"></text></g><g><title>secp256k1_ecdsa_verify (5 samples, 0.01%)</title><rect x="83.6992%" y="1029" width="0.0144%" height="15" fill="rgb(225,62,9)" fg:x="29129" fg:w="5"/><text x="83.9492%" y="1039.50"></text></g><g><title>secp256k1_ecdsa_sig_verify (5 samples, 0.01%)</title><rect x="83.6992%" y="1013" width="0.0144%" height="15" fill="rgb(246,139,53)" fg:x="29129" fg:w="5"/><text x="83.9492%" y="1023.50"></text></g><g><title>secp256k1_ecmult (5 samples, 0.01%)</title><rect x="83.6992%" y="997" width="0.0144%" height="15" fill="rgb(243,161,46)" fg:x="29129" fg:w="5"/><text x="83.9492%" y="1007.50"></text></g><g><title>secp256k1_ecmult_strauss_wnaf (5 samples, 0.01%)</title><rect x="83.6992%" y="981" width="0.0144%" height="15" fill="rgb(236,153,7)" fg:x="29129" fg:w="5"/><text x="83.9492%" y="991.50"></text></g><g><title>par_exec_4 (35 samples, 0.10%)</title><rect x="83.6303%" y="2789" width="0.1006%" height="15" fill="rgb(248,42,35)" fg:x="29105" fg:w="35"/><text x="83.8803%" y="2799.50"></text></g><g><title>__GI___clone3 (35 samples, 0.10%)</title><rect x="83.6303%" y="2773" width="0.1006%" height="15" fill="rgb(250,17,31)" fg:x="29105" fg:w="35"/><text x="83.8803%" y="2783.50"></text></g><g><title>start_thread (35 samples, 0.10%)</title><rect x="83.6303%" y="2757" width="0.1006%" height="15" fill="rgb(248,138,14)" fg:x="29105" fg:w="35"/><text x="83.8803%" y="2767.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (35 samples, 0.10%)</title><rect x="83.6303%" y="2741" width="0.1006%" height="15" fill="rgb(228,161,3)" fg:x="29105" fg:w="35"/><text x="83.8803%" y="2751.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (35 samples, 0.10%)</title><rect x="83.6303%" y="2725" width="0.1006%" height="15" fill="rgb(248,116,17)" fg:x="29105" fg:w="35"/><text x="83.8803%" y="2735.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (35 samples, 0.10%)</title><rect x="83.6303%" y="2709" width="0.1006%" height="15" fill="rgb(207,78,24)" fg:x="29105" fg:w="35"/><text x="83.8803%" y="2719.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (35 samples, 0.10%)</title><rect x="83.6303%" y="2693" width="0.1006%" height="15" fill="rgb(234,99,48)" fg:x="29105" fg:w="35"/><text x="83.8803%" y="2703.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (35 samples, 0.10%)</title><rect x="83.6303%" y="2677" width="0.1006%" height="15" fill="rgb(242,22,26)" fg:x="29105" fg:w="35"/><text x="83.8803%" y="2687.50"></text></g><g><title>std::panic::catch_unwind (35 samples, 0.10%)</title><rect x="83.6303%" y="2661" width="0.1006%" height="15" fill="rgb(227,78,32)" fg:x="29105" fg:w="35"/><text x="83.8803%" y="2671.50"></text></g><g><title>std::panicking::try (35 samples, 0.10%)</title><rect x="83.6303%" y="2645" width="0.1006%" height="15" fill="rgb(226,189,43)" fg:x="29105" fg:w="35"/><text x="83.8803%" y="2655.50"></text></g><g><title>std::panicking::try::do_call (35 samples, 0.10%)</title><rect x="83.6303%" y="2629" width="0.1006%" height="15" fill="rgb(227,218,35)" fg:x="29105" fg:w="35"/><text x="83.8803%" y="2639.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (35 samples, 0.10%)</title><rect x="83.6303%" y="2613" width="0.1006%" height="15" fill="rgb(206,111,40)" fg:x="29105" fg:w="35"/><text x="83.8803%" y="2623.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (35 samples, 0.10%)</title><rect x="83.6303%" y="2597" width="0.1006%" height="15" fill="rgb(208,217,22)" fg:x="29105" fg:w="35"/><text x="83.8803%" y="2607.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (35 samples, 0.10%)</title><rect x="83.6303%" y="2581" width="0.1006%" height="15" fill="rgb(248,20,20)" fg:x="29105" fg:w="35"/><text x="83.8803%" y="2591.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (35 samples, 0.10%)</title><rect x="83.6303%" y="2565" width="0.1006%" height="15" fill="rgb(239,155,16)" fg:x="29105" fg:w="35"/><text x="83.8803%" y="2575.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (35 samples, 0.10%)</title><rect x="83.6303%" y="2549" width="0.1006%" height="15" fill="rgb(238,171,46)" fg:x="29105" fg:w="35"/><text x="83.8803%" y="2559.50"></text></g><g><title>rayon_core::registry::main_loop (35 samples, 0.10%)</title><rect x="83.6303%" y="2533" width="0.1006%" height="15" fill="rgb(248,11,36)" fg:x="29105" fg:w="35"/><text x="83.8803%" y="2543.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (35 samples, 0.10%)</title><rect x="83.6303%" y="2517" width="0.1006%" height="15" fill="rgb(220,148,37)" fg:x="29105" fg:w="35"/><text x="83.8803%" y="2527.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (35 samples, 0.10%)</title><rect x="83.6303%" y="2501" width="0.1006%" height="15" fill="rgb(218,144,42)" fg:x="29105" fg:w="35"/><text x="83.8803%" y="2511.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (35 samples, 0.10%)</title><rect x="83.6303%" y="2485" width="0.1006%" height="15" fill="rgb(245,20,20)" fg:x="29105" fg:w="35"/><text x="83.8803%" y="2495.50"></text></g><g><title>rayon_core::job::JobRef::execute (35 samples, 0.10%)</title><rect x="83.6303%" y="2469" width="0.1006%" height="15" fill="rgb(240,111,48)" fg:x="29105" fg:w="35"/><text x="83.8803%" y="2479.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (35 samples, 0.10%)</title><rect x="83.6303%" y="2453" width="0.1006%" height="15" fill="rgb(237,225,32)" fg:x="29105" fg:w="35"/><text x="83.8803%" y="2463.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (35 samples, 0.10%)</title><rect x="83.6303%" y="2437" width="0.1006%" height="15" fill="rgb(228,161,46)" fg:x="29105" fg:w="35"/><text x="83.8803%" y="2447.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (35 samples, 0.10%)</title><rect x="83.6303%" y="2421" width="0.1006%" height="15" fill="rgb(235,196,21)" fg:x="29105" fg:w="35"/><text x="83.8803%" y="2431.50"></text></g><g><title>std::panic::catch_unwind (35 samples, 0.10%)</title><rect x="83.6303%" y="2405" width="0.1006%" height="15" fill="rgb(250,133,21)" fg:x="29105" fg:w="35"/><text x="83.8803%" y="2415.50"></text></g><g><title>std::panicking::try (35 samples, 0.10%)</title><rect x="83.6303%" y="2389" width="0.1006%" height="15" fill="rgb(236,94,32)" fg:x="29105" fg:w="35"/><text x="83.8803%" y="2399.50"></text></g><g><title>std::panicking::try::do_call (35 samples, 0.10%)</title><rect x="83.6303%" y="2373" width="0.1006%" height="15" fill="rgb(219,176,25)" fg:x="29105" fg:w="35"/><text x="83.8803%" y="2383.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (35 samples, 0.10%)</title><rect x="83.6303%" y="2357" width="0.1006%" height="15" fill="rgb(211,17,43)" fg:x="29105" fg:w="35"/><text x="83.8803%" y="2367.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (35 samples, 0.10%)</title><rect x="83.6303%" y="2341" width="0.1006%" height="15" fill="rgb(220,75,23)" fg:x="29105" fg:w="35"/><text x="83.8803%" y="2351.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (35 samples, 0.10%)</title><rect x="83.6303%" y="2325" width="0.1006%" height="15" fill="rgb(215,122,32)" fg:x="29105" fg:w="35"/><text x="83.8803%" y="2335.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (35 samples, 0.10%)</title><rect x="83.6303%" y="2309" width="0.1006%" height="15" fill="rgb(218,57,38)" fg:x="29105" fg:w="35"/><text x="83.8803%" y="2319.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (35 samples, 0.10%)</title><rect x="83.6303%" y="2293" width="0.1006%" height="15" fill="rgb(233,208,46)" fg:x="29105" fg:w="35"/><text x="83.8803%" y="2303.50"></text></g><g><title>rayon_core::join::join_context (35 samples, 0.10%)</title><rect x="83.6303%" y="2277" width="0.1006%" height="15" fill="rgb(221,35,50)" fg:x="29105" fg:w="35"/><text x="83.8803%" y="2287.50"></text></g><g><title>rayon_core::registry::in_worker (35 samples, 0.10%)</title><rect x="83.6303%" y="2261" width="0.1006%" height="15" fill="rgb(229,213,29)" fg:x="29105" fg:w="35"/><text x="83.8803%" y="2271.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (35 samples, 0.10%)</title><rect x="83.6303%" y="2245" width="0.1006%" height="15" fill="rgb(229,110,40)" fg:x="29105" fg:w="35"/><text x="83.8803%" y="2255.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (34 samples, 0.10%)</title><rect x="83.6331%" y="2229" width="0.0977%" height="15" fill="rgb(247,206,19)" fg:x="29106" fg:w="34"/><text x="83.8831%" y="2239.50"></text></g><g><title>std::panic::catch_unwind (34 samples, 0.10%)</title><rect x="83.6331%" y="2213" width="0.0977%" height="15" fill="rgb(216,229,45)" fg:x="29106" fg:w="34"/><text x="83.8831%" y="2223.50"></text></g><g><title>std::panicking::try (34 samples, 0.10%)</title><rect x="83.6331%" y="2197" width="0.0977%" height="15" fill="rgb(205,184,31)" fg:x="29106" fg:w="34"/><text x="83.8831%" y="2207.50"></text></g><g><title>std::panicking::try::do_call (34 samples, 0.10%)</title><rect x="83.6331%" y="2181" width="0.0977%" height="15" fill="rgb(213,91,10)" fg:x="29106" fg:w="34"/><text x="83.8831%" y="2191.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (34 samples, 0.10%)</title><rect x="83.6331%" y="2165" width="0.0977%" height="15" fill="rgb(250,49,8)" fg:x="29106" fg:w="34"/><text x="83.8831%" y="2175.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (34 samples, 0.10%)</title><rect x="83.6331%" y="2149" width="0.0977%" height="15" fill="rgb(207,26,8)" fg:x="29106" fg:w="34"/><text x="83.8831%" y="2159.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (34 samples, 0.10%)</title><rect x="83.6331%" y="2133" width="0.0977%" height="15" fill="rgb(224,2,13)" fg:x="29106" fg:w="34"/><text x="83.8831%" y="2143.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (34 samples, 0.10%)</title><rect x="83.6331%" y="2117" width="0.0977%" height="15" fill="rgb(219,108,27)" fg:x="29106" fg:w="34"/><text x="83.8831%" y="2127.50"></text></g><g><title>rayon_core::join::join_context (34 samples, 0.10%)</title><rect x="83.6331%" y="2101" width="0.0977%" height="15" fill="rgb(240,89,32)" fg:x="29106" fg:w="34"/><text x="83.8831%" y="2111.50"></text></g><g><title>rayon_core::registry::in_worker (34 samples, 0.10%)</title><rect x="83.6331%" y="2085" width="0.0977%" height="15" fill="rgb(248,205,3)" fg:x="29106" fg:w="34"/><text x="83.8831%" y="2095.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (34 samples, 0.10%)</title><rect x="83.6331%" y="2069" width="0.0977%" height="15" fill="rgb(236,197,47)" fg:x="29106" fg:w="34"/><text x="83.8831%" y="2079.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (34 samples, 0.10%)</title><rect x="83.6331%" y="2053" width="0.0977%" height="15" fill="rgb(244,185,52)" fg:x="29106" fg:w="34"/><text x="83.8831%" y="2063.50"></text></g><g><title>std::panic::catch_unwind (34 samples, 0.10%)</title><rect x="83.6331%" y="2037" width="0.0977%" height="15" fill="rgb(210,206,23)" fg:x="29106" fg:w="34"/><text x="83.8831%" y="2047.50"></text></g><g><title>std::panicking::try (34 samples, 0.10%)</title><rect x="83.6331%" y="2021" width="0.0977%" height="15" fill="rgb(251,177,30)" fg:x="29106" fg:w="34"/><text x="83.8831%" y="2031.50"></text></g><g><title>std::panicking::try::do_call (34 samples, 0.10%)</title><rect x="83.6331%" y="2005" width="0.0977%" height="15" fill="rgb(243,27,45)" fg:x="29106" fg:w="34"/><text x="83.8831%" y="2015.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (34 samples, 0.10%)</title><rect x="83.6331%" y="1989" width="0.0977%" height="15" fill="rgb(248,141,51)" fg:x="29106" fg:w="34"/><text x="83.8831%" y="1999.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (34 samples, 0.10%)</title><rect x="83.6331%" y="1973" width="0.0977%" height="15" fill="rgb(235,102,15)" fg:x="29106" fg:w="34"/><text x="83.8831%" y="1983.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (34 samples, 0.10%)</title><rect x="83.6331%" y="1957" width="0.0977%" height="15" fill="rgb(214,164,53)" fg:x="29106" fg:w="34"/><text x="83.8831%" y="1967.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (34 samples, 0.10%)</title><rect x="83.6331%" y="1941" width="0.0977%" height="15" fill="rgb(228,18,51)" fg:x="29106" fg:w="34"/><text x="83.8831%" y="1951.50"></text></g><g><title>rayon_core::join::join_context (34 samples, 0.10%)</title><rect x="83.6331%" y="1925" width="0.0977%" height="15" fill="rgb(205,211,11)" fg:x="29106" fg:w="34"/><text x="83.8831%" y="1935.50"></text></g><g><title>rayon_core::registry::in_worker (34 samples, 0.10%)</title><rect x="83.6331%" y="1909" width="0.0977%" height="15" fill="rgb(208,63,6)" fg:x="29106" fg:w="34"/><text x="83.8831%" y="1919.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (34 samples, 0.10%)</title><rect x="83.6331%" y="1893" width="0.0977%" height="15" fill="rgb(245,76,14)" fg:x="29106" fg:w="34"/><text x="83.8831%" y="1903.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (23 samples, 0.07%)</title><rect x="83.6647%" y="1877" width="0.0661%" height="15" fill="rgb(234,176,34)" fg:x="29117" fg:w="23"/><text x="83.9147%" y="1887.50"></text></g><g><title>std::panic::catch_unwind (23 samples, 0.07%)</title><rect x="83.6647%" y="1861" width="0.0661%" height="15" fill="rgb(243,156,42)" fg:x="29117" fg:w="23"/><text x="83.9147%" y="1871.50"></text></g><g><title>std::panicking::try (23 samples, 0.07%)</title><rect x="83.6647%" y="1845" width="0.0661%" height="15" fill="rgb(237,182,10)" fg:x="29117" fg:w="23"/><text x="83.9147%" y="1855.50"></text></g><g><title>std::panicking::try::do_call (23 samples, 0.07%)</title><rect x="83.6647%" y="1829" width="0.0661%" height="15" fill="rgb(244,117,0)" fg:x="29117" fg:w="23"/><text x="83.9147%" y="1839.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (23 samples, 0.07%)</title><rect x="83.6647%" y="1813" width="0.0661%" height="15" fill="rgb(239,91,50)" fg:x="29117" fg:w="23"/><text x="83.9147%" y="1823.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (23 samples, 0.07%)</title><rect x="83.6647%" y="1797" width="0.0661%" height="15" fill="rgb(206,38,9)" fg:x="29117" fg:w="23"/><text x="83.9147%" y="1807.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (23 samples, 0.07%)</title><rect x="83.6647%" y="1781" width="0.0661%" height="15" fill="rgb(205,25,10)" fg:x="29117" fg:w="23"/><text x="83.9147%" y="1791.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (23 samples, 0.07%)</title><rect x="83.6647%" y="1765" width="0.0661%" height="15" fill="rgb(206,224,7)" fg:x="29117" fg:w="23"/><text x="83.9147%" y="1775.50"></text></g><g><title>rayon_core::join::join_context (23 samples, 0.07%)</title><rect x="83.6647%" y="1749" width="0.0661%" height="15" fill="rgb(227,157,10)" fg:x="29117" fg:w="23"/><text x="83.9147%" y="1759.50"></text></g><g><title>rayon_core::registry::in_worker (23 samples, 0.07%)</title><rect x="83.6647%" y="1733" width="0.0661%" height="15" fill="rgb(214,157,37)" fg:x="29117" fg:w="23"/><text x="83.9147%" y="1743.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (23 samples, 0.07%)</title><rect x="83.6647%" y="1717" width="0.0661%" height="15" fill="rgb(209,180,35)" fg:x="29117" fg:w="23"/><text x="83.9147%" y="1727.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (16 samples, 0.05%)</title><rect x="83.6848%" y="1701" width="0.0460%" height="15" fill="rgb(216,174,49)" fg:x="29124" fg:w="16"/><text x="83.9348%" y="1711.50"></text></g><g><title>std::panic::catch_unwind (16 samples, 0.05%)</title><rect x="83.6848%" y="1685" width="0.0460%" height="15" fill="rgb(205,96,20)" fg:x="29124" fg:w="16"/><text x="83.9348%" y="1695.50"></text></g><g><title>std::panicking::try (16 samples, 0.05%)</title><rect x="83.6848%" y="1669" width="0.0460%" height="15" fill="rgb(214,220,39)" fg:x="29124" fg:w="16"/><text x="83.9348%" y="1679.50"></text></g><g><title>std::panicking::try::do_call (16 samples, 0.05%)</title><rect x="83.6848%" y="1653" width="0.0460%" height="15" fill="rgb(245,126,30)" fg:x="29124" fg:w="16"/><text x="83.9348%" y="1663.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (16 samples, 0.05%)</title><rect x="83.6848%" y="1637" width="0.0460%" height="15" fill="rgb(215,88,33)" fg:x="29124" fg:w="16"/><text x="83.9348%" y="1647.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (16 samples, 0.05%)</title><rect x="83.6848%" y="1621" width="0.0460%" height="15" fill="rgb(210,1,49)" fg:x="29124" fg:w="16"/><text x="83.9348%" y="1631.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (16 samples, 0.05%)</title><rect x="83.6848%" y="1605" width="0.0460%" height="15" fill="rgb(207,133,3)" fg:x="29124" fg:w="16"/><text x="83.9348%" y="1615.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (16 samples, 0.05%)</title><rect x="83.6848%" y="1589" width="0.0460%" height="15" fill="rgb(231,47,43)" fg:x="29124" fg:w="16"/><text x="83.9348%" y="1599.50"></text></g><g><title>rayon_core::join::join_context (16 samples, 0.05%)</title><rect x="83.6848%" y="1573" width="0.0460%" height="15" fill="rgb(245,64,1)" fg:x="29124" fg:w="16"/><text x="83.9348%" y="1583.50"></text></g><g><title>rayon_core::registry::in_worker (16 samples, 0.05%)</title><rect x="83.6848%" y="1557" width="0.0460%" height="15" fill="rgb(253,145,20)" fg:x="29124" fg:w="16"/><text x="83.9348%" y="1567.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (16 samples, 0.05%)</title><rect x="83.6848%" y="1541" width="0.0460%" height="15" fill="rgb(211,39,18)" fg:x="29124" fg:w="16"/><text x="83.9348%" y="1551.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (4 samples, 0.01%)</title><rect x="83.7567%" y="1877" width="0.0115%" height="15" fill="rgb(223,225,18)" fg:x="29149" fg:w="4"/><text x="84.0067%" y="1887.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (4 samples, 0.01%)</title><rect x="83.7567%" y="1861" width="0.0115%" height="15" fill="rgb(210,202,44)" fg:x="29149" fg:w="4"/><text x="84.0067%" y="1871.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (4 samples, 0.01%)</title><rect x="83.7567%" y="1845" width="0.0115%" height="15" fill="rgb(231,138,36)" fg:x="29149" fg:w="4"/><text x="84.0067%" y="1855.50"></text></g><g><title>rayon_core::job::JobRef::execute (4 samples, 0.01%)</title><rect x="83.7567%" y="1829" width="0.0115%" height="15" fill="rgb(237,115,25)" fg:x="29149" fg:w="4"/><text x="84.0067%" y="1839.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (4 samples, 0.01%)</title><rect x="83.7567%" y="1813" width="0.0115%" height="15" fill="rgb(215,53,48)" fg:x="29149" fg:w="4"/><text x="84.0067%" y="1823.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (4 samples, 0.01%)</title><rect x="83.7567%" y="1797" width="0.0115%" height="15" fill="rgb(243,193,24)" fg:x="29149" fg:w="4"/><text x="84.0067%" y="1807.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (4 samples, 0.01%)</title><rect x="83.7567%" y="1781" width="0.0115%" height="15" fill="rgb(210,106,28)" fg:x="29149" fg:w="4"/><text x="84.0067%" y="1791.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.01%)</title><rect x="83.7567%" y="1765" width="0.0115%" height="15" fill="rgb(249,192,0)" fg:x="29149" fg:w="4"/><text x="84.0067%" y="1775.50"></text></g><g><title>std::panicking::try (4 samples, 0.01%)</title><rect x="83.7567%" y="1749" width="0.0115%" height="15" fill="rgb(224,96,21)" fg:x="29149" fg:w="4"/><text x="84.0067%" y="1759.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.01%)</title><rect x="83.7567%" y="1733" width="0.0115%" height="15" fill="rgb(243,160,19)" fg:x="29149" fg:w="4"/><text x="84.0067%" y="1743.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.01%)</title><rect x="83.7567%" y="1717" width="0.0115%" height="15" fill="rgb(219,205,50)" fg:x="29149" fg:w="4"/><text x="84.0067%" y="1727.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (4 samples, 0.01%)</title><rect x="83.7567%" y="1701" width="0.0115%" height="15" fill="rgb(218,175,44)" fg:x="29149" fg:w="4"/><text x="84.0067%" y="1711.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (4 samples, 0.01%)</title><rect x="83.7567%" y="1685" width="0.0115%" height="15" fill="rgb(251,84,47)" fg:x="29149" fg:w="4"/><text x="84.0067%" y="1695.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.01%)</title><rect x="83.7567%" y="1669" width="0.0115%" height="15" fill="rgb(241,14,16)" fg:x="29149" fg:w="4"/><text x="84.0067%" y="1679.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.01%)</title><rect x="83.7567%" y="1653" width="0.0115%" height="15" fill="rgb(207,142,28)" fg:x="29149" fg:w="4"/><text x="84.0067%" y="1663.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.01%)</title><rect x="83.7567%" y="1637" width="0.0115%" height="15" fill="rgb(208,116,22)" fg:x="29149" fg:w="4"/><text x="84.0067%" y="1647.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.01%)</title><rect x="83.7567%" y="1621" width="0.0115%" height="15" fill="rgb(210,0,43)" fg:x="29149" fg:w="4"/><text x="84.0067%" y="1631.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.01%)</title><rect x="83.7567%" y="1605" width="0.0115%" height="15" fill="rgb(246,33,21)" fg:x="29149" fg:w="4"/><text x="84.0067%" y="1615.50"></text></g><g><title>secp256k1_gej_add_ge_var (4 samples, 0.01%)</title><rect x="83.7797%" y="965" width="0.0115%" height="15" fill="rgb(208,158,54)" fg:x="29157" fg:w="4"/><text x="84.0297%" y="975.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (10 samples, 0.03%)</title><rect x="83.7768%" y="1525" width="0.0287%" height="15" fill="rgb(218,99,29)" fg:x="29156" fg:w="10"/><text x="84.0268%" y="1535.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (10 samples, 0.03%)</title><rect x="83.7768%" y="1509" width="0.0287%" height="15" fill="rgb(226,29,7)" fg:x="29156" fg:w="10"/><text x="84.0268%" y="1519.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (10 samples, 0.03%)</title><rect x="83.7768%" y="1493" width="0.0287%" height="15" fill="rgb(206,178,46)" fg:x="29156" fg:w="10"/><text x="84.0268%" y="1503.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (10 samples, 0.03%)</title><rect x="83.7768%" y="1477" width="0.0287%" height="15" fill="rgb(205,169,32)" fg:x="29156" fg:w="10"/><text x="84.0268%" y="1487.50"></text></g><g><title>rayon_core::join::join_context (10 samples, 0.03%)</title><rect x="83.7768%" y="1461" width="0.0287%" height="15" fill="rgb(217,4,13)" fg:x="29156" fg:w="10"/><text x="84.0268%" y="1471.50"></text></g><g><title>rayon_core::registry::in_worker (10 samples, 0.03%)</title><rect x="83.7768%" y="1445" width="0.0287%" height="15" fill="rgb(210,140,37)" fg:x="29156" fg:w="10"/><text x="84.0268%" y="1455.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (10 samples, 0.03%)</title><rect x="83.7768%" y="1429" width="0.0287%" height="15" fill="rgb(229,80,10)" fg:x="29156" fg:w="10"/><text x="84.0268%" y="1439.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (9 samples, 0.03%)</title><rect x="83.7797%" y="1413" width="0.0259%" height="15" fill="rgb(212,175,34)" fg:x="29157" fg:w="9"/><text x="84.0297%" y="1423.50"></text></g><g><title>std::panic::catch_unwind (9 samples, 0.03%)</title><rect x="83.7797%" y="1397" width="0.0259%" height="15" fill="rgb(216,207,24)" fg:x="29157" fg:w="9"/><text x="84.0297%" y="1407.50"></text></g><g><title>std::panicking::try (9 samples, 0.03%)</title><rect x="83.7797%" y="1381" width="0.0259%" height="15" fill="rgb(234,163,3)" fg:x="29157" fg:w="9"/><text x="84.0297%" y="1391.50"></text></g><g><title>std::panicking::try::do_call (9 samples, 0.03%)</title><rect x="83.7797%" y="1365" width="0.0259%" height="15" fill="rgb(248,101,16)" fg:x="29157" fg:w="9"/><text x="84.0297%" y="1375.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (9 samples, 0.03%)</title><rect x="83.7797%" y="1349" width="0.0259%" height="15" fill="rgb(209,152,54)" fg:x="29157" fg:w="9"/><text x="84.0297%" y="1359.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (9 samples, 0.03%)</title><rect x="83.7797%" y="1333" width="0.0259%" height="15" fill="rgb(229,124,51)" fg:x="29157" fg:w="9"/><text x="84.0297%" y="1343.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (9 samples, 0.03%)</title><rect x="83.7797%" y="1317" width="0.0259%" height="15" fill="rgb(219,83,18)" fg:x="29157" fg:w="9"/><text x="84.0297%" y="1327.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.03%)</title><rect x="83.7797%" y="1301" width="0.0259%" height="15" fill="rgb(206,29,38)" fg:x="29157" fg:w="9"/><text x="84.0297%" y="1311.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (9 samples, 0.03%)</title><rect x="83.7797%" y="1285" width="0.0259%" height="15" fill="rgb(245,123,23)" fg:x="29157" fg:w="9"/><text x="84.0297%" y="1295.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (9 samples, 0.03%)</title><rect x="83.7797%" y="1269" width="0.0259%" height="15" fill="rgb(238,50,33)" fg:x="29157" fg:w="9"/><text x="84.0297%" y="1279.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (9 samples, 0.03%)</title><rect x="83.7797%" y="1253" width="0.0259%" height="15" fill="rgb(234,165,23)" fg:x="29157" fg:w="9"/><text x="84.0297%" y="1263.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.03%)</title><rect x="83.7797%" y="1237" width="0.0259%" height="15" fill="rgb(211,82,31)" fg:x="29157" fg:w="9"/><text x="84.0297%" y="1247.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (9 samples, 0.03%)</title><rect x="83.7797%" y="1221" width="0.0259%" height="15" fill="rgb(224,166,46)" fg:x="29157" fg:w="9"/><text x="84.0297%" y="1231.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (9 samples, 0.03%)</title><rect x="83.7797%" y="1205" width="0.0259%" height="15" fill="rgb(211,13,8)" fg:x="29157" fg:w="9"/><text x="84.0297%" y="1215.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (9 samples, 0.03%)</title><rect x="83.7797%" y="1189" width="0.0259%" height="15" fill="rgb(212,7,42)" fg:x="29157" fg:w="9"/><text x="84.0297%" y="1199.50"></text></g><g><title>core::ops::function::Fn::call (9 samples, 0.03%)</title><rect x="83.7797%" y="1173" width="0.0259%" height="15" fill="rgb(249,102,19)" fg:x="29157" fg:w="9"/><text x="84.0297%" y="1183.50"></text></g><g><title>aptos_block_executor::adapter_common::preprocess_transaction (9 samples, 0.03%)</title><rect x="83.7797%" y="1157" width="0.0259%" height="15" fill="rgb(225,41,13)" fg:x="29157" fg:w="9"/><text x="84.0297%" y="1167.50"></text></g><g><title>&lt;aptos_block_executor::aptos_vm::AptosVM as aptos_block_executor::adapter_common::VMAdapter&gt;::check_signature (9 samples, 0.03%)</title><rect x="83.7797%" y="1141" width="0.0259%" height="15" fill="rgb(220,65,27)" fg:x="29157" fg:w="9"/><text x="84.0297%" y="1151.50"></text></g><g><title>aptos_types::transaction::SignedTransaction::check_signature (9 samples, 0.03%)</title><rect x="83.7797%" y="1125" width="0.0259%" height="15" fill="rgb(206,4,41)" fg:x="29157" fg:w="9"/><text x="84.0297%" y="1135.50"></text></g><g><title>aptos_types::transaction::authenticator::TransactionAuthenticator::verify (9 samples, 0.03%)</title><rect x="83.7797%" y="1109" width="0.0259%" height="15" fill="rgb(219,60,39)" fg:x="29157" fg:w="9"/><text x="84.0297%" y="1119.50"></text></g><g><title>&lt;aptos_crypto::secp256k1::Secp256k1Signature as aptos_crypto::traits::Signature&gt;::verify_arbitrary_msg (9 samples, 0.03%)</title><rect x="83.7797%" y="1093" width="0.0259%" height="15" fill="rgb(226,4,38)" fg:x="29157" fg:w="9"/><text x="84.0297%" y="1103.50"></text></g><g><title>aptos_crypto::secp256k1::Secp256k1Signature::verify_arbitrary_msg (9 samples, 0.03%)</title><rect x="83.7797%" y="1077" width="0.0259%" height="15" fill="rgb(250,52,3)" fg:x="29157" fg:w="9"/><text x="84.0297%" y="1087.50"></text></g><g><title>cfxkey::signature::verify_public (9 samples, 0.03%)</title><rect x="83.7797%" y="1061" width="0.0259%" height="15" fill="rgb(234,93,0)" fg:x="29157" fg:w="9"/><text x="84.0297%" y="1071.50"></text></g><g><title>secp256k1::Secp256k1::verify (9 samples, 0.03%)</title><rect x="83.7797%" y="1045" width="0.0259%" height="15" fill="rgb(251,47,47)" fg:x="29157" fg:w="9"/><text x="84.0297%" y="1055.50"></text></g><g><title>secp256k1_ecdsa_verify (9 samples, 0.03%)</title><rect x="83.7797%" y="1029" width="0.0259%" height="15" fill="rgb(205,166,47)" fg:x="29157" fg:w="9"/><text x="84.0297%" y="1039.50"></text></g><g><title>secp256k1_ecdsa_sig_verify (9 samples, 0.03%)</title><rect x="83.7797%" y="1013" width="0.0259%" height="15" fill="rgb(231,148,8)" fg:x="29157" fg:w="9"/><text x="84.0297%" y="1023.50"></text></g><g><title>secp256k1_ecmult (9 samples, 0.03%)</title><rect x="83.7797%" y="997" width="0.0259%" height="15" fill="rgb(244,185,19)" fg:x="29157" fg:w="9"/><text x="84.0297%" y="1007.50"></text></g><g><title>secp256k1_ecmult_strauss_wnaf (9 samples, 0.03%)</title><rect x="83.7797%" y="981" width="0.0259%" height="15" fill="rgb(224,201,45)" fg:x="29157" fg:w="9"/><text x="84.0297%" y="991.50"></text></g><g><title>secp256k1_gej_double_var (4 samples, 0.01%)</title><rect x="83.7940%" y="965" width="0.0115%" height="15" fill="rgb(240,77,39)" fg:x="29162" fg:w="4"/><text x="84.0440%" y="975.50"></text></g><g><title>secp256k1_gej_double_var (4 samples, 0.01%)</title><rect x="83.7940%" y="949" width="0.0115%" height="15" fill="rgb(248,211,29)" fg:x="29162" fg:w="4"/><text x="84.0440%" y="959.50"></text></g><g><title>par_exec_5 (27 samples, 0.08%)</title><rect x="83.7308%" y="2789" width="0.0776%" height="15" fill="rgb(232,214,46)" fg:x="29140" fg:w="27"/><text x="83.9808%" y="2799.50"></text></g><g><title>__GI___clone3 (27 samples, 0.08%)</title><rect x="83.7308%" y="2773" width="0.0776%" height="15" fill="rgb(213,99,54)" fg:x="29140" fg:w="27"/><text x="83.9808%" y="2783.50"></text></g><g><title>start_thread (27 samples, 0.08%)</title><rect x="83.7308%" y="2757" width="0.0776%" height="15" fill="rgb(240,19,46)" fg:x="29140" fg:w="27"/><text x="83.9808%" y="2767.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (27 samples, 0.08%)</title><rect x="83.7308%" y="2741" width="0.0776%" height="15" fill="rgb(243,89,10)" fg:x="29140" fg:w="27"/><text x="83.9808%" y="2751.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (27 samples, 0.08%)</title><rect x="83.7308%" y="2725" width="0.0776%" height="15" fill="rgb(249,28,32)" fg:x="29140" fg:w="27"/><text x="83.9808%" y="2735.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (27 samples, 0.08%)</title><rect x="83.7308%" y="2709" width="0.0776%" height="15" fill="rgb(253,30,9)" fg:x="29140" fg:w="27"/><text x="83.9808%" y="2719.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (27 samples, 0.08%)</title><rect x="83.7308%" y="2693" width="0.0776%" height="15" fill="rgb(217,2,26)" fg:x="29140" fg:w="27"/><text x="83.9808%" y="2703.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (27 samples, 0.08%)</title><rect x="83.7308%" y="2677" width="0.0776%" height="15" fill="rgb(220,28,10)" fg:x="29140" fg:w="27"/><text x="83.9808%" y="2687.50"></text></g><g><title>std::panic::catch_unwind (27 samples, 0.08%)</title><rect x="83.7308%" y="2661" width="0.0776%" height="15" fill="rgb(228,167,49)" fg:x="29140" fg:w="27"/><text x="83.9808%" y="2671.50"></text></g><g><title>std::panicking::try (27 samples, 0.08%)</title><rect x="83.7308%" y="2645" width="0.0776%" height="15" fill="rgb(238,212,3)" fg:x="29140" fg:w="27"/><text x="83.9808%" y="2655.50"></text></g><g><title>std::panicking::try::do_call (27 samples, 0.08%)</title><rect x="83.7308%" y="2629" width="0.0776%" height="15" fill="rgb(229,134,44)" fg:x="29140" fg:w="27"/><text x="83.9808%" y="2639.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (27 samples, 0.08%)</title><rect x="83.7308%" y="2613" width="0.0776%" height="15" fill="rgb(208,71,4)" fg:x="29140" fg:w="27"/><text x="83.9808%" y="2623.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (27 samples, 0.08%)</title><rect x="83.7308%" y="2597" width="0.0776%" height="15" fill="rgb(221,205,45)" fg:x="29140" fg:w="27"/><text x="83.9808%" y="2607.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (27 samples, 0.08%)</title><rect x="83.7308%" y="2581" width="0.0776%" height="15" fill="rgb(215,132,38)" fg:x="29140" fg:w="27"/><text x="83.9808%" y="2591.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (27 samples, 0.08%)</title><rect x="83.7308%" y="2565" width="0.0776%" height="15" fill="rgb(227,158,6)" fg:x="29140" fg:w="27"/><text x="83.9808%" y="2575.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (27 samples, 0.08%)</title><rect x="83.7308%" y="2549" width="0.0776%" height="15" fill="rgb(250,10,38)" fg:x="29140" fg:w="27"/><text x="83.9808%" y="2559.50"></text></g><g><title>rayon_core::registry::main_loop (27 samples, 0.08%)</title><rect x="83.7308%" y="2533" width="0.0776%" height="15" fill="rgb(225,171,40)" fg:x="29140" fg:w="27"/><text x="83.9808%" y="2543.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (27 samples, 0.08%)</title><rect x="83.7308%" y="2517" width="0.0776%" height="15" fill="rgb(238,17,43)" fg:x="29140" fg:w="27"/><text x="83.9808%" y="2527.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (27 samples, 0.08%)</title><rect x="83.7308%" y="2501" width="0.0776%" height="15" fill="rgb(208,145,4)" fg:x="29140" fg:w="27"/><text x="83.9808%" y="2511.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (27 samples, 0.08%)</title><rect x="83.7308%" y="2485" width="0.0776%" height="15" fill="rgb(232,82,7)" fg:x="29140" fg:w="27"/><text x="83.9808%" y="2495.50"></text></g><g><title>rayon_core::job::JobRef::execute (27 samples, 0.08%)</title><rect x="83.7308%" y="2469" width="0.0776%" height="15" fill="rgb(205,166,38)" fg:x="29140" fg:w="27"/><text x="83.9808%" y="2479.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (27 samples, 0.08%)</title><rect x="83.7308%" y="2453" width="0.0776%" height="15" fill="rgb(240,228,4)" fg:x="29140" fg:w="27"/><text x="83.9808%" y="2463.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (27 samples, 0.08%)</title><rect x="83.7308%" y="2437" width="0.0776%" height="15" fill="rgb(233,121,40)" fg:x="29140" fg:w="27"/><text x="83.9808%" y="2447.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (27 samples, 0.08%)</title><rect x="83.7308%" y="2421" width="0.0776%" height="15" fill="rgb(243,84,30)" fg:x="29140" fg:w="27"/><text x="83.9808%" y="2431.50"></text></g><g><title>std::panic::catch_unwind (27 samples, 0.08%)</title><rect x="83.7308%" y="2405" width="0.0776%" height="15" fill="rgb(235,81,48)" fg:x="29140" fg:w="27"/><text x="83.9808%" y="2415.50"></text></g><g><title>std::panicking::try (27 samples, 0.08%)</title><rect x="83.7308%" y="2389" width="0.0776%" height="15" fill="rgb(218,137,0)" fg:x="29140" fg:w="27"/><text x="83.9808%" y="2399.50"></text></g><g><title>std::panicking::try::do_call (27 samples, 0.08%)</title><rect x="83.7308%" y="2373" width="0.0776%" height="15" fill="rgb(223,151,48)" fg:x="29140" fg:w="27"/><text x="83.9808%" y="2383.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (27 samples, 0.08%)</title><rect x="83.7308%" y="2357" width="0.0776%" height="15" fill="rgb(247,30,19)" fg:x="29140" fg:w="27"/><text x="83.9808%" y="2367.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (27 samples, 0.08%)</title><rect x="83.7308%" y="2341" width="0.0776%" height="15" fill="rgb(205,129,29)" fg:x="29140" fg:w="27"/><text x="83.9808%" y="2351.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (27 samples, 0.08%)</title><rect x="83.7308%" y="2325" width="0.0776%" height="15" fill="rgb(222,29,2)" fg:x="29140" fg:w="27"/><text x="83.9808%" y="2335.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (27 samples, 0.08%)</title><rect x="83.7308%" y="2309" width="0.0776%" height="15" fill="rgb(232,145,33)" fg:x="29140" fg:w="27"/><text x="83.9808%" y="2319.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (27 samples, 0.08%)</title><rect x="83.7308%" y="2293" width="0.0776%" height="15" fill="rgb(217,30,31)" fg:x="29140" fg:w="27"/><text x="83.9808%" y="2303.50"></text></g><g><title>rayon_core::join::join_context (27 samples, 0.08%)</title><rect x="83.7308%" y="2277" width="0.0776%" height="15" fill="rgb(243,22,52)" fg:x="29140" fg:w="27"/><text x="83.9808%" y="2287.50"></text></g><g><title>rayon_core::registry::in_worker (27 samples, 0.08%)</title><rect x="83.7308%" y="2261" width="0.0776%" height="15" fill="rgb(254,228,14)" fg:x="29140" fg:w="27"/><text x="83.9808%" y="2271.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (27 samples, 0.08%)</title><rect x="83.7308%" y="2245" width="0.0776%" height="15" fill="rgb(231,45,50)" fg:x="29140" fg:w="27"/><text x="83.9808%" y="2255.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (24 samples, 0.07%)</title><rect x="83.7394%" y="2229" width="0.0690%" height="15" fill="rgb(248,125,3)" fg:x="29143" fg:w="24"/><text x="83.9894%" y="2239.50"></text></g><g><title>std::panic::catch_unwind (24 samples, 0.07%)</title><rect x="83.7394%" y="2213" width="0.0690%" height="15" fill="rgb(213,76,9)" fg:x="29143" fg:w="24"/><text x="83.9894%" y="2223.50"></text></g><g><title>std::panicking::try (24 samples, 0.07%)</title><rect x="83.7394%" y="2197" width="0.0690%" height="15" fill="rgb(238,108,21)" fg:x="29143" fg:w="24"/><text x="83.9894%" y="2207.50"></text></g><g><title>std::panicking::try::do_call (24 samples, 0.07%)</title><rect x="83.7394%" y="2181" width="0.0690%" height="15" fill="rgb(229,214,19)" fg:x="29143" fg:w="24"/><text x="83.9894%" y="2191.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (24 samples, 0.07%)</title><rect x="83.7394%" y="2165" width="0.0690%" height="15" fill="rgb(252,201,5)" fg:x="29143" fg:w="24"/><text x="83.9894%" y="2175.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (24 samples, 0.07%)</title><rect x="83.7394%" y="2149" width="0.0690%" height="15" fill="rgb(233,165,49)" fg:x="29143" fg:w="24"/><text x="83.9894%" y="2159.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (24 samples, 0.07%)</title><rect x="83.7394%" y="2133" width="0.0690%" height="15" fill="rgb(208,165,19)" fg:x="29143" fg:w="24"/><text x="83.9894%" y="2143.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (24 samples, 0.07%)</title><rect x="83.7394%" y="2117" width="0.0690%" height="15" fill="rgb(216,220,31)" fg:x="29143" fg:w="24"/><text x="83.9894%" y="2127.50"></text></g><g><title>rayon_core::join::join_context (24 samples, 0.07%)</title><rect x="83.7394%" y="2101" width="0.0690%" height="15" fill="rgb(214,8,31)" fg:x="29143" fg:w="24"/><text x="83.9894%" y="2111.50"></text></g><g><title>rayon_core::registry::in_worker (24 samples, 0.07%)</title><rect x="83.7394%" y="2085" width="0.0690%" height="15" fill="rgb(220,32,32)" fg:x="29143" fg:w="24"/><text x="83.9894%" y="2095.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (24 samples, 0.07%)</title><rect x="83.7394%" y="2069" width="0.0690%" height="15" fill="rgb(237,172,34)" fg:x="29143" fg:w="24"/><text x="83.9894%" y="2079.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (19 samples, 0.05%)</title><rect x="83.7538%" y="2053" width="0.0546%" height="15" fill="rgb(240,209,5)" fg:x="29148" fg:w="19"/><text x="84.0038%" y="2063.50"></text></g><g><title>std::panic::catch_unwind (19 samples, 0.05%)</title><rect x="83.7538%" y="2037" width="0.0546%" height="15" fill="rgb(221,219,1)" fg:x="29148" fg:w="19"/><text x="84.0038%" y="2047.50"></text></g><g><title>std::panicking::try (19 samples, 0.05%)</title><rect x="83.7538%" y="2021" width="0.0546%" height="15" fill="rgb(237,90,36)" fg:x="29148" fg:w="19"/><text x="84.0038%" y="2031.50"></text></g><g><title>std::panicking::try::do_call (19 samples, 0.05%)</title><rect x="83.7538%" y="2005" width="0.0546%" height="15" fill="rgb(245,14,51)" fg:x="29148" fg:w="19"/><text x="84.0038%" y="2015.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (19 samples, 0.05%)</title><rect x="83.7538%" y="1989" width="0.0546%" height="15" fill="rgb(211,71,49)" fg:x="29148" fg:w="19"/><text x="84.0038%" y="1999.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (19 samples, 0.05%)</title><rect x="83.7538%" y="1973" width="0.0546%" height="15" fill="rgb(230,223,9)" fg:x="29148" fg:w="19"/><text x="84.0038%" y="1983.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (19 samples, 0.05%)</title><rect x="83.7538%" y="1957" width="0.0546%" height="15" fill="rgb(212,33,31)" fg:x="29148" fg:w="19"/><text x="84.0038%" y="1967.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (19 samples, 0.05%)</title><rect x="83.7538%" y="1941" width="0.0546%" height="15" fill="rgb(218,141,5)" fg:x="29148" fg:w="19"/><text x="84.0038%" y="1951.50"></text></g><g><title>rayon_core::join::join_context (19 samples, 0.05%)</title><rect x="83.7538%" y="1925" width="0.0546%" height="15" fill="rgb(239,194,8)" fg:x="29148" fg:w="19"/><text x="84.0038%" y="1935.50"></text></g><g><title>rayon_core::registry::in_worker (19 samples, 0.05%)</title><rect x="83.7538%" y="1909" width="0.0546%" height="15" fill="rgb(225,119,29)" fg:x="29148" fg:w="19"/><text x="84.0038%" y="1919.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (19 samples, 0.05%)</title><rect x="83.7538%" y="1893" width="0.0546%" height="15" fill="rgb(233,32,3)" fg:x="29148" fg:w="19"/><text x="84.0038%" y="1903.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (14 samples, 0.04%)</title><rect x="83.7682%" y="1877" width="0.0402%" height="15" fill="rgb(248,126,40)" fg:x="29153" fg:w="14"/><text x="84.0182%" y="1887.50"></text></g><g><title>std::panic::catch_unwind (14 samples, 0.04%)</title><rect x="83.7682%" y="1861" width="0.0402%" height="15" fill="rgb(213,102,53)" fg:x="29153" fg:w="14"/><text x="84.0182%" y="1871.50"></text></g><g><title>std::panicking::try (14 samples, 0.04%)</title><rect x="83.7682%" y="1845" width="0.0402%" height="15" fill="rgb(212,69,15)" fg:x="29153" fg:w="14"/><text x="84.0182%" y="1855.50"></text></g><g><title>std::panicking::try::do_call (14 samples, 0.04%)</title><rect x="83.7682%" y="1829" width="0.0402%" height="15" fill="rgb(253,39,34)" fg:x="29153" fg:w="14"/><text x="84.0182%" y="1839.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (14 samples, 0.04%)</title><rect x="83.7682%" y="1813" width="0.0402%" height="15" fill="rgb(205,189,54)" fg:x="29153" fg:w="14"/><text x="84.0182%" y="1823.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (14 samples, 0.04%)</title><rect x="83.7682%" y="1797" width="0.0402%" height="15" fill="rgb(234,229,45)" fg:x="29153" fg:w="14"/><text x="84.0182%" y="1807.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (14 samples, 0.04%)</title><rect x="83.7682%" y="1781" width="0.0402%" height="15" fill="rgb(243,79,48)" fg:x="29153" fg:w="14"/><text x="84.0182%" y="1791.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (14 samples, 0.04%)</title><rect x="83.7682%" y="1765" width="0.0402%" height="15" fill="rgb(206,71,50)" fg:x="29153" fg:w="14"/><text x="84.0182%" y="1775.50"></text></g><g><title>rayon_core::join::join_context (14 samples, 0.04%)</title><rect x="83.7682%" y="1749" width="0.0402%" height="15" fill="rgb(209,32,17)" fg:x="29153" fg:w="14"/><text x="84.0182%" y="1759.50"></text></g><g><title>rayon_core::registry::in_worker (14 samples, 0.04%)</title><rect x="83.7682%" y="1733" width="0.0402%" height="15" fill="rgb(219,229,6)" fg:x="29153" fg:w="14"/><text x="84.0182%" y="1743.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (14 samples, 0.04%)</title><rect x="83.7682%" y="1717" width="0.0402%" height="15" fill="rgb(226,25,27)" fg:x="29153" fg:w="14"/><text x="84.0182%" y="1727.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (11 samples, 0.03%)</title><rect x="83.7768%" y="1701" width="0.0316%" height="15" fill="rgb(218,185,23)" fg:x="29156" fg:w="11"/><text x="84.0268%" y="1711.50"></text></g><g><title>std::panic::catch_unwind (11 samples, 0.03%)</title><rect x="83.7768%" y="1685" width="0.0316%" height="15" fill="rgb(242,123,5)" fg:x="29156" fg:w="11"/><text x="84.0268%" y="1695.50"></text></g><g><title>std::panicking::try (11 samples, 0.03%)</title><rect x="83.7768%" y="1669" width="0.0316%" height="15" fill="rgb(215,53,19)" fg:x="29156" fg:w="11"/><text x="84.0268%" y="1679.50"></text></g><g><title>std::panicking::try::do_call (11 samples, 0.03%)</title><rect x="83.7768%" y="1653" width="0.0316%" height="15" fill="rgb(233,20,30)" fg:x="29156" fg:w="11"/><text x="84.0268%" y="1663.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (11 samples, 0.03%)</title><rect x="83.7768%" y="1637" width="0.0316%" height="15" fill="rgb(209,67,20)" fg:x="29156" fg:w="11"/><text x="84.0268%" y="1647.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (11 samples, 0.03%)</title><rect x="83.7768%" y="1621" width="0.0316%" height="15" fill="rgb(227,181,50)" fg:x="29156" fg:w="11"/><text x="84.0268%" y="1631.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (11 samples, 0.03%)</title><rect x="83.7768%" y="1605" width="0.0316%" height="15" fill="rgb(252,75,38)" fg:x="29156" fg:w="11"/><text x="84.0268%" y="1615.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.03%)</title><rect x="83.7768%" y="1589" width="0.0316%" height="15" fill="rgb(235,9,33)" fg:x="29156" fg:w="11"/><text x="84.0268%" y="1599.50"></text></g><g><title>rayon_core::join::join_context (11 samples, 0.03%)</title><rect x="83.7768%" y="1573" width="0.0316%" height="15" fill="rgb(208,87,30)" fg:x="29156" fg:w="11"/><text x="84.0268%" y="1583.50"></text></g><g><title>rayon_core::registry::in_worker (11 samples, 0.03%)</title><rect x="83.7768%" y="1557" width="0.0316%" height="15" fill="rgb(215,199,39)" fg:x="29156" fg:w="11"/><text x="84.0268%" y="1567.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (11 samples, 0.03%)</title><rect x="83.7768%" y="1541" width="0.0316%" height="15" fill="rgb(246,208,12)" fg:x="29156" fg:w="11"/><text x="84.0268%" y="1551.50"></text></g><g><title>par_exec_6 (14 samples, 0.04%)</title><rect x="83.8084%" y="2789" width="0.0402%" height="15" fill="rgb(206,195,10)" fg:x="29167" fg:w="14"/><text x="84.0584%" y="2799.50"></text></g><g><title>__GI___clone3 (14 samples, 0.04%)</title><rect x="83.8084%" y="2773" width="0.0402%" height="15" fill="rgb(244,1,30)" fg:x="29167" fg:w="14"/><text x="84.0584%" y="2783.50"></text></g><g><title>start_thread (14 samples, 0.04%)</title><rect x="83.8084%" y="2757" width="0.0402%" height="15" fill="rgb(230,83,5)" fg:x="29167" fg:w="14"/><text x="84.0584%" y="2767.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (14 samples, 0.04%)</title><rect x="83.8084%" y="2741" width="0.0402%" height="15" fill="rgb(239,62,17)" fg:x="29167" fg:w="14"/><text x="84.0584%" y="2751.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (14 samples, 0.04%)</title><rect x="83.8084%" y="2725" width="0.0402%" height="15" fill="rgb(252,193,41)" fg:x="29167" fg:w="14"/><text x="84.0584%" y="2735.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (14 samples, 0.04%)</title><rect x="83.8084%" y="2709" width="0.0402%" height="15" fill="rgb(216,142,19)" fg:x="29167" fg:w="14"/><text x="84.0584%" y="2719.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (14 samples, 0.04%)</title><rect x="83.8084%" y="2693" width="0.0402%" height="15" fill="rgb(240,81,38)" fg:x="29167" fg:w="14"/><text x="84.0584%" y="2703.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (14 samples, 0.04%)</title><rect x="83.8084%" y="2677" width="0.0402%" height="15" fill="rgb(240,109,40)" fg:x="29167" fg:w="14"/><text x="84.0584%" y="2687.50"></text></g><g><title>std::panic::catch_unwind (14 samples, 0.04%)</title><rect x="83.8084%" y="2661" width="0.0402%" height="15" fill="rgb(230,123,10)" fg:x="29167" fg:w="14"/><text x="84.0584%" y="2671.50"></text></g><g><title>std::panicking::try (14 samples, 0.04%)</title><rect x="83.8084%" y="2645" width="0.0402%" height="15" fill="rgb(253,42,32)" fg:x="29167" fg:w="14"/><text x="84.0584%" y="2655.50"></text></g><g><title>std::panicking::try::do_call (14 samples, 0.04%)</title><rect x="83.8084%" y="2629" width="0.0402%" height="15" fill="rgb(218,154,8)" fg:x="29167" fg:w="14"/><text x="84.0584%" y="2639.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (14 samples, 0.04%)</title><rect x="83.8084%" y="2613" width="0.0402%" height="15" fill="rgb(216,197,10)" fg:x="29167" fg:w="14"/><text x="84.0584%" y="2623.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (14 samples, 0.04%)</title><rect x="83.8084%" y="2597" width="0.0402%" height="15" fill="rgb(223,107,12)" fg:x="29167" fg:w="14"/><text x="84.0584%" y="2607.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (14 samples, 0.04%)</title><rect x="83.8084%" y="2581" width="0.0402%" height="15" fill="rgb(241,174,42)" fg:x="29167" fg:w="14"/><text x="84.0584%" y="2591.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (14 samples, 0.04%)</title><rect x="83.8084%" y="2565" width="0.0402%" height="15" fill="rgb(231,78,20)" fg:x="29167" fg:w="14"/><text x="84.0584%" y="2575.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (14 samples, 0.04%)</title><rect x="83.8084%" y="2549" width="0.0402%" height="15" fill="rgb(230,208,49)" fg:x="29167" fg:w="14"/><text x="84.0584%" y="2559.50"></text></g><g><title>rayon_core::registry::main_loop (14 samples, 0.04%)</title><rect x="83.8084%" y="2533" width="0.0402%" height="15" fill="rgb(238,11,34)" fg:x="29167" fg:w="14"/><text x="84.0584%" y="2543.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (14 samples, 0.04%)</title><rect x="83.8084%" y="2517" width="0.0402%" height="15" fill="rgb(210,130,26)" fg:x="29167" fg:w="14"/><text x="84.0584%" y="2527.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (14 samples, 0.04%)</title><rect x="83.8084%" y="2501" width="0.0402%" height="15" fill="rgb(242,131,11)" fg:x="29167" fg:w="14"/><text x="84.0584%" y="2511.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (14 samples, 0.04%)</title><rect x="83.8084%" y="2485" width="0.0402%" height="15" fill="rgb(237,38,28)" fg:x="29167" fg:w="14"/><text x="84.0584%" y="2495.50"></text></g><g><title>rayon_core::job::JobRef::execute (14 samples, 0.04%)</title><rect x="83.8084%" y="2469" width="0.0402%" height="15" fill="rgb(244,180,43)" fg:x="29167" fg:w="14"/><text x="84.0584%" y="2479.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (14 samples, 0.04%)</title><rect x="83.8084%" y="2453" width="0.0402%" height="15" fill="rgb(214,171,19)" fg:x="29167" fg:w="14"/><text x="84.0584%" y="2463.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (14 samples, 0.04%)</title><rect x="83.8084%" y="2437" width="0.0402%" height="15" fill="rgb(252,101,45)" fg:x="29167" fg:w="14"/><text x="84.0584%" y="2447.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (14 samples, 0.04%)</title><rect x="83.8084%" y="2421" width="0.0402%" height="15" fill="rgb(211,96,33)" fg:x="29167" fg:w="14"/><text x="84.0584%" y="2431.50"></text></g><g><title>std::panic::catch_unwind (14 samples, 0.04%)</title><rect x="83.8084%" y="2405" width="0.0402%" height="15" fill="rgb(207,80,25)" fg:x="29167" fg:w="14"/><text x="84.0584%" y="2415.50"></text></g><g><title>std::panicking::try (14 samples, 0.04%)</title><rect x="83.8084%" y="2389" width="0.0402%" height="15" fill="rgb(225,15,35)" fg:x="29167" fg:w="14"/><text x="84.0584%" y="2399.50"></text></g><g><title>std::panicking::try::do_call (14 samples, 0.04%)</title><rect x="83.8084%" y="2373" width="0.0402%" height="15" fill="rgb(214,93,43)" fg:x="29167" fg:w="14"/><text x="84.0584%" y="2383.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (14 samples, 0.04%)</title><rect x="83.8084%" y="2357" width="0.0402%" height="15" fill="rgb(248,42,37)" fg:x="29167" fg:w="14"/><text x="84.0584%" y="2367.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (14 samples, 0.04%)</title><rect x="83.8084%" y="2341" width="0.0402%" height="15" fill="rgb(217,135,32)" fg:x="29167" fg:w="14"/><text x="84.0584%" y="2351.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (14 samples, 0.04%)</title><rect x="83.8084%" y="2325" width="0.0402%" height="15" fill="rgb(216,74,28)" fg:x="29167" fg:w="14"/><text x="84.0584%" y="2335.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (14 samples, 0.04%)</title><rect x="83.8084%" y="2309" width="0.0402%" height="15" fill="rgb(247,108,16)" fg:x="29167" fg:w="14"/><text x="84.0584%" y="2319.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (14 samples, 0.04%)</title><rect x="83.8084%" y="2293" width="0.0402%" height="15" fill="rgb(205,219,30)" fg:x="29167" fg:w="14"/><text x="84.0584%" y="2303.50"></text></g><g><title>rayon_core::join::join_context (14 samples, 0.04%)</title><rect x="83.8084%" y="2277" width="0.0402%" height="15" fill="rgb(241,122,9)" fg:x="29167" fg:w="14"/><text x="84.0584%" y="2287.50"></text></g><g><title>rayon_core::registry::in_worker (14 samples, 0.04%)</title><rect x="83.8084%" y="2261" width="0.0402%" height="15" fill="rgb(216,148,50)" fg:x="29167" fg:w="14"/><text x="84.0584%" y="2271.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (14 samples, 0.04%)</title><rect x="83.8084%" y="2245" width="0.0402%" height="15" fill="rgb(226,154,2)" fg:x="29167" fg:w="14"/><text x="84.0584%" y="2255.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (13 samples, 0.04%)</title><rect x="83.8113%" y="2229" width="0.0374%" height="15" fill="rgb(220,128,1)" fg:x="29168" fg:w="13"/><text x="84.0613%" y="2239.50"></text></g><g><title>std::panic::catch_unwind (13 samples, 0.04%)</title><rect x="83.8113%" y="2213" width="0.0374%" height="15" fill="rgb(245,185,29)" fg:x="29168" fg:w="13"/><text x="84.0613%" y="2223.50"></text></g><g><title>std::panicking::try (13 samples, 0.04%)</title><rect x="83.8113%" y="2197" width="0.0374%" height="15" fill="rgb(243,161,2)" fg:x="29168" fg:w="13"/><text x="84.0613%" y="2207.50"></text></g><g><title>std::panicking::try::do_call (13 samples, 0.04%)</title><rect x="83.8113%" y="2181" width="0.0374%" height="15" fill="rgb(249,215,17)" fg:x="29168" fg:w="13"/><text x="84.0613%" y="2191.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (13 samples, 0.04%)</title><rect x="83.8113%" y="2165" width="0.0374%" height="15" fill="rgb(237,67,11)" fg:x="29168" fg:w="13"/><text x="84.0613%" y="2175.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (13 samples, 0.04%)</title><rect x="83.8113%" y="2149" width="0.0374%" height="15" fill="rgb(239,17,24)" fg:x="29168" fg:w="13"/><text x="84.0613%" y="2159.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (13 samples, 0.04%)</title><rect x="83.8113%" y="2133" width="0.0374%" height="15" fill="rgb(215,97,29)" fg:x="29168" fg:w="13"/><text x="84.0613%" y="2143.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (13 samples, 0.04%)</title><rect x="83.8113%" y="2117" width="0.0374%" height="15" fill="rgb(253,228,42)" fg:x="29168" fg:w="13"/><text x="84.0613%" y="2127.50"></text></g><g><title>rayon_core::join::join_context (13 samples, 0.04%)</title><rect x="83.8113%" y="2101" width="0.0374%" height="15" fill="rgb(240,85,2)" fg:x="29168" fg:w="13"/><text x="84.0613%" y="2111.50"></text></g><g><title>rayon_core::registry::in_worker (13 samples, 0.04%)</title><rect x="83.8113%" y="2085" width="0.0374%" height="15" fill="rgb(214,155,4)" fg:x="29168" fg:w="13"/><text x="84.0613%" y="2095.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (13 samples, 0.04%)</title><rect x="83.8113%" y="2069" width="0.0374%" height="15" fill="rgb(247,120,22)" fg:x="29168" fg:w="13"/><text x="84.0613%" y="2079.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (7 samples, 0.02%)</title><rect x="83.8285%" y="2053" width="0.0201%" height="15" fill="rgb(211,208,6)" fg:x="29174" fg:w="7"/><text x="84.0785%" y="2063.50"></text></g><g><title>std::panic::catch_unwind (7 samples, 0.02%)</title><rect x="83.8285%" y="2037" width="0.0201%" height="15" fill="rgb(235,99,41)" fg:x="29174" fg:w="7"/><text x="84.0785%" y="2047.50"></text></g><g><title>std::panicking::try (7 samples, 0.02%)</title><rect x="83.8285%" y="2021" width="0.0201%" height="15" fill="rgb(223,28,8)" fg:x="29174" fg:w="7"/><text x="84.0785%" y="2031.50"></text></g><g><title>std::panicking::try::do_call (7 samples, 0.02%)</title><rect x="83.8285%" y="2005" width="0.0201%" height="15" fill="rgb(212,71,20)" fg:x="29174" fg:w="7"/><text x="84.0785%" y="2015.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (7 samples, 0.02%)</title><rect x="83.8285%" y="1989" width="0.0201%" height="15" fill="rgb(206,85,3)" fg:x="29174" fg:w="7"/><text x="84.0785%" y="1999.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (7 samples, 0.02%)</title><rect x="83.8285%" y="1973" width="0.0201%" height="15" fill="rgb(244,180,11)" fg:x="29174" fg:w="7"/><text x="84.0785%" y="1983.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (7 samples, 0.02%)</title><rect x="83.8285%" y="1957" width="0.0201%" height="15" fill="rgb(223,16,21)" fg:x="29174" fg:w="7"/><text x="84.0785%" y="1967.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (7 samples, 0.02%)</title><rect x="83.8285%" y="1941" width="0.0201%" height="15" fill="rgb(238,85,42)" fg:x="29174" fg:w="7"/><text x="84.0785%" y="1951.50"></text></g><g><title>rayon_core::join::join_context (7 samples, 0.02%)</title><rect x="83.8285%" y="1925" width="0.0201%" height="15" fill="rgb(205,85,8)" fg:x="29174" fg:w="7"/><text x="84.0785%" y="1935.50"></text></g><g><title>rayon_core::registry::in_worker (7 samples, 0.02%)</title><rect x="83.8285%" y="1909" width="0.0201%" height="15" fill="rgb(217,190,15)" fg:x="29174" fg:w="7"/><text x="84.0785%" y="1919.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (7 samples, 0.02%)</title><rect x="83.8285%" y="1893" width="0.0201%" height="15" fill="rgb(243,192,23)" fg:x="29174" fg:w="7"/><text x="84.0785%" y="1903.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (4 samples, 0.01%)</title><rect x="83.8371%" y="1877" width="0.0115%" height="15" fill="rgb(223,220,37)" fg:x="29177" fg:w="4"/><text x="84.0871%" y="1887.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.01%)</title><rect x="83.8371%" y="1861" width="0.0115%" height="15" fill="rgb(208,41,17)" fg:x="29177" fg:w="4"/><text x="84.0871%" y="1871.50"></text></g><g><title>std::panicking::try (4 samples, 0.01%)</title><rect x="83.8371%" y="1845" width="0.0115%" height="15" fill="rgb(224,188,7)" fg:x="29177" fg:w="4"/><text x="84.0871%" y="1855.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.01%)</title><rect x="83.8371%" y="1829" width="0.0115%" height="15" fill="rgb(236,16,50)" fg:x="29177" fg:w="4"/><text x="84.0871%" y="1839.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.01%)</title><rect x="83.8371%" y="1813" width="0.0115%" height="15" fill="rgb(238,6,24)" fg:x="29177" fg:w="4"/><text x="84.0871%" y="1823.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (4 samples, 0.01%)</title><rect x="83.8371%" y="1797" width="0.0115%" height="15" fill="rgb(253,67,45)" fg:x="29177" fg:w="4"/><text x="84.0871%" y="1807.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.01%)</title><rect x="83.8371%" y="1781" width="0.0115%" height="15" fill="rgb(210,89,32)" fg:x="29177" fg:w="4"/><text x="84.0871%" y="1791.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.01%)</title><rect x="83.8371%" y="1765" width="0.0115%" height="15" fill="rgb(208,89,9)" fg:x="29177" fg:w="4"/><text x="84.0871%" y="1775.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.01%)</title><rect x="83.8371%" y="1749" width="0.0115%" height="15" fill="rgb(222,180,44)" fg:x="29177" fg:w="4"/><text x="84.0871%" y="1759.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.01%)</title><rect x="83.8371%" y="1733" width="0.0115%" height="15" fill="rgb(250,181,46)" fg:x="29177" fg:w="4"/><text x="84.0871%" y="1743.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.01%)</title><rect x="83.8371%" y="1717" width="0.0115%" height="15" fill="rgb(210,190,26)" fg:x="29177" fg:w="4"/><text x="84.0871%" y="1727.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (5 samples, 0.01%)</title><rect x="83.8544%" y="1765" width="0.0144%" height="15" fill="rgb(253,49,13)" fg:x="29183" fg:w="5"/><text x="84.1044%" y="1775.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (5 samples, 0.01%)</title><rect x="83.8544%" y="1749" width="0.0144%" height="15" fill="rgb(240,184,42)" fg:x="29183" fg:w="5"/><text x="84.1044%" y="1759.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (5 samples, 0.01%)</title><rect x="83.8544%" y="1733" width="0.0144%" height="15" fill="rgb(246,59,37)" fg:x="29183" fg:w="5"/><text x="84.1044%" y="1743.50"></text></g><g><title>rayon_core::job::JobRef::execute (5 samples, 0.01%)</title><rect x="83.8544%" y="1717" width="0.0144%" height="15" fill="rgb(207,134,54)" fg:x="29183" fg:w="5"/><text x="84.1044%" y="1727.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (5 samples, 0.01%)</title><rect x="83.8544%" y="1701" width="0.0144%" height="15" fill="rgb(250,122,24)" fg:x="29183" fg:w="5"/><text x="84.1044%" y="1711.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (5 samples, 0.01%)</title><rect x="83.8544%" y="1685" width="0.0144%" height="15" fill="rgb(239,206,3)" fg:x="29183" fg:w="5"/><text x="84.1044%" y="1695.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (5 samples, 0.01%)</title><rect x="83.8544%" y="1669" width="0.0144%" height="15" fill="rgb(253,220,32)" fg:x="29183" fg:w="5"/><text x="84.1044%" y="1679.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.01%)</title><rect x="83.8544%" y="1653" width="0.0144%" height="15" fill="rgb(209,217,48)" fg:x="29183" fg:w="5"/><text x="84.1044%" y="1663.50"></text></g><g><title>std::panicking::try (5 samples, 0.01%)</title><rect x="83.8544%" y="1637" width="0.0144%" height="15" fill="rgb(242,91,39)" fg:x="29183" fg:w="5"/><text x="84.1044%" y="1647.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.01%)</title><rect x="83.8544%" y="1621" width="0.0144%" height="15" fill="rgb(228,4,13)" fg:x="29183" fg:w="5"/><text x="84.1044%" y="1631.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5 samples, 0.01%)</title><rect x="83.8544%" y="1605" width="0.0144%" height="15" fill="rgb(223,133,4)" fg:x="29183" fg:w="5"/><text x="84.1044%" y="1615.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (5 samples, 0.01%)</title><rect x="83.8544%" y="1589" width="0.0144%" height="15" fill="rgb(215,105,30)" fg:x="29183" fg:w="5"/><text x="84.1044%" y="1599.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (5 samples, 0.01%)</title><rect x="83.8544%" y="1573" width="0.0144%" height="15" fill="rgb(230,9,4)" fg:x="29183" fg:w="5"/><text x="84.1044%" y="1583.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (5 samples, 0.01%)</title><rect x="83.8544%" y="1557" width="0.0144%" height="15" fill="rgb(248,15,2)" fg:x="29183" fg:w="5"/><text x="84.1044%" y="1567.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (5 samples, 0.01%)</title><rect x="83.8544%" y="1541" width="0.0144%" height="15" fill="rgb(208,210,22)" fg:x="29183" fg:w="5"/><text x="84.1044%" y="1551.50"></text></g><g><title>rayon_core::join::join_context (5 samples, 0.01%)</title><rect x="83.8544%" y="1525" width="0.0144%" height="15" fill="rgb(208,112,41)" fg:x="29183" fg:w="5"/><text x="84.1044%" y="1535.50"></text></g><g><title>rayon_core::registry::in_worker (5 samples, 0.01%)</title><rect x="83.8544%" y="1509" width="0.0144%" height="15" fill="rgb(232,83,14)" fg:x="29183" fg:w="5"/><text x="84.1044%" y="1519.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5 samples, 0.01%)</title><rect x="83.8544%" y="1493" width="0.0144%" height="15" fill="rgb(229,65,11)" fg:x="29183" fg:w="5"/><text x="84.1044%" y="1503.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (5 samples, 0.01%)</title><rect x="83.8544%" y="1477" width="0.0144%" height="15" fill="rgb(228,126,24)" fg:x="29183" fg:w="5"/><text x="84.1044%" y="1487.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.01%)</title><rect x="83.8544%" y="1461" width="0.0144%" height="15" fill="rgb(218,66,33)" fg:x="29183" fg:w="5"/><text x="84.1044%" y="1471.50"></text></g><g><title>std::panicking::try (5 samples, 0.01%)</title><rect x="83.8544%" y="1445" width="0.0144%" height="15" fill="rgb(251,49,52)" fg:x="29183" fg:w="5"/><text x="84.1044%" y="1455.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.01%)</title><rect x="83.8544%" y="1429" width="0.0144%" height="15" fill="rgb(219,46,37)" fg:x="29183" fg:w="5"/><text x="84.1044%" y="1439.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5 samples, 0.01%)</title><rect x="83.8544%" y="1413" width="0.0144%" height="15" fill="rgb(213,53,49)" fg:x="29183" fg:w="5"/><text x="84.1044%" y="1423.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (5 samples, 0.01%)</title><rect x="83.8544%" y="1397" width="0.0144%" height="15" fill="rgb(214,134,1)" fg:x="29183" fg:w="5"/><text x="84.1044%" y="1407.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (5 samples, 0.01%)</title><rect x="83.8544%" y="1381" width="0.0144%" height="15" fill="rgb(208,139,43)" fg:x="29183" fg:w="5"/><text x="84.1044%" y="1391.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (5 samples, 0.01%)</title><rect x="83.8544%" y="1365" width="0.0144%" height="15" fill="rgb(231,105,35)" fg:x="29183" fg:w="5"/><text x="84.1044%" y="1375.50"></text></g><g><title>rayon_core::join::join_context (5 samples, 0.01%)</title><rect x="83.8544%" y="1349" width="0.0144%" height="15" fill="rgb(247,189,9)" fg:x="29183" fg:w="5"/><text x="84.1044%" y="1359.50"></text></g><g><title>rayon_core::registry::in_worker (5 samples, 0.01%)</title><rect x="83.8544%" y="1333" width="0.0144%" height="15" fill="rgb(252,48,51)" fg:x="29183" fg:w="5"/><text x="84.1044%" y="1343.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5 samples, 0.01%)</title><rect x="83.8544%" y="1317" width="0.0144%" height="15" fill="rgb(209,121,1)" fg:x="29183" fg:w="5"/><text x="84.1044%" y="1327.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (6 samples, 0.02%)</title><rect x="83.8544%" y="2053" width="0.0172%" height="15" fill="rgb(231,40,26)" fg:x="29183" fg:w="6"/><text x="84.1044%" y="2063.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (6 samples, 0.02%)</title><rect x="83.8544%" y="2037" width="0.0172%" height="15" fill="rgb(251,8,13)" fg:x="29183" fg:w="6"/><text x="84.1044%" y="2047.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (6 samples, 0.02%)</title><rect x="83.8544%" y="2021" width="0.0172%" height="15" fill="rgb(231,110,2)" fg:x="29183" fg:w="6"/><text x="84.1044%" y="2031.50"></text></g><g><title>rayon_core::job::JobRef::execute (6 samples, 0.02%)</title><rect x="83.8544%" y="2005" width="0.0172%" height="15" fill="rgb(216,153,22)" fg:x="29183" fg:w="6"/><text x="84.1044%" y="2015.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (6 samples, 0.02%)</title><rect x="83.8544%" y="1989" width="0.0172%" height="15" fill="rgb(249,116,49)" fg:x="29183" fg:w="6"/><text x="84.1044%" y="1999.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (6 samples, 0.02%)</title><rect x="83.8544%" y="1973" width="0.0172%" height="15" fill="rgb(230,89,2)" fg:x="29183" fg:w="6"/><text x="84.1044%" y="1983.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (6 samples, 0.02%)</title><rect x="83.8544%" y="1957" width="0.0172%" height="15" fill="rgb(231,125,23)" fg:x="29183" fg:w="6"/><text x="84.1044%" y="1967.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.02%)</title><rect x="83.8544%" y="1941" width="0.0172%" height="15" fill="rgb(212,217,18)" fg:x="29183" fg:w="6"/><text x="84.1044%" y="1951.50"></text></g><g><title>std::panicking::try (6 samples, 0.02%)</title><rect x="83.8544%" y="1925" width="0.0172%" height="15" fill="rgb(210,21,33)" fg:x="29183" fg:w="6"/><text x="84.1044%" y="1935.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.02%)</title><rect x="83.8544%" y="1909" width="0.0172%" height="15" fill="rgb(241,97,9)" fg:x="29183" fg:w="6"/><text x="84.1044%" y="1919.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6 samples, 0.02%)</title><rect x="83.8544%" y="1893" width="0.0172%" height="15" fill="rgb(221,35,31)" fg:x="29183" fg:w="6"/><text x="84.1044%" y="1903.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (6 samples, 0.02%)</title><rect x="83.8544%" y="1877" width="0.0172%" height="15" fill="rgb(251,23,23)" fg:x="29183" fg:w="6"/><text x="84.1044%" y="1887.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (6 samples, 0.02%)</title><rect x="83.8544%" y="1861" width="0.0172%" height="15" fill="rgb(227,165,2)" fg:x="29183" fg:w="6"/><text x="84.1044%" y="1871.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (6 samples, 0.02%)</title><rect x="83.8544%" y="1845" width="0.0172%" height="15" fill="rgb(242,24,2)" fg:x="29183" fg:w="6"/><text x="84.1044%" y="1855.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (6 samples, 0.02%)</title><rect x="83.8544%" y="1829" width="0.0172%" height="15" fill="rgb(242,138,51)" fg:x="29183" fg:w="6"/><text x="84.1044%" y="1839.50"></text></g><g><title>rayon_core::join::join_context (6 samples, 0.02%)</title><rect x="83.8544%" y="1813" width="0.0172%" height="15" fill="rgb(220,219,5)" fg:x="29183" fg:w="6"/><text x="84.1044%" y="1823.50"></text></g><g><title>rayon_core::registry::in_worker (6 samples, 0.02%)</title><rect x="83.8544%" y="1797" width="0.0172%" height="15" fill="rgb(247,53,29)" fg:x="29183" fg:w="6"/><text x="84.1044%" y="1807.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (6 samples, 0.02%)</title><rect x="83.8544%" y="1781" width="0.0172%" height="15" fill="rgb(233,43,39)" fg:x="29183" fg:w="6"/><text x="84.1044%" y="1791.50"></text></g><g><title>par_exec_7 (17 samples, 0.05%)</title><rect x="83.8486%" y="2789" width="0.0488%" height="15" fill="rgb(230,128,54)" fg:x="29181" fg:w="17"/><text x="84.0986%" y="2799.50"></text></g><g><title>__GI___clone3 (17 samples, 0.05%)</title><rect x="83.8486%" y="2773" width="0.0488%" height="15" fill="rgb(218,20,12)" fg:x="29181" fg:w="17"/><text x="84.0986%" y="2783.50"></text></g><g><title>start_thread (17 samples, 0.05%)</title><rect x="83.8486%" y="2757" width="0.0488%" height="15" fill="rgb(206,51,14)" fg:x="29181" fg:w="17"/><text x="84.0986%" y="2767.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (17 samples, 0.05%)</title><rect x="83.8486%" y="2741" width="0.0488%" height="15" fill="rgb(223,16,35)" fg:x="29181" fg:w="17"/><text x="84.0986%" y="2751.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (17 samples, 0.05%)</title><rect x="83.8486%" y="2725" width="0.0488%" height="15" fill="rgb(226,165,37)" fg:x="29181" fg:w="17"/><text x="84.0986%" y="2735.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (17 samples, 0.05%)</title><rect x="83.8486%" y="2709" width="0.0488%" height="15" fill="rgb(240,26,21)" fg:x="29181" fg:w="17"/><text x="84.0986%" y="2719.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (17 samples, 0.05%)</title><rect x="83.8486%" y="2693" width="0.0488%" height="15" fill="rgb(240,72,46)" fg:x="29181" fg:w="17"/><text x="84.0986%" y="2703.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (17 samples, 0.05%)</title><rect x="83.8486%" y="2677" width="0.0488%" height="15" fill="rgb(211,33,41)" fg:x="29181" fg:w="17"/><text x="84.0986%" y="2687.50"></text></g><g><title>std::panic::catch_unwind (17 samples, 0.05%)</title><rect x="83.8486%" y="2661" width="0.0488%" height="15" fill="rgb(224,157,46)" fg:x="29181" fg:w="17"/><text x="84.0986%" y="2671.50"></text></g><g><title>std::panicking::try (17 samples, 0.05%)</title><rect x="83.8486%" y="2645" width="0.0488%" height="15" fill="rgb(223,59,19)" fg:x="29181" fg:w="17"/><text x="84.0986%" y="2655.50"></text></g><g><title>std::panicking::try::do_call (17 samples, 0.05%)</title><rect x="83.8486%" y="2629" width="0.0488%" height="15" fill="rgb(239,187,1)" fg:x="29181" fg:w="17"/><text x="84.0986%" y="2639.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (17 samples, 0.05%)</title><rect x="83.8486%" y="2613" width="0.0488%" height="15" fill="rgb(226,95,9)" fg:x="29181" fg:w="17"/><text x="84.0986%" y="2623.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (17 samples, 0.05%)</title><rect x="83.8486%" y="2597" width="0.0488%" height="15" fill="rgb(234,61,54)" fg:x="29181" fg:w="17"/><text x="84.0986%" y="2607.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (17 samples, 0.05%)</title><rect x="83.8486%" y="2581" width="0.0488%" height="15" fill="rgb(205,209,47)" fg:x="29181" fg:w="17"/><text x="84.0986%" y="2591.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (17 samples, 0.05%)</title><rect x="83.8486%" y="2565" width="0.0488%" height="15" fill="rgb(228,7,43)" fg:x="29181" fg:w="17"/><text x="84.0986%" y="2575.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (17 samples, 0.05%)</title><rect x="83.8486%" y="2549" width="0.0488%" height="15" fill="rgb(240,217,52)" fg:x="29181" fg:w="17"/><text x="84.0986%" y="2559.50"></text></g><g><title>rayon_core::registry::main_loop (17 samples, 0.05%)</title><rect x="83.8486%" y="2533" width="0.0488%" height="15" fill="rgb(211,178,21)" fg:x="29181" fg:w="17"/><text x="84.0986%" y="2543.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (17 samples, 0.05%)</title><rect x="83.8486%" y="2517" width="0.0488%" height="15" fill="rgb(205,25,34)" fg:x="29181" fg:w="17"/><text x="84.0986%" y="2527.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (17 samples, 0.05%)</title><rect x="83.8486%" y="2501" width="0.0488%" height="15" fill="rgb(209,57,11)" fg:x="29181" fg:w="17"/><text x="84.0986%" y="2511.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (17 samples, 0.05%)</title><rect x="83.8486%" y="2485" width="0.0488%" height="15" fill="rgb(221,99,2)" fg:x="29181" fg:w="17"/><text x="84.0986%" y="2495.50"></text></g><g><title>rayon_core::job::JobRef::execute (17 samples, 0.05%)</title><rect x="83.8486%" y="2469" width="0.0488%" height="15" fill="rgb(232,79,22)" fg:x="29181" fg:w="17"/><text x="84.0986%" y="2479.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (17 samples, 0.05%)</title><rect x="83.8486%" y="2453" width="0.0488%" height="15" fill="rgb(221,145,32)" fg:x="29181" fg:w="17"/><text x="84.0986%" y="2463.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (17 samples, 0.05%)</title><rect x="83.8486%" y="2437" width="0.0488%" height="15" fill="rgb(236,133,36)" fg:x="29181" fg:w="17"/><text x="84.0986%" y="2447.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (17 samples, 0.05%)</title><rect x="83.8486%" y="2421" width="0.0488%" height="15" fill="rgb(208,224,44)" fg:x="29181" fg:w="17"/><text x="84.0986%" y="2431.50"></text></g><g><title>std::panic::catch_unwind (17 samples, 0.05%)</title><rect x="83.8486%" y="2405" width="0.0488%" height="15" fill="rgb(235,143,15)" fg:x="29181" fg:w="17"/><text x="84.0986%" y="2415.50"></text></g><g><title>std::panicking::try (17 samples, 0.05%)</title><rect x="83.8486%" y="2389" width="0.0488%" height="15" fill="rgb(249,83,27)" fg:x="29181" fg:w="17"/><text x="84.0986%" y="2399.50"></text></g><g><title>std::panicking::try::do_call (17 samples, 0.05%)</title><rect x="83.8486%" y="2373" width="0.0488%" height="15" fill="rgb(238,226,19)" fg:x="29181" fg:w="17"/><text x="84.0986%" y="2383.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (17 samples, 0.05%)</title><rect x="83.8486%" y="2357" width="0.0488%" height="15" fill="rgb(226,206,27)" fg:x="29181" fg:w="17"/><text x="84.0986%" y="2367.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (17 samples, 0.05%)</title><rect x="83.8486%" y="2341" width="0.0488%" height="15" fill="rgb(251,182,9)" fg:x="29181" fg:w="17"/><text x="84.0986%" y="2351.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (17 samples, 0.05%)</title><rect x="83.8486%" y="2325" width="0.0488%" height="15" fill="rgb(212,140,41)" fg:x="29181" fg:w="17"/><text x="84.0986%" y="2335.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (17 samples, 0.05%)</title><rect x="83.8486%" y="2309" width="0.0488%" height="15" fill="rgb(220,106,18)" fg:x="29181" fg:w="17"/><text x="84.0986%" y="2319.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (17 samples, 0.05%)</title><rect x="83.8486%" y="2293" width="0.0488%" height="15" fill="rgb(252,46,41)" fg:x="29181" fg:w="17"/><text x="84.0986%" y="2303.50"></text></g><g><title>rayon_core::join::join_context (17 samples, 0.05%)</title><rect x="83.8486%" y="2277" width="0.0488%" height="15" fill="rgb(209,222,15)" fg:x="29181" fg:w="17"/><text x="84.0986%" y="2287.50"></text></g><g><title>rayon_core::registry::in_worker (17 samples, 0.05%)</title><rect x="83.8486%" y="2261" width="0.0488%" height="15" fill="rgb(233,83,50)" fg:x="29181" fg:w="17"/><text x="84.0986%" y="2271.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (17 samples, 0.05%)</title><rect x="83.8486%" y="2245" width="0.0488%" height="15" fill="rgb(205,212,0)" fg:x="29181" fg:w="17"/><text x="84.0986%" y="2255.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (16 samples, 0.05%)</title><rect x="83.8515%" y="2229" width="0.0460%" height="15" fill="rgb(235,117,51)" fg:x="29182" fg:w="16"/><text x="84.1015%" y="2239.50"></text></g><g><title>std::panic::catch_unwind (16 samples, 0.05%)</title><rect x="83.8515%" y="2213" width="0.0460%" height="15" fill="rgb(233,133,48)" fg:x="29182" fg:w="16"/><text x="84.1015%" y="2223.50"></text></g><g><title>std::panicking::try (16 samples, 0.05%)</title><rect x="83.8515%" y="2197" width="0.0460%" height="15" fill="rgb(219,3,2)" fg:x="29182" fg:w="16"/><text x="84.1015%" y="2207.50"></text></g><g><title>std::panicking::try::do_call (16 samples, 0.05%)</title><rect x="83.8515%" y="2181" width="0.0460%" height="15" fill="rgb(225,80,52)" fg:x="29182" fg:w="16"/><text x="84.1015%" y="2191.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (16 samples, 0.05%)</title><rect x="83.8515%" y="2165" width="0.0460%" height="15" fill="rgb(235,195,42)" fg:x="29182" fg:w="16"/><text x="84.1015%" y="2175.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (16 samples, 0.05%)</title><rect x="83.8515%" y="2149" width="0.0460%" height="15" fill="rgb(240,207,46)" fg:x="29182" fg:w="16"/><text x="84.1015%" y="2159.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (16 samples, 0.05%)</title><rect x="83.8515%" y="2133" width="0.0460%" height="15" fill="rgb(236,112,50)" fg:x="29182" fg:w="16"/><text x="84.1015%" y="2143.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (16 samples, 0.05%)</title><rect x="83.8515%" y="2117" width="0.0460%" height="15" fill="rgb(249,151,27)" fg:x="29182" fg:w="16"/><text x="84.1015%" y="2127.50"></text></g><g><title>rayon_core::join::join_context (16 samples, 0.05%)</title><rect x="83.8515%" y="2101" width="0.0460%" height="15" fill="rgb(253,223,52)" fg:x="29182" fg:w="16"/><text x="84.1015%" y="2111.50"></text></g><g><title>rayon_core::registry::in_worker (16 samples, 0.05%)</title><rect x="83.8515%" y="2085" width="0.0460%" height="15" fill="rgb(215,55,33)" fg:x="29182" fg:w="16"/><text x="84.1015%" y="2095.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (16 samples, 0.05%)</title><rect x="83.8515%" y="2069" width="0.0460%" height="15" fill="rgb(207,24,17)" fg:x="29182" fg:w="16"/><text x="84.1015%" y="2079.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (9 samples, 0.03%)</title><rect x="83.8716%" y="2053" width="0.0259%" height="15" fill="rgb(218,169,32)" fg:x="29189" fg:w="9"/><text x="84.1216%" y="2063.50"></text></g><g><title>std::panic::catch_unwind (9 samples, 0.03%)</title><rect x="83.8716%" y="2037" width="0.0259%" height="15" fill="rgb(209,210,6)" fg:x="29189" fg:w="9"/><text x="84.1216%" y="2047.50"></text></g><g><title>std::panicking::try (9 samples, 0.03%)</title><rect x="83.8716%" y="2021" width="0.0259%" height="15" fill="rgb(225,208,8)" fg:x="29189" fg:w="9"/><text x="84.1216%" y="2031.50"></text></g><g><title>std::panicking::try::do_call (9 samples, 0.03%)</title><rect x="83.8716%" y="2005" width="0.0259%" height="15" fill="rgb(238,14,32)" fg:x="29189" fg:w="9"/><text x="84.1216%" y="2015.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (9 samples, 0.03%)</title><rect x="83.8716%" y="1989" width="0.0259%" height="15" fill="rgb(211,137,3)" fg:x="29189" fg:w="9"/><text x="84.1216%" y="1999.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (9 samples, 0.03%)</title><rect x="83.8716%" y="1973" width="0.0259%" height="15" fill="rgb(207,171,19)" fg:x="29189" fg:w="9"/><text x="84.1216%" y="1983.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (9 samples, 0.03%)</title><rect x="83.8716%" y="1957" width="0.0259%" height="15" fill="rgb(250,80,8)" fg:x="29189" fg:w="9"/><text x="84.1216%" y="1967.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (9 samples, 0.03%)</title><rect x="83.8716%" y="1941" width="0.0259%" height="15" fill="rgb(209,103,53)" fg:x="29189" fg:w="9"/><text x="84.1216%" y="1951.50"></text></g><g><title>rayon_core::join::join_context (9 samples, 0.03%)</title><rect x="83.8716%" y="1925" width="0.0259%" height="15" fill="rgb(233,198,10)" fg:x="29189" fg:w="9"/><text x="84.1216%" y="1935.50"></text></g><g><title>rayon_core::registry::in_worker (9 samples, 0.03%)</title><rect x="83.8716%" y="1909" width="0.0259%" height="15" fill="rgb(236,125,25)" fg:x="29189" fg:w="9"/><text x="84.1216%" y="1919.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (9 samples, 0.03%)</title><rect x="83.8716%" y="1893" width="0.0259%" height="15" fill="rgb(254,182,48)" fg:x="29189" fg:w="9"/><text x="84.1216%" y="1903.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (5 samples, 0.01%)</title><rect x="83.8831%" y="1877" width="0.0144%" height="15" fill="rgb(216,108,44)" fg:x="29193" fg:w="5"/><text x="84.1331%" y="1887.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.01%)</title><rect x="83.8831%" y="1861" width="0.0144%" height="15" fill="rgb(222,72,39)" fg:x="29193" fg:w="5"/><text x="84.1331%" y="1871.50"></text></g><g><title>std::panicking::try (5 samples, 0.01%)</title><rect x="83.8831%" y="1845" width="0.0144%" height="15" fill="rgb(252,70,39)" fg:x="29193" fg:w="5"/><text x="84.1331%" y="1855.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.01%)</title><rect x="83.8831%" y="1829" width="0.0144%" height="15" fill="rgb(243,99,34)" fg:x="29193" fg:w="5"/><text x="84.1331%" y="1839.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5 samples, 0.01%)</title><rect x="83.8831%" y="1813" width="0.0144%" height="15" fill="rgb(252,109,12)" fg:x="29193" fg:w="5"/><text x="84.1331%" y="1823.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (5 samples, 0.01%)</title><rect x="83.8831%" y="1797" width="0.0144%" height="15" fill="rgb(211,186,10)" fg:x="29193" fg:w="5"/><text x="84.1331%" y="1807.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (5 samples, 0.01%)</title><rect x="83.8831%" y="1781" width="0.0144%" height="15" fill="rgb(246,90,8)" fg:x="29193" fg:w="5"/><text x="84.1331%" y="1791.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (5 samples, 0.01%)</title><rect x="83.8831%" y="1765" width="0.0144%" height="15" fill="rgb(226,91,24)" fg:x="29193" fg:w="5"/><text x="84.1331%" y="1775.50"></text></g><g><title>rayon_core::join::join_context (5 samples, 0.01%)</title><rect x="83.8831%" y="1749" width="0.0144%" height="15" fill="rgb(216,28,44)" fg:x="29193" fg:w="5"/><text x="84.1331%" y="1759.50"></text></g><g><title>rayon_core::registry::in_worker (5 samples, 0.01%)</title><rect x="83.8831%" y="1733" width="0.0144%" height="15" fill="rgb(229,36,0)" fg:x="29193" fg:w="5"/><text x="84.1331%" y="1743.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5 samples, 0.01%)</title><rect x="83.8831%" y="1717" width="0.0144%" height="15" fill="rgb(245,97,18)" fg:x="29193" fg:w="5"/><text x="84.1331%" y="1727.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (4 samples, 0.01%)</title><rect x="83.9004%" y="2229" width="0.0115%" height="15" fill="rgb(241,97,54)" fg:x="29199" fg:w="4"/><text x="84.1504%" y="2239.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (4 samples, 0.01%)</title><rect x="83.9004%" y="2213" width="0.0115%" height="15" fill="rgb(234,125,17)" fg:x="29199" fg:w="4"/><text x="84.1504%" y="2223.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (4 samples, 0.01%)</title><rect x="83.9004%" y="2197" width="0.0115%" height="15" fill="rgb(228,172,39)" fg:x="29199" fg:w="4"/><text x="84.1504%" y="2207.50"></text></g><g><title>rayon_core::job::JobRef::execute (4 samples, 0.01%)</title><rect x="83.9004%" y="2181" width="0.0115%" height="15" fill="rgb(227,169,1)" fg:x="29199" fg:w="4"/><text x="84.1504%" y="2191.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (4 samples, 0.01%)</title><rect x="83.9004%" y="2165" width="0.0115%" height="15" fill="rgb(206,13,35)" fg:x="29199" fg:w="4"/><text x="84.1504%" y="2175.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (4 samples, 0.01%)</title><rect x="83.9004%" y="2149" width="0.0115%" height="15" fill="rgb(211,117,30)" fg:x="29199" fg:w="4"/><text x="84.1504%" y="2159.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (4 samples, 0.01%)</title><rect x="83.9004%" y="2133" width="0.0115%" height="15" fill="rgb(230,198,4)" fg:x="29199" fg:w="4"/><text x="84.1504%" y="2143.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.01%)</title><rect x="83.9004%" y="2117" width="0.0115%" height="15" fill="rgb(213,87,54)" fg:x="29199" fg:w="4"/><text x="84.1504%" y="2127.50"></text></g><g><title>std::panicking::try (4 samples, 0.01%)</title><rect x="83.9004%" y="2101" width="0.0115%" height="15" fill="rgb(248,43,22)" fg:x="29199" fg:w="4"/><text x="84.1504%" y="2111.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.01%)</title><rect x="83.9004%" y="2085" width="0.0115%" height="15" fill="rgb(213,175,48)" fg:x="29199" fg:w="4"/><text x="84.1504%" y="2095.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.01%)</title><rect x="83.9004%" y="2069" width="0.0115%" height="15" fill="rgb(252,55,9)" fg:x="29199" fg:w="4"/><text x="84.1504%" y="2079.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (4 samples, 0.01%)</title><rect x="83.9004%" y="2053" width="0.0115%" height="15" fill="rgb(231,72,33)" fg:x="29199" fg:w="4"/><text x="84.1504%" y="2063.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (4 samples, 0.01%)</title><rect x="83.9004%" y="2037" width="0.0115%" height="15" fill="rgb(213,2,54)" fg:x="29199" fg:w="4"/><text x="84.1504%" y="2047.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.01%)</title><rect x="83.9004%" y="2021" width="0.0115%" height="15" fill="rgb(208,88,25)" fg:x="29199" fg:w="4"/><text x="84.1504%" y="2031.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.01%)</title><rect x="83.9004%" y="2005" width="0.0115%" height="15" fill="rgb(215,117,13)" fg:x="29199" fg:w="4"/><text x="84.1504%" y="2015.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.01%)</title><rect x="83.9004%" y="1989" width="0.0115%" height="15" fill="rgb(243,147,21)" fg:x="29199" fg:w="4"/><text x="84.1504%" y="1999.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.01%)</title><rect x="83.9004%" y="1973" width="0.0115%" height="15" fill="rgb(208,215,36)" fg:x="29199" fg:w="4"/><text x="84.1504%" y="1983.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.01%)</title><rect x="83.9004%" y="1957" width="0.0115%" height="15" fill="rgb(238,187,24)" fg:x="29199" fg:w="4"/><text x="84.1504%" y="1967.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (4 samples, 0.01%)</title><rect x="83.9147%" y="2053" width="0.0115%" height="15" fill="rgb(214,173,11)" fg:x="29204" fg:w="4"/><text x="84.1647%" y="2063.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (4 samples, 0.01%)</title><rect x="83.9147%" y="2037" width="0.0115%" height="15" fill="rgb(222,71,20)" fg:x="29204" fg:w="4"/><text x="84.1647%" y="2047.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.01%)</title><rect x="83.9147%" y="2021" width="0.0115%" height="15" fill="rgb(242,125,4)" fg:x="29204" fg:w="4"/><text x="84.1647%" y="2031.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.01%)</title><rect x="83.9147%" y="2005" width="0.0115%" height="15" fill="rgb(217,101,52)" fg:x="29204" fg:w="4"/><text x="84.1647%" y="2015.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.01%)</title><rect x="83.9147%" y="1989" width="0.0115%" height="15" fill="rgb(223,2,50)" fg:x="29204" fg:w="4"/><text x="84.1647%" y="1999.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.01%)</title><rect x="83.9147%" y="1973" width="0.0115%" height="15" fill="rgb(225,197,9)" fg:x="29204" fg:w="4"/><text x="84.1647%" y="1983.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.01%)</title><rect x="83.9147%" y="1957" width="0.0115%" height="15" fill="rgb(234,76,27)" fg:x="29204" fg:w="4"/><text x="84.1647%" y="1967.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (5 samples, 0.01%)</title><rect x="83.9291%" y="1877" width="0.0144%" height="15" fill="rgb(213,161,26)" fg:x="29209" fg:w="5"/><text x="84.1791%" y="1887.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (5 samples, 0.01%)</title><rect x="83.9291%" y="1861" width="0.0144%" height="15" fill="rgb(210,228,2)" fg:x="29209" fg:w="5"/><text x="84.1791%" y="1871.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (5 samples, 0.01%)</title><rect x="83.9291%" y="1845" width="0.0144%" height="15" fill="rgb(235,4,16)" fg:x="29209" fg:w="5"/><text x="84.1791%" y="1855.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (5 samples, 0.01%)</title><rect x="83.9291%" y="1829" width="0.0144%" height="15" fill="rgb(235,83,42)" fg:x="29209" fg:w="5"/><text x="84.1791%" y="1839.50"></text></g><g><title>rayon_core::join::join_context (5 samples, 0.01%)</title><rect x="83.9291%" y="1813" width="0.0144%" height="15" fill="rgb(207,116,39)" fg:x="29209" fg:w="5"/><text x="84.1791%" y="1823.50"></text></g><g><title>rayon_core::registry::in_worker (5 samples, 0.01%)</title><rect x="83.9291%" y="1797" width="0.0144%" height="15" fill="rgb(253,206,9)" fg:x="29209" fg:w="5"/><text x="84.1791%" y="1807.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5 samples, 0.01%)</title><rect x="83.9291%" y="1781" width="0.0144%" height="15" fill="rgb(234,32,47)" fg:x="29209" fg:w="5"/><text x="84.1791%" y="1791.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (5 samples, 0.01%)</title><rect x="83.9291%" y="1765" width="0.0144%" height="15" fill="rgb(247,40,39)" fg:x="29209" fg:w="5"/><text x="84.1791%" y="1775.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.01%)</title><rect x="83.9291%" y="1749" width="0.0144%" height="15" fill="rgb(236,199,13)" fg:x="29209" fg:w="5"/><text x="84.1791%" y="1759.50"></text></g><g><title>std::panicking::try (5 samples, 0.01%)</title><rect x="83.9291%" y="1733" width="0.0144%" height="15" fill="rgb(240,127,44)" fg:x="29209" fg:w="5"/><text x="84.1791%" y="1743.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.01%)</title><rect x="83.9291%" y="1717" width="0.0144%" height="15" fill="rgb(248,220,47)" fg:x="29209" fg:w="5"/><text x="84.1791%" y="1727.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5 samples, 0.01%)</title><rect x="83.9291%" y="1701" width="0.0144%" height="15" fill="rgb(240,78,9)" fg:x="29209" fg:w="5"/><text x="84.1791%" y="1711.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (5 samples, 0.01%)</title><rect x="83.9291%" y="1685" width="0.0144%" height="15" fill="rgb(245,119,5)" fg:x="29209" fg:w="5"/><text x="84.1791%" y="1695.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (5 samples, 0.01%)</title><rect x="83.9291%" y="1669" width="0.0144%" height="15" fill="rgb(238,175,31)" fg:x="29209" fg:w="5"/><text x="84.1791%" y="1679.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (5 samples, 0.01%)</title><rect x="83.9291%" y="1653" width="0.0144%" height="15" fill="rgb(232,140,42)" fg:x="29209" fg:w="5"/><text x="84.1791%" y="1663.50"></text></g><g><title>rayon_core::join::join_context (5 samples, 0.01%)</title><rect x="83.9291%" y="1637" width="0.0144%" height="15" fill="rgb(218,179,7)" fg:x="29209" fg:w="5"/><text x="84.1791%" y="1647.50"></text></g><g><title>rayon_core::registry::in_worker (5 samples, 0.01%)</title><rect x="83.9291%" y="1621" width="0.0144%" height="15" fill="rgb(232,79,27)" fg:x="29209" fg:w="5"/><text x="84.1791%" y="1631.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5 samples, 0.01%)</title><rect x="83.9291%" y="1605" width="0.0144%" height="15" fill="rgb(247,11,19)" fg:x="29209" fg:w="5"/><text x="84.1791%" y="1615.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (4 samples, 0.01%)</title><rect x="83.9320%" y="1589" width="0.0115%" height="15" fill="rgb(216,171,54)" fg:x="29210" fg:w="4"/><text x="84.1820%" y="1599.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.01%)</title><rect x="83.9320%" y="1573" width="0.0115%" height="15" fill="rgb(233,158,36)" fg:x="29210" fg:w="4"/><text x="84.1820%" y="1583.50"></text></g><g><title>std::panicking::try (4 samples, 0.01%)</title><rect x="83.9320%" y="1557" width="0.0115%" height="15" fill="rgb(215,48,47)" fg:x="29210" fg:w="4"/><text x="84.1820%" y="1567.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.01%)</title><rect x="83.9320%" y="1541" width="0.0115%" height="15" fill="rgb(230,223,15)" fg:x="29210" fg:w="4"/><text x="84.1820%" y="1551.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.01%)</title><rect x="83.9320%" y="1525" width="0.0115%" height="15" fill="rgb(234,49,19)" fg:x="29210" fg:w="4"/><text x="84.1820%" y="1535.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (4 samples, 0.01%)</title><rect x="83.9320%" y="1509" width="0.0115%" height="15" fill="rgb(232,89,25)" fg:x="29210" fg:w="4"/><text x="84.1820%" y="1519.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.01%)</title><rect x="83.9320%" y="1493" width="0.0115%" height="15" fill="rgb(237,206,28)" fg:x="29210" fg:w="4"/><text x="84.1820%" y="1503.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.01%)</title><rect x="83.9320%" y="1477" width="0.0115%" height="15" fill="rgb(249,68,37)" fg:x="29210" fg:w="4"/><text x="84.1820%" y="1487.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.01%)</title><rect x="83.9320%" y="1461" width="0.0115%" height="15" fill="rgb(226,99,43)" fg:x="29210" fg:w="4"/><text x="84.1820%" y="1471.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.01%)</title><rect x="83.9320%" y="1445" width="0.0115%" height="15" fill="rgb(216,46,28)" fg:x="29210" fg:w="4"/><text x="84.1820%" y="1455.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.01%)</title><rect x="83.9320%" y="1429" width="0.0115%" height="15" fill="rgb(216,33,9)" fg:x="29210" fg:w="4"/><text x="84.1820%" y="1439.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (4 samples, 0.01%)</title><rect x="83.9320%" y="1413" width="0.0115%" height="15" fill="rgb(216,129,4)" fg:x="29210" fg:w="4"/><text x="84.1820%" y="1423.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (4 samples, 0.01%)</title><rect x="83.9320%" y="1397" width="0.0115%" height="15" fill="rgb(216,106,3)" fg:x="29210" fg:w="4"/><text x="84.1820%" y="1407.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.01%)</title><rect x="83.9320%" y="1381" width="0.0115%" height="15" fill="rgb(217,79,45)" fg:x="29210" fg:w="4"/><text x="84.1820%" y="1391.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.01%)</title><rect x="83.9320%" y="1365" width="0.0115%" height="15" fill="rgb(239,98,13)" fg:x="29210" fg:w="4"/><text x="84.1820%" y="1375.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (4 samples, 0.01%)</title><rect x="83.9320%" y="1349" width="0.0115%" height="15" fill="rgb(221,115,4)" fg:x="29210" fg:w="4"/><text x="84.1820%" y="1359.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (4 samples, 0.01%)</title><rect x="83.9320%" y="1333" width="0.0115%" height="15" fill="rgb(215,85,0)" fg:x="29210" fg:w="4"/><text x="84.1820%" y="1343.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (4 samples, 0.01%)</title><rect x="83.9320%" y="1317" width="0.0115%" height="15" fill="rgb(230,62,15)" fg:x="29210" fg:w="4"/><text x="84.1820%" y="1327.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="83.9320%" y="1301" width="0.0115%" height="15" fill="rgb(247,162,2)" fg:x="29210" fg:w="4"/><text x="84.1820%" y="1311.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4 samples, 0.01%)</title><rect x="83.9320%" y="1285" width="0.0115%" height="15" fill="rgb(212,112,32)" fg:x="29210" fg:w="4"/><text x="84.1820%" y="1295.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (4 samples, 0.01%)</title><rect x="83.9320%" y="1269" width="0.0115%" height="15" fill="rgb(216,137,9)" fg:x="29210" fg:w="4"/><text x="84.1820%" y="1279.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (4 samples, 0.01%)</title><rect x="83.9320%" y="1253" width="0.0115%" height="15" fill="rgb(250,149,33)" fg:x="29210" fg:w="4"/><text x="84.1820%" y="1263.50"></text></g><g><title>core::ops::function::Fn::call (4 samples, 0.01%)</title><rect x="83.9320%" y="1237" width="0.0115%" height="15" fill="rgb(246,124,31)" fg:x="29210" fg:w="4"/><text x="84.1820%" y="1247.50"></text></g><g><title>aptos_block_executor::adapter_common::preprocess_transaction (4 samples, 0.01%)</title><rect x="83.9320%" y="1221" width="0.0115%" height="15" fill="rgb(216,210,22)" fg:x="29210" fg:w="4"/><text x="84.1820%" y="1231.50"></text></g><g><title>&lt;aptos_block_executor::aptos_vm::AptosVM as aptos_block_executor::adapter_common::VMAdapter&gt;::check_signature (4 samples, 0.01%)</title><rect x="83.9320%" y="1205" width="0.0115%" height="15" fill="rgb(228,128,36)" fg:x="29210" fg:w="4"/><text x="84.1820%" y="1215.50"></text></g><g><title>aptos_types::transaction::SignedTransaction::check_signature (4 samples, 0.01%)</title><rect x="83.9320%" y="1189" width="0.0115%" height="15" fill="rgb(231,41,0)" fg:x="29210" fg:w="4"/><text x="84.1820%" y="1199.50"></text></g><g><title>aptos_types::transaction::authenticator::TransactionAuthenticator::verify (4 samples, 0.01%)</title><rect x="83.9320%" y="1173" width="0.0115%" height="15" fill="rgb(232,61,26)" fg:x="29210" fg:w="4"/><text x="84.1820%" y="1183.50"></text></g><g><title>&lt;aptos_crypto::secp256k1::Secp256k1Signature as aptos_crypto::traits::Signature&gt;::verify_arbitrary_msg (4 samples, 0.01%)</title><rect x="83.9320%" y="1157" width="0.0115%" height="15" fill="rgb(217,60,9)" fg:x="29210" fg:w="4"/><text x="84.1820%" y="1167.50"></text></g><g><title>aptos_crypto::secp256k1::Secp256k1Signature::verify_arbitrary_msg (4 samples, 0.01%)</title><rect x="83.9320%" y="1141" width="0.0115%" height="15" fill="rgb(233,41,35)" fg:x="29210" fg:w="4"/><text x="84.1820%" y="1151.50"></text></g><g><title>cfxkey::signature::verify_public (4 samples, 0.01%)</title><rect x="83.9320%" y="1125" width="0.0115%" height="15" fill="rgb(253,139,43)" fg:x="29210" fg:w="4"/><text x="84.1820%" y="1135.50"></text></g><g><title>secp256k1::Secp256k1::verify (4 samples, 0.01%)</title><rect x="83.9320%" y="1109" width="0.0115%" height="15" fill="rgb(245,100,51)" fg:x="29210" fg:w="4"/><text x="84.1820%" y="1119.50"></text></g><g><title>secp256k1_ecdsa_verify (4 samples, 0.01%)</title><rect x="83.9320%" y="1093" width="0.0115%" height="15" fill="rgb(250,208,18)" fg:x="29210" fg:w="4"/><text x="84.1820%" y="1103.50"></text></g><g><title>secp256k1_ecdsa_sig_verify (4 samples, 0.01%)</title><rect x="83.9320%" y="1077" width="0.0115%" height="15" fill="rgb(245,33,2)" fg:x="29210" fg:w="4"/><text x="84.1820%" y="1087.50"></text></g><g><title>secp256k1_ecmult (4 samples, 0.01%)</title><rect x="83.9320%" y="1061" width="0.0115%" height="15" fill="rgb(244,171,31)" fg:x="29210" fg:w="4"/><text x="84.1820%" y="1071.50"></text></g><g><title>secp256k1_ecmult_strauss_wnaf (4 samples, 0.01%)</title><rect x="83.9320%" y="1045" width="0.0115%" height="15" fill="rgb(229,1,43)" fg:x="29210" fg:w="4"/><text x="84.1820%" y="1055.50"></text></g><g><title>secp256k1_gej_add_ge_var (4 samples, 0.01%)</title><rect x="83.9320%" y="1029" width="0.0115%" height="15" fill="rgb(223,153,28)" fg:x="29210" fg:w="4"/><text x="84.1820%" y="1039.50"></text></g><g><title>secp256k1_fe_mul (4 samples, 0.01%)</title><rect x="83.9320%" y="1013" width="0.0115%" height="15" fill="rgb(241,4,46)" fg:x="29210" fg:w="4"/><text x="84.1820%" y="1023.50"></text></g><g><title>secp256k1_fe_mul_inner (4 samples, 0.01%)</title><rect x="83.9320%" y="997" width="0.0115%" height="15" fill="rgb(230,81,11)" fg:x="29210" fg:w="4"/><text x="84.1820%" y="1007.50"></text></g><g><title>par_exec_8 (22 samples, 0.06%)</title><rect x="83.8975%" y="2789" width="0.0632%" height="15" fill="rgb(253,204,39)" fg:x="29198" fg:w="22"/><text x="84.1475%" y="2799.50"></text></g><g><title>__GI___clone3 (22 samples, 0.06%)</title><rect x="83.8975%" y="2773" width="0.0632%" height="15" fill="rgb(250,96,8)" fg:x="29198" fg:w="22"/><text x="84.1475%" y="2783.50"></text></g><g><title>start_thread (22 samples, 0.06%)</title><rect x="83.8975%" y="2757" width="0.0632%" height="15" fill="rgb(219,89,54)" fg:x="29198" fg:w="22"/><text x="84.1475%" y="2767.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (22 samples, 0.06%)</title><rect x="83.8975%" y="2741" width="0.0632%" height="15" fill="rgb(235,136,39)" fg:x="29198" fg:w="22"/><text x="84.1475%" y="2751.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (22 samples, 0.06%)</title><rect x="83.8975%" y="2725" width="0.0632%" height="15" fill="rgb(230,155,37)" fg:x="29198" fg:w="22"/><text x="84.1475%" y="2735.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (22 samples, 0.06%)</title><rect x="83.8975%" y="2709" width="0.0632%" height="15" fill="rgb(235,199,50)" fg:x="29198" fg:w="22"/><text x="84.1475%" y="2719.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (22 samples, 0.06%)</title><rect x="83.8975%" y="2693" width="0.0632%" height="15" fill="rgb(227,81,32)" fg:x="29198" fg:w="22"/><text x="84.1475%" y="2703.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (22 samples, 0.06%)</title><rect x="83.8975%" y="2677" width="0.0632%" height="15" fill="rgb(225,6,28)" fg:x="29198" fg:w="22"/><text x="84.1475%" y="2687.50"></text></g><g><title>std::panic::catch_unwind (22 samples, 0.06%)</title><rect x="83.8975%" y="2661" width="0.0632%" height="15" fill="rgb(207,211,17)" fg:x="29198" fg:w="22"/><text x="84.1475%" y="2671.50"></text></g><g><title>std::panicking::try (22 samples, 0.06%)</title><rect x="83.8975%" y="2645" width="0.0632%" height="15" fill="rgb(228,31,49)" fg:x="29198" fg:w="22"/><text x="84.1475%" y="2655.50"></text></g><g><title>std::panicking::try::do_call (22 samples, 0.06%)</title><rect x="83.8975%" y="2629" width="0.0632%" height="15" fill="rgb(230,185,3)" fg:x="29198" fg:w="22"/><text x="84.1475%" y="2639.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (22 samples, 0.06%)</title><rect x="83.8975%" y="2613" width="0.0632%" height="15" fill="rgb(206,167,15)" fg:x="29198" fg:w="22"/><text x="84.1475%" y="2623.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (22 samples, 0.06%)</title><rect x="83.8975%" y="2597" width="0.0632%" height="15" fill="rgb(234,2,36)" fg:x="29198" fg:w="22"/><text x="84.1475%" y="2607.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (22 samples, 0.06%)</title><rect x="83.8975%" y="2581" width="0.0632%" height="15" fill="rgb(239,160,29)" fg:x="29198" fg:w="22"/><text x="84.1475%" y="2591.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (22 samples, 0.06%)</title><rect x="83.8975%" y="2565" width="0.0632%" height="15" fill="rgb(236,117,2)" fg:x="29198" fg:w="22"/><text x="84.1475%" y="2575.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (22 samples, 0.06%)</title><rect x="83.8975%" y="2549" width="0.0632%" height="15" fill="rgb(215,117,37)" fg:x="29198" fg:w="22"/><text x="84.1475%" y="2559.50"></text></g><g><title>rayon_core::registry::main_loop (22 samples, 0.06%)</title><rect x="83.8975%" y="2533" width="0.0632%" height="15" fill="rgb(244,48,36)" fg:x="29198" fg:w="22"/><text x="84.1475%" y="2543.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (22 samples, 0.06%)</title><rect x="83.8975%" y="2517" width="0.0632%" height="15" fill="rgb(223,101,37)" fg:x="29198" fg:w="22"/><text x="84.1475%" y="2527.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (22 samples, 0.06%)</title><rect x="83.8975%" y="2501" width="0.0632%" height="15" fill="rgb(205,200,1)" fg:x="29198" fg:w="22"/><text x="84.1475%" y="2511.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (22 samples, 0.06%)</title><rect x="83.8975%" y="2485" width="0.0632%" height="15" fill="rgb(209,193,20)" fg:x="29198" fg:w="22"/><text x="84.1475%" y="2495.50"></text></g><g><title>rayon_core::job::JobRef::execute (22 samples, 0.06%)</title><rect x="83.8975%" y="2469" width="0.0632%" height="15" fill="rgb(214,63,13)" fg:x="29198" fg:w="22"/><text x="84.1475%" y="2479.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (22 samples, 0.06%)</title><rect x="83.8975%" y="2453" width="0.0632%" height="15" fill="rgb(253,113,46)" fg:x="29198" fg:w="22"/><text x="84.1475%" y="2463.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (22 samples, 0.06%)</title><rect x="83.8975%" y="2437" width="0.0632%" height="15" fill="rgb(237,103,34)" fg:x="29198" fg:w="22"/><text x="84.1475%" y="2447.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (22 samples, 0.06%)</title><rect x="83.8975%" y="2421" width="0.0632%" height="15" fill="rgb(223,38,25)" fg:x="29198" fg:w="22"/><text x="84.1475%" y="2431.50"></text></g><g><title>std::panic::catch_unwind (22 samples, 0.06%)</title><rect x="83.8975%" y="2405" width="0.0632%" height="15" fill="rgb(251,32,32)" fg:x="29198" fg:w="22"/><text x="84.1475%" y="2415.50"></text></g><g><title>std::panicking::try (22 samples, 0.06%)</title><rect x="83.8975%" y="2389" width="0.0632%" height="15" fill="rgb(228,65,22)" fg:x="29198" fg:w="22"/><text x="84.1475%" y="2399.50"></text></g><g><title>std::panicking::try::do_call (22 samples, 0.06%)</title><rect x="83.8975%" y="2373" width="0.0632%" height="15" fill="rgb(205,11,46)" fg:x="29198" fg:w="22"/><text x="84.1475%" y="2383.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (22 samples, 0.06%)</title><rect x="83.8975%" y="2357" width="0.0632%" height="15" fill="rgb(220,35,2)" fg:x="29198" fg:w="22"/><text x="84.1475%" y="2367.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (22 samples, 0.06%)</title><rect x="83.8975%" y="2341" width="0.0632%" height="15" fill="rgb(217,151,17)" fg:x="29198" fg:w="22"/><text x="84.1475%" y="2351.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (22 samples, 0.06%)</title><rect x="83.8975%" y="2325" width="0.0632%" height="15" fill="rgb(243,227,35)" fg:x="29198" fg:w="22"/><text x="84.1475%" y="2335.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (22 samples, 0.06%)</title><rect x="83.8975%" y="2309" width="0.0632%" height="15" fill="rgb(214,0,34)" fg:x="29198" fg:w="22"/><text x="84.1475%" y="2319.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (22 samples, 0.06%)</title><rect x="83.8975%" y="2293" width="0.0632%" height="15" fill="rgb(209,42,37)" fg:x="29198" fg:w="22"/><text x="84.1475%" y="2303.50"></text></g><g><title>rayon_core::join::join_context (22 samples, 0.06%)</title><rect x="83.8975%" y="2277" width="0.0632%" height="15" fill="rgb(251,176,30)" fg:x="29198" fg:w="22"/><text x="84.1475%" y="2287.50"></text></g><g><title>rayon_core::registry::in_worker (22 samples, 0.06%)</title><rect x="83.8975%" y="2261" width="0.0632%" height="15" fill="rgb(223,64,40)" fg:x="29198" fg:w="22"/><text x="84.1475%" y="2271.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (22 samples, 0.06%)</title><rect x="83.8975%" y="2245" width="0.0632%" height="15" fill="rgb(227,180,23)" fg:x="29198" fg:w="22"/><text x="84.1475%" y="2255.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (17 samples, 0.05%)</title><rect x="83.9118%" y="2229" width="0.0488%" height="15" fill="rgb(220,137,31)" fg:x="29203" fg:w="17"/><text x="84.1618%" y="2239.50"></text></g><g><title>std::panic::catch_unwind (17 samples, 0.05%)</title><rect x="83.9118%" y="2213" width="0.0488%" height="15" fill="rgb(245,124,25)" fg:x="29203" fg:w="17"/><text x="84.1618%" y="2223.50"></text></g><g><title>std::panicking::try (17 samples, 0.05%)</title><rect x="83.9118%" y="2197" width="0.0488%" height="15" fill="rgb(217,157,5)" fg:x="29203" fg:w="17"/><text x="84.1618%" y="2207.50"></text></g><g><title>std::panicking::try::do_call (17 samples, 0.05%)</title><rect x="83.9118%" y="2181" width="0.0488%" height="15" fill="rgb(225,59,2)" fg:x="29203" fg:w="17"/><text x="84.1618%" y="2191.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (17 samples, 0.05%)</title><rect x="83.9118%" y="2165" width="0.0488%" height="15" fill="rgb(220,182,9)" fg:x="29203" fg:w="17"/><text x="84.1618%" y="2175.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (17 samples, 0.05%)</title><rect x="83.9118%" y="2149" width="0.0488%" height="15" fill="rgb(249,54,24)" fg:x="29203" fg:w="17"/><text x="84.1618%" y="2159.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (17 samples, 0.05%)</title><rect x="83.9118%" y="2133" width="0.0488%" height="15" fill="rgb(216,89,17)" fg:x="29203" fg:w="17"/><text x="84.1618%" y="2143.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (17 samples, 0.05%)</title><rect x="83.9118%" y="2117" width="0.0488%" height="15" fill="rgb(245,20,45)" fg:x="29203" fg:w="17"/><text x="84.1618%" y="2127.50"></text></g><g><title>rayon_core::join::join_context (16 samples, 0.05%)</title><rect x="83.9147%" y="2101" width="0.0460%" height="15" fill="rgb(230,83,14)" fg:x="29204" fg:w="16"/><text x="84.1647%" y="2111.50"></text></g><g><title>rayon_core::registry::in_worker (16 samples, 0.05%)</title><rect x="83.9147%" y="2085" width="0.0460%" height="15" fill="rgb(246,109,11)" fg:x="29204" fg:w="16"/><text x="84.1647%" y="2095.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (16 samples, 0.05%)</title><rect x="83.9147%" y="2069" width="0.0460%" height="15" fill="rgb(235,85,23)" fg:x="29204" fg:w="16"/><text x="84.1647%" y="2079.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (11 samples, 0.03%)</title><rect x="83.9291%" y="2053" width="0.0316%" height="15" fill="rgb(215,101,36)" fg:x="29209" fg:w="11"/><text x="84.1791%" y="2063.50"></text></g><g><title>std::panic::catch_unwind (11 samples, 0.03%)</title><rect x="83.9291%" y="2037" width="0.0316%" height="15" fill="rgb(228,140,31)" fg:x="29209" fg:w="11"/><text x="84.1791%" y="2047.50"></text></g><g><title>std::panicking::try (11 samples, 0.03%)</title><rect x="83.9291%" y="2021" width="0.0316%" height="15" fill="rgb(234,162,37)" fg:x="29209" fg:w="11"/><text x="84.1791%" y="2031.50"></text></g><g><title>std::panicking::try::do_call (11 samples, 0.03%)</title><rect x="83.9291%" y="2005" width="0.0316%" height="15" fill="rgb(221,0,24)" fg:x="29209" fg:w="11"/><text x="84.1791%" y="2015.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (11 samples, 0.03%)</title><rect x="83.9291%" y="1989" width="0.0316%" height="15" fill="rgb(230,161,41)" fg:x="29209" fg:w="11"/><text x="84.1791%" y="1999.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (11 samples, 0.03%)</title><rect x="83.9291%" y="1973" width="0.0316%" height="15" fill="rgb(224,46,24)" fg:x="29209" fg:w="11"/><text x="84.1791%" y="1983.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (11 samples, 0.03%)</title><rect x="83.9291%" y="1957" width="0.0316%" height="15" fill="rgb(205,59,32)" fg:x="29209" fg:w="11"/><text x="84.1791%" y="1967.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (11 samples, 0.03%)</title><rect x="83.9291%" y="1941" width="0.0316%" height="15" fill="rgb(239,31,20)" fg:x="29209" fg:w="11"/><text x="84.1791%" y="1951.50"></text></g><g><title>rayon_core::join::join_context (11 samples, 0.03%)</title><rect x="83.9291%" y="1925" width="0.0316%" height="15" fill="rgb(233,149,44)" fg:x="29209" fg:w="11"/><text x="84.1791%" y="1935.50"></text></g><g><title>rayon_core::registry::in_worker (11 samples, 0.03%)</title><rect x="83.9291%" y="1909" width="0.0316%" height="15" fill="rgb(243,47,26)" fg:x="29209" fg:w="11"/><text x="84.1791%" y="1919.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (11 samples, 0.03%)</title><rect x="83.9291%" y="1893" width="0.0316%" height="15" fill="rgb(233,107,5)" fg:x="29209" fg:w="11"/><text x="84.1791%" y="1903.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (4 samples, 0.01%)</title><rect x="83.9492%" y="1877" width="0.0115%" height="15" fill="rgb(248,140,33)" fg:x="29216" fg:w="4"/><text x="84.1992%" y="1887.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.01%)</title><rect x="83.9492%" y="1861" width="0.0115%" height="15" fill="rgb(228,178,19)" fg:x="29216" fg:w="4"/><text x="84.1992%" y="1871.50"></text></g><g><title>std::panicking::try (4 samples, 0.01%)</title><rect x="83.9492%" y="1845" width="0.0115%" height="15" fill="rgb(224,39,49)" fg:x="29216" fg:w="4"/><text x="84.1992%" y="1855.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.01%)</title><rect x="83.9492%" y="1829" width="0.0115%" height="15" fill="rgb(246,56,47)" fg:x="29216" fg:w="4"/><text x="84.1992%" y="1839.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.01%)</title><rect x="83.9492%" y="1813" width="0.0115%" height="15" fill="rgb(220,73,27)" fg:x="29216" fg:w="4"/><text x="84.1992%" y="1823.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (4 samples, 0.01%)</title><rect x="83.9492%" y="1797" width="0.0115%" height="15" fill="rgb(239,112,21)" fg:x="29216" fg:w="4"/><text x="84.1992%" y="1807.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.01%)</title><rect x="83.9492%" y="1781" width="0.0115%" height="15" fill="rgb(253,14,51)" fg:x="29216" fg:w="4"/><text x="84.1992%" y="1791.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.01%)</title><rect x="83.9492%" y="1765" width="0.0115%" height="15" fill="rgb(215,58,12)" fg:x="29216" fg:w="4"/><text x="84.1992%" y="1775.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.01%)</title><rect x="83.9492%" y="1749" width="0.0115%" height="15" fill="rgb(207,181,19)" fg:x="29216" fg:w="4"/><text x="84.1992%" y="1759.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.01%)</title><rect x="83.9492%" y="1733" width="0.0115%" height="15" fill="rgb(211,214,34)" fg:x="29216" fg:w="4"/><text x="84.1992%" y="1743.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.01%)</title><rect x="83.9492%" y="1717" width="0.0115%" height="15" fill="rgb(243,124,39)" fg:x="29216" fg:w="4"/><text x="84.1992%" y="1727.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (6 samples, 0.02%)</title><rect x="83.9779%" y="2053" width="0.0172%" height="15" fill="rgb(248,135,21)" fg:x="29226" fg:w="6"/><text x="84.2279%" y="2063.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (6 samples, 0.02%)</title><rect x="83.9779%" y="2037" width="0.0172%" height="15" fill="rgb(245,218,3)" fg:x="29226" fg:w="6"/><text x="84.2279%" y="2047.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (6 samples, 0.02%)</title><rect x="83.9779%" y="2021" width="0.0172%" height="15" fill="rgb(225,144,22)" fg:x="29226" fg:w="6"/><text x="84.2279%" y="2031.50"></text></g><g><title>rayon_core::job::JobRef::execute (6 samples, 0.02%)</title><rect x="83.9779%" y="2005" width="0.0172%" height="15" fill="rgb(250,90,15)" fg:x="29226" fg:w="6"/><text x="84.2279%" y="2015.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (6 samples, 0.02%)</title><rect x="83.9779%" y="1989" width="0.0172%" height="15" fill="rgb(224,64,29)" fg:x="29226" fg:w="6"/><text x="84.2279%" y="1999.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (6 samples, 0.02%)</title><rect x="83.9779%" y="1973" width="0.0172%" height="15" fill="rgb(217,50,47)" fg:x="29226" fg:w="6"/><text x="84.2279%" y="1983.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (6 samples, 0.02%)</title><rect x="83.9779%" y="1957" width="0.0172%" height="15" fill="rgb(231,159,47)" fg:x="29226" fg:w="6"/><text x="84.2279%" y="1967.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.02%)</title><rect x="83.9779%" y="1941" width="0.0172%" height="15" fill="rgb(213,89,29)" fg:x="29226" fg:w="6"/><text x="84.2279%" y="1951.50"></text></g><g><title>std::panicking::try (6 samples, 0.02%)</title><rect x="83.9779%" y="1925" width="0.0172%" height="15" fill="rgb(243,90,23)" fg:x="29226" fg:w="6"/><text x="84.2279%" y="1935.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.02%)</title><rect x="83.9779%" y="1909" width="0.0172%" height="15" fill="rgb(213,21,6)" fg:x="29226" fg:w="6"/><text x="84.2279%" y="1919.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6 samples, 0.02%)</title><rect x="83.9779%" y="1893" width="0.0172%" height="15" fill="rgb(237,139,17)" fg:x="29226" fg:w="6"/><text x="84.2279%" y="1903.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (6 samples, 0.02%)</title><rect x="83.9779%" y="1877" width="0.0172%" height="15" fill="rgb(250,147,17)" fg:x="29226" fg:w="6"/><text x="84.2279%" y="1887.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (6 samples, 0.02%)</title><rect x="83.9779%" y="1861" width="0.0172%" height="15" fill="rgb(212,208,42)" fg:x="29226" fg:w="6"/><text x="84.2279%" y="1871.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (6 samples, 0.02%)</title><rect x="83.9779%" y="1845" width="0.0172%" height="15" fill="rgb(215,229,40)" fg:x="29226" fg:w="6"/><text x="84.2279%" y="1855.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (6 samples, 0.02%)</title><rect x="83.9779%" y="1829" width="0.0172%" height="15" fill="rgb(206,204,1)" fg:x="29226" fg:w="6"/><text x="84.2279%" y="1839.50"></text></g><g><title>rayon_core::join::join_context (6 samples, 0.02%)</title><rect x="83.9779%" y="1813" width="0.0172%" height="15" fill="rgb(230,62,32)" fg:x="29226" fg:w="6"/><text x="84.2279%" y="1823.50"></text></g><g><title>rayon_core::registry::in_worker (6 samples, 0.02%)</title><rect x="83.9779%" y="1797" width="0.0172%" height="15" fill="rgb(223,22,42)" fg:x="29226" fg:w="6"/><text x="84.2279%" y="1807.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (6 samples, 0.02%)</title><rect x="83.9779%" y="1781" width="0.0172%" height="15" fill="rgb(244,6,23)" fg:x="29226" fg:w="6"/><text x="84.2279%" y="1791.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (4 samples, 0.01%)</title><rect x="83.9837%" y="1765" width="0.0115%" height="15" fill="rgb(240,221,42)" fg:x="29228" fg:w="4"/><text x="84.2337%" y="1775.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.01%)</title><rect x="83.9837%" y="1749" width="0.0115%" height="15" fill="rgb(222,74,7)" fg:x="29228" fg:w="4"/><text x="84.2337%" y="1759.50"></text></g><g><title>std::panicking::try (4 samples, 0.01%)</title><rect x="83.9837%" y="1733" width="0.0115%" height="15" fill="rgb(227,191,38)" fg:x="29228" fg:w="4"/><text x="84.2337%" y="1743.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.01%)</title><rect x="83.9837%" y="1717" width="0.0115%" height="15" fill="rgb(227,89,34)" fg:x="29228" fg:w="4"/><text x="84.2337%" y="1727.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.01%)</title><rect x="83.9837%" y="1701" width="0.0115%" height="15" fill="rgb(215,153,25)" fg:x="29228" fg:w="4"/><text x="84.2337%" y="1711.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (4 samples, 0.01%)</title><rect x="83.9837%" y="1685" width="0.0115%" height="15" fill="rgb(215,153,46)" fg:x="29228" fg:w="4"/><text x="84.2337%" y="1695.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.01%)</title><rect x="83.9837%" y="1669" width="0.0115%" height="15" fill="rgb(242,38,52)" fg:x="29228" fg:w="4"/><text x="84.2337%" y="1679.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.01%)</title><rect x="83.9837%" y="1653" width="0.0115%" height="15" fill="rgb(218,112,4)" fg:x="29228" fg:w="4"/><text x="84.2337%" y="1663.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.01%)</title><rect x="83.9837%" y="1637" width="0.0115%" height="15" fill="rgb(231,210,31)" fg:x="29228" fg:w="4"/><text x="84.2337%" y="1647.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.01%)</title><rect x="83.9837%" y="1621" width="0.0115%" height="15" fill="rgb(245,223,36)" fg:x="29228" fg:w="4"/><text x="84.2337%" y="1631.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.01%)</title><rect x="83.9837%" y="1605" width="0.0115%" height="15" fill="rgb(246,41,2)" fg:x="29228" fg:w="4"/><text x="84.2337%" y="1615.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (4 samples, 0.01%)</title><rect x="83.9952%" y="1877" width="0.0115%" height="15" fill="rgb(227,51,31)" fg:x="29232" fg:w="4"/><text x="84.2452%" y="1887.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (4 samples, 0.01%)</title><rect x="83.9952%" y="1861" width="0.0115%" height="15" fill="rgb(222,95,26)" fg:x="29232" fg:w="4"/><text x="84.2452%" y="1871.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.01%)</title><rect x="83.9952%" y="1845" width="0.0115%" height="15" fill="rgb(224,190,1)" fg:x="29232" fg:w="4"/><text x="84.2452%" y="1855.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.01%)</title><rect x="83.9952%" y="1829" width="0.0115%" height="15" fill="rgb(209,90,42)" fg:x="29232" fg:w="4"/><text x="84.2452%" y="1839.50"></text></g><g><title>rayon_core::join::join_context (4 samples, 0.01%)</title><rect x="83.9952%" y="1813" width="0.0115%" height="15" fill="rgb(232,225,50)" fg:x="29232" fg:w="4"/><text x="84.2452%" y="1823.50"></text></g><g><title>rayon_core::registry::in_worker (4 samples, 0.01%)</title><rect x="83.9952%" y="1797" width="0.0115%" height="15" fill="rgb(239,89,47)" fg:x="29232" fg:w="4"/><text x="84.2452%" y="1807.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (4 samples, 0.01%)</title><rect x="83.9952%" y="1781" width="0.0115%" height="15" fill="rgb(230,212,50)" fg:x="29232" fg:w="4"/><text x="84.2452%" y="1791.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (4 samples, 0.01%)</title><rect x="84.0153%" y="1413" width="0.0115%" height="15" fill="rgb(252,1,27)" fg:x="29239" fg:w="4"/><text x="84.2653%" y="1423.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (4 samples, 0.01%)</title><rect x="84.0153%" y="1397" width="0.0115%" height="15" fill="rgb(237,179,41)" fg:x="29239" fg:w="4"/><text x="84.2653%" y="1407.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (4 samples, 0.01%)</title><rect x="84.0153%" y="1381" width="0.0115%" height="15" fill="rgb(214,151,37)" fg:x="29239" fg:w="4"/><text x="84.2653%" y="1391.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (4 samples, 0.01%)</title><rect x="84.0153%" y="1365" width="0.0115%" height="15" fill="rgb(211,74,11)" fg:x="29239" fg:w="4"/><text x="84.2653%" y="1375.50"></text></g><g><title>rayon::iter::plumbing::Producer::fold_with (4 samples, 0.01%)</title><rect x="84.0153%" y="1349" width="0.0115%" height="15" fill="rgb(242,21,21)" fg:x="29239" fg:w="4"/><text x="84.2653%" y="1359.50"></text></g><g><title>&lt;rayon::iter::map::MapFolder&lt;C,F&gt; as rayon::iter::plumbing::Folder&lt;T&gt;&gt;::consume_iter (4 samples, 0.01%)</title><rect x="84.0153%" y="1333" width="0.0115%" height="15" fill="rgb(226,106,43)" fg:x="29239" fg:w="4"/><text x="84.2653%" y="1343.50"></text></g><g><title>rayon::iter::plumbing::Folder::consume_iter (4 samples, 0.01%)</title><rect x="84.0153%" y="1317" width="0.0115%" height="15" fill="rgb(229,162,39)" fg:x="29239" fg:w="4"/><text x="84.2653%" y="1327.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.01%)</title><rect x="84.0153%" y="1301" width="0.0115%" height="15" fill="rgb(228,159,25)" fg:x="29239" fg:w="4"/><text x="84.2653%" y="1311.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4 samples, 0.01%)</title><rect x="84.0153%" y="1285" width="0.0115%" height="15" fill="rgb(237,32,23)" fg:x="29239" fg:w="4"/><text x="84.2653%" y="1295.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (4 samples, 0.01%)</title><rect x="84.0153%" y="1269" width="0.0115%" height="15" fill="rgb(212,35,32)" fg:x="29239" fg:w="4"/><text x="84.2653%" y="1279.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (4 samples, 0.01%)</title><rect x="84.0153%" y="1253" width="0.0115%" height="15" fill="rgb(215,199,1)" fg:x="29239" fg:w="4"/><text x="84.2653%" y="1263.50"></text></g><g><title>core::ops::function::Fn::call (4 samples, 0.01%)</title><rect x="84.0153%" y="1237" width="0.0115%" height="15" fill="rgb(215,67,13)" fg:x="29239" fg:w="4"/><text x="84.2653%" y="1247.50"></text></g><g><title>aptos_block_executor::adapter_common::preprocess_transaction (4 samples, 0.01%)</title><rect x="84.0153%" y="1221" width="0.0115%" height="15" fill="rgb(216,20,47)" fg:x="29239" fg:w="4"/><text x="84.2653%" y="1231.50"></text></g><g><title>&lt;aptos_block_executor::aptos_vm::AptosVM as aptos_block_executor::adapter_common::VMAdapter&gt;::check_signature (4 samples, 0.01%)</title><rect x="84.0153%" y="1205" width="0.0115%" height="15" fill="rgb(249,183,48)" fg:x="29239" fg:w="4"/><text x="84.2653%" y="1215.50"></text></g><g><title>aptos_types::transaction::SignedTransaction::check_signature (4 samples, 0.01%)</title><rect x="84.0153%" y="1189" width="0.0115%" height="15" fill="rgb(208,86,37)" fg:x="29239" fg:w="4"/><text x="84.2653%" y="1199.50"></text></g><g><title>aptos_types::transaction::authenticator::TransactionAuthenticator::verify (4 samples, 0.01%)</title><rect x="84.0153%" y="1173" width="0.0115%" height="15" fill="rgb(251,192,7)" fg:x="29239" fg:w="4"/><text x="84.2653%" y="1183.50"></text></g><g><title>&lt;aptos_crypto::secp256k1::Secp256k1Signature as aptos_crypto::traits::Signature&gt;::verify_arbitrary_msg (4 samples, 0.01%)</title><rect x="84.0153%" y="1157" width="0.0115%" height="15" fill="rgb(234,196,3)" fg:x="29239" fg:w="4"/><text x="84.2653%" y="1167.50"></text></g><g><title>aptos_crypto::secp256k1::Secp256k1Signature::verify_arbitrary_msg (4 samples, 0.01%)</title><rect x="84.0153%" y="1141" width="0.0115%" height="15" fill="rgb(229,150,39)" fg:x="29239" fg:w="4"/><text x="84.2653%" y="1151.50"></text></g><g><title>cfxkey::signature::verify_public (4 samples, 0.01%)</title><rect x="84.0153%" y="1125" width="0.0115%" height="15" fill="rgb(226,19,29)" fg:x="29239" fg:w="4"/><text x="84.2653%" y="1135.50"></text></g><g><title>secp256k1::Secp256k1::verify (4 samples, 0.01%)</title><rect x="84.0153%" y="1109" width="0.0115%" height="15" fill="rgb(226,222,2)" fg:x="29239" fg:w="4"/><text x="84.2653%" y="1119.50"></text></g><g><title>secp256k1_ecdsa_verify (4 samples, 0.01%)</title><rect x="84.0153%" y="1093" width="0.0115%" height="15" fill="rgb(235,85,29)" fg:x="29239" fg:w="4"/><text x="84.2653%" y="1103.50"></text></g><g><title>secp256k1_ecdsa_sig_verify (4 samples, 0.01%)</title><rect x="84.0153%" y="1077" width="0.0115%" height="15" fill="rgb(237,194,43)" fg:x="29239" fg:w="4"/><text x="84.2653%" y="1087.50"></text></g><g><title>secp256k1_ecmult (4 samples, 0.01%)</title><rect x="84.0153%" y="1061" width="0.0115%" height="15" fill="rgb(211,4,42)" fg:x="29239" fg:w="4"/><text x="84.2653%" y="1071.50"></text></g><g><title>secp256k1_ecmult_strauss_wnaf (4 samples, 0.01%)</title><rect x="84.0153%" y="1045" width="0.0115%" height="15" fill="rgb(221,80,37)" fg:x="29239" fg:w="4"/><text x="84.2653%" y="1055.50"></text></g><g><title>rayon_core::job::StackJob&lt;L,F,R&gt;::run_inline (5 samples, 0.01%)</title><rect x="84.0153%" y="1701" width="0.0144%" height="15" fill="rgb(222,47,31)" fg:x="29239" fg:w="5"/><text x="84.2653%" y="1711.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (5 samples, 0.01%)</title><rect x="84.0153%" y="1685" width="0.0144%" height="15" fill="rgb(249,82,52)" fg:x="29239" fg:w="5"/><text x="84.2653%" y="1695.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (5 samples, 0.01%)</title><rect x="84.0153%" y="1669" width="0.0144%" height="15" fill="rgb(218,203,2)" fg:x="29239" fg:w="5"/><text x="84.2653%" y="1679.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (5 samples, 0.01%)</title><rect x="84.0153%" y="1653" width="0.0144%" height="15" fill="rgb(210,175,14)" fg:x="29239" fg:w="5"/><text x="84.2653%" y="1663.50"></text></g><g><title>rayon_core::join::join_context (5 samples, 0.01%)</title><rect x="84.0153%" y="1637" width="0.0144%" height="15" fill="rgb(216,210,12)" fg:x="29239" fg:w="5"/><text x="84.2653%" y="1647.50"></text></g><g><title>rayon_core::registry::in_worker (5 samples, 0.01%)</title><rect x="84.0153%" y="1621" width="0.0144%" height="15" fill="rgb(229,120,18)" fg:x="29239" fg:w="5"/><text x="84.2653%" y="1631.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5 samples, 0.01%)</title><rect x="84.0153%" y="1605" width="0.0144%" height="15" fill="rgb(231,174,12)" fg:x="29239" fg:w="5"/><text x="84.2653%" y="1615.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (5 samples, 0.01%)</title><rect x="84.0153%" y="1589" width="0.0144%" height="15" fill="rgb(214,101,53)" fg:x="29239" fg:w="5"/><text x="84.2653%" y="1599.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.01%)</title><rect x="84.0153%" y="1573" width="0.0144%" height="15" fill="rgb(246,89,43)" fg:x="29239" fg:w="5"/><text x="84.2653%" y="1583.50"></text></g><g><title>std::panicking::try (5 samples, 0.01%)</title><rect x="84.0153%" y="1557" width="0.0144%" height="15" fill="rgb(222,9,51)" fg:x="29239" fg:w="5"/><text x="84.2653%" y="1567.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.01%)</title><rect x="84.0153%" y="1541" width="0.0144%" height="15" fill="rgb(252,221,9)" fg:x="29239" fg:w="5"/><text x="84.2653%" y="1551.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5 samples, 0.01%)</title><rect x="84.0153%" y="1525" width="0.0144%" height="15" fill="rgb(248,28,15)" fg:x="29239" fg:w="5"/><text x="84.2653%" y="1535.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (5 samples, 0.01%)</title><rect x="84.0153%" y="1509" width="0.0144%" height="15" fill="rgb(213,54,52)" fg:x="29239" fg:w="5"/><text x="84.2653%" y="1519.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (5 samples, 0.01%)</title><rect x="84.0153%" y="1493" width="0.0144%" height="15" fill="rgb(240,3,45)" fg:x="29239" fg:w="5"/><text x="84.2653%" y="1503.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (5 samples, 0.01%)</title><rect x="84.0153%" y="1477" width="0.0144%" height="15" fill="rgb(239,138,24)" fg:x="29239" fg:w="5"/><text x="84.2653%" y="1487.50"></text></g><g><title>rayon_core::join::join_context (5 samples, 0.01%)</title><rect x="84.0153%" y="1461" width="0.0144%" height="15" fill="rgb(233,45,54)" fg:x="29239" fg:w="5"/><text x="84.2653%" y="1471.50"></text></g><g><title>rayon_core::registry::in_worker (5 samples, 0.01%)</title><rect x="84.0153%" y="1445" width="0.0144%" height="15" fill="rgb(220,131,2)" fg:x="29239" fg:w="5"/><text x="84.2653%" y="1455.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (5 samples, 0.01%)</title><rect x="84.0153%" y="1429" width="0.0144%" height="15" fill="rgb(240,154,36)" fg:x="29239" fg:w="5"/><text x="84.2653%" y="1439.50"></text></g><g><title>par_exec_9 (25 samples, 0.07%)</title><rect x="83.9607%" y="2789" width="0.0718%" height="15" fill="rgb(251,221,1)" fg:x="29220" fg:w="25"/><text x="84.2107%" y="2799.50"></text></g><g><title>__GI___clone3 (25 samples, 0.07%)</title><rect x="83.9607%" y="2773" width="0.0718%" height="15" fill="rgb(225,217,1)" fg:x="29220" fg:w="25"/><text x="84.2107%" y="2783.50"></text></g><g><title>start_thread (25 samples, 0.07%)</title><rect x="83.9607%" y="2757" width="0.0718%" height="15" fill="rgb(241,105,49)" fg:x="29220" fg:w="25"/><text x="84.2107%" y="2767.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (25 samples, 0.07%)</title><rect x="83.9607%" y="2741" width="0.0718%" height="15" fill="rgb(215,44,32)" fg:x="29220" fg:w="25"/><text x="84.2107%" y="2751.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (25 samples, 0.07%)</title><rect x="83.9607%" y="2725" width="0.0718%" height="15" fill="rgb(213,222,14)" fg:x="29220" fg:w="25"/><text x="84.2107%" y="2735.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (25 samples, 0.07%)</title><rect x="83.9607%" y="2709" width="0.0718%" height="15" fill="rgb(207,99,52)" fg:x="29220" fg:w="25"/><text x="84.2107%" y="2719.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (25 samples, 0.07%)</title><rect x="83.9607%" y="2693" width="0.0718%" height="15" fill="rgb(214,208,52)" fg:x="29220" fg:w="25"/><text x="84.2107%" y="2703.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (25 samples, 0.07%)</title><rect x="83.9607%" y="2677" width="0.0718%" height="15" fill="rgb(244,169,0)" fg:x="29220" fg:w="25"/><text x="84.2107%" y="2687.50"></text></g><g><title>std::panic::catch_unwind (25 samples, 0.07%)</title><rect x="83.9607%" y="2661" width="0.0718%" height="15" fill="rgb(216,193,37)" fg:x="29220" fg:w="25"/><text x="84.2107%" y="2671.50"></text></g><g><title>std::panicking::try (25 samples, 0.07%)</title><rect x="83.9607%" y="2645" width="0.0718%" height="15" fill="rgb(212,158,10)" fg:x="29220" fg:w="25"/><text x="84.2107%" y="2655.50"></text></g><g><title>std::panicking::try::do_call (25 samples, 0.07%)</title><rect x="83.9607%" y="2629" width="0.0718%" height="15" fill="rgb(213,110,20)" fg:x="29220" fg:w="25"/><text x="84.2107%" y="2639.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (25 samples, 0.07%)</title><rect x="83.9607%" y="2613" width="0.0718%" height="15" fill="rgb(226,5,42)" fg:x="29220" fg:w="25"/><text x="84.2107%" y="2623.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (25 samples, 0.07%)</title><rect x="83.9607%" y="2597" width="0.0718%" height="15" fill="rgb(211,93,8)" fg:x="29220" fg:w="25"/><text x="84.2107%" y="2607.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (25 samples, 0.07%)</title><rect x="83.9607%" y="2581" width="0.0718%" height="15" fill="rgb(240,208,12)" fg:x="29220" fg:w="25"/><text x="84.2107%" y="2591.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (25 samples, 0.07%)</title><rect x="83.9607%" y="2565" width="0.0718%" height="15" fill="rgb(233,127,50)" fg:x="29220" fg:w="25"/><text x="84.2107%" y="2575.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (25 samples, 0.07%)</title><rect x="83.9607%" y="2549" width="0.0718%" height="15" fill="rgb(227,199,53)" fg:x="29220" fg:w="25"/><text x="84.2107%" y="2559.50"></text></g><g><title>rayon_core::registry::main_loop (25 samples, 0.07%)</title><rect x="83.9607%" y="2533" width="0.0718%" height="15" fill="rgb(235,199,10)" fg:x="29220" fg:w="25"/><text x="84.2107%" y="2543.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (25 samples, 0.07%)</title><rect x="83.9607%" y="2517" width="0.0718%" height="15" fill="rgb(228,148,35)" fg:x="29220" fg:w="25"/><text x="84.2107%" y="2527.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (25 samples, 0.07%)</title><rect x="83.9607%" y="2501" width="0.0718%" height="15" fill="rgb(217,87,19)" fg:x="29220" fg:w="25"/><text x="84.2107%" y="2511.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (25 samples, 0.07%)</title><rect x="83.9607%" y="2485" width="0.0718%" height="15" fill="rgb(239,9,32)" fg:x="29220" fg:w="25"/><text x="84.2107%" y="2495.50"></text></g><g><title>rayon_core::job::JobRef::execute (25 samples, 0.07%)</title><rect x="83.9607%" y="2469" width="0.0718%" height="15" fill="rgb(229,101,29)" fg:x="29220" fg:w="25"/><text x="84.2107%" y="2479.50"></text></g><g><title>&lt;rayon_core::job::StackJob&lt;L,F,R&gt; as rayon_core::job::Job&gt;::execute (25 samples, 0.07%)</title><rect x="83.9607%" y="2453" width="0.0718%" height="15" fill="rgb(208,143,26)" fg:x="29220" fg:w="25"/><text x="84.2107%" y="2463.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call (25 samples, 0.07%)</title><rect x="83.9607%" y="2437" width="0.0718%" height="15" fill="rgb(214,10,2)" fg:x="29220" fg:w="25"/><text x="84.2107%" y="2447.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (25 samples, 0.07%)</title><rect x="83.9607%" y="2421" width="0.0718%" height="15" fill="rgb(254,203,30)" fg:x="29220" fg:w="25"/><text x="84.2107%" y="2431.50"></text></g><g><title>std::panic::catch_unwind (25 samples, 0.07%)</title><rect x="83.9607%" y="2405" width="0.0718%" height="15" fill="rgb(242,45,3)" fg:x="29220" fg:w="25"/><text x="84.2107%" y="2415.50"></text></g><g><title>std::panicking::try (25 samples, 0.07%)</title><rect x="83.9607%" y="2389" width="0.0718%" height="15" fill="rgb(209,146,51)" fg:x="29220" fg:w="25"/><text x="84.2107%" y="2399.50"></text></g><g><title>std::panicking::try::do_call (25 samples, 0.07%)</title><rect x="83.9607%" y="2373" width="0.0718%" height="15" fill="rgb(222,80,5)" fg:x="29220" fg:w="25"/><text x="84.2107%" y="2383.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (25 samples, 0.07%)</title><rect x="83.9607%" y="2357" width="0.0718%" height="15" fill="rgb(252,80,35)" fg:x="29220" fg:w="25"/><text x="84.2107%" y="2367.50"></text></g><g><title>rayon_core::job::JobResult&lt;T&gt;::call::{{closure}} (25 samples, 0.07%)</title><rect x="83.9607%" y="2341" width="0.0718%" height="15" fill="rgb(246,125,28)" fg:x="29220" fg:w="25"/><text x="84.2107%" y="2351.50"></text></g><g><title>rayon_core::join::join_context::call_b::{{closure}} (25 samples, 0.07%)</title><rect x="83.9607%" y="2325" width="0.0718%" height="15" fill="rgb(224,143,51)" fg:x="29220" fg:w="25"/><text x="84.2107%" y="2335.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (25 samples, 0.07%)</title><rect x="83.9607%" y="2309" width="0.0718%" height="15" fill="rgb(205,24,17)" fg:x="29220" fg:w="25"/><text x="84.2107%" y="2319.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (25 samples, 0.07%)</title><rect x="83.9607%" y="2293" width="0.0718%" height="15" fill="rgb(253,128,30)" fg:x="29220" fg:w="25"/><text x="84.2107%" y="2303.50"></text></g><g><title>rayon_core::join::join_context (25 samples, 0.07%)</title><rect x="83.9607%" y="2277" width="0.0718%" height="15" fill="rgb(214,153,25)" fg:x="29220" fg:w="25"/><text x="84.2107%" y="2287.50"></text></g><g><title>rayon_core::registry::in_worker (25 samples, 0.07%)</title><rect x="83.9607%" y="2261" width="0.0718%" height="15" fill="rgb(214,4,28)" fg:x="29220" fg:w="25"/><text x="84.2107%" y="2271.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (25 samples, 0.07%)</title><rect x="83.9607%" y="2245" width="0.0718%" height="15" fill="rgb(235,179,52)" fg:x="29220" fg:w="25"/><text x="84.2107%" y="2255.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (19 samples, 0.05%)</title><rect x="83.9779%" y="2229" width="0.0546%" height="15" fill="rgb(233,27,42)" fg:x="29226" fg:w="19"/><text x="84.2279%" y="2239.50"></text></g><g><title>std::panic::catch_unwind (19 samples, 0.05%)</title><rect x="83.9779%" y="2213" width="0.0546%" height="15" fill="rgb(238,35,25)" fg:x="29226" fg:w="19"/><text x="84.2279%" y="2223.50"></text></g><g><title>std::panicking::try (19 samples, 0.05%)</title><rect x="83.9779%" y="2197" width="0.0546%" height="15" fill="rgb(227,44,31)" fg:x="29226" fg:w="19"/><text x="84.2279%" y="2207.50"></text></g><g><title>std::panicking::try::do_call (19 samples, 0.05%)</title><rect x="83.9779%" y="2181" width="0.0546%" height="15" fill="rgb(232,201,13)" fg:x="29226" fg:w="19"/><text x="84.2279%" y="2191.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (19 samples, 0.05%)</title><rect x="83.9779%" y="2165" width="0.0546%" height="15" fill="rgb(224,172,52)" fg:x="29226" fg:w="19"/><text x="84.2279%" y="2175.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (19 samples, 0.05%)</title><rect x="83.9779%" y="2149" width="0.0546%" height="15" fill="rgb(214,27,26)" fg:x="29226" fg:w="19"/><text x="84.2279%" y="2159.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (19 samples, 0.05%)</title><rect x="83.9779%" y="2133" width="0.0546%" height="15" fill="rgb(210,185,52)" fg:x="29226" fg:w="19"/><text x="84.2279%" y="2143.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (19 samples, 0.05%)</title><rect x="83.9779%" y="2117" width="0.0546%" height="15" fill="rgb(249,59,32)" fg:x="29226" fg:w="19"/><text x="84.2279%" y="2127.50"></text></g><g><title>rayon_core::join::join_context (19 samples, 0.05%)</title><rect x="83.9779%" y="2101" width="0.0546%" height="15" fill="rgb(242,209,18)" fg:x="29226" fg:w="19"/><text x="84.2279%" y="2111.50"></text></g><g><title>rayon_core::registry::in_worker (19 samples, 0.05%)</title><rect x="83.9779%" y="2085" width="0.0546%" height="15" fill="rgb(229,0,18)" fg:x="29226" fg:w="19"/><text x="84.2279%" y="2095.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (19 samples, 0.05%)</title><rect x="83.9779%" y="2069" width="0.0546%" height="15" fill="rgb(217,138,29)" fg:x="29226" fg:w="19"/><text x="84.2279%" y="2079.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (13 samples, 0.04%)</title><rect x="83.9952%" y="2053" width="0.0374%" height="15" fill="rgb(215,72,42)" fg:x="29232" fg:w="13"/><text x="84.2452%" y="2063.50"></text></g><g><title>std::panic::catch_unwind (13 samples, 0.04%)</title><rect x="83.9952%" y="2037" width="0.0374%" height="15" fill="rgb(254,115,11)" fg:x="29232" fg:w="13"/><text x="84.2452%" y="2047.50"></text></g><g><title>std::panicking::try (13 samples, 0.04%)</title><rect x="83.9952%" y="2021" width="0.0374%" height="15" fill="rgb(205,133,39)" fg:x="29232" fg:w="13"/><text x="84.2452%" y="2031.50"></text></g><g><title>std::panicking::try::do_call (13 samples, 0.04%)</title><rect x="83.9952%" y="2005" width="0.0374%" height="15" fill="rgb(211,36,27)" fg:x="29232" fg:w="13"/><text x="84.2452%" y="2015.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (13 samples, 0.04%)</title><rect x="83.9952%" y="1989" width="0.0374%" height="15" fill="rgb(221,48,10)" fg:x="29232" fg:w="13"/><text x="84.2452%" y="1999.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (13 samples, 0.04%)</title><rect x="83.9952%" y="1973" width="0.0374%" height="15" fill="rgb(230,172,50)" fg:x="29232" fg:w="13"/><text x="84.2452%" y="1983.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (13 samples, 0.04%)</title><rect x="83.9952%" y="1957" width="0.0374%" height="15" fill="rgb(249,72,18)" fg:x="29232" fg:w="13"/><text x="84.2452%" y="1967.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (13 samples, 0.04%)</title><rect x="83.9952%" y="1941" width="0.0374%" height="15" fill="rgb(237,58,48)" fg:x="29232" fg:w="13"/><text x="84.2452%" y="1951.50"></text></g><g><title>rayon_core::join::join_context (13 samples, 0.04%)</title><rect x="83.9952%" y="1925" width="0.0374%" height="15" fill="rgb(242,123,3)" fg:x="29232" fg:w="13"/><text x="84.2452%" y="1935.50"></text></g><g><title>rayon_core::registry::in_worker (13 samples, 0.04%)</title><rect x="83.9952%" y="1909" width="0.0374%" height="15" fill="rgb(232,111,32)" fg:x="29232" fg:w="13"/><text x="84.2452%" y="1919.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (13 samples, 0.04%)</title><rect x="83.9952%" y="1893" width="0.0374%" height="15" fill="rgb(229,108,3)" fg:x="29232" fg:w="13"/><text x="84.2452%" y="1903.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (6 samples, 0.02%)</title><rect x="84.0153%" y="1877" width="0.0172%" height="15" fill="rgb(222,158,10)" fg:x="29239" fg:w="6"/><text x="84.2653%" y="1887.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.02%)</title><rect x="84.0153%" y="1861" width="0.0172%" height="15" fill="rgb(205,34,49)" fg:x="29239" fg:w="6"/><text x="84.2653%" y="1871.50"></text></g><g><title>std::panicking::try (6 samples, 0.02%)</title><rect x="84.0153%" y="1845" width="0.0172%" height="15" fill="rgb(232,21,14)" fg:x="29239" fg:w="6"/><text x="84.2653%" y="1855.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.02%)</title><rect x="84.0153%" y="1829" width="0.0172%" height="15" fill="rgb(229,127,44)" fg:x="29239" fg:w="6"/><text x="84.2653%" y="1839.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6 samples, 0.02%)</title><rect x="84.0153%" y="1813" width="0.0172%" height="15" fill="rgb(232,171,4)" fg:x="29239" fg:w="6"/><text x="84.2653%" y="1823.50"></text></g><g><title>rayon_core::join::join_context::call_a::{{closure}} (6 samples, 0.02%)</title><rect x="84.0153%" y="1797" width="0.0172%" height="15" fill="rgb(250,92,16)" fg:x="29239" fg:w="6"/><text x="84.2653%" y="1807.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper::{{closure}} (6 samples, 0.02%)</title><rect x="84.0153%" y="1781" width="0.0172%" height="15" fill="rgb(230,103,38)" fg:x="29239" fg:w="6"/><text x="84.2653%" y="1791.50"></text></g><g><title>rayon::iter::plumbing::bridge_producer_consumer::helper (6 samples, 0.02%)</title><rect x="84.0153%" y="1765" width="0.0172%" height="15" fill="rgb(253,167,9)" fg:x="29239" fg:w="6"/><text x="84.2653%" y="1775.50"></text></g><g><title>rayon_core::join::join_context (6 samples, 0.02%)</title><rect x="84.0153%" y="1749" width="0.0172%" height="15" fill="rgb(222,118,11)" fg:x="29239" fg:w="6"/><text x="84.2653%" y="1759.50"></text></g><g><title>rayon_core::registry::in_worker (6 samples, 0.02%)</title><rect x="84.0153%" y="1733" width="0.0172%" height="15" fill="rgb(240,202,0)" fg:x="29239" fg:w="6"/><text x="84.2653%" y="1743.50"></text></g><g><title>rayon_core::join::join_context::{{closure}} (6 samples, 0.02%)</title><rect x="84.0153%" y="1717" width="0.0172%" height="15" fill="rgb(236,124,4)" fg:x="29239" fg:w="6"/><text x="84.2653%" y="1727.50"></text></g><g><title>&lt;aptos_db::state_merkle_db::StateMerkleDb as aptos_jellyfish_merkle::TreeReader&lt;aptos_types::state_store::state_key::StateKey&gt;&gt;::get_node_option (4 samples, 0.01%)</title><rect x="84.0613%" y="2149" width="0.0115%" height="15" fill="rgb(244,128,18)" fg:x="29255" fg:w="4"/><text x="84.3113%" y="2159.50"></text></g><g><title>aptos_db::lru_node_cache::LruNodeCache::get (4 samples, 0.01%)</title><rect x="84.0613%" y="2133" width="0.0115%" height="15" fill="rgb(231,206,5)" fg:x="29255" fg:w="4"/><text x="84.3113%" y="2143.50"></text></g><g><title>lru::LruCache&lt;K,V,S&gt;::get (4 samples, 0.01%)</title><rect x="84.0613%" y="2117" width="0.0115%" height="15" fill="rgb(237,111,8)" fg:x="29255" fg:w="4"/><text x="84.3113%" y="2127.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (4 samples, 0.01%)</title><rect x="84.0613%" y="2101" width="0.0115%" height="15" fill="rgb(225,127,3)" fg:x="29255" fg:w="4"/><text x="84.3113%" y="2111.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (4 samples, 0.01%)</title><rect x="84.0613%" y="2085" width="0.0115%" height="15" fill="rgb(222,85,48)" fg:x="29255" fg:w="4"/><text x="84.3113%" y="2095.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::get_mut (4 samples, 0.01%)</title><rect x="84.0613%" y="2069" width="0.0115%" height="15" fill="rgb(221,108,37)" fg:x="29255" fg:w="4"/><text x="84.3113%" y="2079.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (4 samples, 0.01%)</title><rect x="84.0613%" y="2053" width="0.0115%" height="15" fill="rgb(226,169,36)" fg:x="29255" fg:w="4"/><text x="84.3113%" y="2063.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_inner (4 samples, 0.01%)</title><rect x="84.0613%" y="2037" width="0.0115%" height="15" fill="rgb(237,76,12)" fg:x="29255" fg:w="4"/><text x="84.3113%" y="2047.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::load (4 samples, 0.01%)</title><rect x="84.0613%" y="2021" width="0.0115%" height="15" fill="rgb(210,227,32)" fg:x="29255" fg:w="4"/><text x="84.3113%" y="2031.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (4 samples, 0.01%)</title><rect x="84.0613%" y="2005" width="0.0115%" height="15" fill="rgb(214,117,20)" fg:x="29255" fg:w="4"/><text x="84.3113%" y="2015.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.01%)</title><rect x="84.0613%" y="1989" width="0.0115%" height="15" fill="rgb(234,119,41)" fg:x="29255" fg:w="4"/><text x="84.3113%" y="1999.50"></text></g><g><title>aptos_jellyfish_merkle::TreeReader::get_node (5 samples, 0.01%)</title><rect x="84.0613%" y="2165" width="0.0144%" height="15" fill="rgb(230,130,47)" fg:x="29255" fg:w="5"/><text x="84.3113%" y="2175.50"></text></g><g><title>&lt;aptos_types::proof::MerkleTreeInternalNode&lt;H&gt; as aptos_crypto::hash::CryptoHash&gt;::hash (5 samples, 0.01%)</title><rect x="84.0842%" y="2133" width="0.0144%" height="15" fill="rgb(215,21,41)" fg:x="29263" fg:w="5"/><text x="84.3342%" y="2143.50"></text></g><g><title>&lt;aptos_crypto::hash::TransactionAccumulatorHasher as aptos_crypto::hash::CryptoHasher&gt;::finish (5 samples, 0.01%)</title><rect x="84.0842%" y="2117" width="0.0144%" height="15" fill="rgb(226,26,53)" fg:x="29263" fg:w="5"/><text x="84.3342%" y="2127.50"></text></g><g><title>aptos_crypto::hash::DefaultHasher::finish (5 samples, 0.01%)</title><rect x="84.0842%" y="2101" width="0.0144%" height="15" fill="rgb(221,92,23)" fg:x="29263" fg:w="5"/><text x="84.3342%" y="2111.50"></text></g><g><title>&lt;tiny_keccak::sha3::Sha3 as tiny_keccak::Hasher&gt;::finalize (5 samples, 0.01%)</title><rect x="84.0842%" y="2085" width="0.0144%" height="15" fill="rgb(213,156,21)" fg:x="29263" fg:w="5"/><text x="84.3342%" y="2095.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::finalize (5 samples, 0.01%)</title><rect x="84.0842%" y="2069" width="0.0144%" height="15" fill="rgb(254,166,29)" fg:x="29263" fg:w="5"/><text x="84.3342%" y="2079.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::squeeze (5 samples, 0.01%)</title><rect x="84.0842%" y="2053" width="0.0144%" height="15" fill="rgb(213,71,1)" fg:x="29263" fg:w="5"/><text x="84.3342%" y="2063.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::fill_block (5 samples, 0.01%)</title><rect x="84.0842%" y="2037" width="0.0144%" height="15" fill="rgb(245,8,13)" fg:x="29263" fg:w="5"/><text x="84.3342%" y="2047.50"></text></g><g><title>tiny_keccak::KeccakState&lt;P&gt;::keccak (5 samples, 0.01%)</title><rect x="84.0842%" y="2021" width="0.0144%" height="15" fill="rgb(213,32,32)" fg:x="29263" fg:w="5"/><text x="84.3342%" y="2031.50"></text></g><g><title>&lt;tiny_keccak::keccakf::KeccakF as tiny_keccak::Permutation&gt;::execute (5 samples, 0.01%)</title><rect x="84.0842%" y="2005" width="0.0144%" height="15" fill="rgb(251,86,50)" fg:x="29263" fg:w="5"/><text x="84.3342%" y="2015.50"></text></g><g><title>tiny_keccak::keccakf::keccakf (5 samples, 0.01%)</title><rect x="84.0842%" y="1989" width="0.0144%" height="15" fill="rgb(252,92,41)" fg:x="29263" fg:w="5"/><text x="84.3342%" y="1999.50"></text></g><g><title>&lt;aptos_db::AptosDB as aptos_block_executor::state_view::DbReader&gt;::get_state_proof_by_version_ext (24 samples, 0.07%)</title><rect x="84.0354%" y="2309" width="0.0690%" height="15" fill="rgb(234,70,35)" fg:x="29246" fg:w="24"/><text x="84.2854%" y="2319.50"></text></g><g><title>aptos_db::gauged_api (24 samples, 0.07%)</title><rect x="84.0354%" y="2293" width="0.0690%" height="15" fill="rgb(210,157,19)" fg:x="29246" fg:w="24"/><text x="84.2854%" y="2303.50"></text></g><g><title>&lt;aptos_db::AptosDB as aptos_block_executor::state_view::DbReader&gt;::get_state_proof_by_version_ext::{{closure}} (24 samples, 0.07%)</title><rect x="84.0354%" y="2277" width="0.0690%" height="15" fill="rgb(206,20,45)" fg:x="29246" fg:w="24"/><text x="84.2854%" y="2287.50"></text></g><g><title>&lt;aptos_db::state_store::StateStore as aptos_block_executor::state_view::DbReader&gt;::get_state_proof_by_version_ext (24 samples, 0.07%)</title><rect x="84.0354%" y="2261" width="0.0690%" height="15" fill="rgb(207,34,7)" fg:x="29246" fg:w="24"/><text x="84.2854%" y="2271.50"></text></g><g><title>&lt;aptos_db::state_store::StateDb as aptos_block_executor::state_view::DbReader&gt;::get_state_proof_by_version_ext (24 samples, 0.07%)</title><rect x="84.0354%" y="2245" width="0.0690%" height="15" fill="rgb(253,151,14)" fg:x="29246" fg:w="24"/><text x="84.2854%" y="2255.50"></text></g><g><title>aptos_db::state_merkle_db::StateMerkleDb::get_with_proof_ext (24 samples, 0.07%)</title><rect x="84.0354%" y="2229" width="0.0690%" height="15" fill="rgb(252,1,18)" fg:x="29246" fg:w="24"/><text x="84.2854%" y="2239.50"></text></g><g><title>aptos_jellyfish_merkle::JellyfishMerkleTree&lt;R,K&gt;::get_with_proof_ext (22 samples, 0.06%)</title><rect x="84.0411%" y="2213" width="0.0632%" height="15" fill="rgb(214,77,52)" fg:x="29248" fg:w="22"/><text x="84.2911%" y="2223.50"></text></g><g><title>aptos_jellyfish_merkle::node_type::InternalNode::get_child_with_siblings (19 samples, 0.05%)</title><rect x="84.0498%" y="2197" width="0.0546%" height="15" fill="rgb(254,106,35)" fg:x="29251" fg:w="19"/><text x="84.2998%" y="2207.50"></text></g><g><title>aptos_jellyfish_merkle::node_type::InternalNode::gen_node_in_proof (19 samples, 0.05%)</title><rect x="84.0498%" y="2181" width="0.0546%" height="15" fill="rgb(212,67,40)" fg:x="29251" fg:w="19"/><text x="84.2998%" y="2191.50"></text></g><g><title>aptos_jellyfish_merkle::node_type::InternalNode::merkle_hash (10 samples, 0.03%)</title><rect x="84.0756%" y="2165" width="0.0287%" height="15" fill="rgb(228,76,23)" fg:x="29260" fg:w="10"/><text x="84.3256%" y="2175.50"></text></g><g><title>aptos_jellyfish_merkle::node_type::InternalNode::merkle_hash (7 samples, 0.02%)</title><rect x="84.0842%" y="2149" width="0.0201%" height="15" fill="rgb(250,198,5)" fg:x="29263" fg:w="7"/><text x="84.3342%" y="2159.50"></text></g><g><title>rayon_core::registry::WorkerThread::execute (32 samples, 0.09%)</title><rect x="84.0354%" y="2485" width="0.0919%" height="15" fill="rgb(209,20,25)" fg:x="29246" fg:w="32"/><text x="84.2854%" y="2495.50"></text></g><g><title>rayon_core::job::JobRef::execute (32 samples, 0.09%)</title><rect x="84.0354%" y="2469" width="0.0919%" height="15" fill="rgb(236,32,4)" fg:x="29246" fg:w="32"/><text x="84.2854%" y="2479.50"></text></g><g><title>&lt;rayon_core::job::HeapJob&lt;BODY&gt; as rayon_core::job::Job&gt;::execute (32 samples, 0.09%)</title><rect x="84.0354%" y="2453" width="0.0919%" height="15" fill="rgb(215,31,6)" fg:x="29246" fg:w="32"/><text x="84.2854%" y="2463.50"></text></g><g><title>rayon_core::spawn::spawn_job::{{closure}} (32 samples, 0.09%)</title><rect x="84.0354%" y="2437" width="0.0919%" height="15" fill="rgb(207,186,49)" fg:x="29246" fg:w="32"/><text x="84.2854%" y="2447.50"></text></g><g><title>rayon_core::registry::Registry::catch_unwind (32 samples, 0.09%)</title><rect x="84.0354%" y="2421" width="0.0919%" height="15" fill="rgb(211,212,49)" fg:x="29246" fg:w="32"/><text x="84.2854%" y="2431.50"></text></g><g><title>rayon_core::unwind::halt_unwinding (32 samples, 0.09%)</title><rect x="84.0354%" y="2405" width="0.0919%" height="15" fill="rgb(229,51,41)" fg:x="29246" fg:w="32"/><text x="84.2854%" y="2415.50"></text></g><g><title>std::panic::catch_unwind (32 samples, 0.09%)</title><rect x="84.0354%" y="2389" width="0.0919%" height="15" fill="rgb(205,225,36)" fg:x="29246" fg:w="32"/><text x="84.2854%" y="2399.50"></text></g><g><title>std::panicking::try (32 samples, 0.09%)</title><rect x="84.0354%" y="2373" width="0.0919%" height="15" fill="rgb(209,213,45)" fg:x="29246" fg:w="32"/><text x="84.2854%" y="2383.50"></text></g><g><title>std::panicking::try::do_call (32 samples, 0.09%)</title><rect x="84.0354%" y="2357" width="0.0919%" height="15" fill="rgb(219,35,49)" fg:x="29246" fg:w="32"/><text x="84.2854%" y="2367.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (32 samples, 0.09%)</title><rect x="84.0354%" y="2341" width="0.0919%" height="15" fill="rgb(215,205,22)" fg:x="29246" fg:w="32"/><text x="84.2854%" y="2351.50"></text></g><g><title>aptos_storage_interface::async_proof_fetcher::AsyncProofFetcher::schedule_proof_read::{{closure}} (32 samples, 0.09%)</title><rect x="84.0354%" y="2325" width="0.0919%" height="15" fill="rgb(248,204,34)" fg:x="29246" fg:w="32"/><text x="84.2854%" y="2335.50"></text></g><g><title>proof_reader_0 (34 samples, 0.10%)</title><rect x="84.0325%" y="2789" width="0.0977%" height="15" fill="rgb(219,223,31)" fg:x="29245" fg:w="34"/><text x="84.2825%" y="2799.50"></text></g><g><title>__GI___clone3 (34 samples, 0.10%)</title><rect x="84.0325%" y="2773" width="0.0977%" height="15" fill="rgb(236,14,8)" fg:x="29245" fg:w="34"/><text x="84.2825%" y="2783.50"></text></g><g><title>start_thread (34 samples, 0.10%)</title><rect x="84.0325%" y="2757" width="0.0977%" height="15" fill="rgb(243,129,23)" fg:x="29245" fg:w="34"/><text x="84.2825%" y="2767.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (34 samples, 0.10%)</title><rect x="84.0325%" y="2741" width="0.0977%" height="15" fill="rgb(205,204,5)" fg:x="29245" fg:w="34"/><text x="84.2825%" y="2751.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (34 samples, 0.10%)</title><rect x="84.0325%" y="2725" width="0.0977%" height="15" fill="rgb(244,115,32)" fg:x="29245" fg:w="34"/><text x="84.2825%" y="2735.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (34 samples, 0.10%)</title><rect x="84.0325%" y="2709" width="0.0977%" height="15" fill="rgb(229,123,14)" fg:x="29245" fg:w="34"/><text x="84.2825%" y="2719.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (34 samples, 0.10%)</title><rect x="84.0325%" y="2693" width="0.0977%" height="15" fill="rgb(250,85,1)" fg:x="29245" fg:w="34"/><text x="84.2825%" y="2703.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (34 samples, 0.10%)</title><rect x="84.0325%" y="2677" width="0.0977%" height="15" fill="rgb(209,141,54)" fg:x="29245" fg:w="34"/><text x="84.2825%" y="2687.50"></text></g><g><title>std::panic::catch_unwind (34 samples, 0.10%)</title><rect x="84.0325%" y="2661" width="0.0977%" height="15" fill="rgb(244,107,39)" fg:x="29245" fg:w="34"/><text x="84.2825%" y="2671.50"></text></g><g><title>std::panicking::try (34 samples, 0.10%)</title><rect x="84.0325%" y="2645" width="0.0977%" height="15" fill="rgb(230,68,26)" fg:x="29245" fg:w="34"/><text x="84.2825%" y="2655.50"></text></g><g><title>std::panicking::try::do_call (34 samples, 0.10%)</title><rect x="84.0325%" y="2629" width="0.0977%" height="15" fill="rgb(220,178,33)" fg:x="29245" fg:w="34"/><text x="84.2825%" y="2639.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (34 samples, 0.10%)</title><rect x="84.0325%" y="2613" width="0.0977%" height="15" fill="rgb(220,77,53)" fg:x="29245" fg:w="34"/><text x="84.2825%" y="2623.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (34 samples, 0.10%)</title><rect x="84.0325%" y="2597" width="0.0977%" height="15" fill="rgb(224,108,19)" fg:x="29245" fg:w="34"/><text x="84.2825%" y="2607.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (34 samples, 0.10%)</title><rect x="84.0325%" y="2581" width="0.0977%" height="15" fill="rgb(223,203,27)" fg:x="29245" fg:w="34"/><text x="84.2825%" y="2591.50"></text></g><g><title>&lt;rayon_core::registry::DefaultSpawn as rayon_core::registry::ThreadSpawn&gt;::spawn::{{closure}} (34 samples, 0.10%)</title><rect x="84.0325%" y="2565" width="0.0977%" height="15" fill="rgb(211,32,46)" fg:x="29245" fg:w="34"/><text x="84.2825%" y="2575.50"></text></g><g><title>rayon_core::registry::ThreadBuilder::run (34 samples, 0.10%)</title><rect x="84.0325%" y="2549" width="0.0977%" height="15" fill="rgb(240,101,27)" fg:x="29245" fg:w="34"/><text x="84.2825%" y="2559.50"></text></g><g><title>rayon_core::registry::main_loop (34 samples, 0.10%)</title><rect x="84.0325%" y="2533" width="0.0977%" height="15" fill="rgb(217,210,11)" fg:x="29245" fg:w="34"/><text x="84.2825%" y="2543.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until (34 samples, 0.10%)</title><rect x="84.0325%" y="2517" width="0.0977%" height="15" fill="rgb(236,130,21)" fg:x="29245" fg:w="34"/><text x="84.2825%" y="2527.50"></text></g><g><title>rayon_core::registry::WorkerThread::wait_until_cold (34 samples, 0.10%)</title><rect x="84.0325%" y="2501" width="0.0977%" height="15" fill="rgb(250,136,8)" fg:x="29245" fg:w="34"/><text x="84.2825%" y="2511.50"></text></g><g><title>LZ4_compress_fast_continue (1,344 samples, 3.86%)</title><rect x="84.1762%" y="2469" width="3.8618%" height="15" fill="rgb(243,223,36)" fg:x="29295" fg:w="1344"/><text x="84.4262%" y="2479.50">LZ4_..</text></g><g><title>LZ4_compress_generic (1,344 samples, 3.86%)</title><rect x="84.1762%" y="2453" width="3.8618%" height="15" fill="rgb(246,184,8)" fg:x="29295" fg:w="1344"/><text x="84.4262%" y="2463.50">LZ4_..</text></g><g><title>LZ4_compress_generic_validated (1,344 samples, 3.86%)</title><rect x="84.1762%" y="2437" width="3.8618%" height="15" fill="rgb(222,158,36)" fg:x="29295" fg:w="1344"/><text x="84.4262%" y="2447.50">LZ4_..</text></g><g><title>LZ4_hashPosition (316 samples, 0.91%)</title><rect x="87.1300%" y="2421" width="0.9080%" height="15" fill="rgb(210,220,19)" fg:x="30323" fg:w="316"/><text x="87.3800%" y="2431.50"></text></g><g><title>LZ4_hash5 (316 samples, 0.91%)</title><rect x="87.1300%" y="2405" width="0.9080%" height="15" fill="rgb(246,44,38)" fg:x="30323" fg:w="316"/><text x="87.3800%" y="2415.50"></text></g><g><title>rocksdb::BlockBasedTableBuilder::CompressAndVerifyBlock(rocksdb::Slice const&amp;, bool, rocksdb::CompressionContext const&amp;, rocksdb::UncompressionContext*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, rocksdb::Slice*, rocksdb::CompressionType*, rocksdb::Status*) (1,350 samples, 3.88%)</title><rect x="84.1676%" y="2533" width="3.8791%" height="15" fill="rgb(246,186,14)" fg:x="29292" fg:w="1350"/><text x="84.4176%" y="2543.50">rock..</text></g><g><title>rocksdb::CompressBlock(rocksdb::Slice const&amp;, rocksdb::CompressionInfo const&amp;, rocksdb::CompressionType*, unsigned int, bool, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*) (1,347 samples, 3.87%)</title><rect x="84.1762%" y="2517" width="3.8705%" height="15" fill="rgb(233,193,20)" fg:x="29295" fg:w="1347"/><text x="84.4262%" y="2527.50">rock..</text></g><g><title>rocksdb::CompressData(rocksdb::Slice const&amp;, rocksdb::CompressionInfo const&amp;, unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*) (1,347 samples, 3.87%)</title><rect x="84.1762%" y="2501" width="3.8705%" height="15" fill="rgb(215,60,5)" fg:x="29295" fg:w="1347"/><text x="84.4262%" y="2511.50">rock..</text></g><g><title>rocksdb::LZ4_Compress(rocksdb::CompressionInfo const&amp;, unsigned int, char const*, unsigned long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*) (1,347 samples, 3.87%)</title><rect x="84.1762%" y="2485" width="3.8705%" height="15" fill="rgb(207,128,10)" fg:x="29295" fg:w="1347"/><text x="84.4262%" y="2495.50">rock..</text></g><g><title>rocksdb::ComputeBuiltinChecksumWithLastByte(rocksdb::ChecksumType, char const*, unsigned long, char) (606 samples, 1.74%)</title><rect x="88.0582%" y="2517" width="1.7413%" height="15" fill="rgb(238,84,54)" fg:x="30646" fg:w="606"/><text x="88.3082%" y="2527.50"></text></g><g><title>rocksdb::crc32c::Value(char const*, unsigned long) (606 samples, 1.74%)</title><rect x="88.0582%" y="2501" width="1.7413%" height="15" fill="rgb(213,130,11)" fg:x="30646" fg:w="606"/><text x="88.3082%" y="2511.50"></text></g><g><title>ExtendImpl&lt;rocksdb::crc32c::Slow_CRC32&gt; (606 samples, 1.74%)</title><rect x="88.0582%" y="2485" width="1.7413%" height="15" fill="rgb(235,62,9)" fg:x="30646" fg:w="606"/><text x="88.3082%" y="2495.50"></text></g><g><title>Slow_CRC32 (606 samples, 1.74%)</title><rect x="88.0582%" y="2469" width="1.7413%" height="15" fill="rgb(222,64,24)" fg:x="30646" fg:w="606"/><text x="88.3082%" y="2479.50"></text></g><g><title>rocksdb::PerfStepTimer::PerfStepTimer(unsigned long*, rocksdb::SystemClock*, bool, rocksdb::PerfLevel, rocksdb::Statistics*, unsigned int) (4 samples, 0.01%)</title><rect x="89.8052%" y="2501" width="0.0115%" height="15" fill="rgb(238,193,42)" fg:x="31254" fg:w="4"/><text x="90.0552%" y="2511.50"></text></g><g><title>rocksdb::BlockBasedTableBuilder::WriteBlock(rocksdb::Slice const&amp;, rocksdb::BlockHandle*, rocksdb::BlockType) (1,969 samples, 5.66%)</title><rect x="84.1676%" y="2549" width="5.6577%" height="15" fill="rgb(243,204,46)" fg:x="29292" fg:w="1969"/><text x="84.4176%" y="2559.50">rocksdb..</text></g><g><title>rocksdb::BlockBasedTableBuilder::WriteRawBlock(rocksdb::Slice const&amp;, rocksdb::CompressionType, rocksdb::BlockHandle*, rocksdb::BlockType, rocksdb::Slice const*) (618 samples, 1.78%)</title><rect x="88.0495%" y="2533" width="1.7758%" height="15" fill="rgb(243,196,11)" fg:x="30643" fg:w="618"/><text x="88.2995%" y="2543.50">r..</text></g><g><title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;, unsigned int, rocksdb::Env::IOPriority) (9 samples, 0.03%)</title><rect x="89.7994%" y="2517" width="0.0259%" height="15" fill="rgb(232,77,22)" fg:x="31252" fg:w="9"/><text x="90.0494%" y="2527.50"></text></g><g><title>extent_recycle_extract (4 samples, 0.01%)</title><rect x="89.8425%" y="2309" width="0.0115%" height="15" fill="rgb(215,80,25)" fg:x="31267" fg:w="4"/><text x="90.0925%" y="2319.50"></text></g><g><title>_rjem_je_arena_extent_alloc_large (12 samples, 0.03%)</title><rect x="89.8368%" y="2341" width="0.0345%" height="15" fill="rgb(210,173,7)" fg:x="31265" fg:w="12"/><text x="90.0868%" y="2351.50"></text></g><g><title>extent_recycle (11 samples, 0.03%)</title><rect x="89.8397%" y="2325" width="0.0316%" height="15" fill="rgb(207,101,10)" fg:x="31266" fg:w="11"/><text x="90.0897%" y="2335.50"></text></g><g><title>extent_recycle_split (6 samples, 0.02%)</title><rect x="89.8540%" y="2309" width="0.0172%" height="15" fill="rgb(246,57,48)" fg:x="31271" fg:w="6"/><text x="90.1040%" y="2319.50"></text></g><g><title>extent_split_interior (5 samples, 0.01%)</title><rect x="89.8569%" y="2293" width="0.0144%" height="15" fill="rgb(236,184,40)" fg:x="31272" fg:w="5"/><text x="90.1069%" y="2303.50"></text></g><g><title>extent_split_impl (5 samples, 0.01%)</title><rect x="89.8569%" y="2277" width="0.0144%" height="15" fill="rgb(210,205,13)" fg:x="31272" fg:w="5"/><text x="90.1069%" y="2287.50"></text></g><g><title>imalloc_no_sample (13 samples, 0.04%)</title><rect x="89.8368%" y="2405" width="0.0374%" height="15" fill="rgb(231,129,42)" fg:x="31265" fg:w="13"/><text x="90.0868%" y="2415.50"></text></g><g><title>iallocztm (13 samples, 0.04%)</title><rect x="89.8368%" y="2389" width="0.0374%" height="15" fill="rgb(220,229,54)" fg:x="31265" fg:w="13"/><text x="90.0868%" y="2399.50"></text></g><g><title>arena_malloc (13 samples, 0.04%)</title><rect x="89.8368%" y="2373" width="0.0374%" height="15" fill="rgb(230,192,26)" fg:x="31265" fg:w="13"/><text x="90.0868%" y="2383.50"></text></g><g><title>_rjem_je_large_palloc (13 samples, 0.04%)</title><rect x="89.8368%" y="2357" width="0.0374%" height="15" fill="rgb(253,18,30)" fg:x="31265" fg:w="13"/><text x="90.0868%" y="2367.50"></text></g><g><title>operator new(unsigned long) (15 samples, 0.04%)</title><rect x="89.8339%" y="2469" width="0.0431%" height="15" fill="rgb(216,62,53)" fg:x="31264" fg:w="15"/><text x="90.0839%" y="2479.50"></text></g><g><title>malloc (15 samples, 0.04%)</title><rect x="89.8339%" y="2453" width="0.0431%" height="15" fill="rgb(230,79,29)" fg:x="31264" fg:w="15"/><text x="90.0839%" y="2463.50"></text></g><g><title>imalloc (15 samples, 0.04%)</title><rect x="89.8339%" y="2437" width="0.0431%" height="15" fill="rgb(242,26,26)" fg:x="31264" fg:w="15"/><text x="90.0839%" y="2447.50"></text></g><g><title>imalloc_body (14 samples, 0.04%)</title><rect x="89.8368%" y="2421" width="0.0402%" height="15" fill="rgb(227,125,21)" fg:x="31265" fg:w="14"/><text x="90.0868%" y="2431.50"></text></g><g><title>rocksdb::BlockBuilder::Finish() (19 samples, 0.05%)</title><rect x="89.8253%" y="2549" width="0.0546%" height="15" fill="rgb(229,93,26)" fg:x="31261" fg:w="19"/><text x="90.0753%" y="2559.50"></text></g><g><title>rocksdb::PutFixed32(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, unsigned int) (19 samples, 0.05%)</title><rect x="89.8253%" y="2533" width="0.0546%" height="15" fill="rgb(227,228,8)" fg:x="31261" fg:w="19"/><text x="90.0753%" y="2543.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append(char const*, unsigned long) (19 samples, 0.05%)</title><rect x="89.8253%" y="2517" width="0.0546%" height="15" fill="rgb(233,56,0)" fg:x="31261" fg:w="19"/><text x="90.0753%" y="2527.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append(char const*, unsigned long) (19 samples, 0.05%)</title><rect x="89.8253%" y="2501" width="0.0546%" height="15" fill="rgb(225,185,17)" fg:x="31261" fg:w="19"/><text x="90.0753%" y="2511.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (19 samples, 0.05%)</title><rect x="89.8253%" y="2485" width="0.0546%" height="15" fill="rgb(238,202,30)" fg:x="31261" fg:w="19"/><text x="90.0753%" y="2495.50"></text></g><g><title>large_dalloc_finish_impl (6 samples, 0.02%)</title><rect x="89.8856%" y="2453" width="0.0172%" height="15" fill="rgb(236,60,13)" fg:x="31282" fg:w="6"/><text x="90.1356%" y="2463.50"></text></g><g><title>_rjem_je_arena_extents_dirty_dalloc (6 samples, 0.02%)</title><rect x="89.8856%" y="2437" width="0.0172%" height="15" fill="rgb(244,92,0)" fg:x="31282" fg:w="6"/><text x="90.1356%" y="2447.50"></text></g><g><title>extent_record (6 samples, 0.02%)</title><rect x="89.8856%" y="2421" width="0.0172%" height="15" fill="rgb(225,57,15)" fg:x="31282" fg:w="6"/><text x="90.1356%" y="2431.50"></text></g><g><title>extent_try_coalesce (4 samples, 0.01%)</title><rect x="89.8914%" y="2405" width="0.0115%" height="15" fill="rgb(228,5,28)" fg:x="31284" fg:w="4"/><text x="90.1414%" y="2415.50"></text></g><g><title>_rjem_je_large_dalloc (8 samples, 0.02%)</title><rect x="89.8856%" y="2469" width="0.0230%" height="15" fill="rgb(252,34,51)" fg:x="31282" fg:w="8"/><text x="90.1356%" y="2479.50"></text></g><g><title>rocksdb::BlockBasedTableBuilder::WriteBlock(rocksdb::BlockBuilder*, rocksdb::BlockHandle*, rocksdb::BlockType) (1,999 samples, 5.74%)</title><rect x="84.1676%" y="2565" width="5.7439%" height="15" fill="rgb(235,58,7)" fg:x="29292" fg:w="1999"/><text x="84.4176%" y="2575.50">rocksdb..</text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string() (9 samples, 0.03%)</title><rect x="89.8856%" y="2549" width="0.0259%" height="15" fill="rgb(250,132,20)" fg:x="31282" fg:w="9"/><text x="90.1356%" y="2559.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose() (9 samples, 0.03%)</title><rect x="89.8856%" y="2533" width="0.0259%" height="15" fill="rgb(217,164,0)" fg:x="31282" fg:w="9"/><text x="90.1356%" y="2543.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy(unsigned long) (9 samples, 0.03%)</title><rect x="89.8856%" y="2517" width="0.0259%" height="15" fill="rgb(208,220,35)" fg:x="31282" fg:w="9"/><text x="90.1356%" y="2527.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate(std::allocator&lt;char&gt;&amp;, char*, unsigned long) (9 samples, 0.03%)</title><rect x="89.8856%" y="2501" width="0.0259%" height="15" fill="rgb(227,42,51)" fg:x="31282" fg:w="9"/><text x="90.1356%" y="2511.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(char*, unsigned long) (9 samples, 0.03%)</title><rect x="89.8856%" y="2485" width="0.0259%" height="15" fill="rgb(225,146,38)" fg:x="31282" fg:w="9"/><text x="90.1356%" y="2495.50"></text></g><g><title>rocksdb::Slice::difference_offset(rocksdb::Slice const&amp;) const (5 samples, 0.01%)</title><rect x="89.9345%" y="2533" width="0.0144%" height="15" fill="rgb(252,108,37)" fg:x="31299" fg:w="5"/><text x="90.1845%" y="2543.50"></text></g><g><title>rocksdb::BlockBuilder::AddWithLastKeyImpl(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const*, unsigned long) (18 samples, 0.05%)</title><rect x="89.9172%" y="2549" width="0.0517%" height="15" fill="rgb(244,101,24)" fg:x="31293" fg:w="18"/><text x="90.1672%" y="2559.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append(char const*, unsigned long) (7 samples, 0.02%)</title><rect x="89.9489%" y="2533" width="0.0201%" height="15" fill="rgb(213,161,50)" fg:x="31304" fg:w="7"/><text x="90.1989%" y="2543.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append(char const*, unsigned long) (7 samples, 0.02%)</title><rect x="89.9489%" y="2517" width="0.0201%" height="15" fill="rgb(248,159,19)" fg:x="31304" fg:w="7"/><text x="90.1989%" y="2527.50"></text></g><g><title>rocksdb::BlockBuilder::AddWithLastKey(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const*) (22 samples, 0.06%)</title><rect x="89.9172%" y="2565" width="0.0632%" height="15" fill="rgb(233,179,15)" fg:x="31293" fg:w="22"/><text x="90.1672%" y="2575.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size() const (4 samples, 0.01%)</title><rect x="89.9690%" y="2549" width="0.0115%" height="15" fill="rgb(248,178,3)" fg:x="31311" fg:w="4"/><text x="90.2190%" y="2559.50"></text></g><g><title>rocksdb::ExtractValueType(rocksdb::Slice const&amp;) (5 samples, 0.01%)</title><rect x="89.9805%" y="2565" width="0.0144%" height="15" fill="rgb(245,190,41)" fg:x="31315" fg:w="5"/><text x="90.2305%" y="2575.50"></text></g><g><title>rocksdb::NotifyCollectTableCollectorsOnAdd(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, unsigned long, std::vector&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; &gt; &gt; const&amp;, rocksdb::Logger*) (6 samples, 0.02%)</title><rect x="90.0034%" y="2565" width="0.0172%" height="15" fill="rgb(218,151,19)" fg:x="31323" fg:w="6"/><text x="90.2534%" y="2575.50"></text></g><g><title>rocksdb::BlockBuilder::Add(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const*) (6 samples, 0.02%)</title><rect x="90.0207%" y="2549" width="0.0172%" height="15" fill="rgb(245,25,44)" fg:x="31329" fg:w="6"/><text x="90.2707%" y="2559.50"></text></g><g><title>rocksdb::BlockBuilder::AddWithLastKeyImpl(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const*, unsigned long) (6 samples, 0.02%)</title><rect x="90.0207%" y="2533" width="0.0172%" height="15" fill="rgb(235,172,47)" fg:x="31329" fg:w="6"/><text x="90.2707%" y="2543.50"></text></g><g><title>std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::push_back(unsigned int&amp;&amp;) (4 samples, 0.01%)</title><rect x="90.0264%" y="2517" width="0.0115%" height="15" fill="rgb(246,33,12)" fg:x="31331" fg:w="4"/><text x="90.2764%" y="2527.50"></text></g><g><title>unsigned int&amp; std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::emplace_back&lt;unsigned int&gt;(unsigned int&amp;&amp;) (4 samples, 0.01%)</title><rect x="90.0264%" y="2501" width="0.0115%" height="15" fill="rgb(214,124,7)" fg:x="31331" fg:w="4"/><text x="90.2764%" y="2511.50"></text></g><g><title>void std::allocator_traits&lt;std::allocator&lt;unsigned int&gt; &gt;::construct&lt;unsigned int, unsigned int&gt;(std::allocator&lt;unsigned int&gt;&amp;, unsigned int*, unsigned int&amp;&amp;) (4 samples, 0.01%)</title><rect x="90.0264%" y="2485" width="0.0115%" height="15" fill="rgb(246,186,18)" fg:x="31331" fg:w="4"/><text x="90.2764%" y="2495.50"></text></g><g><title>void __gnu_cxx::new_allocator&lt;unsigned int&gt;::construct&lt;unsigned int, unsigned int&gt;(unsigned int*, unsigned int&amp;&amp;) (4 samples, 0.01%)</title><rect x="90.0264%" y="2469" width="0.0115%" height="15" fill="rgb(231,94,1)" fg:x="31331" fg:w="4"/><text x="90.2764%" y="2479.50"></text></g><g><title>rocksdb::ShortenedIndexBuilder::AddIndexEntry(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, rocksdb::Slice const*, rocksdb::BlockHandle const&amp;) (10 samples, 0.03%)</title><rect x="90.0207%" y="2565" width="0.0287%" height="15" fill="rgb(208,33,48)" fg:x="31329" fg:w="10"/><text x="90.2707%" y="2575.50"></text></g><g><title>rocksdb::BlockBasedTableBuilder::Add(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2,056 samples, 5.91%)</title><rect x="84.1475%" y="2581" width="5.9077%" height="15" fill="rgb(208,195,44)" fg:x="29285" fg:w="2056"/><text x="84.3975%" y="2591.50">rocksdb:..</text></g><g><title>rocksdb::BlockBasedTableBuilder::WriteIndexBlock(rocksdb::MetaIndexBuilder*, rocksdb::BlockHandle*) (6 samples, 0.02%)</title><rect x="90.0552%" y="2565" width="0.0172%" height="15" fill="rgb(226,13,52)" fg:x="31341" fg:w="6"/><text x="90.3052%" y="2575.50"></text></g><g><title>rocksdb::BlockBasedTableBuilder::WriteBlock(rocksdb::Slice const&amp;, rocksdb::BlockHandle*, rocksdb::BlockType) (6 samples, 0.02%)</title><rect x="90.0552%" y="2549" width="0.0172%" height="15" fill="rgb(217,219,45)" fg:x="31341" fg:w="6"/><text x="90.3052%" y="2559.50"></text></g><g><title>rocksdb::BlockBasedTableBuilder::CompressAndVerifyBlock(rocksdb::Slice const&amp;, bool, rocksdb::CompressionContext const&amp;, rocksdb::UncompressionContext*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, rocksdb::Slice*, rocksdb::CompressionType*, rocksdb::Status*) (6 samples, 0.02%)</title><rect x="90.0552%" y="2533" width="0.0172%" height="15" fill="rgb(223,45,25)" fg:x="31341" fg:w="6"/><text x="90.3052%" y="2543.50"></text></g><g><title>rocksdb::CompressBlock(rocksdb::Slice const&amp;, rocksdb::CompressionInfo const&amp;, rocksdb::CompressionType*, unsigned int, bool, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*) (6 samples, 0.02%)</title><rect x="90.0552%" y="2517" width="0.0172%" height="15" fill="rgb(241,163,0)" fg:x="31341" fg:w="6"/><text x="90.3052%" y="2527.50"></text></g><g><title>rocksdb::CompressData(rocksdb::Slice const&amp;, rocksdb::CompressionInfo const&amp;, unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*) (6 samples, 0.02%)</title><rect x="90.0552%" y="2501" width="0.0172%" height="15" fill="rgb(216,68,47)" fg:x="31341" fg:w="6"/><text x="90.3052%" y="2511.50"></text></g><g><title>rocksdb::LZ4_Compress(rocksdb::CompressionInfo const&amp;, unsigned int, char const*, unsigned long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*) (6 samples, 0.02%)</title><rect x="90.0552%" y="2485" width="0.0172%" height="15" fill="rgb(236,119,45)" fg:x="31341" fg:w="6"/><text x="90.3052%" y="2495.50"></text></g><g><title>LZ4_compress_fast_continue (6 samples, 0.02%)</title><rect x="90.0552%" y="2469" width="0.0172%" height="15" fill="rgb(209,188,24)" fg:x="31341" fg:w="6"/><text x="90.3052%" y="2479.50"></text></g><g><title>LZ4_compress_generic (6 samples, 0.02%)</title><rect x="90.0552%" y="2453" width="0.0172%" height="15" fill="rgb(221,118,7)" fg:x="31341" fg:w="6"/><text x="90.3052%" y="2463.50"></text></g><g><title>LZ4_compress_generic_validated (6 samples, 0.02%)</title><rect x="90.0552%" y="2437" width="0.0172%" height="15" fill="rgb(213,148,43)" fg:x="31341" fg:w="6"/><text x="90.3052%" y="2447.50"></text></g><g><title>rocksdb::BlockBasedTableBuilder::Finish() (7 samples, 0.02%)</title><rect x="90.0552%" y="2581" width="0.0201%" height="15" fill="rgb(231,21,43)" fg:x="31341" fg:w="7"/><text x="90.3052%" y="2591.50"></text></g><g><title>rocksdb::CompactionIterator::AdvanceInputIter() (6 samples, 0.02%)</title><rect x="90.0810%" y="2565" width="0.0172%" height="15" fill="rgb(232,213,43)" fg:x="31350" fg:w="6"/><text x="90.3310%" y="2575.50"></text></g><g><title>rocksdb::SequenceIterWrapper::Next() (6 samples, 0.02%)</title><rect x="90.0810%" y="2549" width="0.0172%" height="15" fill="rgb(239,145,50)" fg:x="31350" fg:w="6"/><text x="90.3310%" y="2559.50"></text></g><g><title>rocksdb::MemTableIterator::Next() (5 samples, 0.01%)</title><rect x="90.0839%" y="2533" width="0.0144%" height="15" fill="rgb(222,131,18)" fg:x="31351" fg:w="5"/><text x="90.3339%" y="2543.50"></text></g><g><title>rocksdb::SequenceIterWrapper::key() const (24 samples, 0.07%)</title><rect x="90.1299%" y="2549" width="0.0690%" height="15" fill="rgb(243,181,13)" fg:x="31367" fg:w="24"/><text x="90.3799%" y="2559.50"></text></g><g><title>rocksdb::MemTableIterator::key() const (24 samples, 0.07%)</title><rect x="90.1299%" y="2533" width="0.0690%" height="15" fill="rgb(212,74,41)" fg:x="31367" fg:w="24"/><text x="90.3799%" y="2543.50"></text></g><g><title>rocksdb::GetLengthPrefixedSlice(char const*) (23 samples, 0.07%)</title><rect x="90.1328%" y="2517" width="0.0661%" height="15" fill="rgb(237,143,34)" fg:x="31368" fg:w="23"/><text x="90.3828%" y="2527.50"></text></g><g><title>rocksdb::GetVarint32Ptr(char const*, char const*, unsigned int*) (23 samples, 0.07%)</title><rect x="90.1328%" y="2501" width="0.0661%" height="15" fill="rgb(228,139,0)" fg:x="31368" fg:w="23"/><text x="90.3828%" y="2511.50"></text></g><g><title>rocksdb::CompactionIterator::Next() (60 samples, 0.17%)</title><rect x="90.0753%" y="2581" width="0.1724%" height="15" fill="rgb(227,214,11)" fg:x="31348" fg:w="60"/><text x="90.3253%" y="2591.50"></text></g><g><title>rocksdb::CompactionIterator::NextFromInput() (52 samples, 0.15%)</title><rect x="90.0983%" y="2565" width="0.1494%" height="15" fill="rgb(228,118,39)" fg:x="31356" fg:w="52"/><text x="90.3483%" y="2575.50"></text></g><g><title>rocksdb::SequenceIterWrapper::value() const (17 samples, 0.05%)</title><rect x="90.1988%" y="2549" width="0.0488%" height="15" fill="rgb(207,117,22)" fg:x="31391" fg:w="17"/><text x="90.4488%" y="2559.50"></text></g><g><title>rocksdb::MemTableIterator::value() const (4 samples, 0.01%)</title><rect x="90.2362%" y="2533" width="0.0115%" height="15" fill="rgb(225,91,8)" fg:x="31404" fg:w="4"/><text x="90.4862%" y="2543.50"></text></g><g><title>rocksdb::GetLengthPrefixedSlice(char const*) (4 samples, 0.01%)</title><rect x="90.2362%" y="2517" width="0.0115%" height="15" fill="rgb(230,219,48)" fg:x="31404" fg:w="4"/><text x="90.4862%" y="2527.50"></text></g><g><title>rocksdb::GetVarint32Ptr(char const*, char const*, unsigned int*) (4 samples, 0.01%)</title><rect x="90.2362%" y="2501" width="0.0115%" height="15" fill="rgb(244,0,23)" fg:x="31404" fg:w="4"/><text x="90.4862%" y="2511.50"></text></g><g><title>rocksdb::CompactionIterator::PrepareOutput() (6 samples, 0.02%)</title><rect x="90.2477%" y="2581" width="0.0172%" height="15" fill="rgb(206,212,23)" fg:x="31408" fg:w="6"/><text x="90.4977%" y="2591.50"></text></g><g><title>rocksdb::FileMetaData::UpdateBoundaries(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, unsigned long, rocksdb::ValueType) (5 samples, 0.01%)</title><rect x="90.2649%" y="2581" width="0.0144%" height="15" fill="rgb(254,62,10)" fg:x="31414" fg:w="5"/><text x="90.5149%" y="2591.50"></text></g><g><title>rocksdb::TableCache::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::FileOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::RangeDelAggregator*, std::shared_ptr&lt;rocksdb::SliceTransform const&gt; const&amp;, rocksdb::TableReader**, rocksdb::HistogramImpl*, rocksdb::TableReaderCaller, rocksdb::Arena*, bool, int, unsigned long, rocksdb::InternalKey const*, rocksdb::InternalKey const*, bool) (4 samples, 0.01%)</title><rect x="90.2965%" y="2581" width="0.0115%" height="15" fill="rgb(236,58,8)" fg:x="31425" fg:w="4"/><text x="90.5465%" y="2591.50"></text></g><g><title>rocksdb::TableCache::FindTable(rocksdb::ReadOptions const&amp;, rocksdb::FileOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileDescriptor const&amp;, rocksdb::Cache::Handle**, std::shared_ptr&lt;rocksdb::SliceTransform const&gt; const&amp;, bool, bool, rocksdb::HistogramImpl*, bool, int, bool, unsigned long, rocksdb::Temperature) (4 samples, 0.01%)</title><rect x="90.2965%" y="2565" width="0.0115%" height="15" fill="rgb(232,212,17)" fg:x="31425" fg:w="4"/><text x="90.5465%" y="2575.50"></text></g><g><title>rocksdb::TableCache::GetTableReader(rocksdb::ReadOptions const&amp;, rocksdb::FileOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileDescriptor const&amp;, bool, bool, rocksdb::HistogramImpl*, std::unique_ptr&lt;rocksdb::TableReader, std::default_delete&lt;rocksdb::TableReader&gt; &gt;*, std::shared_ptr&lt;rocksdb::SliceTransform const&gt; const&amp;, bool, int, bool, unsigned long, rocksdb::Temperature) (4 samples, 0.01%)</title><rect x="90.2965%" y="2549" width="0.0115%" height="15" fill="rgb(206,132,9)" fg:x="31425" fg:w="4"/><text x="90.5465%" y="2559.50"></text></g><g><title>rocksdb::BlockBasedTableFactory::NewTableReader(rocksdb::ReadOptions const&amp;, rocksdb::TableReaderOptions const&amp;, std::unique_ptr&lt;rocksdb::RandomAccessFileReader, std::default_delete&lt;rocksdb::RandomAccessFileReader&gt; &gt;&amp;&amp;, unsigned long, std::unique_ptr&lt;rocksdb::TableReader, std::default_delete&lt;rocksdb::TableReader&gt; &gt;*, bool) const (4 samples, 0.01%)</title><rect x="90.2965%" y="2533" width="0.0115%" height="15" fill="rgb(234,97,28)" fg:x="31425" fg:w="4"/><text x="90.5465%" y="2543.50"></text></g><g><title>rocksdb::BlockBasedTable::Open(rocksdb::ReadOptions const&amp;, rocksdb::ImmutableOptions const&amp;, rocksdb::EnvOptions const&amp;, rocksdb::BlockBasedTableOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, std::unique_ptr&lt;rocksdb::RandomAccessFileReader, std::default_delete&lt;rocksdb::RandomAccessFileReader&gt; &gt;&amp;&amp;, unsigned long, std::unique_ptr&lt;rocksdb::TableReader, std::default_delete&lt;rocksdb::TableReader&gt; &gt;*, std::shared_ptr&lt;rocksdb::CacheReservationManager&gt;, std::shared_ptr&lt;rocksdb::SliceTransform const&gt; const&amp;, bool, bool, int, bool, unsigned long, bool, rocksdb::TailPrefetchStats*, rocksdb::BlockCacheTracer*, unsigned long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned long) (4 samples, 0.01%)</title><rect x="90.2965%" y="2517" width="0.0115%" height="15" fill="rgb(254,144,9)" fg:x="31425" fg:w="4"/><text x="90.5465%" y="2527.50"></text></g><g><title>rocksdb::BuildTable(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, rocksdb::VersionSet*, rocksdb::ImmutableDBOptions const&amp;, rocksdb::TableBuilderOptions const&amp;, rocksdb::FileOptions const&amp;, rocksdb::TableCache*, rocksdb::InternalIteratorBase&lt;rocksdb::Slice&gt;*, std::vector&lt;std::unique_ptr&lt;rocksdb::FragmentedRangeTombstoneIterator, std::default_delete&lt;rocksdb::FragmentedRangeTombstoneIterator&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;rocksdb::FragmentedRangeTombstoneIterator, std::default_delete&lt;rocksdb::FragmentedRangeTombstoneIterator&gt; &gt; &gt; &gt;, rocksdb::FileMetaData*, std::vector&lt;rocksdb::BlobFileAddition, std::allocator&lt;rocksdb::BlobFileAddition&gt; &gt;*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;, unsigned long, unsigned long, rocksdb::SnapshotChecker*, bool, rocksdb::InternalStats*, rocksdb::IOStatus*, std::shared_ptr&lt;rocksdb::IOTracer&gt; const&amp;, rocksdb::BlobFileCreationReason, rocksdb::EventLogger*, int, rocksdb::Env::IOPriority, rocksdb::TableProperties*, rocksdb::Env::WriteLifeTimeHint, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const*, rocksdb::BlobFileCompletionCallback*, unsigned long*, unsigned long*, unsigned long*) (2,151 samples, 6.18%)</title><rect x="84.1331%" y="2597" width="6.1807%" height="15" fill="rgb(244,204,43)" fg:x="29280" fg:w="2151"/><text x="84.3831%" y="2607.50">rocksdb:..</text></g><g><title>rocksdb::FlushJob::WriteLevel0Table() (2,152 samples, 6.18%)</title><rect x="84.1331%" y="2613" width="6.1836%" height="15" fill="rgb(248,177,16)" fg:x="29280" fg:w="2152"/><text x="84.3831%" y="2623.50">rocksdb:..</text></g><g><title>rocksdb::DBImpl::BackgroundFlush(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::FlushReason*, rocksdb::Env::Priority) (2,153 samples, 6.19%)</title><rect x="84.1331%" y="2677" width="6.1864%" height="15" fill="rgb(219,110,15)" fg:x="29280" fg:w="2153"/><text x="84.3831%" y="2687.50">rocksdb:..</text></g><g><title>rocksdb::DBImpl::FlushMemTablesToOutputFiles(rocksdb::autovector&lt;rocksdb::DBImpl::BGFlushArg, (unsigned long)8&gt; const&amp;, bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::Env::Priority) (2,153 samples, 6.19%)</title><rect x="84.1331%" y="2661" width="6.1864%" height="15" fill="rgb(212,203,25)" fg:x="29280" fg:w="2153"/><text x="84.3831%" y="2671.50">rocksdb:..</text></g><g><title>rocksdb::DBImpl::FlushMemTableToOutputFile(rocksdb::ColumnFamilyData*, rocksdb::MutableCFOptions const&amp;, bool*, rocksdb::JobContext*, rocksdb::SuperVersionContext*, std::vector&lt;unsigned long, std::allocator&lt;unsigned long&gt; &gt;&amp;, unsigned long, rocksdb::SnapshotChecker*, rocksdb::LogBuffer*, rocksdb::Env::Priority) (2,153 samples, 6.19%)</title><rect x="84.1331%" y="2645" width="6.1864%" height="15" fill="rgb(205,50,1)" fg:x="29280" fg:w="2153"/><text x="84.3831%" y="2655.50">rocksdb:..</text></g><g><title>rocksdb::FlushJob::Run(rocksdb::LogsWithPrepTracker*, rocksdb::FileMetaData*, bool*) (2,153 samples, 6.19%)</title><rect x="84.1331%" y="2629" width="6.1864%" height="15" fill="rgb(222,152,41)" fg:x="29280" fg:w="2153"/><text x="84.3831%" y="2639.50">rocksdb:..</text></g><g><title>rocksdb:high (2,155 samples, 6.19%)</title><rect x="84.1302%" y="2789" width="6.1922%" height="15" fill="rgb(236,83,3)" fg:x="29279" fg:w="2155"/><text x="84.3802%" y="2799.50">rocksdb:..</text></g><g><title>__GI___clone3 (2,154 samples, 6.19%)</title><rect x="84.1331%" y="2773" width="6.1893%" height="15" fill="rgb(214,30,54)" fg:x="29280" fg:w="2154"/><text x="84.3831%" y="2783.50">__GI___c..</text></g><g><title>start_thread (2,154 samples, 6.19%)</title><rect x="84.1331%" y="2757" width="6.1893%" height="15" fill="rgb(250,117,31)" fg:x="29280" fg:w="2154"/><text x="84.3831%" y="2767.50">start_th..</text></g><g><title>rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*) (2,154 samples, 6.19%)</title><rect x="84.1331%" y="2741" width="6.1893%" height="15" fill="rgb(228,77,14)" fg:x="29280" fg:w="2154"/><text x="84.3831%" y="2751.50">rocksdb:..</text></g><g><title>rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long) (2,154 samples, 6.19%)</title><rect x="84.1331%" y="2725" width="6.1893%" height="15" fill="rgb(241,3,28)" fg:x="29280" fg:w="2154"/><text x="84.3831%" y="2735.50">rocksdb:..</text></g><g><title>std::function&lt;void ()&gt;::operator()() const (2,154 samples, 6.19%)</title><rect x="84.1331%" y="2709" width="6.1893%" height="15" fill="rgb(221,175,52)" fg:x="29280" fg:w="2154"/><text x="84.3831%" y="2719.50">std::fun..</text></g><g><title>rocksdb::DBImpl::BackgroundCallFlush(rocksdb::Env::Priority) (2,154 samples, 6.19%)</title><rect x="84.1331%" y="2693" width="6.1893%" height="15" fill="rgb(237,91,6)" fg:x="29280" fg:w="2154"/><text x="84.3831%" y="2703.50">rocksdb:..</text></g><g><title>operator() (4 samples, 0.01%)</title><rect x="90.3253%" y="2629" width="0.0115%" height="15" fill="rgb(246,46,42)" fg:x="31435" fg:w="4"/><text x="90.5753%" y="2639.50"></text></g><g><title>rocksdb::TableCache::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::FileOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileMetaData const&amp;, rocksdb::RangeDelAggregator*, std::shared_ptr&lt;rocksdb::SliceTransform const&gt; const&amp;, rocksdb::TableReader**, rocksdb::HistogramImpl*, rocksdb::TableReaderCaller, rocksdb::Arena*, bool, int, unsigned long, rocksdb::InternalKey const*, rocksdb::InternalKey const*, bool) (4 samples, 0.01%)</title><rect x="90.3253%" y="2613" width="0.0115%" height="15" fill="rgb(235,199,0)" fg:x="31435" fg:w="4"/><text x="90.5753%" y="2623.50"></text></g><g><title>rocksdb::TableCache::FindTable(rocksdb::ReadOptions const&amp;, rocksdb::FileOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileDescriptor const&amp;, rocksdb::Cache::Handle**, std::shared_ptr&lt;rocksdb::SliceTransform const&gt; const&amp;, bool, bool, rocksdb::HistogramImpl*, bool, int, bool, unsigned long, rocksdb::Temperature) (4 samples, 0.01%)</title><rect x="90.3253%" y="2597" width="0.0115%" height="15" fill="rgb(224,44,40)" fg:x="31435" fg:w="4"/><text x="90.5753%" y="2607.50"></text></g><g><title>rocksdb::TableCache::GetTableReader(rocksdb::ReadOptions const&amp;, rocksdb::FileOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, rocksdb::FileDescriptor const&amp;, bool, bool, rocksdb::HistogramImpl*, std::unique_ptr&lt;rocksdb::TableReader, std::default_delete&lt;rocksdb::TableReader&gt; &gt;*, std::shared_ptr&lt;rocksdb::SliceTransform const&gt; const&amp;, bool, int, bool, unsigned long, rocksdb::Temperature) (4 samples, 0.01%)</title><rect x="90.3253%" y="2581" width="0.0115%" height="15" fill="rgb(209,24,35)" fg:x="31435" fg:w="4"/><text x="90.5753%" y="2591.50"></text></g><g><title>rocksdb::BlockBasedTableFactory::NewTableReader(rocksdb::ReadOptions const&amp;, rocksdb::TableReaderOptions const&amp;, std::unique_ptr&lt;rocksdb::RandomAccessFileReader, std::default_delete&lt;rocksdb::RandomAccessFileReader&gt; &gt;&amp;&amp;, unsigned long, std::unique_ptr&lt;rocksdb::TableReader, std::default_delete&lt;rocksdb::TableReader&gt; &gt;*, bool) const (4 samples, 0.01%)</title><rect x="90.3253%" y="2565" width="0.0115%" height="15" fill="rgb(244,46,22)" fg:x="31435" fg:w="4"/><text x="90.5753%" y="2575.50"></text></g><g><title>rocksdb::BlockBasedTable::Open(rocksdb::ReadOptions const&amp;, rocksdb::ImmutableOptions const&amp;, rocksdb::EnvOptions const&amp;, rocksdb::BlockBasedTableOptions const&amp;, rocksdb::InternalKeyComparator const&amp;, std::unique_ptr&lt;rocksdb::RandomAccessFileReader, std::default_delete&lt;rocksdb::RandomAccessFileReader&gt; &gt;&amp;&amp;, unsigned long, std::unique_ptr&lt;rocksdb::TableReader, std::default_delete&lt;rocksdb::TableReader&gt; &gt;*, std::shared_ptr&lt;rocksdb::CacheReservationManager&gt;, std::shared_ptr&lt;rocksdb::SliceTransform const&gt; const&amp;, bool, bool, int, bool, unsigned long, bool, rocksdb::TailPrefetchStats*, rocksdb::BlockCacheTracer*, unsigned long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned long) (4 samples, 0.01%)</title><rect x="90.3253%" y="2549" width="0.0115%" height="15" fill="rgb(235,99,8)" fg:x="31435" fg:w="4"/><text x="90.5753%" y="2559.50"></text></g><g><title>rocksdb::BlockBasedTable::PrefetchIndexAndFilterBlocks(rocksdb::ReadOptions const&amp;, rocksdb::FilePrefetchBuffer*, rocksdb::InternalIteratorBase&lt;rocksdb::Slice&gt;*, rocksdb::BlockBasedTable*, bool, rocksdb::BlockBasedTableOptions const&amp;, int, unsigned long, unsigned long, rocksdb::BlockCacheLookupContext*) (4 samples, 0.01%)</title><rect x="90.3253%" y="2533" width="0.0115%" height="15" fill="rgb(218,127,36)" fg:x="31435" fg:w="4"/><text x="90.5753%" y="2543.50"></text></g><g><title>rocksdb::BlockBasedTable::CreateIndexReader(rocksdb::ReadOptions const&amp;, rocksdb::FilePrefetchBuffer*, rocksdb::InternalIteratorBase&lt;rocksdb::Slice&gt;*, bool, bool, bool, rocksdb::BlockCacheLookupContext*, std::unique_ptr&lt;rocksdb::BlockBasedTable::IndexReader, std::default_delete&lt;rocksdb::BlockBasedTable::IndexReader&gt; &gt;*) (4 samples, 0.01%)</title><rect x="90.3253%" y="2517" width="0.0115%" height="15" fill="rgb(238,47,46)" fg:x="31435" fg:w="4"/><text x="90.5753%" y="2527.50"></text></g><g><title>rocksdb::BinarySearchIndexReader::Create(rocksdb::BlockBasedTable const*, rocksdb::ReadOptions const&amp;, rocksdb::FilePrefetchBuffer*, bool, bool, bool, rocksdb::BlockCacheLookupContext*, std::unique_ptr&lt;rocksdb::BlockBasedTable::IndexReader, std::default_delete&lt;rocksdb::BlockBasedTable::IndexReader&gt; &gt;*) (4 samples, 0.01%)</title><rect x="90.3253%" y="2501" width="0.0115%" height="15" fill="rgb(233,65,17)" fg:x="31435" fg:w="4"/><text x="90.5753%" y="2511.50"></text></g><g><title>rocksdb::BlockBasedTable::IndexReaderCommon::ReadIndexBlock(rocksdb::BlockBasedTable const*, rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, bool, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*) (4 samples, 0.01%)</title><rect x="90.3253%" y="2485" width="0.0115%" height="15" fill="rgb(239,22,33)" fg:x="31435" fg:w="4"/><text x="90.5753%" y="2495.50"></text></g><g><title>rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool, bool, bool) const (4 samples, 0.01%)</title><rect x="90.3253%" y="2469" width="0.0115%" height="15" fill="rgb(243,66,43)" fg:x="31435" fg:w="4"/><text x="90.5753%" y="2479.50"></text></g><g><title>ReadBlockFromFile&lt;rocksdb::Block&gt; (4 samples, 0.01%)</title><rect x="90.3253%" y="2453" width="0.0115%" height="15" fill="rgb(235,210,28)" fg:x="31435" fg:w="4"/><text x="90.5753%" y="2463.50"></text></g><g><title>rocksdb::BlockFetcher::ReadBlockContents() (4 samples, 0.01%)</title><rect x="90.3253%" y="2437" width="0.0115%" height="15" fill="rgb(205,191,50)" fg:x="31435" fg:w="4"/><text x="90.5753%" y="2447.50"></text></g><g><title>rocksdb::BinaryHeap&lt;rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;*, rocksdb::MinIteratorComparator&gt;::replace_top(rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;* const&amp;) (5 samples, 0.01%)</title><rect x="90.4029%" y="2549" width="0.0144%" height="15" fill="rgb(251,217,19)" fg:x="31462" fg:w="5"/><text x="90.6529%" y="2559.50"></text></g><g><title>rocksdb::BinaryHeap&lt;rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;*, rocksdb::MinIteratorComparator&gt;::downheap(unsigned long) (5 samples, 0.01%)</title><rect x="90.4029%" y="2533" width="0.0144%" height="15" fill="rgb(205,174,37)" fg:x="31462" fg:w="5"/><text x="90.6529%" y="2543.50"></text></g><g><title>rocksdb::MinIteratorComparator::operator()(rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;*, rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;*) const (5 samples, 0.01%)</title><rect x="90.4029%" y="2517" width="0.0144%" height="15" fill="rgb(212,158,42)" fg:x="31462" fg:w="5"/><text x="90.6529%" y="2527.50"></text></g><g><title>rocksdb::InternalKeyComparator::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (5 samples, 0.01%)</title><rect x="90.4029%" y="2501" width="0.0144%" height="15" fill="rgb(212,208,51)" fg:x="31462" fg:w="5"/><text x="90.6529%" y="2511.50"></text></g><g><title>rocksdb::BlockFetcher::ProcessTrailerIfPresent() (264 samples, 0.76%)</title><rect x="90.5034%" y="2373" width="0.7586%" height="15" fill="rgb(225,198,20)" fg:x="31497" fg:w="264"/><text x="90.7534%" y="2383.50"></text></g><g><title>rocksdb::VerifyBlockChecksum(rocksdb::ChecksumType, char const*, unsigned long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned long) (264 samples, 0.76%)</title><rect x="90.5034%" y="2357" width="0.7586%" height="15" fill="rgb(247,41,44)" fg:x="31497" fg:w="264"/><text x="90.7534%" y="2367.50"></text></g><g><title>rocksdb::ComputeBuiltinChecksum(rocksdb::ChecksumType, char const*, unsigned long) (264 samples, 0.76%)</title><rect x="90.5034%" y="2341" width="0.7586%" height="15" fill="rgb(228,33,41)" fg:x="31497" fg:w="264"/><text x="90.7534%" y="2351.50"></text></g><g><title>rocksdb::crc32c::Value(char const*, unsigned long) (264 samples, 0.76%)</title><rect x="90.5034%" y="2325" width="0.7586%" height="15" fill="rgb(215,47,52)" fg:x="31497" fg:w="264"/><text x="90.7534%" y="2335.50"></text></g><g><title>ExtendImpl&lt;rocksdb::crc32c::Slow_CRC32&gt; (263 samples, 0.76%)</title><rect x="90.5063%" y="2309" width="0.7557%" height="15" fill="rgb(248,106,37)" fg:x="31498" fg:w="263"/><text x="90.7563%" y="2319.50"></text></g><g><title>Slow_CRC32 (230 samples, 0.66%)</title><rect x="90.6011%" y="2293" width="0.6609%" height="15" fill="rgb(238,91,29)" fg:x="31531" fg:w="230"/><text x="90.8511%" y="2303.50"></text></g><g><title>LZ4_decompress_safe_continue (123 samples, 0.35%)</title><rect x="91.2677%" y="2309" width="0.3534%" height="15" fill="rgb(226,111,40)" fg:x="31763" fg:w="123"/><text x="91.5177%" y="2319.50"></text></g><g><title>LZ4_decompress_safe (123 samples, 0.35%)</title><rect x="91.2677%" y="2293" width="0.3534%" height="15" fill="rgb(229,159,36)" fg:x="31763" fg:w="123"/><text x="91.5177%" y="2303.50"></text></g><g><title>LZ4_decompress_generic (123 samples, 0.35%)</title><rect x="91.2677%" y="2277" width="0.3534%" height="15" fill="rgb(221,109,4)" fg:x="31763" fg:w="123"/><text x="91.5177%" y="2287.50"></text></g><g><title>LZ4_wildCopy32 (14 samples, 0.04%)</title><rect x="91.5809%" y="2261" width="0.0402%" height="15" fill="rgb(236,56,25)" fg:x="31872" fg:w="14"/><text x="91.8309%" y="2271.50"></text></g><g><title>rocksdb::BlockFetcher::ReadBlockContents() (399 samples, 1.15%)</title><rect x="90.4804%" y="2389" width="1.1465%" height="15" fill="rgb(244,113,23)" fg:x="31489" fg:w="399"/><text x="90.7304%" y="2399.50"></text></g><g><title>rocksdb::UncompressBlockContents(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableOptions const&amp;, rocksdb::MemoryAllocator*) (125 samples, 0.36%)</title><rect x="91.2677%" y="2373" width="0.3592%" height="15" fill="rgb(249,132,2)" fg:x="31763" fg:w="125"/><text x="91.5177%" y="2383.50"></text></g><g><title>rocksdb::UncompressBlockContentsForCompressionType(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableOptions const&amp;, rocksdb::MemoryAllocator*) (125 samples, 0.36%)</title><rect x="91.2677%" y="2357" width="0.3592%" height="15" fill="rgb(205,185,21)" fg:x="31763" fg:w="125"/><text x="91.5177%" y="2367.50"></text></g><g><title>rocksdb::UncompressData(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, unsigned long*, unsigned int, rocksdb::MemoryAllocator*) (125 samples, 0.36%)</title><rect x="91.2677%" y="2341" width="0.3592%" height="15" fill="rgb(245,130,2)" fg:x="31763" fg:w="125"/><text x="91.5177%" y="2351.50"></text></g><g><title>rocksdb::LZ4_Uncompress(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, unsigned long*, unsigned int, rocksdb::MemoryAllocator*) (125 samples, 0.36%)</title><rect x="91.2677%" y="2325" width="0.3592%" height="15" fill="rgb(246,71,26)" fg:x="31763" fg:w="125"/><text x="91.5177%" y="2335.50"></text></g><g><title>ReadBlockFromFile&lt;rocksdb::Block&gt; (403 samples, 1.16%)</title><rect x="90.4747%" y="2405" width="1.1580%" height="15" fill="rgb(234,194,6)" fg:x="31487" fg:w="403"/><text x="90.7247%" y="2415.50"></text></g><g><title>rocksdb::BlockBasedTable::GetEntryFromCache(rocksdb::CacheTier const&amp;, rocksdb::Cache*, rocksdb::Slice const&amp;, rocksdb::BlockType, bool, rocksdb::GetContext*, rocksdb::Cache const::CacheItemHelper*, std::function&lt;rocksdb::Status(void const*, unsigned long, void**, unsigned long*)&gt; const&amp;, rocksdb::Cache::Priority) const (6 samples, 0.02%)</title><rect x="91.6413%" y="2373" width="0.0172%" height="15" fill="rgb(206,24,32)" fg:x="31893" fg:w="6"/><text x="91.8913%" y="2383.50"></text></g><g><title>rocksdb::ShardedCache::Lookup(rocksdb::Slice const&amp;, rocksdb::Cache::CacheItemHelper const*, std::function&lt;rocksdb::Status(void const*, unsigned long, void**, unsigned long*)&gt; const&amp;, rocksdb::Cache::Priority, bool, rocksdb::Statistics*) (5 samples, 0.01%)</title><rect x="91.6442%" y="2357" width="0.0144%" height="15" fill="rgb(233,7,54)" fg:x="31894" fg:w="5"/><text x="91.8942%" y="2367.50"></text></g><g><title>rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, bool, bool, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::BlockContents*, bool) const (11 samples, 0.03%)</title><rect x="91.6355%" y="2405" width="0.0316%" height="15" fill="rgb(252,46,1)" fg:x="31891" fg:w="11"/><text x="91.8855%" y="2415.50"></text></g><g><title>rocksdb::Status rocksdb::BlockBasedTable::GetDataBlockFromCache&lt;rocksdb::Block&gt;(rocksdb::Slice const&amp;, rocksdb::Cache*, rocksdb::Cache*, rocksdb::ReadOptions const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::UncompressionDict const&amp;, rocksdb::BlockType, bool, rocksdb::GetContext*) const (9 samples, 0.03%)</title><rect x="91.6413%" y="2389" width="0.0259%" height="15" fill="rgb(216,113,53)" fg:x="31893" fg:w="9"/><text x="91.8913%" y="2399.50"></text></g><g><title>rocksdb::BlockBasedTableIterator::InitDataBlock() (422 samples, 1.21%)</title><rect x="90.4632%" y="2453" width="1.2126%" height="15" fill="rgb(215,40,24)" fg:x="31483" fg:w="422"/><text x="90.7132%" y="2463.50"></text></g><g><title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::FilePrefetchBuffer*, bool, bool, rocksdb::Status&amp;) const (422 samples, 1.21%)</title><rect x="90.4632%" y="2437" width="1.2126%" height="15" fill="rgb(233,222,8)" fg:x="31483" fg:w="422"/><text x="90.7132%" y="2447.50"></text></g><g><title>rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool, bool, bool) const (418 samples, 1.20%)</title><rect x="90.4747%" y="2421" width="1.2011%" height="15" fill="rgb(248,73,28)" fg:x="31487" fg:w="418"/><text x="90.7247%" y="2431.50"></text></g><g><title>rocksdb::BlockBasedTableIterator::FindBlockForward() (429 samples, 1.23%)</title><rect x="90.4603%" y="2469" width="1.2327%" height="15" fill="rgb(247,126,28)" fg:x="31482" fg:w="429"/><text x="90.7103%" y="2479.50"></text></g><g><title>rocksdb::BlockBasedTableIterator::ResetDataIter() (6 samples, 0.02%)</title><rect x="91.6758%" y="2453" width="0.0172%" height="15" fill="rgb(242,173,54)" fg:x="31905" fg:w="6"/><text x="91.9258%" y="2463.50"></text></g><g><title>rocksdb::DataBlockIter::Invalidate(rocksdb::Status const&amp;) (6 samples, 0.02%)</title><rect x="91.6758%" y="2437" width="0.0172%" height="15" fill="rgb(244,186,22)" fg:x="31905" fg:w="6"/><text x="91.9258%" y="2447.50"></text></g><g><title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::Invalidate(rocksdb::Status const&amp;) (6 samples, 0.02%)</title><rect x="91.6758%" y="2421" width="0.0172%" height="15" fill="rgb(231,187,4)" fg:x="31905" fg:w="6"/><text x="91.9258%" y="2431.50"></text></g><g><title>rocksdb::Cleanable::Reset() (6 samples, 0.02%)</title><rect x="91.6758%" y="2405" width="0.0172%" height="15" fill="rgb(252,66,47)" fg:x="31905" fg:w="6"/><text x="91.9258%" y="2415.50"></text></g><g><title>rocksdb::Cleanable::DoCleanup() (6 samples, 0.02%)</title><rect x="91.6758%" y="2389" width="0.0172%" height="15" fill="rgb(240,228,28)" fg:x="31905" fg:w="6"/><text x="91.9258%" y="2399.50"></text></g><g><title>rocksdb::BlockBasedTableIterator::Next() (437 samples, 1.26%)</title><rect x="90.4402%" y="2485" width="1.2557%" height="15" fill="rgb(237,63,43)" fg:x="31475" fg:w="437"/><text x="90.6902%" y="2495.50"></text></g><g><title>NextAndGetResult (444 samples, 1.28%)</title><rect x="90.4230%" y="2533" width="1.2758%" height="15" fill="rgb(214,1,44)" fg:x="31469" fg:w="444"/><text x="90.6730%" y="2543.50"></text></g><g><title>rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;::NextAndGetResult(rocksdb::IterateResult*) (444 samples, 1.28%)</title><rect x="90.4230%" y="2517" width="1.2758%" height="15" fill="rgb(212,2,46)" fg:x="31469" fg:w="444"/><text x="90.6730%" y="2527.50"></text></g><g><title>rocksdb::BlockBasedTableIterator::NextAndGetResult(rocksdb::IterateResult*) (440 samples, 1.26%)</title><rect x="90.4345%" y="2501" width="1.2643%" height="15" fill="rgb(213,142,5)" fg:x="31473" fg:w="440"/><text x="90.6845%" y="2511.50"></text></g><g><title>rocksdb::ShardedCache::Insert(rocksdb::Slice const&amp;, void*, unsigned long, void (*)(rocksdb::Slice const&amp;, void*), rocksdb::Cache::Handle**, rocksdb::Cache::Priority) (5 samples, 0.01%)</title><rect x="91.7275%" y="2453" width="0.0144%" height="15" fill="rgb(229,135,1)" fg:x="31923" fg:w="5"/><text x="91.9775%" y="2463.50"></text></g><g><title>rocksdb::BlockFetcher::ProcessTrailerIfPresent() (359 samples, 1.03%)</title><rect x="91.7591%" y="2405" width="1.0315%" height="15" fill="rgb(252,98,38)" fg:x="31934" fg:w="359"/><text x="92.0091%" y="2415.50"></text></g><g><title>rocksdb::VerifyBlockChecksum(rocksdb::ChecksumType, char const*, unsigned long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned long) (359 samples, 1.03%)</title><rect x="91.7591%" y="2389" width="1.0315%" height="15" fill="rgb(206,89,40)" fg:x="31934" fg:w="359"/><text x="92.0091%" y="2399.50"></text></g><g><title>rocksdb::ComputeBuiltinChecksum(rocksdb::ChecksumType, char const*, unsigned long) (359 samples, 1.03%)</title><rect x="91.7591%" y="2373" width="1.0315%" height="15" fill="rgb(219,73,36)" fg:x="31934" fg:w="359"/><text x="92.0091%" y="2383.50"></text></g><g><title>rocksdb::crc32c::Value(char const*, unsigned long) (359 samples, 1.03%)</title><rect x="91.7591%" y="2357" width="1.0315%" height="15" fill="rgb(207,168,32)" fg:x="31934" fg:w="359"/><text x="92.0091%" y="2367.50"></text></g><g><title>ExtendImpl&lt;rocksdb::crc32c::Slow_CRC32&gt; (358 samples, 1.03%)</title><rect x="91.7620%" y="2341" width="1.0287%" height="15" fill="rgb(215,113,21)" fg:x="31935" fg:w="358"/><text x="92.0120%" y="2351.50"></text></g><g><title>Slow_CRC32 (358 samples, 1.03%)</title><rect x="91.7620%" y="2325" width="1.0287%" height="15" fill="rgb(217,144,43)" fg:x="31935" fg:w="358"/><text x="92.0120%" y="2335.50"></text></g><g><title>rocksdb::RandomAccessFileReader::Read(rocksdb::IOOptions const&amp;, unsigned long, unsigned long, rocksdb::Slice*, char*, std::unique_ptr&lt;char [], std::default_delete&lt;char []&gt; &gt;*, rocksdb::Env::IOPriority) const (7 samples, 0.02%)</title><rect x="92.7964%" y="2405" width="0.0201%" height="15" fill="rgb(249,48,50)" fg:x="32295" fg:w="7"/><text x="93.0464%" y="2415.50"></text></g><g><title>rocksdb::RandomAccessFileReader::use_direct_io() const (5 samples, 0.01%)</title><rect x="92.8165%" y="2405" width="0.0144%" height="15" fill="rgb(242,1,26)" fg:x="32302" fg:w="5"/><text x="93.0665%" y="2415.50"></text></g><g><title>LZ4_memcpy_using_offset (88 samples, 0.25%)</title><rect x="92.9688%" y="2293" width="0.2529%" height="15" fill="rgb(231,167,42)" fg:x="32355" fg:w="88"/><text x="93.2188%" y="2303.50"></text></g><g><title>LZ4_memcpy_using_offset_base (47 samples, 0.14%)</title><rect x="93.0866%" y="2277" width="0.1350%" height="15" fill="rgb(242,177,45)" fg:x="32396" fg:w="47"/><text x="93.3366%" y="2287.50"></text></g><g><title>LZ4_decompress_safe_continue (179 samples, 0.51%)</title><rect x="92.8337%" y="2341" width="0.5143%" height="15" fill="rgb(232,121,42)" fg:x="32308" fg:w="179"/><text x="93.0837%" y="2351.50"></text></g><g><title>LZ4_decompress_safe (178 samples, 0.51%)</title><rect x="92.8366%" y="2325" width="0.5115%" height="15" fill="rgb(205,8,42)" fg:x="32309" fg:w="178"/><text x="93.0866%" y="2335.50"></text></g><g><title>LZ4_decompress_generic (178 samples, 0.51%)</title><rect x="92.8366%" y="2309" width="0.5115%" height="15" fill="rgb(238,199,24)" fg:x="32309" fg:w="178"/><text x="93.0866%" y="2319.50"></text></g><g><title>LZ4_readLE16 (44 samples, 0.13%)</title><rect x="93.2217%" y="2293" width="0.1264%" height="15" fill="rgb(228,112,2)" fg:x="32443" fg:w="44"/><text x="93.4717%" y="2303.50"></text></g><g><title>LZ4_read16 (44 samples, 0.13%)</title><rect x="93.2217%" y="2277" width="0.1264%" height="15" fill="rgb(215,115,33)" fg:x="32443" fg:w="44"/><text x="93.4717%" y="2287.50"></text></g><g><title>rocksdb::BlockFetcher::ReadBlockContents() (559 samples, 1.61%)</title><rect x="91.7533%" y="2421" width="1.6062%" height="15" fill="rgb(230,209,34)" fg:x="31932" fg:w="559"/><text x="92.0033%" y="2431.50"></text></g><g><title>rocksdb::UncompressBlockContents(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableOptions const&amp;, rocksdb::MemoryAllocator*) (184 samples, 0.53%)</title><rect x="92.8309%" y="2405" width="0.5287%" height="15" fill="rgb(246,76,12)" fg:x="32307" fg:w="184"/><text x="93.0809%" y="2415.50"></text></g><g><title>rocksdb::UncompressBlockContentsForCompressionType(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, rocksdb::BlockContents*, unsigned int, rocksdb::ImmutableOptions const&amp;, rocksdb::MemoryAllocator*) (184 samples, 0.53%)</title><rect x="92.8309%" y="2389" width="0.5287%" height="15" fill="rgb(240,110,9)" fg:x="32307" fg:w="184"/><text x="93.0809%" y="2399.50"></text></g><g><title>rocksdb::UncompressData(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, unsigned long*, unsigned int, rocksdb::MemoryAllocator*) (184 samples, 0.53%)</title><rect x="92.8309%" y="2373" width="0.5287%" height="15" fill="rgb(224,94,46)" fg:x="32307" fg:w="184"/><text x="93.0809%" y="2383.50"></text></g><g><title>rocksdb::LZ4_Uncompress(rocksdb::UncompressionInfo const&amp;, char const*, unsigned long, unsigned long*, unsigned int, rocksdb::MemoryAllocator*) (184 samples, 0.53%)</title><rect x="92.8309%" y="2357" width="0.5287%" height="15" fill="rgb(247,150,22)" fg:x="32307" fg:w="184"/><text x="93.0809%" y="2367.50"></text></g><g><title>ReadBlockFromFile&lt;rocksdb::Block&gt; (567 samples, 1.63%)</title><rect x="91.7505%" y="2437" width="1.6292%" height="15" fill="rgb(249,85,13)" fg:x="31931" fg:w="567"/><text x="92.0005%" y="2447.50"></text></g><g><title>rocksdb::Status rocksdb::BlockBasedTable::MaybeReadBlockAndLoadToCache&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, bool, bool, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::BlockContents*, bool) const (5 samples, 0.01%)</title><rect x="93.3797%" y="2437" width="0.0144%" height="15" fill="rgb(208,77,41)" fg:x="32498" fg:w="5"/><text x="93.6297%" y="2447.50"></text></g><g><title>rocksdb::Status rocksdb::BlockBasedTable::RetrieveBlock&lt;rocksdb::Block&gt;(rocksdb::FilePrefetchBuffer*, rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::UncompressionDict const&amp;, rocksdb::CachableEntry&lt;rocksdb::Block&gt;*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, bool, bool, bool, bool) const (576 samples, 1.66%)</title><rect x="91.7419%" y="2453" width="1.6551%" height="15" fill="rgb(240,42,44)" fg:x="31928" fg:w="576"/><text x="91.9919%" y="2463.50"></text></g><g><title>rocksdb::BlockBasedTableIterator::InitDataBlock() (592 samples, 1.70%)</title><rect x="91.6988%" y="2485" width="1.7011%" height="15" fill="rgb(222,10,51)" fg:x="31913" fg:w="592"/><text x="91.9488%" y="2495.50"></text></g><g><title>rocksdb::DataBlockIter* rocksdb::BlockBasedTable::NewDataBlockIterator&lt;rocksdb::DataBlockIter&gt;(rocksdb::ReadOptions const&amp;, rocksdb::BlockHandle const&amp;, rocksdb::DataBlockIter*, rocksdb::BlockType, rocksdb::GetContext*, rocksdb::BlockCacheLookupContext*, rocksdb::FilePrefetchBuffer*, bool, bool, rocksdb::Status&amp;) const (589 samples, 1.69%)</title><rect x="91.7074%" y="2469" width="1.6924%" height="15" fill="rgb(208,146,53)" fg:x="31916" fg:w="589"/><text x="91.9574%" y="2479.50"></text></g><g><title>rocksdb::BlockBasedTableIterator::ResetDataIter() (7 samples, 0.02%)</title><rect x="93.3998%" y="2485" width="0.0201%" height="15" fill="rgb(236,162,23)" fg:x="32505" fg:w="7"/><text x="93.6498%" y="2495.50"></text></g><g><title>rocksdb::DataBlockIter::Invalidate(rocksdb::Status const&amp;) (7 samples, 0.02%)</title><rect x="93.3998%" y="2469" width="0.0201%" height="15" fill="rgb(218,66,21)" fg:x="32505" fg:w="7"/><text x="93.6498%" y="2479.50"></text></g><g><title>rocksdb::BlockIter&lt;rocksdb::Slice&gt;::Invalidate(rocksdb::Status const&amp;) (7 samples, 0.02%)</title><rect x="93.3998%" y="2453" width="0.0201%" height="15" fill="rgb(233,6,47)" fg:x="32505" fg:w="7"/><text x="93.6498%" y="2463.50"></text></g><g><title>rocksdb::Cleanable::Reset() (7 samples, 0.02%)</title><rect x="93.3998%" y="2437" width="0.0201%" height="15" fill="rgb(236,59,51)" fg:x="32505" fg:w="7"/><text x="93.6498%" y="2447.50"></text></g><g><title>rocksdb::Cleanable::DoCleanup() (7 samples, 0.02%)</title><rect x="93.3998%" y="2421" width="0.0201%" height="15" fill="rgb(242,12,46)" fg:x="32505" fg:w="7"/><text x="93.6498%" y="2431.50"></text></g><g><title>rocksdb::lru_cache::LRUCacheShard::Release(rocksdb::Cache::Handle*, bool) (4 samples, 0.01%)</title><rect x="93.4084%" y="2405" width="0.0115%" height="15" fill="rgb(243,142,19)" fg:x="32508" fg:w="4"/><text x="93.6584%" y="2415.50"></text></g><g><title>rocksdb::BlockBasedTableIterator::FindBlockForward() (602 samples, 1.73%)</title><rect x="91.6988%" y="2501" width="1.7298%" height="15" fill="rgb(217,28,17)" fg:x="31913" fg:w="602"/><text x="91.9488%" y="2511.50"></text></g><g><title>rocksdb::CompactionIterator::AdvanceInputIter() (1,066 samples, 3.06%)</title><rect x="90.3684%" y="2597" width="3.0630%" height="15" fill="rgb(228,2,27)" fg:x="31450" fg:w="1066"/><text x="90.6184%" y="2607.50">roc..</text></g><g><title>rocksdb::SequenceIterWrapper::Next() (1,066 samples, 3.06%)</title><rect x="90.3684%" y="2581" width="3.0630%" height="15" fill="rgb(214,221,4)" fg:x="31450" fg:w="1066"/><text x="90.6184%" y="2591.50">roc..</text></g><g><title>rocksdb::MergingIterator::Next() (1,061 samples, 3.05%)</title><rect x="90.3827%" y="2565" width="3.0487%" height="15" fill="rgb(224,69,26)" fg:x="31455" fg:w="1061"/><text x="90.6327%" y="2575.50">roc..</text></g><g><title>rocksdb::IteratorWrapperBase&lt;rocksdb::Slice&gt;::Next() (1,049 samples, 3.01%)</title><rect x="90.4172%" y="2549" width="3.0142%" height="15" fill="rgb(219,70,4)" fg:x="31467" fg:w="1049"/><text x="90.6672%" y="2559.50">roc..</text></g><g><title>rocksdb::BlockBasedTableIterator::NextAndGetResult(rocksdb::IterateResult*) (603 samples, 1.73%)</title><rect x="91.6988%" y="2533" width="1.7327%" height="15" fill="rgb(218,157,39)" fg:x="31913" fg:w="603"/><text x="91.9488%" y="2543.50"></text></g><g><title>rocksdb::BlockBasedTableIterator::Next() (603 samples, 1.73%)</title><rect x="91.6988%" y="2517" width="1.7327%" height="15" fill="rgb(238,36,28)" fg:x="31913" fg:w="603"/><text x="91.9488%" y="2527.50"></text></g><g><title>rocksdb::SequenceIterWrapper::Valid() const (4 samples, 0.01%)</title><rect x="93.4601%" y="2581" width="0.0115%" height="15" fill="rgb(232,29,0)" fg:x="32526" fg:w="4"/><text x="93.7101%" y="2591.50"></text></g><g><title>rocksdb::SequenceIterWrapper::key() const (5 samples, 0.01%)</title><rect x="93.4716%" y="2581" width="0.0144%" height="15" fill="rgb(243,138,46)" fg:x="32530" fg:w="5"/><text x="93.7216%" y="2591.50"></text></g><g><title>rocksdb::CompactionIterator::Next() (1,089 samples, 3.13%)</title><rect x="90.3597%" y="2613" width="3.1291%" height="15" fill="rgb(232,186,41)" fg:x="31447" fg:w="1089"/><text x="90.6097%" y="2623.50">roc..</text></g><g><title>rocksdb::CompactionIterator::NextFromInput() (20 samples, 0.06%)</title><rect x="93.4314%" y="2597" width="0.0575%" height="15" fill="rgb(252,166,17)" fg:x="32516" fg:w="20"/><text x="93.6814%" y="2607.50"></text></g><g><title>rocksdb::CompactionIterator::PrepareOutput() (7 samples, 0.02%)</title><rect x="93.4889%" y="2613" width="0.0201%" height="15" fill="rgb(228,179,12)" fg:x="32536" fg:w="7"/><text x="93.7389%" y="2623.50"></text></g><g><title>rocksdb::BlockBasedTableBuilder::Finish() (4 samples, 0.01%)</title><rect x="93.5090%" y="2597" width="0.0115%" height="15" fill="rgb(254,205,53)" fg:x="32543" fg:w="4"/><text x="93.7590%" y="2607.50"></text></g><g><title>rocksdb::CompactionJob::FinishCompactionOutputFile(rocksdb::Status const&amp;, rocksdb::CompactionJob::SubcompactionState*, rocksdb::CompactionRangeDelAggregator*, rocksdb::CompactionIterationStats*, rocksdb::Slice const*) (5 samples, 0.01%)</title><rect x="93.5090%" y="2613" width="0.0144%" height="15" fill="rgb(224,163,47)" fg:x="32543" fg:w="5"/><text x="93.7590%" y="2623.50"></text></g><g><title>LZ4_count (502 samples, 1.44%)</title><rect x="95.7158%" y="2437" width="1.4424%" height="15" fill="rgb(208,43,47)" fg:x="33311" fg:w="502"/><text x="95.9658%" y="2447.50"></text></g><g><title>LZ4_NbCommonBytes (210 samples, 0.60%)</title><rect x="96.5548%" y="2421" width="0.6034%" height="15" fill="rgb(224,198,38)" fg:x="33603" fg:w="210"/><text x="96.8048%" y="2431.50"></text></g><g><title>LZ4_compress_fast_continue (1,424 samples, 4.09%)</title><rect x="93.5780%" y="2485" width="4.0917%" height="15" fill="rgb(234,12,40)" fg:x="32567" fg:w="1424"/><text x="93.8280%" y="2495.50">LZ4_..</text></g><g><title>LZ4_compress_generic (1,424 samples, 4.09%)</title><rect x="93.5780%" y="2469" width="4.0917%" height="15" fill="rgb(237,212,39)" fg:x="32567" fg:w="1424"/><text x="93.8280%" y="2479.50">LZ4_..</text></g><g><title>LZ4_compress_generic_validated (1,424 samples, 4.09%)</title><rect x="93.5780%" y="2453" width="4.0917%" height="15" fill="rgb(253,2,33)" fg:x="32567" fg:w="1424"/><text x="93.8280%" y="2463.50">LZ4_..</text></g><g><title>LZ4_putPosition (178 samples, 0.51%)</title><rect x="97.1582%" y="2437" width="0.5115%" height="15" fill="rgb(251,29,16)" fg:x="33813" fg:w="178"/><text x="97.4082%" y="2447.50"></text></g><g><title>LZ4_putPositionOnHash (178 samples, 0.51%)</title><rect x="97.1582%" y="2421" width="0.5115%" height="15" fill="rgb(214,38,29)" fg:x="33813" fg:w="178"/><text x="97.4082%" y="2431.50"></text></g><g><title>rocksdb::CompressBlock(rocksdb::Slice const&amp;, rocksdb::CompressionInfo const&amp;, rocksdb::CompressionType*, unsigned int, bool, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*) (1,434 samples, 4.12%)</title><rect x="93.5751%" y="2533" width="4.1205%" height="15" fill="rgb(226,226,29)" fg:x="32566" fg:w="1434"/><text x="93.8251%" y="2543.50">rock..</text></g><g><title>rocksdb::CompressData(rocksdb::Slice const&amp;, rocksdb::CompressionInfo const&amp;, unsigned int, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*) (1,434 samples, 4.12%)</title><rect x="93.5751%" y="2517" width="4.1205%" height="15" fill="rgb(236,79,42)" fg:x="32566" fg:w="1434"/><text x="93.8251%" y="2527.50">rock..</text></g><g><title>rocksdb::LZ4_Compress(rocksdb::CompressionInfo const&amp;, unsigned int, char const*, unsigned long, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*) (1,434 samples, 4.12%)</title><rect x="93.5751%" y="2501" width="4.1205%" height="15" fill="rgb(222,12,36)" fg:x="32566" fg:w="1434"/><text x="93.8251%" y="2511.50">rock..</text></g><g><title>rocksdb::BlockBasedTableBuilder::CompressAndVerifyBlock(rocksdb::Slice const&amp;, bool, rocksdb::CompressionContext const&amp;, rocksdb::UncompressionContext*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, rocksdb::Slice*, rocksdb::CompressionType*, rocksdb::Status*) (1,440 samples, 4.14%)</title><rect x="93.5693%" y="2549" width="4.1377%" height="15" fill="rgb(232,123,44)" fg:x="32564" fg:w="1440"/><text x="93.8193%" y="2559.50">rocks..</text></g><g><title>rocksdb::ComputeBuiltinChecksumWithLastByte(rocksdb::ChecksumType, char const*, unsigned long, char) (626 samples, 1.80%)</title><rect x="97.7128%" y="2533" width="1.7987%" height="15" fill="rgb(234,93,50)" fg:x="34006" fg:w="626"/><text x="97.9628%" y="2543.50">r..</text></g><g><title>rocksdb::crc32c::Value(char const*, unsigned long) (626 samples, 1.80%)</title><rect x="97.7128%" y="2517" width="1.7987%" height="15" fill="rgb(210,86,49)" fg:x="34006" fg:w="626"/><text x="97.9628%" y="2527.50">r..</text></g><g><title>ExtendImpl&lt;rocksdb::crc32c::Slow_CRC32&gt; (626 samples, 1.80%)</title><rect x="97.7128%" y="2501" width="1.7987%" height="15" fill="rgb(224,91,54)" fg:x="34006" fg:w="626"/><text x="97.9628%" y="2511.50">E..</text></g><g><title>Slow_CRC32 (626 samples, 1.80%)</title><rect x="97.7128%" y="2485" width="1.7987%" height="15" fill="rgb(239,169,9)" fg:x="34006" fg:w="626"/><text x="97.9628%" y="2495.50">S..</text></g><g><title>rocksdb::AlignedBuffer::Append(char const*, unsigned long) (4 samples, 0.01%)</title><rect x="99.5144%" y="2517" width="0.0115%" height="15" fill="rgb(238,29,17)" fg:x="34633" fg:w="4"/><text x="99.7644%" y="2527.50"></text></g><g><title>rocksdb::BlockBasedTableBuilder::WriteBlock(rocksdb::Slice const&amp;, rocksdb::BlockHandle*, rocksdb::BlockType) (2,078 samples, 5.97%)</title><rect x="93.5636%" y="2565" width="5.9709%" height="15" fill="rgb(227,160,22)" fg:x="32562" fg:w="2078"/><text x="93.8136%" y="2575.50">rocksdb:..</text></g><g><title>rocksdb::BlockBasedTableBuilder::WriteRawBlock(rocksdb::Slice const&amp;, rocksdb::CompressionType, rocksdb::BlockHandle*, rocksdb::BlockType, rocksdb::Slice const*) (635 samples, 1.82%)</title><rect x="97.7099%" y="2549" width="1.8246%" height="15" fill="rgb(231,129,52)" fg:x="34005" fg:w="635"/><text x="97.9599%" y="2559.50">r..</text></g><g><title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;, unsigned int, rocksdb::Env::IOPriority) (7 samples, 0.02%)</title><rect x="99.5144%" y="2533" width="0.0201%" height="15" fill="rgb(241,184,9)" fg:x="34633" fg:w="7"/><text x="99.7644%" y="2543.50"></text></g><g><title>extent_recycle_extract (5 samples, 0.01%)</title><rect x="99.5546%" y="2325" width="0.0144%" height="15" fill="rgb(217,43,48)" fg:x="34647" fg:w="5"/><text x="99.8046%" y="2335.50"></text></g><g><title>rocksdb::BlockBuilder::Finish() (18 samples, 0.05%)</title><rect x="99.5345%" y="2565" width="0.0517%" height="15" fill="rgb(213,49,1)" fg:x="34640" fg:w="18"/><text x="99.7845%" y="2575.50"></text></g><g><title>rocksdb::PutFixed32(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, unsigned int) (18 samples, 0.05%)</title><rect x="99.5345%" y="2549" width="0.0517%" height="15" fill="rgb(223,79,39)" fg:x="34640" fg:w="18"/><text x="99.7845%" y="2559.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append(char const*, unsigned long) (18 samples, 0.05%)</title><rect x="99.5345%" y="2533" width="0.0517%" height="15" fill="rgb(228,227,46)" fg:x="34640" fg:w="18"/><text x="99.7845%" y="2543.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append(char const*, unsigned long) (18 samples, 0.05%)</title><rect x="99.5345%" y="2517" width="0.0517%" height="15" fill="rgb(245,89,41)" fg:x="34640" fg:w="18"/><text x="99.7845%" y="2527.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (18 samples, 0.05%)</title><rect x="99.5345%" y="2501" width="0.0517%" height="15" fill="rgb(253,83,21)" fg:x="34640" fg:w="18"/><text x="99.7845%" y="2511.50"></text></g><g><title>operator new(unsigned long) (17 samples, 0.05%)</title><rect x="99.5374%" y="2485" width="0.0488%" height="15" fill="rgb(229,116,51)" fg:x="34641" fg:w="17"/><text x="99.7874%" y="2495.50"></text></g><g><title>malloc (17 samples, 0.05%)</title><rect x="99.5374%" y="2469" width="0.0488%" height="15" fill="rgb(246,67,26)" fg:x="34641" fg:w="17"/><text x="99.7874%" y="2479.50"></text></g><g><title>imalloc (17 samples, 0.05%)</title><rect x="99.5374%" y="2453" width="0.0488%" height="15" fill="rgb(250,117,20)" fg:x="34641" fg:w="17"/><text x="99.7874%" y="2463.50"></text></g><g><title>imalloc_body (17 samples, 0.05%)</title><rect x="99.5374%" y="2437" width="0.0488%" height="15" fill="rgb(207,88,17)" fg:x="34641" fg:w="17"/><text x="99.7874%" y="2447.50"></text></g><g><title>imalloc_no_sample (17 samples, 0.05%)</title><rect x="99.5374%" y="2421" width="0.0488%" height="15" fill="rgb(212,98,36)" fg:x="34641" fg:w="17"/><text x="99.7874%" y="2431.50"></text></g><g><title>iallocztm (17 samples, 0.05%)</title><rect x="99.5374%" y="2405" width="0.0488%" height="15" fill="rgb(221,72,6)" fg:x="34641" fg:w="17"/><text x="99.7874%" y="2415.50"></text></g><g><title>arena_malloc (17 samples, 0.05%)</title><rect x="99.5374%" y="2389" width="0.0488%" height="15" fill="rgb(235,129,19)" fg:x="34641" fg:w="17"/><text x="99.7874%" y="2399.50"></text></g><g><title>_rjem_je_large_palloc (14 samples, 0.04%)</title><rect x="99.5460%" y="2373" width="0.0402%" height="15" fill="rgb(237,200,6)" fg:x="34644" fg:w="14"/><text x="99.7960%" y="2383.50"></text></g><g><title>_rjem_je_arena_extent_alloc_large (12 samples, 0.03%)</title><rect x="99.5517%" y="2357" width="0.0345%" height="15" fill="rgb(239,69,54)" fg:x="34646" fg:w="12"/><text x="99.8017%" y="2367.50"></text></g><g><title>extent_recycle (11 samples, 0.03%)</title><rect x="99.5546%" y="2341" width="0.0316%" height="15" fill="rgb(214,68,45)" fg:x="34647" fg:w="11"/><text x="99.8046%" y="2351.50"></text></g><g><title>extent_recycle_split (6 samples, 0.02%)</title><rect x="99.5690%" y="2325" width="0.0172%" height="15" fill="rgb(254,160,8)" fg:x="34652" fg:w="6"/><text x="99.8190%" y="2335.50"></text></g><g><title>extent_split_interior (5 samples, 0.01%)</title><rect x="99.5719%" y="2309" width="0.0144%" height="15" fill="rgb(215,226,31)" fg:x="34653" fg:w="5"/><text x="99.8219%" y="2319.50"></text></g><g><title>extent_split_impl (4 samples, 0.01%)</title><rect x="99.5747%" y="2293" width="0.0115%" height="15" fill="rgb(253,6,35)" fg:x="34654" fg:w="4"/><text x="99.8247%" y="2303.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve(unsigned long) (5 samples, 0.01%)</title><rect x="99.5891%" y="2565" width="0.0144%" height="15" fill="rgb(219,96,42)" fg:x="34659" fg:w="5"/><text x="99.8391%" y="2575.50"></text></g><g><title>large_dalloc_finish_impl (7 samples, 0.02%)</title><rect x="99.6035%" y="2469" width="0.0201%" height="15" fill="rgb(207,170,13)" fg:x="34664" fg:w="7"/><text x="99.8535%" y="2479.50"></text></g><g><title>_rjem_je_arena_extents_dirty_dalloc (7 samples, 0.02%)</title><rect x="99.6035%" y="2453" width="0.0201%" height="15" fill="rgb(239,101,5)" fg:x="34664" fg:w="7"/><text x="99.8535%" y="2463.50"></text></g><g><title>extent_record (7 samples, 0.02%)</title><rect x="99.6035%" y="2437" width="0.0201%" height="15" fill="rgb(228,183,34)" fg:x="34664" fg:w="7"/><text x="99.8535%" y="2447.50"></text></g><g><title>extent_try_coalesce (6 samples, 0.02%)</title><rect x="99.6063%" y="2421" width="0.0172%" height="15" fill="rgb(205,28,31)" fg:x="34665" fg:w="6"/><text x="99.8563%" y="2431.50"></text></g><g><title>_rjem_je_large_dalloc (11 samples, 0.03%)</title><rect x="99.6035%" y="2485" width="0.0316%" height="15" fill="rgb(214,118,50)" fg:x="34664" fg:w="11"/><text x="99.8535%" y="2495.50"></text></g><g><title>large_dalloc_prep_impl (4 samples, 0.01%)</title><rect x="99.6236%" y="2469" width="0.0115%" height="15" fill="rgb(213,108,51)" fg:x="34671" fg:w="4"/><text x="99.8736%" y="2479.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy(unsigned long) (12 samples, 0.03%)</title><rect x="99.6035%" y="2533" width="0.0345%" height="15" fill="rgb(238,56,37)" fg:x="34664" fg:w="12"/><text x="99.8535%" y="2543.50"></text></g><g><title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate(std::allocator&lt;char&gt;&amp;, char*, unsigned long) (12 samples, 0.03%)</title><rect x="99.6035%" y="2517" width="0.0345%" height="15" fill="rgb(214,136,28)" fg:x="34664" fg:w="12"/><text x="99.8535%" y="2527.50"></text></g><g><title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate(char*, unsigned long) (12 samples, 0.03%)</title><rect x="99.6035%" y="2501" width="0.0345%" height="15" fill="rgb(221,201,54)" fg:x="34664" fg:w="12"/><text x="99.8535%" y="2511.50"></text></g><g><title>rocksdb::BlockBasedTableBuilder::WriteBlock(rocksdb::BlockBuilder*, rocksdb::BlockHandle*, rocksdb::BlockType) (2,115 samples, 6.08%)</title><rect x="93.5636%" y="2581" width="6.0772%" height="15" fill="rgb(228,216,39)" fg:x="32562" fg:w="2115"/><text x="93.8136%" y="2591.50">rocksdb:..</text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string() (13 samples, 0.04%)</title><rect x="99.6035%" y="2565" width="0.0374%" height="15" fill="rgb(207,229,49)" fg:x="34664" fg:w="13"/><text x="99.8535%" y="2575.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose() (13 samples, 0.04%)</title><rect x="99.6035%" y="2549" width="0.0374%" height="15" fill="rgb(224,23,43)" fg:x="34664" fg:w="13"/><text x="99.8535%" y="2559.50"></text></g><g><title>rocksdb::Slice::difference_offset(rocksdb::Slice const&amp;) const (21 samples, 0.06%)</title><rect x="99.6667%" y="2549" width="0.0603%" height="15" fill="rgb(247,97,18)" fg:x="34686" fg:w="21"/><text x="99.9167%" y="2559.50"></text></g><g><title>rocksdb::BlockBuilder::AddWithLastKey(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const*) (35 samples, 0.10%)</title><rect x="99.6466%" y="2581" width="0.1006%" height="15" fill="rgb(232,53,32)" fg:x="34679" fg:w="35"/><text x="99.8966%" y="2591.50"></text></g><g><title>rocksdb::BlockBuilder::AddWithLastKeyImpl(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const*, unsigned long) (35 samples, 0.10%)</title><rect x="99.6466%" y="2565" width="0.1006%" height="15" fill="rgb(247,38,23)" fg:x="34679" fg:w="35"/><text x="99.8966%" y="2575.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append(char const*, unsigned long) (7 samples, 0.02%)</title><rect x="99.7270%" y="2549" width="0.0201%" height="15" fill="rgb(228,101,52)" fg:x="34707" fg:w="7"/><text x="99.9770%" y="2559.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append(char const*, unsigned long) (7 samples, 0.02%)</title><rect x="99.7270%" y="2533" width="0.0201%" height="15" fill="rgb(231,45,36)" fg:x="34707" fg:w="7"/><text x="99.9770%" y="2543.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate(unsigned long, unsigned long, char const*, unsigned long) (4 samples, 0.01%)</title><rect x="99.7356%" y="2517" width="0.0115%" height="15" fill="rgb(221,183,50)" fg:x="34710" fg:w="4"/><text x="99.9856%" y="2527.50"></text></g><g><title>rocksdb::NotifyCollectTableCollectorsOnAdd(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, unsigned long, std::vector&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;rocksdb::IntTblPropCollector, std::default_delete&lt;rocksdb::IntTblPropCollector&gt; &gt; &gt; &gt; const&amp;, rocksdb::Logger*) (7 samples, 0.02%)</title><rect x="99.7529%" y="2581" width="0.0201%" height="15" fill="rgb(251,132,12)" fg:x="34716" fg:w="7"/><text x="100.0029%" y="2591.50"></text></g><g><title>rocksdb::BlockBuilder::AddWithLastKeyImpl(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const*, unsigned long) (6 samples, 0.02%)</title><rect x="99.7730%" y="2549" width="0.0172%" height="15" fill="rgb(252,50,16)" fg:x="34723" fg:w="6"/><text x="100.0230%" y="2559.50"></text></g><g><title>std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::push_back(unsigned int&amp;&amp;) (4 samples, 0.01%)</title><rect x="99.7787%" y="2533" width="0.0115%" height="15" fill="rgb(224,60,15)" fg:x="34725" fg:w="4"/><text x="100.0287%" y="2543.50"></text></g><g><title>unsigned int&amp; std::vector&lt;unsigned int, std::allocator&lt;unsigned int&gt; &gt;::emplace_back&lt;unsigned int&gt;(unsigned int&amp;&amp;) (4 samples, 0.01%)</title><rect x="99.7787%" y="2517" width="0.0115%" height="15" fill="rgb(254,2,34)" fg:x="34725" fg:w="4"/><text x="100.0287%" y="2527.50"></text></g><g><title>rocksdb::BlockBuilder::Add(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const*) (7 samples, 0.02%)</title><rect x="99.7730%" y="2565" width="0.0201%" height="15" fill="rgb(232,154,8)" fg:x="34723" fg:w="7"/><text x="100.0230%" y="2575.50"></text></g><g><title>rocksdb::InternalKeyComparator::FindShortestSeparator(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, rocksdb::Slice const&amp;) const (8 samples, 0.02%)</title><rect x="99.7989%" y="2565" width="0.0230%" height="15" fill="rgb(235,190,52)" fg:x="34732" fg:w="8"/><text x="100.0489%" y="2575.50"></text></g><g><title>rocksdb::ShortenedIndexBuilder::AddIndexEntry(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, rocksdb::Slice const*, rocksdb::BlockHandle const&amp;) (20 samples, 0.06%)</title><rect x="99.7730%" y="2581" width="0.0575%" height="15" fill="rgb(213,218,38)" fg:x="34723" fg:w="20"/><text x="100.0230%" y="2591.50"></text></g><g><title>rocksdb::BlockBasedTableBuilder::Add(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2,199 samples, 6.32%)</title><rect x="93.5262%" y="2597" width="6.3186%" height="15" fill="rgb(237,50,37)" fg:x="32549" fg:w="2199"/><text x="93.7762%" y="2607.50">rocksdb:..</text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign(char const*, unsigned long) (4 samples, 0.01%)</title><rect x="99.8333%" y="2581" width="0.0115%" height="15" fill="rgb(235,51,35)" fg:x="34744" fg:w="4"/><text x="100.0833%" y="2591.50"></text></g><g><title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace(unsigned long, unsigned long, char const*, unsigned long) (4 samples, 0.01%)</title><rect x="99.8333%" y="2565" width="0.0115%" height="15" fill="rgb(244,40,52)" fg:x="34744" fg:w="4"/><text x="100.0833%" y="2575.50"></text></g><g><title>rocksdb::CompactionJob::SubcompactionState::AddToBuilder(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2,206 samples, 6.34%)</title><rect x="93.5234%" y="2613" width="6.3387%" height="15" fill="rgb(217,225,45)" fg:x="32548" fg:w="2206"/><text x="93.7734%" y="2623.50">rocksdb:..</text></g><g><title>rocksdb::OutputValidator::Add(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (6 samples, 0.02%)</title><rect x="99.8448%" y="2597" width="0.0172%" height="15" fill="rgb(247,191,36)" fg:x="34748" fg:w="6"/><text x="100.0948%" y="2607.50"></text></g><g><title>rocksdb::CompactionJob::SubcompactionState::ShouldStopBefore(rocksdb::Slice const&amp;, unsigned long) (8 samples, 0.02%)</title><rect x="99.8621%" y="2613" width="0.0230%" height="15" fill="rgb(251,144,31)" fg:x="34754" fg:w="8"/><text x="100.1121%" y="2623.50"></text></g><g><title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (10 samples, 0.03%)</title><rect x="99.8908%" y="2613" width="0.0287%" height="15" fill="rgb(227,155,41)" fg:x="34764" fg:w="10"/><text x="100.1408%" y="2623.50"></text></g><g><title>std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;::operator=(std::unique_ptr&lt;char const [], std::default_delete&lt;char const []&gt; &gt;&amp;&amp;) (10 samples, 0.03%)</title><rect x="99.8908%" y="2597" width="0.0287%" height="15" fill="rgb(236,121,36)" fg:x="34764" fg:w="10"/><text x="100.1408%" y="2607.50"></text></g><g><title>std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;::operator=(std::__uniq_ptr_data&lt;char const, std::default_delete&lt;char const []&gt;, true, true&gt;&amp;&amp;) (10 samples, 0.03%)</title><rect x="99.8908%" y="2581" width="0.0287%" height="15" fill="rgb(221,128,28)" fg:x="34764" fg:w="10"/><text x="100.1408%" y="2591.50"></text></g><g><title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::operator=(std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;&amp;&amp;) (10 samples, 0.03%)</title><rect x="99.8908%" y="2565" width="0.0287%" height="15" fill="rgb(249,67,50)" fg:x="34764" fg:w="10"/><text x="100.1408%" y="2575.50"></text></g><g><title>std::__uniq_ptr_impl&lt;char const, std::default_delete&lt;char const []&gt; &gt;::reset(char const*) (10 samples, 0.03%)</title><rect x="99.8908%" y="2549" width="0.0287%" height="15" fill="rgb(241,126,38)" fg:x="34764" fg:w="10"/><text x="100.1408%" y="2559.50"></text></g><g><title>rocksdb::CompactionJob::Run() (3,341 samples, 9.60%)</title><rect x="90.3253%" y="2645" width="9.6000%" height="15" fill="rgb(239,33,14)" fg:x="31435" fg:w="3341"/><text x="90.5753%" y="2655.50">rocksdb::Compa..</text></g><g><title>rocksdb::CompactionJob::ProcessKeyValueCompaction(rocksdb::CompactionJob::SubcompactionState*) (3,337 samples, 9.59%)</title><rect x="90.3368%" y="2629" width="9.5885%" height="15" fill="rgb(207,221,54)" fg:x="31439" fg:w="3337"/><text x="90.5868%" y="2639.50">rocksdb::Compa..</text></g><g><title>rocksdb:low (3,343 samples, 9.61%)</title><rect x="90.3224%" y="2789" width="9.6058%" height="15" fill="rgb(242,138,43)" fg:x="31434" fg:w="3343"/><text x="90.5724%" y="2799.50">rocksdb:low</text></g><g><title>__GI___clone3 (3,342 samples, 9.60%)</title><rect x="90.3253%" y="2773" width="9.6029%" height="15" fill="rgb(231,118,19)" fg:x="31435" fg:w="3342"/><text x="90.5753%" y="2783.50">__GI___clone3</text></g><g><title>start_thread (3,342 samples, 9.60%)</title><rect x="90.3253%" y="2757" width="9.6029%" height="15" fill="rgb(214,128,54)" fg:x="31435" fg:w="3342"/><text x="90.5753%" y="2767.50">start_thread</text></g><g><title>rocksdb::ThreadPoolImpl::Impl::BGThreadWrapper(void*) (3,342 samples, 9.60%)</title><rect x="90.3253%" y="2741" width="9.6029%" height="15" fill="rgb(236,136,6)" fg:x="31435" fg:w="3342"/><text x="90.5753%" y="2751.50">rocksdb::Threa..</text></g><g><title>rocksdb::ThreadPoolImpl::Impl::BGThread(unsigned long) (3,342 samples, 9.60%)</title><rect x="90.3253%" y="2725" width="9.6029%" height="15" fill="rgb(247,30,38)" fg:x="31435" fg:w="3342"/><text x="90.5753%" y="2735.50">rocksdb::Threa..</text></g><g><title>std::function&lt;void ()&gt;::operator()() const (3,342 samples, 9.60%)</title><rect x="90.3253%" y="2709" width="9.6029%" height="15" fill="rgb(249,189,40)" fg:x="31435" fg:w="3342"/><text x="90.5753%" y="2719.50">std::function&lt;..</text></g><g><title>rocksdb::DBImpl::BGWorkCompaction(void*) (3,342 samples, 9.60%)</title><rect x="90.3253%" y="2693" width="9.6029%" height="15" fill="rgb(247,179,7)" fg:x="31435" fg:w="3342"/><text x="90.5753%" y="2703.50">rocksdb::DBImp..</text></g><g><title>rocksdb::DBImpl::BackgroundCallCompaction(rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority) (3,342 samples, 9.60%)</title><rect x="90.3253%" y="2677" width="9.6029%" height="15" fill="rgb(239,46,52)" fg:x="31435" fg:w="3342"/><text x="90.5753%" y="2687.50">rocksdb::DBImp..</text></g><g><title>rocksdb::DBImpl::BackgroundCompaction(bool*, rocksdb::JobContext*, rocksdb::LogBuffer*, rocksdb::DBImpl::PrepickedCompaction*, rocksdb::Env::Priority) (3,342 samples, 9.60%)</title><rect x="90.3253%" y="2661" width="9.6029%" height="15" fill="rgb(225,28,52)" fg:x="31435" fg:w="3342"/><text x="90.5753%" y="2671.50">rocksdb::DBImp..</text></g><g><title>stor-server-15 (4 samples, 0.01%)</title><rect x="99.9397%" y="2789" width="0.0115%" height="15" fill="rgb(217,208,44)" fg:x="34781" fg:w="4"/><text x="100.1897%" y="2799.50"></text></g><g><title>__GI___clone3 (4 samples, 0.01%)</title><rect x="99.9397%" y="2773" width="0.0115%" height="15" fill="rgb(224,11,34)" fg:x="34781" fg:w="4"/><text x="100.1897%" y="2783.50"></text></g><g><title>start_thread (4 samples, 0.01%)</title><rect x="99.9397%" y="2757" width="0.0115%" height="15" fill="rgb(205,134,17)" fg:x="34781" fg:w="4"/><text x="100.1897%" y="2767.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (4 samples, 0.01%)</title><rect x="99.9397%" y="2741" width="0.0115%" height="15" fill="rgb(237,125,9)" fg:x="34781" fg:w="4"/><text x="100.1897%" y="2751.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (4 samples, 0.01%)</title><rect x="99.9397%" y="2725" width="0.0115%" height="15" fill="rgb(208,139,47)" fg:x="34781" fg:w="4"/><text x="100.1897%" y="2735.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (4 samples, 0.01%)</title><rect x="99.9397%" y="2709" width="0.0115%" height="15" fill="rgb(242,5,5)" fg:x="34781" fg:w="4"/><text x="100.1897%" y="2719.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (4 samples, 0.01%)</title><rect x="99.9397%" y="2693" width="0.0115%" height="15" fill="rgb(218,78,2)" fg:x="34781" fg:w="4"/><text x="100.1897%" y="2703.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (4 samples, 0.01%)</title><rect x="99.9397%" y="2677" width="0.0115%" height="15" fill="rgb(217,75,16)" fg:x="34781" fg:w="4"/><text x="100.1897%" y="2687.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.01%)</title><rect x="99.9397%" y="2661" width="0.0115%" height="15" fill="rgb(212,56,17)" fg:x="34781" fg:w="4"/><text x="100.1897%" y="2671.50"></text></g><g><title>std::panicking::try (4 samples, 0.01%)</title><rect x="99.9397%" y="2645" width="0.0115%" height="15" fill="rgb(228,61,29)" fg:x="34781" fg:w="4"/><text x="100.1897%" y="2655.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.01%)</title><rect x="99.9397%" y="2629" width="0.0115%" height="15" fill="rgb(247,202,38)" fg:x="34781" fg:w="4"/><text x="100.1897%" y="2639.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.01%)</title><rect x="99.9397%" y="2613" width="0.0115%" height="15" fill="rgb(211,216,43)" fg:x="34781" fg:w="4"/><text x="100.1897%" y="2623.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (4 samples, 0.01%)</title><rect x="99.9397%" y="2597" width="0.0115%" height="15" fill="rgb(220,7,49)" fg:x="34781" fg:w="4"/><text x="100.1897%" y="2607.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (4 samples, 0.01%)</title><rect x="99.9397%" y="2581" width="0.0115%" height="15" fill="rgb(219,158,7)" fg:x="34781" fg:w="4"/><text x="100.1897%" y="2591.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (4 samples, 0.01%)</title><rect x="99.9397%" y="2565" width="0.0115%" height="15" fill="rgb(206,127,9)" fg:x="34781" fg:w="4"/><text x="100.1897%" y="2575.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (4 samples, 0.01%)</title><rect x="99.9397%" y="2549" width="0.0115%" height="15" fill="rgb(206,103,43)" fg:x="34781" fg:w="4"/><text x="100.1897%" y="2559.50"></text></g><g><title>tokio::runtime::blocking::pool::Task::run (4 samples, 0.01%)</title><rect x="99.9397%" y="2533" width="0.0115%" height="15" fill="rgb(240,108,41)" fg:x="34781" fg:w="4"/><text x="100.1897%" y="2543.50"></text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (4 samples, 0.01%)</title><rect x="99.9397%" y="2517" width="0.0115%" height="15" fill="rgb(252,212,6)" fg:x="34781" fg:w="4"/><text x="100.1897%" y="2527.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (4 samples, 0.01%)</title><rect x="99.9397%" y="2501" width="0.0115%" height="15" fill="rgb(248,105,31)" fg:x="34781" fg:w="4"/><text x="100.1897%" y="2511.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (4 samples, 0.01%)</title><rect x="99.9397%" y="2485" width="0.0115%" height="15" fill="rgb(241,123,4)" fg:x="34781" fg:w="4"/><text x="100.1897%" y="2495.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (4 samples, 0.01%)</title><rect x="99.9397%" y="2469" width="0.0115%" height="15" fill="rgb(223,74,37)" fg:x="34781" fg:w="4"/><text x="100.1897%" y="2479.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (4 samples, 0.01%)</title><rect x="99.9397%" y="2453" width="0.0115%" height="15" fill="rgb(251,219,28)" fg:x="34781" fg:w="4"/><text x="100.1897%" y="2463.50"></text></g><g><title>std::panic::catch_unwind (4 samples, 0.01%)</title><rect x="99.9397%" y="2437" width="0.0115%" height="15" fill="rgb(218,36,31)" fg:x="34781" fg:w="4"/><text x="100.1897%" y="2447.50"></text></g><g><title>std::panicking::try (4 samples, 0.01%)</title><rect x="99.9397%" y="2421" width="0.0115%" height="15" fill="rgb(229,40,15)" fg:x="34781" fg:w="4"/><text x="100.1897%" y="2431.50"></text></g><g><title>std::panicking::try::do_call (4 samples, 0.01%)</title><rect x="99.9397%" y="2405" width="0.0115%" height="15" fill="rgb(208,138,37)" fg:x="34781" fg:w="4"/><text x="100.1897%" y="2415.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (4 samples, 0.01%)</title><rect x="99.9397%" y="2389" width="0.0115%" height="15" fill="rgb(208,40,52)" fg:x="34781" fg:w="4"/><text x="100.1897%" y="2399.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (4 samples, 0.01%)</title><rect x="99.9397%" y="2373" width="0.0115%" height="15" fill="rgb(246,181,48)" fg:x="34781" fg:w="4"/><text x="100.1897%" y="2383.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (4 samples, 0.01%)</title><rect x="99.9397%" y="2357" width="0.0115%" height="15" fill="rgb(253,178,36)" fg:x="34781" fg:w="4"/><text x="100.1897%" y="2367.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (4 samples, 0.01%)</title><rect x="99.9397%" y="2341" width="0.0115%" height="15" fill="rgb(210,170,6)" fg:x="34781" fg:w="4"/><text x="100.1897%" y="2351.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (4 samples, 0.01%)</title><rect x="99.9397%" y="2325" width="0.0115%" height="15" fill="rgb(243,62,22)" fg:x="34781" fg:w="4"/><text x="100.1897%" y="2335.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.01%)</title><rect x="99.9397%" y="2309" width="0.0115%" height="15" fill="rgb(213,145,26)" fg:x="34781" fg:w="4"/><text x="100.1897%" y="2319.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::{{closure}} (4 samples, 0.01%)</title><rect x="99.9397%" y="2293" width="0.0115%" height="15" fill="rgb(237,177,23)" fg:x="34781" fg:w="4"/><text x="100.1897%" y="2303.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (4 samples, 0.01%)</title><rect x="99.9397%" y="2277" width="0.0115%" height="15" fill="rgb(252,5,24)" fg:x="34781" fg:w="4"/><text x="100.1897%" y="2287.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (4 samples, 0.01%)</title><rect x="99.9397%" y="2261" width="0.0115%" height="15" fill="rgb(230,108,54)" fg:x="34781" fg:w="4"/><text x="100.1897%" y="2271.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}} (4 samples, 0.01%)</title><rect x="99.9397%" y="2245" width="0.0115%" height="15" fill="rgb(252,192,41)" fg:x="34781" fg:w="4"/><text x="100.1897%" y="2255.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (4 samples, 0.01%)</title><rect x="99.9397%" y="2229" width="0.0115%" height="15" fill="rgb(218,125,20)" fg:x="34781" fg:w="4"/><text x="100.1897%" y="2239.50"></text></g><g><title>stream-serv-22 (5 samples, 0.01%)</title><rect x="99.9799%" y="2789" width="0.0144%" height="15" fill="rgb(230,223,15)" fg:x="34795" fg:w="5"/><text x="100.2299%" y="2799.50"></text></g><g><title>__GI___clone3 (5 samples, 0.01%)</title><rect x="99.9799%" y="2773" width="0.0144%" height="15" fill="rgb(239,99,47)" fg:x="34795" fg:w="5"/><text x="100.2299%" y="2783.50"></text></g><g><title>start_thread (5 samples, 0.01%)</title><rect x="99.9799%" y="2757" width="0.0144%" height="15" fill="rgb(222,214,23)" fg:x="34795" fg:w="5"/><text x="100.2299%" y="2767.50"></text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (5 samples, 0.01%)</title><rect x="99.9799%" y="2741" width="0.0144%" height="15" fill="rgb(250,98,43)" fg:x="34795" fg:w="5"/><text x="100.2299%" y="2751.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (5 samples, 0.01%)</title><rect x="99.9799%" y="2725" width="0.0144%" height="15" fill="rgb(226,140,11)" fg:x="34795" fg:w="5"/><text x="100.2299%" y="2735.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (5 samples, 0.01%)</title><rect x="99.9799%" y="2709" width="0.0144%" height="15" fill="rgb(239,2,22)" fg:x="34795" fg:w="5"/><text x="100.2299%" y="2719.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (5 samples, 0.01%)</title><rect x="99.9799%" y="2693" width="0.0144%" height="15" fill="rgb(209,106,26)" fg:x="34795" fg:w="5"/><text x="100.2299%" y="2703.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}} (5 samples, 0.01%)</title><rect x="99.9799%" y="2677" width="0.0144%" height="15" fill="rgb(209,135,11)" fg:x="34795" fg:w="5"/><text x="100.2299%" y="2687.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.01%)</title><rect x="99.9799%" y="2661" width="0.0144%" height="15" fill="rgb(241,58,6)" fg:x="34795" fg:w="5"/><text x="100.2299%" y="2671.50"></text></g><g><title>std::panicking::try (5 samples, 0.01%)</title><rect x="99.9799%" y="2645" width="0.0144%" height="15" fill="rgb(214,78,1)" fg:x="34795" fg:w="5"/><text x="100.2299%" y="2655.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.01%)</title><rect x="99.9799%" y="2629" width="0.0144%" height="15" fill="rgb(229,135,33)" fg:x="34795" fg:w="5"/><text x="100.2299%" y="2639.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5 samples, 0.01%)</title><rect x="99.9799%" y="2613" width="0.0144%" height="15" fill="rgb(245,87,50)" fg:x="34795" fg:w="5"/><text x="100.2299%" y="2623.50"></text></g><g><title>std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}} (5 samples, 0.01%)</title><rect x="99.9799%" y="2597" width="0.0144%" height="15" fill="rgb(222,222,8)" fg:x="34795" fg:w="5"/><text x="100.2299%" y="2607.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (5 samples, 0.01%)</title><rect x="99.9799%" y="2581" width="0.0144%" height="15" fill="rgb(214,97,50)" fg:x="34795" fg:w="5"/><text x="100.2299%" y="2591.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_thread::{{closure}} (5 samples, 0.01%)</title><rect x="99.9799%" y="2565" width="0.0144%" height="15" fill="rgb(244,161,51)" fg:x="34795" fg:w="5"/><text x="100.2299%" y="2575.50"></text></g><g><title>tokio::runtime::blocking::pool::Inner::run (5 samples, 0.01%)</title><rect x="99.9799%" y="2549" width="0.0144%" height="15" fill="rgb(225,17,4)" fg:x="34795" fg:w="5"/><text x="100.2299%" y="2559.50"></text></g><g><title>tokio::runtime::blocking::pool::Task::run (5 samples, 0.01%)</title><rect x="99.9799%" y="2533" width="0.0144%" height="15" fill="rgb(238,10,13)" fg:x="34795" fg:w="5"/><text x="100.2299%" y="2543.50"></text></g><g><title>tokio::runtime::task::UnownedTask&lt;S&gt;::run (5 samples, 0.01%)</title><rect x="99.9799%" y="2517" width="0.0144%" height="15" fill="rgb(239,169,14)" fg:x="34795" fg:w="5"/><text x="100.2299%" y="2527.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::poll (5 samples, 0.01%)</title><rect x="99.9799%" y="2501" width="0.0144%" height="15" fill="rgb(213,105,25)" fg:x="34795" fg:w="5"/><text x="100.2299%" y="2511.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (5 samples, 0.01%)</title><rect x="99.9799%" y="2485" width="0.0144%" height="15" fill="rgb(233,4,17)" fg:x="34795" fg:w="5"/><text x="100.2299%" y="2495.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll_inner (5 samples, 0.01%)</title><rect x="99.9799%" y="2469" width="0.0144%" height="15" fill="rgb(212,5,35)" fg:x="34795" fg:w="5"/><text x="100.2299%" y="2479.50"></text></g><g><title>tokio::runtime::task::harness::poll_future (5 samples, 0.01%)</title><rect x="99.9799%" y="2453" width="0.0144%" height="15" fill="rgb(216,3,14)" fg:x="34795" fg:w="5"/><text x="100.2299%" y="2463.50"></text></g><g><title>std::panic::catch_unwind (5 samples, 0.01%)</title><rect x="99.9799%" y="2437" width="0.0144%" height="15" fill="rgb(240,105,33)" fg:x="34795" fg:w="5"/><text x="100.2299%" y="2447.50"></text></g><g><title>std::panicking::try (5 samples, 0.01%)</title><rect x="99.9799%" y="2421" width="0.0144%" height="15" fill="rgb(216,73,0)" fg:x="34795" fg:w="5"/><text x="100.2299%" y="2431.50"></text></g><g><title>std::panicking::try::do_call (5 samples, 0.01%)</title><rect x="99.9799%" y="2405" width="0.0144%" height="15" fill="rgb(217,153,48)" fg:x="34795" fg:w="5"/><text x="100.2299%" y="2415.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (5 samples, 0.01%)</title><rect x="99.9799%" y="2389" width="0.0144%" height="15" fill="rgb(218,180,8)" fg:x="34795" fg:w="5"/><text x="100.2299%" y="2399.50"></text></g><g><title>tokio::runtime::task::harness::poll_future::{{closure}} (5 samples, 0.01%)</title><rect x="99.9799%" y="2373" width="0.0144%" height="15" fill="rgb(252,168,2)" fg:x="34795" fg:w="5"/><text x="100.2299%" y="2383.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (5 samples, 0.01%)</title><rect x="99.9799%" y="2357" width="0.0144%" height="15" fill="rgb(224,116,33)" fg:x="34795" fg:w="5"/><text x="100.2299%" y="2367.50"></text></g><g><title>tokio::loom::std::unsafe_cell::UnsafeCell&lt;T&gt;::with_mut (5 samples, 0.01%)</title><rect x="99.9799%" y="2341" width="0.0144%" height="15" fill="rgb(229,205,17)" fg:x="34795" fg:w="5"/><text x="100.2299%" y="2351.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll::{{closure}} (5 samples, 0.01%)</title><rect x="99.9799%" y="2325" width="0.0144%" height="15" fill="rgb(234,1,41)" fg:x="34795" fg:w="5"/><text x="100.2299%" y="2335.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.01%)</title><rect x="99.9799%" y="2309" width="0.0144%" height="15" fill="rgb(244,185,8)" fg:x="34795" fg:w="5"/><text x="100.2299%" y="2319.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Launch::launch::{{closure}} (5 samples, 0.01%)</title><rect x="99.9799%" y="2293" width="0.0144%" height="15" fill="rgb(248,51,21)" fg:x="34795" fg:w="5"/><text x="100.2299%" y="2303.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (5 samples, 0.01%)</title><rect x="99.9799%" y="2277" width="0.0144%" height="15" fill="rgb(248,157,31)" fg:x="34795" fg:w="5"/><text x="100.2299%" y="2287.50"></text></g><g><title>tokio::macros::scoped_tls::ScopedKey&lt;T&gt;::set (5 samples, 0.01%)</title><rect x="99.9799%" y="2261" width="0.0144%" height="15" fill="rgb(210,34,47)" fg:x="34795" fg:w="5"/><text x="100.2299%" y="2271.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run::{{closure}} (5 samples, 0.01%)</title><rect x="99.9799%" y="2245" width="0.0144%" height="15" fill="rgb(227,139,53)" fg:x="34795" fg:w="5"/><text x="100.2299%" y="2255.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (5 samples, 0.01%)</title><rect x="99.9799%" y="2229" width="0.0144%" height="15" fill="rgb(232,211,37)" fg:x="34795" fg:w="5"/><text x="100.2299%" y="2239.50"></text></g><g><title>all (34,802 samples, 100%)</title><rect x="0.0000%" y="2805" width="100.0000%" height="15" fill="rgb(236,133,10)" fg:x="0" fg:w="34802"/><text x="0.2500%" y="2815.50"></text></g></svg></svg>